name: HumanEval_60_sum_to_n
language: lua
results:
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnihz4e2s.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpnihz4e2s.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpud5cx324.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpud5cx324.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 1\n  else\n    return n * sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsnyf1ywq.lua:24:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpsnyf1ywq.lua:24: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4z1_v7c3.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp4z1_v7c3.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpedj3ih4q.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpedj3ih4q.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnbqqd7sm.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpnbqqd7sm.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_in1lbh4.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp_in1lbh4.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmphp6nkhpm.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmphp6nkhpm.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8i8y_rj1.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp8i8y_rj1.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpa9xthoh0.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpa9xthoh0.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpk50448nq.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpk50448nq.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2gfulpue.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp2gfulpue.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4c03ilu7.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp4c03ilu7.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7zyq325g.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp7zyq325g.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpb12349_1.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpb12349_1.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpia5a0tqc.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpia5a0tqc.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp__7rz61o.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp__7rz61o.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3hi8iewj.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp3hi8iewj.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpyhq5vd3c.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpyhq5vd3c.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0_trtdxm.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp0_trtdxm.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwbf39l39.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpwbf39l39.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw7vvh0ki.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpw7vvh0ki.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuwwsmh6r.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpuwwsmh6r.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwzxetacq.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpwzxetacq.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6xg5l7a_.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp6xg5l7a_.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprp2eporf.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmprp2eporf.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcv7qmp5u.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpcv7qmp5u.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp7xckcb1y.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp7xckcb1y.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4kaucb5v.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp4kaucb5v.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = n\n \
    \ while n > 0 do\n    s = s + n\n    n = n - 1\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp405l68yt.lua:24:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp405l68yt.lua:24: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmhrk4ei4.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpmhrk4ei4.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9epsrt21.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp9epsrt21.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpr6bbl444.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpr6bbl444.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5lcmzx19.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp5lcmzx19.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpodidkyz8.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpodidkyz8.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp41bdifxz.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp41bdifxz.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw43qznmo.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpw43qznmo.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmplens6gq5.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmplens6gq5.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpcg12lang.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpcg12lang.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprg2g_zfi.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmprg2g_zfi.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgam18kz3.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpgam18kz3.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6qwf9kn9.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp6qwf9kn9.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5dl59owj.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp5dl59owj.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpc9o4ud8k.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpc9o4ud8k.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5z1j0tmf.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp5z1j0tmf.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = n\n \
    \ while n > 0 do\n    s = s + n\n    n = n - 1\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpq45vt8lu.lua:24:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpq45vt8lu.lua:24: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpve1le3au.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpve1le3au.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  return n1 + n2 + n3 + n4 +\
    \ n5 + n6 + n7 + n8 + n9 + n10 + n11 + n12 + n13 + n14 + n15 + n16 + n17 + n18\
    \ + n19 + n20 + n21 + n22 + n23 + n24 + n25 + n26 + n27 + n28 + n29 + n30\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp1sc5i99o.lua:52:\
    \ expected: 1, actual: -435\\nstack traceback:\\n\\t/tmp/tmp1sc5i99o.lua:52: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpes798xb3.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpes798xb3.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnjz7wlrm.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpnjz7wlrm.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpjh45amuy.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpjh45amuy.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpuf5divk2.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpuf5divk2.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2izcn_2f.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp2izcn_2f.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpmlo2gh0p.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpmlo2gh0p.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpid1hzi6s.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpid1hzi6s.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9hsyvp5n.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp9hsyvp5n.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 1\n  else\n    return n * sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpsh7040yq.lua:24:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpsh7040yq.lua:24: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpl43kmhd6.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpl43kmhd6.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpm9f1sqtt.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpm9f1sqtt.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpevh4jv29.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpevh4jv29.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9nfkharw.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp9nfkharw.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz547_mjv.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpz547_mjv.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpyf4mv4ts.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpyf4mv4ts.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp54lbca_g.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp54lbca_g.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpnot3zp3w.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpnot3zp3w.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp9ylph4jd.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp9ylph4jd.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxo8_nt93.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpxo8_nt93.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp25br890y.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp25br890y.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_lci6aq9.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp_lci6aq9.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfz9f2z79.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpfz9f2z79.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local n1 = n - 1\n  local n2 = n - 2\n  local n3 = n -\
    \ 3\n  local n4 = n - 4\n  local n5 = n - 5\n  local n6 = n - 6\n  local n7 =\
    \ n - 7\n  local n8 = n - 8\n  local n9 = n - 9\n  local n10 = n - 10\n  local\
    \ n11 = n - 11\n  local n12 = n - 12\n  local n13 = n - 13\n  local n14 = n -\
    \ 14\n  local n15 = n - 15\n  local n16 = n - 16\n  local n17 = n - 17\n  local\
    \ n18 = n - 18\n  local n19 = n - 19\n  local n20 = n - 20\n  local n21 = n -\
    \ 21\n  local n22 = n - 22\n  local n23 = n - 23\n  local n24 = n - 24\n  local\
    \ n25 = n - 25\n  local n26 = n - 26\n  local n27 = n - 27\n  local n28 = n -\
    \ 28\n  local n29 = n - 29\n  local n30 = n - 30\n  local n31 = n - 31\n  local\
    \ n32 = n - 32\n  local n33 = n - 33\n  local n34 = n - 34\n  local n35 = n -\
    \ 35\n  local n36 = n - 36\n  local n37 = n - 37\n  local n38 = n - 38\n  local\
    \ n39 = n - 39\n  local n40 = n - 40\n  local n41 = n - 41\n  local n42 = n -\
    \ 42\n  local n43 = n - 43\n  local n44 = n - 44\n  local n45 = n - 45\n  local\
    \ n46 = n - 46\n  local n47 = n - 47\n  local n48 = n - 48\n  local n49 = n -\
    \ 49\n  local n50 = n - 50\n  local n51 = n - 51\n  local n52 = n - 52\n  local\
    \ n53 = n - 53\n  local n54 = n - 54\n  local n55 = n - 55\n  local n56 = n -\
    \ 56\n  local n57 = n - 57\n  local n58 = n - 58\n  local n59 = n - 59\n  local\
    \ n60 = n - 60\n  local n61 = n - 61\n  local n62 = n - 62\n  local n63 = n -\
    \ 63\n  local n64 = n - 64\n  local n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: "b\"lua: /tmp/tmp76kobtdt.lua:92: 'end' expected (to close 'function' at\
    \ line 12) near '<eof>'\\n\""
  exit_code: 1
  status: SyntaxError
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp63y6_vd8.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp63y6_vd8.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptzqjyvtk.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmptzqjyvtk.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw1v9_jln.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpw1v9_jln.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfzjt1jxt.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpfzjt1jxt.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp4syr293e.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp4syr293e.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6r41pbwk.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp6r41pbwk.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpxvf5kjjj.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpxvf5kjjj.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpotji1aum.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpotji1aum.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpb2w5ey8a.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpb2w5ey8a.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbinyebqn.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpbinyebqn.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3adnngqs.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp3adnngqs.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmph5oq89pz.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmph5oq89pz.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp8yo_yast.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp8yo_yast.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpf_c_6vii.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpf_c_6vii.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfw11fcys.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpfw11fcys.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt3y25uba.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpt3y25uba.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpqsb6klm3.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpqsb6klm3.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprgdya5az.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmprgdya5az.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpgfias3wr.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpgfias3wr.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpk9lycnw8.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpk9lycnw8.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpu751nv08.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpu751nv08.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpag8db4u6.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpag8db4u6.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpziwf6rt1.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpziwf6rt1.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_k9z1qm4.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp_k9z1qm4.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpd3wy1foc.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpd3wy1foc.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  local n = 1\n  local sum = 0\n  while n <= n do\n    sum\
    \ = sum + n\n    n = n + 1\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpij17y3t_.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpij17y3t_.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpfxchuvj8.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpfxchuvj8.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpw6id5pw4.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpw6id5pw4.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp6ctypqpy.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp6ctypqpy.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwkj9fhk4.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpwkj9fhk4.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpy2zro76z.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpy2zro76z.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 1 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp47hg2nhg.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp47hg2nhg.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpf8vufk9d.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpf8vufk9d.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp3l8jmr3z.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp3l8jmr3z.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpt_3vzfyu.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpt_3vzfyu.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp2f_p997p.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmp2f_p997p.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmprsumyl_g.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmprsumyl_g.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpwmh_r9py.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpwmh_r9py.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpazs84lqt.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpazs84lqt.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp5q8b7bx8.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp5q8b7bx8.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpz0v8zqjo.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmpz0v8zqjo.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp0axkigs0.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp0axkigs0.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmp_519yepi.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmp_519yepi.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 1\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmptymi882d.lua:23:\
    \ expected: 1, actual: 2\\nstack traceback:\\n\\t/tmp/tmptymi882d.lua:23: in function\
    \ 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\\\
    n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then\n\
    \    return 0\n  end\n  local sum = 0\n  for i = 1, n do\n    sum = sum + i\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),\
    \ 21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),\
    \ 465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n <= 0 then\n\
    \    return 0\n  end\n  return n + sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local s = 0\n \
    \ for i = 1, n do\n    s = s + i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  local sum = 0\n\
    \  for i = 1, n do\n    sum = sum + i\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  if n == 1 then return 1 end\n  return n * sum_to_n(n - 1)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_to_n\n\
    \    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6), 21)\n\
    \    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30), 465)\n\
    \    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpbtoucdxv.lua:22:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpbtoucdxv.lua:22: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n == 0 then\n\
    \    return 0\n  else\n    return n + sum_to_n(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: b''
  stderr: b'.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n'
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n\
    -- 465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n\
    -- 55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n  if n < 1 then return\
    \ 1 end\n  return n * sum_to_n(n - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),\
    \ 66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),\
    \ 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "b\"F\\nFailed tests:\\n-------------\\n1) test_humaneval\\n/tmp/tmpg899644k.lua:21:\
    \ expected: 21, actual: 720\\nstack traceback:\\n\\t/tmp/tmpg899644k.lua:21: in\
    \ function 'test_humaneval'\\n\\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\\n\""
  stderr: b''
  exit_code: 1
  status: Exception

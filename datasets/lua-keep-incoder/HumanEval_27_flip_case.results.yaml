name: HumanEval_27_flip_case
language: lua
results:
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"[%a]\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"[%A]\", function(c) return c:upper() end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpze3qj85g.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpze3qj85g.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp01kaf0bx.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp01kaf0bx.lua:6: in function 'candidate'\n\t/tmp/tmp01kaf0bx.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char == string.lower then\n \
    \     result = string.sub(i, j - 1) .. string.upper(string.sub(i, j))\n      i\
    \ = i + 1\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j - 1) .. string.lower(string.sub(i, j))\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoan6m22v.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpoan6m22v.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.lower(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([a-z])\", function (c)\n    return string.lower(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function\
    \ (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n   \
    \ return string.upper(c)\n  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n\
    \  end):gsub(\"([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"\
    ([A-Z])\", function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\",\
    \ function (c)\n    return string.upper(c)\n  end):gsub(\"([A-Z])\", function\
    \ (c)\n    return string.\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpccx66ty0.lua:66: 'end' expected (to close 'function' at line\
    \ 64) near '='\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j):lower() + string.sub(i, j + 1)\n      i = i + 1\n      j\
    \ = j + 2\n    elseif char == string.lower(char) then\n      result = string.sub(i,\
    \ j) + string.sub(i, j + 1)\n      i = i + 1\n      j = j + 2\n    else\n    \
    \  result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwuylo56y.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpwuylo56y.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp085ww50t.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp085ww50t.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph17u3gcl.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmph17u3gcl.lua:6: in function 'candidate'\n\t/tmp/tmph17u3gcl.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.sub(string.upper(c), i, i)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.sub(string.lower(c), i, i)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9pgs9btu.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp9pgs9btu.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j - 1) .. string.lower(char)\n      i = i + 1\n    elseif char\
    \ == string.lower(char) then\n      result = string.sub(i, j - 1) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n    j = j - 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0ctcnnsf.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0ctcnnsf.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa_xq2edw.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpa_xq2edw.lua:7:\
    \ in function </tmp/tmpa_xq2edw.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpa_xq2edw.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpa_xq2edw.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    result = string.sub(i, j,\
    \ i) + c + string.sub(i, j, i)\n    i = i + 1\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp30_b3f2w.lua:18:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmp30_b3f2w.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase.\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase to lowercase.\n\
    \  for i = 1, #result do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i - 1) .. string.sub(string.sub(i,\
    \ i + 1), 1, string.len(string.sub(i, i + 1)) - 1) .. string.sub(i, i + 1)\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuxvxuh_.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpmuxvxuh_.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2, 1) .. string.sub(i, 2, 1)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bdgvd2j.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmp2bdgvd2j.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        result = result .. char\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzf5o8olf.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpzf5o8olf.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, 1, i) + string.sub(i, i + 1, i) + string.sub(i, 1, i)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c >= 'A' and c <= 'Z' then\n      result = string.sub(i, 1, i)\
    \ + string.sub(i, i + 1, i) + string.sub(i, 1, i)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b5q1c26.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp9b5q1c26.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnbt2wdgh.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpnbt2wdgh.lua:6: in function 'candidate'\n\t/tmp/tmpnbt2wdgh.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      char = string.sub(char, 1,\
    \ string.len(char) - 2)\n    end\n    result[i] = char\n  end\n  return table.concat(result)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc6wupcmg.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpc6wupcmg.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    result = string.sub(i, j,\
    \ i) + c + string.sub(i, j, i)\n    i = i + 1\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf3duqqt2.lua:18:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpf3duqqt2.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.upper(char) then\n      result\
    \ = string.sub(i, j - 1) .. string.lower(char)\n      i = i + 1\n    elseif char\
    \ == string.lower(char) then\n      result = string.sub(i, j - 1) .. string.upper(char)\n\
    \      i = i + 1\n    else\n      i = i + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptu3p6zxx.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmptu3p6zxx.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, c:upper())\n      i = i + 1\n    else\n      result = string.sub(i, j,\
    \ 1, c:lower())\n      i = i + 1\n    end\n    j = j + 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return string.upper(c)\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return string.lower(c) end)\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt6ve3rav.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpt6ve3rav.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpia0nn8z4.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpia0nn8z4.lua:6: in function 'candidate'\n\t/tmp/tmpia0nn8z4.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j, \"?\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"<\" then\n      c = string.sub(i,\
    \ j, \"<\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpgrietxcy.lua:95: unfinished string near '\"<'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char >= 'a' and char <= 'z' then\n      result\
    \ = string.sub(i, j):lower() + string.sub(i, j):upper()\n    elseif char >= 'A'\
    \ and char <= 'Z' then\n      result = string.sub(i, j):upper() + string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp27ej5s8_.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp27ej5s8_.lua:6: in function 'candidate'\n\t/tmp/tmp27ej5s8_.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = upper and char >= 'A' and char < 'Z'\n    if not upper and not lower\
    \ then\n      result = string.sub(j, j)\n      j = j - 1\n    else\n      result\
    \ = string.sub(j, j) .. char\n      j = j + 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8qnwgt_2.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8qnwgt_2.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  result:gsub('%U',\
    \ function(c)\n    return string.char(tonumber(c)) .. string.char(tonumber(string.sub(c,\
    \ 2)) or 'a')\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjs86qwl.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpbjs86qwl.lua:7:\
    \ in function </tmp/tmpbjs86qwl.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpbjs86qwl.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpbjs86qwl.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = ''\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) == 'a' then\n            new_string = new_string .. string.sub(i, 2, #string)\
    \ .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == 'A' then\n   \
    \         new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == 'e' then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == 'E' then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == 'i'\
    \ then\n            new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == 'I' then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == 'o' then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == 'O'\
    \ then\n            new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == 'u' then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == 'U' then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        else\n            new_string = new_string\
    \ .. string.sub(i, 1, #string)\n        end\n    end\n    return new_string\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpseh8us3s.lua:38:\
    \ expected: \"hELLO!\"\nactual: \"123456\"\nstack traceback:\n\t/tmp/tmpseh8us3s.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      i = i + 1\n      j = j - 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7t2ihuli.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"65\"\nstack traceback:\n\t/tmp/tmp7t2ihuli.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphe2psgiy.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmphe2psgiy.lua:6: in function 'candidate'\n\t/tmp/tmphe2psgiy.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa1lce_iu.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpa1lce_iu.lua:6: in function 'candidate'\n\t/tmp/tmpa1lce_iu.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkcfwd3a.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpjkcfwd3a.lua:7:\
    \ in function </tmp/tmpjkcfwd3a.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpjkcfwd3a.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpjkcfwd3a.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.001 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc0tyccfn.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpc0tyccfn.lua:6: in function 'candidate'\n\t/tmp/tmpc0tyccfn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function(c) return string.char(tonumber(c))\
    \ end)\n  result:gsub(\"%U\", function(c) return string.char(tonumber(c, 16))\
    \ end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7npbvsr7.lua:6:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmp7npbvsr7.lua:6:\
    \ in function </tmp/tmp7npbvsr7.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmp7npbvsr7.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp7npbvsr7.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 2)) or 'A')\n  end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1ekmgg_1.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmp1ekmgg_1.lua:7:\
    \ in function </tmp/tmp1ekmgg_1.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmp1ekmgg_1.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp1ekmgg_1.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([A-Z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([a-z])\", function (c)\n\
    \    return string.char(tonumber(c) + 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkj7mipb.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpnkj7mipb.lua:6: in function 'candidate'\n\t/tmp/tmpnkj7mipb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphze39f5n.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmphze39f5n.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.char(\"A\"..string.upper)\n \
    \ local lower = string.char(\"a\"..string.lower)\n  for _, char in ipairs(string)\
    \ do\n    if char == upper then\n      result = string.sub(string, 1, string.len(string)-1)\
    \ + lower\n    elseif char == lower then\n      result = string.sub(string, 1,\
    \ string.len(string)-1) + upper\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbu4bdxzq.lua:6:\
    \ attempt to concatenate field 'upper' (a function value)\nstack traceback:\n\t\
    /tmp/tmpbu4bdxzq.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(i, j - 1)\n\
    \      j = j - 1\n    end\n    i = i + 1\n    result = result .. c\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps1cwg1he.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmps1cwg1he.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"^%l\", string.upper)\n  result:gsub(\"\
    %l$\", string.lower)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjeymrpdn.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpjeymrpdn.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i))\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxa7x5bqx.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpxa7x5bqx.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    end\n    j = j + 1\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_emmx_4.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpb_emmx_4.lua:6: in function 'candidate'\n\t/tmp/tmpb_emmx_4.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ud37ygn.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp5ud37ygn.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() == c then\n            string.sub(i, i, c:upper())\n\
    \        elseif c:upper() == c then\n            string.sub(i, i, c:lower())\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfhmzfnl.lua:9:\
    \ bad argument #3 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmphfhmzfnl.lua:9: in function 'candidate'\n\t/tmp/tmphfhmzfnl.lua:21: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c ~= nil then\n            if string.sub(c, 1) == 'a' then\n\
    \                c = string.sub(c, 1)\n            end\n            if string.sub(c,\
    \ 1) == 'A' then\n                c = string.sub(c, 1)\n            end\n    \
    \        if string.sub(c, 1) == 'b' then\n                c = string.sub(c, 1)\n\
    \            end\n            if string.sub(c, 1) == 'B' then\n              \
    \  c = string.sub(c, 1)\n            end\n            if string.sub(c, 1) == 'c'\
    \ then\n                c = string.sub(c, 1)\n            end\n            if\
    \ string.sub(c, 1) == 'C' then\n                c = string.sub(c, 1)\n       \
    \     end\n            if string.sub(c, 1) == 'd' then\n                c = string.sub(c,\
    \ 1)\n            end\n            if string.sub(c, 1) == 'D' then\n         \
    \       c = string.sub(c, 1)\n            end\n            if string.sub(c, 1)\
    \ == 'e' then\n                c = string.sub(c, 1)\n            end\n       \
    \     if string.sub(c, 1) == 'E' then\n                c = string.sub(c, 1)\n\
    \            end\n            if string.sub(c, 1) == 'f' then\n              \
    \  c = string.sub(c, 1)\n            end\n            if string.sub(c, 1) == 'F'\
    \ then\n                c = string.sub(c, 1)\n            end\n            if\
    \ string.sub(c, 1) == 'g' then\n                c = string.sub(c, 1)\n       \
    \     end\n            if string.sub(c, 1) == 'G' then\n                c = string.sub(c,\
    \ 1)\n            end\n            if string.sub(c, 1) == 'h' then\n         \
    \       c = string.sub(c, 1)\n            end\n            if string.sub(c, 1)\
    \ == 'H' then\n                c = string.sub(c, 1)\n            end\n       \
    \     if string.sub(c, 1) == 'i' then\n                c = string.sub(c, 1)\n\
    \            end\n            if string.sub(c, 1) == 'I' then\n              \
    \  c = string.sub(c, 1)\n            end\n            if string.sub(c, 1) == 'j'\
    \ then\n                c = string.sub(c, 1)\n            end\n            if\
    \ string.sub(c, 1) == 'J' then\n                c = string.sub(c, 1)\n       \
    \     end\n            if string.sub(c, 1) == 'k' then\n                c = string.sub(c,\
    \ 1)\n            end\n            if string.sub(c, 1) == 'K' then\n         \
    \       c = string.sub(c, 1)\n            end\n            if string.sub(c, 1)\
    \ == 'l' then\n                c = string.sub(c, 1)\n            end\n       \
    \     if string.sub(c, 1) == 'L' then\n                c = string.sub(c, 1)\n\
    \            end\n            if string.sub(c, \nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpdy4prnzc.lua:82: ')' expected (to close '(' at line 81) near\
    \ '='\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    if c == \"A\" then\n      c = string.sub(j, j -\
    \ 1)\n      j = j - 1\n    end\n    if c == \"0\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"1\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"2\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"3\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"4\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"5\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"6\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"7\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"8\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"9\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"-\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"_\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"+\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"/\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"%\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"^\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"&\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"|\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"~\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"?\" then\n      c = string.sub(j,\
    \ j - 1)\n      j = j - 1\n    end\n    if c == \"{\" \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpougan5qk.lua:98: 'then' expected near 'lu'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"[%a]\", function(c) c:lower() end)\n\
    \  result:gsub(\"[%A]\", function(c) c:upper() end)\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp0kolfhc.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpp0kolfhc.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = {}\n  for _, c in ipairs(string) do\n    result[#result + 1]\
    \ = c:upper()\n  end\n  return table.concat(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpft83rkhc.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpft83rkhc.lua:6: in function 'candidate'\n\t/tmp/tmpft83rkhc.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2, 1) .. string.sub(i, 2, 1)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmafio8t_.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpmafio8t_.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n    else\n      i = i + 1\n      j = j - 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1iht1l3v.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"65\"\nstack traceback:\n\t/tmp/tmp1iht1l3v.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpto3vfokl.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpto3vfokl.lua:6: in function 'candidate'\n\t/tmp/tmpto3vfokl.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeye1hy3e.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpeye1hy3e.lua:6: in function 'candidate'\n\t/tmp/tmpeye1hy3e.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2b0v85v5.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp2b0v85v5.lua:6: in function 'candidate'\n\t/tmp/tmp2b0v85v5.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = string\n  local i = 0\n  while i < #string do\n    if string.sub(i,\
    \ i) == string.sub(i, i) then\n      new_string = new_string .. string.sub(i,\
    \ i):upper()\n    else\n      new_string = new_string .. string.sub(i, i):lower()\n\
    \    end\n    i = i + 1\n  end\n  return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp09d71qs8.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"Hello!01\"\nstack traceback:\n\t/tmp/tmp09d71qs8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr766i8ns.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpr766i8ns.lua:6: in function 'candidate'\n\t/tmp/tmpr766i8ns.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2)\n    end\n    i = i + 1\n \
    \   j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc4yo1_58.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpc4yo1_58.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2siemfm6.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp2siemfm6.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif char == string.upper(char) then\n      result = string.sub(i,\
    \ j):lower() .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n\
    \    else\n      result = result .. char\n      i = i + 1\n      j = j + 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfv2s10_t.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpfv2s10_t.lua:6: in function 'candidate'\n\t/tmp/tmpfv2s10_t.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j):upper()\n\
    \      i = i + 1\n    elseif c == \"A\" then\n      result = string.sub(i, j):lower()\n\
    \      i = i + 1\n    else\n      result = result .. c\n      i = i + 1\n    end\n\
    \    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c ~= nil then\n            if string.sub(c, 1) == 'a' then\n\
    \                c = string.sub(c, 2)\n            elseif string.sub(c, 1) ==\
    \ 'A' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'e' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'E' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'i' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'I' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'o' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'O' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'u' then\n                c = string.sub(c, 2)\n            elseif string.sub(c,\
    \ 1) == 'U' then\n                c = string.sub(c, 2)\n            end\n    \
    \    end\n        result = result .. c\n    end\n    return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgdssdqhv.lua:40:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpgdssdqhv.lua:40:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5v57g_ha.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp5v57g_ha.lua:6: in function 'candidate'\n\t/tmp/tmp5v57g_ha.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo73aqwu8.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpo73aqwu8.lua:6: in function 'candidate'\n\t/tmp/tmpo73aqwu8.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpldljftev.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpldljftev.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpywc5qqg6.lua:106: 'end' expected (to close 'if' at line 94)\
    \ near '<eof>'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmacfun8t.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpmacfun8t.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, #i + 1, #j)\n      i = i + 1\n\
    \    else\n      j = j + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8honjavo.lua:9:\
    \ attempt to get length of local 'i' (a number value)\nstack traceback:\n\t/tmp/tmp8honjavo.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvxtu5arz.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpvxtu5arz.lua:6: in function 'candidate'\n\t/tmp/tmpvxtu5arz.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm0eudg0x.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpm0eudg0x.lua:6: in function 'candidate'\n\t/tmp/tmpm0eudg0x.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    local upper = string.byte(c)\n    if upper\
    \ >= 65 and upper <= 90 then\n      result = string.sub(string.sub(i, 1, i), -1,\
    \ -1) + string.sub(c, -1, -1) + result\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i, i)\n    local lower =\
    \ string.byte(c)\n    if lower >= 97 and lower <= 122 then\n      result = string.sub(string.sub(i,\
    \ 1, i), -1, -1) + string.sub(c, -1, -1) + result\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprkr3y6zc.lua:10:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmprkr3y6zc.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == 'a' then\n      char = 'A'\n    elseif\
    \ char == 'A' then\n      char = 'a'\n    end\n    result = result .. char\n \
    \   i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyoxcftfh.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpyoxcftfh.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm26od_yf.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpm26od_yf.lua:6: in function 'candidate'\n\t/tmp/tmpm26od_yf.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy5ojiqe3.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmpy5ojiqe3.lua:6: in function 'candidate'\n\t/tmp/tmpy5ojiqe3.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, j, j) ~= \"\" then\n      result = string.sub(i, j, j):upper()\
    \ .. string.sub(j, i, i):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7v3zfbb3.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp7v3zfbb3.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ i)\n      result = string.sub(i, string.upper)\n    elseif char == string.upper\
    \ then\n      result = string.sub(string.lower, i)\n      result = string.sub(i,\
    \ string.lower)\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplku7pl_o.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmplku7pl_o.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp765lyfjq.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp765lyfjq.lua:6: in function 'candidate'\n\t/tmp/tmp765lyfjq.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:lower()\
    \ == c:upper() then\n            result = result:sub(1, #result-1)..c:lower()\n\
    \        else\n            result = result:sub(1, #result-1)..c:upper()\n    \
    \    end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdpul6g96.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpdpul6g96.lua:6: in function 'candidate'\n\t/tmp/tmpdpul6g96.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps6k71wbx.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmps6k71wbx.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. c\n    end\n  end\n  -- Uppercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if c >= 'A' and c <= 'Z' then\n    \
    \  result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.upper(c)\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmdj8jo8_.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpmdj8jo8_.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = char >= 'A' and char < 'Z'\n    if upper and lower then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    else\n      i =\
    \ i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqrdgo577.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpqrdgo577.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd7u7z4a3.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpd7u7z4a3.lua:6: in function 'candidate'\n\t/tmp/tmpd7u7z4a3.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxctxssy.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpjxctxssy.lua:6: in function 'candidate'\n\t/tmp/tmpjxctxssy.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= '^' then\n      result = string.sub(string, i, j):lower()\
    \ + string.sub(string, i, j):upper()\n      i = i + 1\n    else\n      result\
    \ = string.sub(string, i, j):upper() + string.sub(string, i, j):lower()\n    \
    \  i = i + 1\n    end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbpaan6bl.lua:9:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpbpaan6bl.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(j,\
    \ i) + result + string.sub(i, j)\n    end\n    i = i + 1\n    j = j + 1\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      result = string.sub(i, j)\
    \ .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"A\" then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"\
    0\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n\
    \    elseif c == \"1\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j - 1\n    elseif c == \"2\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"3\" then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"\
    4\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n\
    \    elseif c == \"5\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j - 1\n    elseif c == \"6\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"7\" then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"\
    8\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n\
    \    elseif c == \"9\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j - 1\n    elseif c == \"-\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"_\" then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"\
    +\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n\
    \    elseif c == \"/\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = j - 1\n    elseif c == \"%\" then\n      result = string.sub(i,\
    \ j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"^\" then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j - 1\n    elseif c == \"\
    &\" then\n      result = string.sub(i, j) .. string.sub(j, i)\n      \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp94t65mj6.lua:75: 'end' expected (to close 'if' at line 9)\
    \ near '<eof>'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len(string.sub(i,\
    \ i + 1)) - 1) .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphr329fki.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmphr329fki.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(string.lower(char), 2, string.upper(char))\n    elseif char ==\
    \ string.upper(char) then\n      result = string.sub(string.upper(char), 1, string.lower(char))\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc9vcnerm.lua:10:\
    \ bad argument #3 to 'sub' (number expected, got string)\nstack traceback:\n\t\
    /tmp/tmpc9vcnerm.lua:10: in function 'candidate'\n\t/tmp/tmpc9vcnerm.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      c = string.sub(i, j - 1, 'A')\n\
    \    end\n    if c == 'A' then\n      c = string.sub(i, j + 1, 'a')\n    end\n\
    \    i = i + 1\n    j = j + 1\n    result = result .. c\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(j,\
    \ i) + result + string.sub(i, j)\n    end\n    i = i + 1\n    j = j + 1\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(i, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, #string.sub(i, 1, 1))\n      i = i + 1\n      j =\
    \ j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg44dzruu.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpg44dzruu.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps2i0zyox.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmps2i0zyox.lua:6: in function 'candidate'\n\t/tmp/tmps2i0zyox.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphwfrks42.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmphwfrks42.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpedgzf9rl.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpedgzf9rl.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ i, j)\n      result = string.sub(string.lower, i, j)\n      i = j\n    elseif\
    \ char == string.upper then\n      result = string.sub(string.lower, i, j)\n \
    \     result = string.sub(string.upper, i, j)\n      i = j\n    else\n      i\
    \ = j\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwpwce_a9.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpwpwce_a9.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper():sub(1, #string.sub(i, j):upper())\n    elseif char\
    \ == string.upper(char) then\n      result = string.sub(i, j):lower():sub(1, #string.sub(i,\
    \ j):lower())\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp81cf4j5z.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp81cf4j5z.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == 'a' then\n      result = string.sub(i, 1, 1) == 'A' and\
    \ string.sub(i, 2) or string.sub(i, 1, 1) + string.sub(i, 2)\n      i = i + 1\n\
    \    elseif string.sub(i, 1, 1) == 'A' then\n      result = string.sub(i, 1, 1)\
    \ == 'a' and string.sub(i, 2) or string.sub(i, 1) + string.sub(i, 2)\n      i\
    \ = i + 1\n    else\n      result = string.sub(i, 1, 1) + string.sub(i, 2)\n \
    \     i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpemqdxn_h.lua:15:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpemqdxn_h.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0tpoqyng.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp0tpoqyng.lua:6: in function 'candidate'\n\t/tmp/tmp0tpoqyng.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqa5r5iw6.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpqa5r5iw6.lua:6: in function 'candidate'\n\t/tmp/tmpqa5r5iw6.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c:lower() ~= c then\n            result = string.sub(i, 1, i)\
    \ + string.sub(i, i + 1, #string) + string.sub(i, i + 2)\n        end\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkgcvpbzz.lua:19:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpkgcvpbzz.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgk1t1wh4.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpgk1t1wh4.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j):lower()\n      i = i + 1\n      j = j - 1\n \
    \   end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeurcvmnu.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpeurcvmnu.lua:6: in function 'candidate'\n\t/tmp/tmpeurcvmnu.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) == string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, string.len(i) + 1, string.sub(j, 1, string.len(j) + 1))\n    else\n     \
    \ result = string.sub(i, 1, string.len(i))\n    end\n    i = i + 1\n    j = j\
    \ - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4miowc78.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"3\"\nstack traceback:\n\t/tmp/tmp4miowc78.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(j,\
    \ i - 1) .. string.sub(i, j) .. string.sub(i - 1, i)\n      i = i + 1\n      j\
    \ = j - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqimkwcck.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpqimkwcck.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, 1, i) + string.sub(i, i+1, i) + string.sub(i, 1, i)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c >= 'A' and c <= 'Z' then\n      result = string.sub(i, 1, i)\
    \ + string.sub(i, i+1, i) + string.sub(i, 1, i)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpktcdzn60.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpktcdzn60.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplc8mxsbb.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmplc8mxsbb.lua:6: in function 'candidate'\n\t/tmp/tmplc8mxsbb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    j = j - 1\n    result = result\
    \ .. c\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9iwrmaj8.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp9iwrmaj8.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase to uppercase and vice versa\n  result\
    \ = string.gsub(result, '[%l%L]', string.upper)\n  result = string.gsub(result,\
    \ '[%u%U]', string.lower)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5x_na459.lua:16:\
    \ expected: \"hELLO!\"\nactual: \"hello!\"\nstack traceback:\n\t/tmp/tmp5x_na459.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp85ehox5q.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp85ehox5q.lua:6: in function 'candidate'\n\t/tmp/tmp85ehox5q.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = #string\n  for i = 1, length do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt029_ud7.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpt029_ud7.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmouy2llm.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpmouy2llm.lua:6: in function 'candidate'\n\t/tmp/tmpmouy2llm.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c))\
    \ .. string.char(tonumber(string.sub(c, 1, 1)))\n  end)\n  result:gsub('%U', function(c)\n\
    \    return string.char(tonumber(string.sub(c, 2, 2)) + 64) .. string.char(tonumber(string.sub(c,\
    \ 1, 1)))\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu1k2yl3c.lua:7:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpu1k2yl3c.lua:7:\
    \ in function </tmp/tmpu1k2yl3c.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpu1k2yl3c.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpu1k2yl3c.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, j, j) ~= string.sub(i, j, j) then\n      result = string.sub(i,\
    \ j, j):lower() + string.sub(i, j, j):upper()\n      i = i + 1\n    else\n   \
    \   i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl8jcr82n.lua:22:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpl8jcr82n.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c:lower() == c:upper() then\n      result =\
    \ string.sub(i, 1, i-1) + string.sub(i, i+1, j)\n      i = i + 1\n      j = j\
    \ - 1\n    else\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlib1p5f.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmptlib1p5f.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j):upper()\n\
    \    elseif c == 'A' then\n      result = string.sub(i, j):lower()\n    else\n\
    \      result = result .. c\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2w1n8_50.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp2w1n8_50.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i - 1, string.len(i) + 1, string.sub(i, i + 1))\n    end\n \
    \ end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if c >= 'A' and c <= 'Z' then\n      result = string.sub(i, i - 1,\
    \ string.len(i) + 1, string.sub(i, i + 1))\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_x1qd8z0.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_x1qd8z0.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, j, j) ~= string.sub(i, j, j) then\n      result = string.sub(i,\
    \ j, j):lower() .. string.sub(i, j, j):upper()\n    end\n    i = i + 1\n    j\
    \ = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxrcvya_u.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpxrcvya_u.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmheg2yla.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"43\"\nstack traceback:\n\t/tmp/tmpmheg2yla.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = ''\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= 'a' and char <= 'z' then\n      new_string = new_string ..\
    \ string.sub(string.lower(char), 2)\n    elseif char >= 'A' and char <= 'Z' then\n\
    \      new_string = new_string .. string.sub(string.upper(char), 2)\n    else\n\
    \      new_string = new_string .. char\n    end\n  end\n  return new_string\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmjxye9x7.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"1\"\nstack traceback:\n\t/tmp/tmpmjxye9x7.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        if char >= 'A' and char <= 'Z' then\n     \
    \       char = string.sub(string.sub(i, 1, i), -1)\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz9_rll9b.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpz9_rll9b.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        if string.sub(i,\
    \ i, i) ~= string.sub(i, i, i) then\n            result = string.sub(i, i, i)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0wu09qc.lua:18:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpw0wu09qc.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ j):upper()\n      i = i + 1\n      j = j - 1\n    else\n      result = result\
    \ .. c\n      i = i + 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbavm8jdb.lua:25:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpbavm8jdb.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char < 'z'\n    local\
    \ lower = char >= 'A' and char < 'Z'\n    if upper and lower then\n      result\
    \ = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    elseif upper then\n\
    \      result = string.sub(i, j) .. 'A'\n      i = j\n    elseif lower then\n\
    \      result = string.sub(i, j) .. 'a'\n      i = j\n    end\n    j = i\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6nue1jyv.lua:30:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp6nue1jyv.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    if c == \"A\" then\n     \
    \ c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"a\" then\n       \
    \ c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if c ==\
    \ \"a\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"\
    A\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n\
    \    if c == \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n    \
    \  if c == \"a\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n  \
    \    end\n    end\n    if c == \"a\" then\n      c = string.sub(i, j, i)\n   \
    \   i = i + 1\n      if c == \"A\" then\n        c = string.sub(i, j, i)\n   \
    \     i = i + 1\n      end\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"a\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    if c == \"a\" then\n     \
    \ c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"A\" then\n       \
    \ c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n    if c ==\
    \ \"A\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"\
    a\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n      end\n    end\n\
    \    if c == \"a\" then\n      c = string.sub(i, j, i)\n      i = i + 1\n    \
    \  if c == \"A\" then\n        c = string.sub(i, j, i)\n        i = i + 1\n  \
    \    end\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, i)\n   \
    \   i = i + 1\n      if c == \"a\" then\n        c = string.sub(i, j, i)\n   \
    \     i = i + 1\n      end\n    end\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, i)\n      i = i + 1\n      if c == \"A\" then\n        c = string.sub(i,\
    \ j, i)\n        i = i + 1\n      end\n    end\n    if c == \"A\" then\n     \
    \ c = string.sub(i, j, i)\n      i = i + 1\n      if c == \"a\" then\n       \
    \ c = string.sub\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpmz410w33.lua:112: 'end' expected (to close 'if' at line 101)\
    \ near '<eof>'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpff4j9ip6.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpff4j9ip6.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()..string.sub(i + 1, j):lower()\n      i = i + 1\n      j = j - 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()..string.sub(i\
    \ + 1, j):upper()\n      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n\
    \      j = j - 1\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmputcisjbb.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmputcisjbb.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char >= 'a' and char <= 'z'\n   \
    \ local lower = char >= 'A' and char <= 'Z'\n    if upper and lower then\n   \
    \   result = string.sub(i, j) .. string.sub(j, i)\n      i = j\n    else\n   \
    \   i = i + 1\n    end\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_i4boej9.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_i4boej9.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i, c in ipairs(string) do\n        if c:byte()\
    \ ~= c:byte():lower() then\n            result = result:sub(1, i - 1)\n      \
    \  end\n        result = result:sub(i + 1, i)\n    end\n    return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeb92izsl.lua:6:\
    \ bad argument #1 to 'ipairs' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpeb92izsl.lua:6: in function 'candidate'\n\t/tmp/tmpeb92izsl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(string, i, i)\n    if string.lower(c) ~= c then\n   \
    \   result = string.sub(string, 1, i-1) + string.upper(string.sub(string, i+1,\
    \ i+1)) + string.sub(string, i+2)\n    end\n  end\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsz3rnosg.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpsz3rnosg.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjjj0xwov.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpjjj0xwov.lua:6: in function 'candidate'\n\t/tmp/tmpjjj0xwov.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local length = string.len()\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      result = string.sub(i, i - 1) .. string.sub(string.sub(i, i + 1), 1, string.len())\
    \ .. string.sub(i, i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1wa42s4b.lua:6:\
    \ bad argument #1 to 'len' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp1wa42s4b.lua:6: in function 'candidate'\n\t/tmp/tmp1wa42s4b.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt9r3uf4e.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpt9r3uf4e.lua:6: in function 'candidate'\n\t/tmp/tmpt9r3uf4e.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp38zz5e4s.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp38zz5e4s.lua:6: in function 'candidate'\n\t/tmp/tmp38zz5e4s.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fob9ve8.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp_fob9ve8.lua:6: in function 'candidate'\n\t/tmp/tmp_fob9ve8.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = char:upper()\n    local lower = char:lower()\n\
    \    if upper ~= lower then\n      result = result .. upper\n    end\n    i =\
    \ i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuco12gh_.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpuco12gh_.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp_eivjek7.lua:106: 'end' expected (to close 'if' at line 94)\
    \ near '<eof>'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"[%a]\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"[%A]\", function(c) return c:upper() end)\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_s_5kg2s.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_s_5kg2s.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c) return c:lower()\
    \ .. c:upper() end)\n  result:gsub(\"([A-Z])\", function (c) return c:upper()\
    \ .. c:lower() end)\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpco4ikj48.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpco4ikj48.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqmdmbvqo.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpqmdmbvqo.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n \
    \     result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase\
    \ letters.\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if\
    \ char >= 'A' and char <= 'Z' then\n      result = string.sub(i, i) + string.sub(i,\
    \ i + 1)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq4ceromh.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpq4ceromh.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp14ojsrvh.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp14ojsrvh.lua:6: in function 'candidate'\n\t/tmp/tmp14ojsrvh.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt4wh04h_.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpt4wh04h_.lua:6: in function 'candidate'\n\t/tmp/tmpt4wh04h_.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper():sub(1, #string.sub(i, j))\n      i = i + 1\n    \
    \  j = j - 1\n    elseif char == string.upper(char) then\n      result = string.sub(i,\
    \ j):lower():sub(1, #string.sub(i, j))\n      i = i + 1\n      j = j - 1\n   \
    \ else\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4delpcvj.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp4delpcvj.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2, 1) .. string.sub(i, 2, 1)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpewp_vwgw.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmpewp_vwgw.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n    elseif char == string.upper then\n      result = string.sub(i,\
    \ j):lower()\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_2htrai9.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp_2htrai9.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsf_44j6l.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpsf_44j6l.lua:6: in function 'candidate'\n\t/tmp/tmpsf_44j6l.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c == \"a\" then\n      result\
    \ = string.sub(i, j, \"A\"):upper()\n      i = i + 1\n    elseif c == \"A\" then\n\
    \      result = string.sub(i, j, \"a\"):lower()\n      i = i + 1\n    else\n \
    \     result = result .. c\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp143c09s9.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp143c09s9.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmay8nzus.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmay8nzus.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvscw7l9v.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpvscw7l9v.lua:6: in function 'candidate'\n\t/tmp/tmpvscw7l9v.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, #string) .. string.sub(i, 2,\
    \ #string)\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmply2n0w7u.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"194\"\nstack traceback:\n\t/tmp/tmply2n0w7u.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      result =\
    \ string.sub(i, j) .. string.sub(j, i)\n      i = i + 1\n      j = j - 1\n   \
    \ end\n    if c == \"A\" then\n      result = string.sub(i, j) .. string.sub(j,\
    \ i)\n      i = i + 1\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6x1iqclh.lua:28:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp6x1iqclh.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpocsv80me.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpocsv80me.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c:upper() then\n      result = string.sub(i,\
    \ j):upper()..string.sub(i, j+1)\n      i = i + 1\n      j = j + 2\n    else\n\
    \      result = string.sub(i, j)..string.sub(i, j+1)\n      i = i + 1\n      j\
    \ = j + 2\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    i = i + 1\n    if char == string.lower then\n \
    \     result = string.sub(i, j) + string.upper(string.sub(i, j))\n      i = i\
    \ + 1\n    end\n    if char == string.upper then\n      result = string.sub(i,\
    \ j) + string.lower(string.sub(i, j))\n      i = i + 1\n    end\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdkv8u619.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpdkv8u619.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower(char) then\n      result\
    \ = string.sub(i, j):upper():sub(1, #string.sub(i, j))\n      i = i + 1\n    elseif\
    \ char == string.upper(char) then\n      result = string.sub(i, j):lower():sub(1,\
    \ #string.sub(i, j))\n      i = i + 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp42ki6pid.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp42ki6pid.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return string.char(tonumber(c))\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return string.char(tonumber(c)+1)\
    \ end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj88mlqq9.lua:6:\
    \ bad argument #1 to 'char' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpj88mlqq9.lua:6:\
    \ in function </tmp/tmpj88mlqq9.lua:6>\n\t[C]: in function 'gsub'\n\t/tmp/tmpj88mlqq9.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpj88mlqq9.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmw7xyxwt.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpmw7xyxwt.lua:6: in function 'candidate'\n\t/tmp/tmpmw7xyxwt.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(string.upper,\
    \ string.sub(i, j))\n    elseif char == string.upper then\n      result = string.sub(string.lower,\
    \ string.sub(i, j))\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplakm4d6g.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmplakm4d6g.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local new_string = string\n  -- Replace each lowercase character with its uppercase\
    \ counterpart.\n  for i = 1, #string do\n    local char = string.sub(i, i, 1)\n\
    \    if char == 'a' then\n      new_string = new_string .. 'A'\n    elseif char\
    \ == 'A' then\n      new_string = new_string .. 'a'\n    else\n      new_string\
    \ = new_string .. char\n    end\n  end\n  return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppq31w3eo.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmppq31w3eo.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0e07j1z.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpo0e07j1z.lua:6: in function 'candidate'\n\t/tmp/tmpo0e07j1z.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == \"a\" then\n      c = string.sub(j, j - 1)\n\
    \      j = j - 1\n    end\n    result = result .. c\n    i = i + 1\n  end\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr985_ys2.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpr985_ys2.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = string.sub(i,\
    \ i - 1)\n        end\n        if char >= 'A' and char <= 'Z' then\n         \
    \   char = string.sub(i, i - 1)\n        end\n        result = result .. char\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv9tovega.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmpv9tovega.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(j,\
    \ 1, 1) .. string.sub(i, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \    end\n    i = i + 1\n    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bvqhskg.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp2bvqhskg.lua:6: in function 'candidate'\n\t/tmp/tmp2bvqhskg.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n      i = i + 1\n    elseif char == string.upper then\n      result\
    \ = string.sub(i, j):lower()\n      i = i + 1\n    else\n      i = i + 1\n   \
    \ end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfq_62kfc.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpfq_62kfc.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"&\" then\n      c = string.sub(i,\
    \ j, \"&\")\n      i = i + 1\n    end\n    if c == \"|\" then\n      c = string.sub(i,\
    \ j, \"|\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"?\" then\n      c = string.sub(i,\
    \ j, \"?\")\n      i = i + 1\n    end\n    if c == \"<\" then\n      c = string.sub(i,\
    \ j, \"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmphb8_uduu.lua:95: unfinished string near '\"'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.lower(c) ~= c then\n      result\
    \ = string.sub(string.upper(c), i)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if string.upper(c)\
    \ ~= c then\n      result = string.sub(string.lower(c), i)\n    end\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptircyrpg.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmptircyrpg.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c == 'a' then\n      result = string.sub(i, j):upper():sub(1,\
    \ 1):lower() + string.sub(i, j+1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif c == 'A' then\n      result = string.sub(i, j):upper():sub(1, 1) +\
    \ string.sub(i, j+1):upper()\n      i = i + 1\n      j = j + 1\n    elseif c ==\
    \ 'e' then\n      result = string.sub(i, j):upper():sub(1, 1):lower() + string.sub(i,\
    \ j+1):lower()\n      i = i + 1\n      j = j + 1\n    elseif c == 'E' then\n \
    \     result = string.sub(i, j):upper():sub(1, 1) + string.sub(i, j+1):upper()\n\
    \      i = i + 1\n      j = j + 1\n    elseif c == 'i' then\n      result = string.sub(i,\
    \ j):upper():sub(1, 1):lower() + string.sub(i, j+1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif c == 'I' then\n      result = string.sub(i, j):upper():sub(1,\
    \ 1) + string.sub(i, j+1):upper()\n      i = i + 1\n      j = j + 1\n    elseif\
    \ c == 'o' then\n      result = string.sub(i, j):upper():sub(1, 1):lower() + string.sub(i,\
    \ j+1):lower()\n      i = i + 1\n      j = j + 1\n    elseif c == 'O' then\n \
    \     result = string.sub(i, j):upper():sub(1, 1) + string.sub(i, j+1):upper()\n\
    \      i = i + 1\n      j = j + 1\n    elseif c == 'u' then\n      result = string.sub(i,\
    \ j):upper():sub(1, 1):lower() + string.sub(i, j+1):lower()\n      i = i + 1\n\
    \      j = j + 1\n    elseif c == 'U' then\n      result = string.sub(i, j):upper():sub(1,\
    \ 1) + string.sub(i, j+1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. c\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"%l\", function (c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub(\"%U\", function (c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4mn6er9s.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp4mn6er9s.lua:6: in function 'candidate'\n\t/tmp/tmp4mn6er9s.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp220qf6bq.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp220qf6bq.lua:6: in function 'candidate'\n\t/tmp/tmp220qf6bq.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = #string, 1, -1 do\n    local c = string.sub(i, i)\n    if c >= 'A'\
    \ and c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i - 1)\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnj3vk2us.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpnj3vk2us.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i))\n      j = j - 1\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo2iyejgn.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpo2iyejgn.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() == c then\n      result = string.sub(i,\
    \ j):upper()\n    else\n      result = string.sub(i, j):lower()\n    end\n   \
    \ i = i + 1\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2y18nymk.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp2y18nymk.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnpj80tdu.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpnpj80tdu.lua:6: in function 'candidate'\n\t/tmp/tmpnpj80tdu.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_57bul8.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpp_57bul8.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c == \"a\" then\n      c = string.sub(i, j,\
    \ i - 1)\n    end\n    if c == \"A\" then\n      c = string.sub(i, j, i - 1)\n\
    \    end\n    i = i + 1\n    if i == j then\n      break\n    end\n    result\
    \ = result .. c\n    j = j - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp920mpacm.lua:29:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmp920mpacm.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn87wzv25.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpn87wzv25.lua:6: in function 'candidate'\n\t/tmp/tmpn87wzv25.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpauoy1igc.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpauoy1igc.lua:6: in function 'candidate'\n\t/tmp/tmpauoy1igc.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if string.sub(c, 1) == 'a' then\n      result\
    \ = string.sub(c, 2)..string.sub(c, 3)..string.sub(c, 4)\n    end\n  end\n  --\
    \ Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if string.sub(c, 1) == 'A' then\n      result = string.sub(c, 2)..string.sub(c,\
    \ 3)..string.sub(c, 4)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmq8dc3ly.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpmq8dc3ly.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdvvqldfa.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpdvvqldfa.lua:6: in function 'candidate'\n\t/tmp/tmpdvvqldfa.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    if\
    \ string.sub(i, 1, 1) ~= string.sub(j, 1, 1) then\n      result = string.sub(i,\
    \ 1, 1) .. string.sub(j, 1, 1) .. string.sub(j, 2, 2) .. string.sub(i, 2, 2)\n\
    \      i = i + 1\n      j = j - 1\n    else\n      i = i + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0sj55yg.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"34\"\nstack traceback:\n\t/tmp/tmp_0sj55yg.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    if c >= 'a' and c <= 'z' then\n      result\
    \ = string.sub(i, i) + string.sub(i, i + 1)\n    end\n  end\n  -- Uppercase letters.\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c >= 'A' and\
    \ c <= 'Z' then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsp7xcc29.lua:27:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpsp7xcc29.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i)\n    local upper = string.byte(c)\n    local lower\
    \ = string.byte(string.sub(string, i - 1, i))\n    if upper ~= lower then\n  \
    \    result = string.sub(string, i - 1, i) + string.sub(string, i, i + 1)\n  \
    \  end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl3r9e8b4.lua:12:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpl3r9e8b4.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  -- Lowercase letters.\n  for i = 1, #string do\n \
    \   local c = string.sub(i, i, i)\n    if string.sub(c, i, i) ~= nil then\n  \
    \    result = string.gsub(result, '[' .. c .. ']', string.upper(c))\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i, i)\n    if string.sub(c, i, i) ~= nil then\n      result = string.gsub(result,\
    \ '[' .. c .. ']', string.lower(c))\n    end\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbzqso3__.lua:10:\
    \ malformed pattern (missing ']')\nstack traceback:\n\t/tmp/tmpbzqso3__.lua:10:\
    \ in function 'candidate'\n\t/tmp/tmpbzqso3__.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(j,\
    \ i - 1) .. string.sub(i, j) .. string.sub(i - 1, i)\n      i = i + 1\n    end\n\
    \    j = j + 1\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local result = string\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c == 'a' or c == 'A' then\n            c = string.sub(i, i -\
    \ 1)\n        end\n        result = result .. c\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp14g6cs8d.lua:20:\
    \ expected: \"hELLO!\"\nactual: \"Hello!1\"\nstack traceback:\n\t/tmp/tmp14g6cs8d.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper() .. string.sub(i, j + 1):lower()\n      i = i + 1\n      j = j + 1\n\
    \    elseif char == string.upper then\n      result = string.sub(i, j):lower()\
    \ .. string.sub(i, j + 1):upper()\n      i = i + 1\n      j = j + 1\n    else\n\
    \      result = result .. char\n      i = i + 1\n      j = j + 1\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function (c)\n    return\
    \ string.char(tonumber(c) + 32)\n  end)\n  result:gsub(\"([A-Z])\", function (c)\n\
    \    return string.char(tonumber(c) - 32)\n  end)\n  return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4b4yx1vz.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmp4b4yx1vz.lua:6: in function 'candidate'\n\t/tmp/tmp4b4yx1vz.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    i = i + 1\n    if c ~= nil then\n      if c >=\
    \ 'a' and c <= 'z' then\n        c = string.char(tonumber(c) + 32)\n      end\n\
    \      result = result .. c\n    end\n    j = j + 1\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    if c:lower() ~= c then\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      i = i + 1\n    else\n      result = string.sub(i,\
    \ j, 1, string.len(i) + 1)\n      j = j - 1\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1d_9qtfm.lua:24:\
    \ expected: \"hELLO!\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1d_9qtfm.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqqr4xf9x.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpqqr4xf9x.lua:6: in function 'candidate'\n\t/tmp/tmpqqr4xf9x.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuqlxn53b.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpuqlxn53b.lua:6: in function 'candidate'\n\t/tmp/tmpuqlxn53b.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ c = string.sub(i, j)\n    i = i + 1\n    if c == \"a\" then\n      c = string.sub(i,\
    \ j, \"A\")\n      i = i + 1\n    end\n    if c == \"A\" then\n      c = string.sub(i,\
    \ j, \"a\")\n      i = i + 1\n    end\n    if c == \"0\" then\n      c = string.sub(i,\
    \ j, \"0\")\n      i = i + 1\n    end\n    if c == \"1\" then\n      c = string.sub(i,\
    \ j, \"1\")\n      i = i + 1\n    end\n    if c == \"2\" then\n      c = string.sub(i,\
    \ j, \"2\")\n      i = i + 1\n    end\n    if c == \"3\" then\n      c = string.sub(i,\
    \ j, \"3\")\n      i = i + 1\n    end\n    if c == \"4\" then\n      c = string.sub(i,\
    \ j, \"4\")\n      i = i + 1\n    end\n    if c == \"5\" then\n      c = string.sub(i,\
    \ j, \"5\")\n      i = i + 1\n    end\n    if c == \"6\" then\n      c = string.sub(i,\
    \ j, \"6\")\n      i = i + 1\n    end\n    if c == \"7\" then\n      c = string.sub(i,\
    \ j, \"7\")\n      i = i + 1\n    end\n    if c == \"8\" then\n      c = string.sub(i,\
    \ j, \"8\")\n      i = i + 1\n    end\n    if c == \"9\" then\n      c = string.sub(i,\
    \ j, \"9\")\n      i = i + 1\n    end\n    if c == \"-\" then\n      c = string.sub(i,\
    \ j, \"_\")\n      i = i + 1\n    end\n    if c == \"_\" then\n      c = string.sub(i,\
    \ j, \"-\")\n      i = i + 1\n    end\n    if c == \"+\" then\n      c = string.sub(i,\
    \ j, \"+\")\n      i = i + 1\n    end\n    if c == \"/\" then\n      c = string.sub(i,\
    \ j, \"/\")\n      i = i + 1\n    end\n    if c == \"%\" then\n      c = string.sub(i,\
    \ j, \"%\")\n      i = i + 1\n    end\n    if c == \"^\" then\n      c = string.sub(i,\
    \ j, \"^\")\n      i = i + 1\n    end\n    if c == \"~\" then\n      c = string.sub(i,\
    \ j, \"~\")\n      i = i + 1\n    end\n    if c == \"!\" then\n      c = string.sub(i,\
    \ j, \"!\")\n      i = i + 1\n    end\n    if c == \"@\" then\n      c = string.sub(i,\
    \ j, \"@\")\n      i = i + 1\n    end\n    if c == \"#\" then\n      c = string.sub(i,\
    \ j, \"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpfg5bw8bm.lua:95: unfinished string near '\"'\n"
  exit_code: 1
  status: SyntaxError
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub(\"([a-z])\", function(c) return string.upper(c)\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return string.lower(c) end)\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppn3gj47a.lua:15:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmppn3gj47a.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvzcuqpin.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpvzcuqpin.lua:6: in function 'candidate'\n\t/tmp/tmpvzcuqpin.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local upper = string.upper\n  local lower = string.lower\n\
    \  for i = 1, #string do\n    local c = string.sub(string, i, i)\n    if c ==\
    \ upper then\n      result = string.sub(string, 1, i-1) + string.sub(string, i+1,\
    \ i)\n    elseif c == lower then\n      result = string.sub(string, 1, i-1) +\
    \ string.sub(string, i+1, i) + string.sub(string, i+2, #string)\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf4_4sen8.lua:23:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpf4_4sen8.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    if char == string.lower then\n      result = string.sub(i,\
    \ j):upper()\n      i = i + 1\n    elseif char == string.upper then\n      result\
    \ = string.sub(i, j):lower()\n      i = i + 1\n    else\n      i = i + 1\n   \
    \ end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpli8vqqk8.lua:26:\
    \ expected: \"hELLO!\"\nactual: \"Hello!\"\nstack traceback:\n\t/tmp/tmpli8vqqk8.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  result:gsub('%l', function(c)\n    return string.char(tonumber(c)\
    \ + 32)\n  end)\n  result:gsub('%U', function(c)\n    return string.char(tonumber(c)\
    \ - 32)\n  end)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg7rk4l12.lua:7:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t[C]: in function\
    \ 'gsub'\n\t/tmp/tmpg7rk4l12.lua:6: in function 'candidate'\n\t/tmp/tmpg7rk4l12.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local result = string\n  local i, j = 1, #string\n  while i <= j do\n    local\
    \ c = string.sub(i, j, i)\n    if c:lower() == c:upper() then\n      result =\
    \ string.sub(i, 1, i-1) + string.sub(i, i+1, j)\n      i = j\n    else\n     \
    \ i = j\n    end\n    j = i\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeu3zfbu0.lua:10:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpeu3zfbu0.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception

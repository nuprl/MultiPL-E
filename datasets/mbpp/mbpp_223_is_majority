def is_majority(arr, n, x):
    '''
    Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)
    '''
  	i = binary_search(arr, 0, n-1, x)
  	if i == -1:
  		return False
  	if ((i + n//2) <= (n -1)) and arr[i + n//2] == x:
  		return True
  	else:
  		return False
  
def binary_search(arr, low, high, x):
	if high >= low:
		mid = (low + high)//2 
		if (mid == 0 or x > arr[mid-1]) and (arr[mid] == x):
			return mid
		elif x > arr[mid]:
			return binary_search(arr, (mid + 1), high, x)
		else:
			return binary_search(arr, low, (mid -1), x)
	return -1

def check(candidate):
  assert candidate([1, 2, 3, 3, 3, 3, 10], 7, 3) == True
  assert candidate([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False
  assert candidate([1, 1, 1, 2, 2], 5, 1) == True
  assert candidate([1, 1, 2, 2], 5, 1) == False

def test_check():
    check(is_majority)
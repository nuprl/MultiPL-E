def check_expression(exp):
    '''
    Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/
    '''
    import deque
    if len(exp) & 1:
        return False
    stack = deque()
    for ch in exp:
        if ch == '(' or ch == '{' or ch == '[':
            stack.append(ch)
        if ch == ')' or ch == '}' or ch == ']':
            if not stack:
                return False
            top = stack.pop()
            if (top == '(' and ch != ')') or (top == '{' and ch != '}' or (top == '[' and ch != ']')):
                return False
    return not stack
def from collections 

def check(candidate):
    assert candidate("{()}[{}]") == True
    assert candidate("{()}[{]") == False
    assert candidate("{()}[{}][]({})") == True

def test_check():
    check(check_expression)
test_check()
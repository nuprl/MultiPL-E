from typing import List

def findIntersectionValues(nums1: List[int], nums2: List[int]) -> List[int]:
    """
    You are given two 0-indexed integer arrays nums1 and nums2 of sizes n and m, respectively.
    Consider calculating the following values:
    
    The number of indices i such that 0 <= i < n and nums1[i] occurs at least once in nums2.
    The number of indices i such that 0 <= i < m and nums2[i] occurs at least once in nums1.
    
    Return an integer array answer of size 2 containing the two values in the above order.
    
    Example 1:
    
    Input: nums1 = [4,3,2,3,1], nums2 = [2,2,5,2,3,6]
    Output: [3,4]
    Explanation: We calculate the values as follows:
    - The elements at indices 1, 2, and 3 in nums1 occur at least once in nums2. So the first value is 3.
    - The elements at indices 0, 1, 3, and 4 in nums2 occur at least once in nums1. So the second value is 4.
    
    Example 2:
    
    Input: nums1 = [3,4,2,3], nums2 = [1,5]
    Output: [0,0]
    Explanation: There are no common elements between the two arrays, so the two values will be 0.
    
    
    Constraints:
    
    n == nums1.length
    m == nums2.length
    1 <= n, m <= 100
    1 <= nums1[i], nums2[i] <= 100
    """
    ### Canonical solution below ###
    pass

### Unit tests below ###
def check(candidate):
    assert candidate([4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]) == [3,4]
    assert candidate([3, 4, 2, 3], [1, 5]) == [0,0]
    assert candidate([24, 28, 7, 27, 7, 27, 9, 24, 9, 10], [12, 29, 9, 7, 5]) == [4,2]
    assert candidate([10, 30, 16, 18], [23, 30, 30, 6, 10, 26, 9, 27, 6, 16, 18, 10, 27, 2, 20, 7, 16]) == [4,7]
    assert candidate([7, 23, 27, 20, 21, 29, 7, 27, 27, 18, 7, 6, 20, 10], [27, 27, 28, 24, 20, 4, 6, 17, 9, 29, 20, 14, 20]) == [7,7]
    assert candidate([15, 30, 6, 6], [15, 4, 16, 10, 7, 23, 24, 3, 4, 6, 14, 8, 18, 1, 29, 27, 2, 17]) == [3,2]
    assert candidate([24, 7, 8, 6, 22, 28, 22, 28, 7, 19], [3, 7, 28, 7, 3, 3]) == [4,3]
    assert candidate([23, 4, 26, 17, 23, 13], [24, 17, 20, 16, 1, 13, 17, 28, 17]) == [2,4]
    assert candidate([5, 8, 18, 27, 16, 29, 27, 12, 1, 29, 16, 27, 22, 19, 14, 12, 11, 25], [24, 8, 16]) == [3,2]
    assert candidate([29, 17, 30, 17, 15, 30, 11, 2, 24, 28, 28, 30, 30, 27, 30, 2, 30, 9, 1, 7], [12, 12, 11, 21, 2, 28, 5, 24, 12, 17, 24, 29, 22, 19, 11, 17, 1, 23]) == [10,10]
    assert candidate([4, 27, 12, 16, 16, 21, 26, 7, 19, 21, 24, 26, 12, 24, 22, 12, 16], [1, 25, 8, 27, 23, 27, 27, 24]) == [3,4]
    assert candidate([27, 19, 20, 16, 24, 27, 27, 24], [30, 21, 21, 6, 17, 16]) == [1,1]
    assert candidate([3, 19, 21, 5, 24, 26, 22, 22, 5], [23, 26, 20, 14, 30, 9, 10, 24, 19, 22, 19, 6, 3, 20, 22, 22, 5, 24, 24]) == [8,11]
    assert candidate([13, 13, 29, 12], [29, 29, 13, 7, 30, 22]) == [3,3]
    assert candidate([30, 4, 16, 14, 14, 14, 20, 15, 20, 30, 6, 10, 14], [30, 16, 20, 2, 18, 10, 5, 6, 30, 20, 22, 18, 14, 23, 15]) == [12,9]
    assert candidate([22, 1, 22, 4, 11, 22, 4, 20, 11, 29, 11, 11, 4, 26, 20, 12, 20, 8, 26, 17], [4, 17, 7, 15]) == [4,2]
    assert candidate([30, 15, 16, 15, 11, 16, 26, 15, 21], [22, 25, 27, 2, 26, 20, 18, 15, 26, 20, 16]) == [6,4]
    assert candidate([5, 6], [13, 12, 8, 5, 19, 13, 27]) == [1,1]
    assert candidate([27, 28, 15, 20, 5, 13, 28, 29, 24, 29, 20, 15, 5, 20, 20, 25, 9, 20, 24, 20], [16, 20, 13, 24, 11]) == [9,3]
    assert candidate([25, 7, 18], [28, 1, 14, 22, 24, 8, 25, 17]) == [1,1]
    assert candidate([10, 15], [4, 10, 15, 28]) == [2,2]
    assert candidate([11, 11, 25], [11, 28, 25, 13, 23, 11]) == [3,3]
    assert candidate([10, 30, 27, 8, 8, 5, 11, 12, 17, 13, 14, 27, 17, 19, 13, 20, 27], [10, 14, 25, 2, 17, 29, 10, 9, 5, 30, 15, 27]) == [9,7]
    assert candidate([19, 22, 22, 22, 22, 29, 22, 28, 29], [7, 28, 29, 22, 16, 22, 22, 4, 17, 11, 22, 22, 22, 25, 25]) == [8,8]
    assert candidate([18, 1, 23, 1, 1], [16, 9, 1, 4, 15, 11]) == [3,1]
    assert candidate([30, 11, 15, 1, 15, 6, 5, 26, 15, 15], [1, 20, 19, 30, 17, 10, 6, 15]) == [7,4]
    assert candidate([17, 6, 30, 30, 15, 30, 22, 2, 18, 22, 21, 21, 17, 19, 25, 30, 18, 30, 1], [2, 16, 25, 5, 25, 1, 14, 11]) == [3,4]
    assert candidate([3, 21, 21, 23, 14], [1, 28, 1, 3, 27, 15, 28, 29, 22, 14, 8, 24]) == [2,2]
    assert candidate([8, 20, 29, 23, 29, 2, 2, 2, 20], [2, 24, 20, 28, 11, 8, 6, 25]) == [6,3]
    assert candidate([22, 27, 4, 27, 30, 22, 25, 8, 8, 30, 1, 16, 1], [9, 21, 8, 12]) == [2,1]
    assert candidate([19, 11, 13, 1, 26, 25, 19, 24, 3, 10, 1, 11, 1, 15, 20, 20, 26, 13, 13], [13, 23]) == [3,1]
    assert candidate([21, 16, 11, 21], [21, 11, 21, 2, 2, 8, 16, 29, 16, 16, 18, 14, 18, 16, 29, 10, 2]) == [4,7]
    assert candidate([15, 7, 23, 12, 23, 16, 18, 1, 16, 28, 28, 19, 7, 30, 19], [9, 1, 10, 15, 23, 8, 8, 24, 30]) == [5,4]
    assert candidate([2, 2, 22, 24, 20, 22, 1, 27, 27, 10, 8, 26, 22, 22, 22, 10, 13, 29], [8, 11, 1, 11]) == [2,2]
    assert candidate([25, 29, 15, 15, 21, 14, 10, 23, 10, 18, 11, 30, 28, 16, 29], [1, 16, 10, 2, 25, 1, 15]) == [6,4]
    assert candidate([18, 18, 11, 27, 18, 20, 20], [16, 28, 25, 28, 20, 15, 8, 21, 4, 6, 19, 20, 20, 20, 29]) == [2,4]
    assert candidate([1, 25, 15, 20, 25, 11, 4, 1, 1, 21, 17, 1, 19], [19, 19, 9, 23, 1, 5, 28, 28, 17, 28, 3, 9, 8]) == [6,4]
    assert candidate([7, 30, 7, 7, 30, 2, 7, 7], [19, 7, 1, 7, 17, 17, 20, 7, 21, 30, 8, 21, 10, 30, 14]) == [7,5]
    assert candidate([7, 18, 13, 27, 13, 9, 22, 30], [27, 29, 21, 30, 16, 13, 29, 5, 9, 16, 29, 27]) == [5,5]
    assert candidate([19, 19, 25, 24, 24, 3, 19, 24, 3], [16, 19, 19, 17, 19, 24, 5, 19]) == [6,5]
    assert candidate([19, 11, 3, 11, 22, 12, 23, 12, 29, 19, 25, 15, 23, 23], [4, 29, 19, 23, 23, 10, 2, 10, 10, 15, 19, 20, 19, 12, 2, 19, 15, 29]) == [9,11]
    assert candidate([25, 21], [20, 12, 5, 13, 21, 25, 9, 30, 21, 7, 21, 12, 20, 7]) == [2,4]
    assert candidate([16, 17, 16, 20, 29, 16, 30, 24], [1, 30, 24]) == [2,2]
    assert candidate([10, 6, 7, 24, 17, 24, 3, 24], [24, 27, 26, 8, 7, 3, 19, 24, 6, 7, 30, 6]) == [6,7]
    assert candidate([3, 26, 7, 6, 23, 22, 26, 8, 11, 23, 17, 26, 7, 2], [13, 11, 10, 8, 4, 23]) == [4,3]
    assert candidate([29, 10, 9, 26, 30, 21, 11, 26, 30], [2, 9, 12, 9, 30, 9, 30, 21, 8, 3, 17, 15, 25, 26, 9, 15]) == [6,8]
    assert candidate([14, 29, 15, 12, 20, 27, 24, 29, 4, 29, 12, 6, 12, 4, 7], [2, 19, 6, 29, 10, 20, 26, 11, 11, 19, 4, 12, 30, 22, 13, 4, 24]) == [11,7]
    assert candidate([11, 5, 3, 4, 15, 30, 25, 25, 30, 6, 3, 28, 25, 6, 30, 17, 15], [4, 25, 17, 2, 24, 28, 25, 15, 4, 25, 8, 6, 15]) == [10,10]
    assert candidate([5, 23, 17, 6, 5, 15, 29, 2, 7, 27, 5], [28, 14, 1, 1, 27, 26, 23, 20, 6, 17, 11]) == [4,4]
    assert candidate([26, 20, 12, 2, 11, 23, 8, 28, 28, 2, 28, 20, 2, 13, 13, 28, 22], [8, 7, 12, 15, 20]) == [4,3]
    assert candidate([15, 6, 14, 24, 6, 22, 6, 24, 6, 6, 6, 16, 24, 3, 7, 6], [11, 6, 18, 20, 12, 14, 17, 3, 11, 6, 2, 3, 17, 19, 3]) == [9,6]
    assert candidate([21, 10, 13, 2, 3, 29, 2, 29, 12, 21, 16, 7, 21, 26], [26, 16, 18, 29, 16, 15, 2, 16, 23, 24, 26, 21, 26, 13, 4, 29, 13, 17, 10]) == [11,13]
    assert candidate([5, 18, 7, 30, 16, 1, 24, 5, 1, 15, 28, 24, 25], [20, 29, 16, 14]) == [1,1]
    assert candidate([1, 11, 11, 28, 28, 10, 15, 28, 6], [27, 21, 28, 18, 7, 7, 20, 26, 4, 28, 11, 22, 16, 30, 11, 9, 9]) == [5,4]
    assert candidate([27, 3], [29, 29, 27, 1, 26, 21, 27, 1, 8, 3, 7, 24, 19]) == [2,3]
    assert candidate([19, 20, 25, 16, 22, 23, 25, 16, 23, 16, 23, 14], [16, 5]) == [3,1]
    assert candidate([9, 9, 5, 28, 22, 15, 11, 28, 5, 3, 15, 6, 16, 13, 29, 30], [18, 12, 3, 5, 24, 15]) == [5,3]
    assert candidate([21, 19, 11, 24, 7, 5, 10], [19, 19, 14, 3, 4, 14, 27, 18, 14, 10]) == [2,3]
    assert candidate([6, 18, 18, 20, 5, 18, 1, 15, 18, 26, 28, 26], [13, 12, 2, 24, 20, 28, 27, 20, 11]) == [2,3]
    assert candidate([18, 14, 14, 15, 10, 14, 7, 1, 28, 15], [11, 18, 15, 18, 27, 12]) == [3,3]
    assert candidate([29, 18, 29, 18, 27, 11, 11, 8, 4, 18, 11, 14, 5, 21, 21, 29, 11], [25, 29, 15, 17, 27, 20, 9, 23, 11, 13, 26, 8, 11, 6]) == [9,5]
    assert candidate([14, 5, 8, 21, 24, 5, 21, 19, 29], [15, 10, 9, 13, 24, 4, 9, 10, 3, 6, 5, 20, 24, 26, 14, 27, 14, 10, 22]) == [4,5]
    assert candidate([2, 11, 11, 9, 25, 11, 27, 16, 28, 10, 18, 3, 22, 15, 16, 11], [11, 3, 21, 9, 3, 13, 23, 9, 28, 25, 8, 28, 29, 2, 23, 12, 13, 14, 14]) == [9,9]
    assert candidate([12, 11, 23, 17, 23, 3, 17], [18, 20, 8, 29, 28, 27, 14, 28, 13, 25, 24, 2, 11, 23]) == [3,2]
    assert candidate([8, 18, 7, 7, 7, 24, 16, 8, 23, 23, 16, 16, 3, 16, 22, 18, 8], [29, 3, 14, 22, 17, 22, 25, 25, 1, 23, 6, 23, 7, 12, 16]) == [11,7]
    assert candidate([25, 9, 11, 13, 21, 3, 7, 24, 29, 14, 2, 7, 18, 30, 18], [2, 3, 28, 3, 25, 25, 21, 10, 4, 19, 23, 11, 27]) == [5,7]
    assert candidate([5, 8, 12, 18, 5, 8], [12, 19, 30, 16, 13]) == [1,1]
    assert candidate([14, 22, 29, 29, 3, 22, 4, 29, 28, 27], [14, 29]) == [4,2]
    assert candidate([28, 28, 11, 5, 18, 5, 18, 17, 21, 4, 9, 4], [19, 6, 12, 17, 13]) == [1,1]
    assert candidate([24, 29, 19, 25, 7, 26, 7, 25, 7, 25, 2], [9, 4, 2, 20, 29, 1, 27]) == [2,2]
    assert candidate([19, 14, 14, 21, 14, 11, 21, 18, 11, 14, 18, 28, 4], [25, 30, 1]) == [0,0]
    assert candidate([9, 17, 21, 21, 18, 9, 9, 16, 9, 3, 17, 9, 3], [9, 10, 20, 7, 3, 13, 13, 22, 15]) == [7,2]
    assert candidate([21, 14, 14, 14, 5, 11, 8, 7, 9, 3, 7, 3], [2, 24, 28, 8, 15, 5, 3, 6, 14, 3, 19, 25, 5]) == [7,6]
    assert candidate([3, 17, 13, 18, 18, 12, 5, 12, 27, 6, 3, 13, 7, 3, 12, 27, 6], [17, 28, 13, 26, 12, 27, 20, 12, 27, 7, 10, 24]) == [9,7]
    assert candidate([18, 9, 30, 9, 3, 13, 25, 5, 30, 25, 13, 19, 25, 3, 28, 29, 9, 9, 9, 12], [17, 20, 28, 30, 27, 1, 22]) == [3,2]
    assert candidate([18, 19, 13, 20, 26, 26, 13, 13, 26, 25, 22, 20, 17], [3, 21, 12, 12, 18, 20, 26, 17, 30, 6, 22, 13]) == [11,6]
    assert candidate([19, 10, 2, 18, 15, 24, 4, 11, 12, 24, 10, 10, 9, 12, 6, 10, 17, 22, 11, 12], [10, 16, 7, 2, 27, 22, 19, 17, 11, 15, 27, 24]) == [13,8]
    assert candidate([8, 8], [8, 24, 8, 8, 19, 27, 7, 21, 8, 8]) == [2,5]
    assert candidate([22, 23, 22], [22, 21, 3, 22, 17, 27]) == [2,2]
    assert candidate([20, 10], [10, 20, 12]) == [2,2]
    assert candidate([15, 28, 15, 17, 3, 6], [3, 15, 17, 30, 18, 22, 4]) == [4,3]
    assert candidate([30, 15], [15, 25, 23, 26, 14, 30, 8, 19, 15, 8, 10, 14, 26, 15, 28, 30]) == [2,5]
    assert candidate([16, 11, 16, 24, 7, 9, 9, 24], [19, 2, 9, 18, 25, 11, 1, 16, 24, 18, 20, 9, 24, 7, 9, 29, 16, 22, 15]) == [8,9]
    assert candidate([13, 25, 8, 8, 1, 14, 8, 4, 8, 8, 25, 8, 22], [17, 8, 13, 8, 8, 20, 26, 20, 8, 22, 17, 14, 8, 16, 26, 2, 23, 18, 18, 4]) == [10,9]
    assert candidate([9, 9, 9, 29, 11, 9, 18, 23, 9, 9, 26, 9, 23, 9, 9, 2, 28, 7], [17, 6, 2, 11, 10, 23, 11, 30, 11, 24, 1, 11, 13, 9, 23, 25]) == [13,8]
    assert candidate([27, 16, 16, 15], [3, 16, 7, 16, 23, 16, 3, 26, 27, 30, 4, 28, 26, 24, 7]) == [3,4]
    assert candidate([19, 1, 26, 15, 15], [6, 25]) == [0,0]
    assert candidate([13, 29, 29, 12, 25, 22, 2, 25, 11, 3, 22, 13, 23, 19, 24, 24, 8, 30], [20, 25, 12, 5, 2, 28, 14, 27, 24, 3, 21, 15, 25, 2, 12, 28, 19, 7, 5]) == [8,9]
    assert candidate([14, 14, 26, 25, 28, 26], [4, 23, 9, 3, 1, 2, 27, 8, 22, 6, 24]) == [0,0]
    assert candidate([14, 29, 2, 26, 14, 10, 1, 23, 28, 5, 17, 1, 21, 5, 28, 14, 6, 4, 18], [1, 20, 7, 15, 18, 26, 5, 10, 8, 6, 27]) == [8,6]
    assert candidate([29, 3, 15, 7, 2, 20, 30, 15, 7, 29, 2, 21], [15, 23, 22, 19, 21, 5, 7, 29, 23, 2, 17, 27, 21, 15, 6, 7]) == [9,8]
    assert candidate([7, 23, 23, 15, 23, 10, 30, 23, 30, 10, 30, 17, 30, 10, 3, 7, 10], [21, 21]) == [0,0]
    assert candidate([8, 13, 1, 13, 13, 12, 27, 21, 4, 4, 17], [12, 13, 1, 27, 4, 9, 12, 8, 25, 29, 4, 8, 4, 29, 21, 28, 1, 8, 6, 6]) == [10,13]
    assert candidate([6, 15, 7, 1, 7, 14, 21, 3, 30, 23, 22, 29], [30, 1, 7, 29, 3, 4]) == [6,5]
    assert candidate([15, 10, 22, 22, 6, 8, 15, 8, 10], [10, 4, 8, 15, 29, 6, 9, 22, 3, 3, 23, 3, 13, 8, 5, 8, 3]) == [9,7]
    assert candidate([14, 4, 1, 27, 22, 14, 7, 22, 15, 3, 22, 8], [30, 4, 4, 27, 6, 4, 16, 11, 23, 14, 4, 7, 21, 22, 9, 14, 4, 27, 17, 27]) == [8,12]
    assert candidate([23, 15, 15, 15], [23, 17, 12, 15, 21]) == [4,2]
    assert candidate([28, 29, 15, 19, 1, 23, 25, 9, 29, 25, 19, 11, 9, 19], [9, 4, 11, 23, 13, 8, 24, 9, 23]) == [4,5]
    assert candidate([19, 24, 7, 2, 3, 10, 27, 10, 4, 4, 9, 29, 10, 7], [23, 4, 7, 4, 27, 13, 2, 9, 23]) == [7,6]
    assert candidate([24, 22, 17, 24, 22, 16, 1, 5], [1, 27, 7, 22, 27, 13, 4, 5, 12, 8, 22, 18, 5]) == [4,5]


def test_check():
    check(findIntersectionValues)


### Metadata below ###
# question_id = 3206
# question_title = Find Common Elements Between Two Arrays
# question_title_slug = find-common-elements-between-two-arrays
# question_difficulty = Easy
# question_category = Algorithms
# question_likes = 66
# question_dislikes = 25
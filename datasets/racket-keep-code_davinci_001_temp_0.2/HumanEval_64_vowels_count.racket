#lang racket

;; Write a function vowels_count which takes a string representing
;; a word as input and returns the number of vowels in the string.
;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a
;; vowel, but only when it is at the end of the given word.
;; Example:
;; >>> vowels_count("abcde")
;; 2
;; >>> vowels_count("ACEDY")
;; 3
(define (vowels_count s)
  (cond [(string=? s "") 0]
        [else (if (string=? (substring s 0 1) "y")
                  (+ (vowels_count (substring s 1)) (vowels_count (substring s 2)))
                  (+ (vowels_count (substring s 1)) (vowels_count (substring s 2))))]))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate vowels_count))
    (check-equal? (candidate "abcde") 2)
    (check-equal? (candidate "Alone") 3)
    (check-equal? (candidate "key") 2)
    (check-equal? (candidate "bye") 1)
    (check-equal? (candidate "keY") 2)
    (check-equal? (candidate "bYe") 1)
    (check-equal? (candidate "ACEDY") 3)
))

(test-humaneval)
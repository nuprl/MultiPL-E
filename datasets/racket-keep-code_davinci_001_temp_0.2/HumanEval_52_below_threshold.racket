#lang racket

;; Return True if all numbers in the list l are below threshold t.
;; >>> below_threshold([1, 2, 4, 10], 100)
;; True
;; >>> below_threshold([1, 20, 4, 10], 5)
;; False
(define (below_threshold l t)
  (cond [(null? l) #t]
        [else (and (< (car l) t)
                   (below_threshold (cdr l) t))]))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate below_threshold))
    (check-equal? (candidate (list 1 2 4 10) 100) #t)
    (check-equal? (candidate (list 1 20 4 10) 5) #f)
    (check-equal? (candidate (list 1 20 4 10) 21) #t)
    (check-equal? (candidate (list 1 20 4 10) 22) #t)
    (check-equal? (candidate (list 1 8 4 10) 11) #t)
    (check-equal? (candidate (list 1 8 4 10) 10) #f)
))

(test-humaneval)
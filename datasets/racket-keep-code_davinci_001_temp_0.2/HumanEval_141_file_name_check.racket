#lang racket

;; Create a function which takes a string representing a file's name, and returns
;; 'Yes' if the the file's name is valid, and returns 'No' otherwise.
;; A file's name is considered to be valid if and only if all the following conditions 
;; are met:
;; - There should not be more than three digits ('0'-'9') in the file's name.
;; - The file's name contains exactly one dot '.'
;; - The substring before the dot should not be empty, and it starts with a letter from 
;; the latin alphapet ('a'-'z' and 'A'-'Z').
;; - The substring after the dot should be one of these: ['txt', 'exe', 'dll']
;; Examples:
;; file_name_check("example.txt") # => 'Yes'
;; file_name_check("1example.dll") # => 'No' (the name should start with a latin alphapet letter)
(define (file_name_check file_name)
  (cond [(> (string-length file_name) 3) 'No]
        [(string=? "." (substring file_name (- (string-length file_name) 1))) 'No]
        [(string=? (substring file_name 0 1) ".") 'No]
        [(string=? (substring file_name (- (string-length file_name) 1)) "exe") 'No]
        [(string=? (substring file_name (- (string-length file_name) 1)) "dll") 'No]
        [(string=? (substring file_name (- (string-length file_name) 1)) "txt") 'No]
        ['Yes]))

(require rackunit)

(define (test-humaneval) 

  (let (( candidate file_name_check))
    (check-equal? (candidate "example.txt") "Yes")
    (check-equal? (candidate "1example.dll") "No")
    (check-equal? (candidate "s1sdf3.asd") "No")
    (check-equal? (candidate "K.dll") "Yes")
    (check-equal? (candidate "MY16FILE3.exe") "Yes")
    (check-equal? (candidate "His12FILE94.exe") "No")
    (check-equal? (candidate "_Y.txt") "No")
    (check-equal? (candidate "?aREYA.exe") "No")
    (check-equal? (candidate "/this_is_valid.dll") "No")
    (check-equal? (candidate "this_is_valid.wow") "No")
    (check-equal? (candidate "this_is_valid.txt") "Yes")
    (check-equal? (candidate "this_is_valid.txtexe") "No")
    (check-equal? (candidate "#this2_i4s_5valid.ten") "No")
    (check-equal? (candidate "@this1_is6_valid.exe") "No")
    (check-equal? (candidate "this_is_12valid.6exe4.txt") "No")
    (check-equal? (candidate "all.exe.txt") "No")
    (check-equal? (candidate "I563_No.exe") "Yes")
    (check-equal? (candidate "Is3youfault.txt") "Yes")
    (check-equal? (candidate "no_one#knows.dll") "Yes")
    (check-equal? (candidate "1I563_Yes3.exe") "No")
    (check-equal? (candidate "I563_Yes3.txtt") "No")
    (check-equal? (candidate "final..txt") "No")
    (check-equal? (candidate "final132") "No")
    (check-equal? (candidate "_f4indsartal132.") "No")
    (check-equal? (candidate ".txt") "No")
    (check-equal? (candidate "s.") "No")
))

(test-humaneval)
#lang racket

;; Given a positive integer n, return the product of the odd digits.
;; Return 0 if all digits are even.
;; For example:
;; digits(1)  == 1
;; digits(4)  == 0
;; digits(235) == 15
(define (digits n)
  (cond [(= n 0) 0]
        [(even? n) 0]
        [else (* (remainder n 10) (digits (/ n 10)))])
  )


(require rackunit)

(define (test-humaneval) 

  (let (( candidate digits))
    (check-equal? (candidate 5) 5)
    (check-equal? (candidate 54) 5)
    (check-equal? (candidate 120) 1)
    (check-equal? (candidate 5014) 5)
    (check-equal? (candidate 98765) 315)
    (check-equal? (candidate 5576543) 2625)
    (check-equal? (candidate 2468) 0)
))

(test-humaneval)
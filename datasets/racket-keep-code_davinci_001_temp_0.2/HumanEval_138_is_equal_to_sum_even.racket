#lang racket

;; Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers
;; Example
;; is_equal_to_sum_even(4) == False
;; is_equal_to_sum_even(6) == False
;; is_equal_to_sum_even(8) == True
(define (is_equal_to_sum_even n)
  (define (is_even n)
    (= (modulo n 2) 0))
  (define (is_sum_even n)
    (define (is_sum_even_rec n acc)
      (cond ((= n 0) acc)
            ((is_even n) (is_sum_even_rec (- n 2) (cons n acc)))
            (else (is_sum_even_rec (- n 1) acc))))
    (is_sum_even_rec n '()))
  (is_sum_even n))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate is_equal_to_sum_even))
    (check-equal? (candidate 4) #f)
    (check-equal? (candidate 6) #f)
    (check-equal? (candidate 8) #t)
    (check-equal? (candidate 10) #t)
    (check-equal? (candidate 11) #f)
    (check-equal? (candidate 12) #t)
    (check-equal? (candidate 13) #f)
    (check-equal? (candidate 16) #t)
))

(test-humaneval)
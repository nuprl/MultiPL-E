#lang racket

;; Given a string, find out how many distinct characters (regardless of case) does it consist of
;; >>> count_distinct_characters('xyzXYZ')
;; 3
;; >>> count_distinct_characters('Jerry')
;; 4
(define (count_distinct_characters string)
  (define (count_distinct_characters_accumulator string accumulator)
    (if (empty? string)
        accumulator
        (count_distinct_characters_accumulator (cdr string) (+ 1 accumulator))))
  (count_distinct_characters_accumulator string 0))


(require rackunit)

(define (test-humaneval) 

  (let (( candidate count_distinct_characters))
    (check-equal? (candidate "") 0)
    (check-equal? (candidate "abcde") 5)
    (check-equal? (candidate "abcdecadeCADE") 5)
    (check-equal? (candidate "aaaaAAAAaaaa") 1)
    (check-equal? (candidate "Jerry jERRY JeRRRY") 5)
))

(test-humaneval)
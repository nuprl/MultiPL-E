#lang racket

;; Create a function that returns True if the last character
;; of a given string is an alphabetical character and is not
;; a part of a word, and False otherwise.
;; Note: "word" is a group of characters separated by space.
;; Examples:
;; check_if_last_char_is_a_letter("apple pie") ➞ False
;; check_if_last_char_is_a_letter("apple pi e") ➞ True
;; check_if_last_char_is_a_letter("apple pi e ") ➞ False
;; check_if_last_char_is_a_letter("") ➞ False
(define (check_if_last_char_is_a_letter txt)
  (if (string=? "" txt)
      #f
      (let ((last_char (string-ref txt (- (string-length txt) 1))))
        (if (and (string=? last_char last_char)
                 (not (string=? last_char " ")))
            #t
            #f))))

(require rackunit)

(define (test-humaneval) 

  (let (( candidate check_if_last_char_is_a_letter))
    (check-equal? (candidate "apple") #f)
    (check-equal? (candidate "apple pi e") #t)
    (check-equal? (candidate "eeeee") #f)
    (check-equal? (candidate "A") #t)
    (check-equal? (candidate "Pumpkin pie ") #f)
    (check-equal? (candidate "Pumpkin pie 1") #f)
    (check-equal? (candidate "") #f)
    (check-equal? (candidate "eeeee e ") #f)
    (check-equal? (candidate "apple pie") #f)
    (check-equal? (candidate "apple pi e ") #f)
))

(test-humaneval)
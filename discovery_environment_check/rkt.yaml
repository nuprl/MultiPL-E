name: Racket
language: racket
prompt: "#lang racket\n\n;; Add two numbers x and y\n;; >>> add(2, 3)\n;; 5\n;; >>>\
  \ add(5, 7)\n;; 12\n(define (add x y)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate add))\n\
  \    (check-equal? (candidate 0 1) 1)\n    (check-equal? (candidate 1 0) 1)\n  \
  \  (check-equal? (candidate 2 3) 5)\n    (check-equal? (candidate 5 7) 12)\n   \
  \ (check-equal? (candidate 7 5) 12)\n))\n\n(test-humaneval)"
completions: ["  (+ x y))\n", "  (+ x y)\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

[
  {
    "name": "mbpp_234_volume_cube",
    "language": "r",
    "prompt": "# Write a function to find the volume of a cube given its side length.\nvolume_cube <- function(l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_234_volume_cube.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- volume_cube\n    if(!identical(candidate(3), 27)){quit('no', 1)}\n    if(!identical(candidate(2), 8)){quit('no', 1)}\n    if(!identical(candidate(5), 125)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_89_closest_num",
    "language": "r",
    "prompt": "# Write a function to find the closest smaller number than n.\nclosest_num <- function(N) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- closest_num\n    if(!identical(candidate(11), 10)){quit('no', 1)}\n    if(!identical(candidate(7), 6)){quit('no', 1)}\n    if(!identical(candidate(12), 11)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_245_max_sum",
    "language": "r",
    "prompt": "# Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nmax_sum <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_sum\n    if(!identical(candidate(c(1, 15, 51, 45, 33, 100, 12, 18, 9)), 194)){quit('no', 1)}\n    if(!identical(candidate(c(80, 60, 30, 40, 20, 10)), 210)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 14, 16, 21, 23, 29, 30)), 138)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_237_check_occurences",
    "language": "r",
    "prompt": "# Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.\ncheck_occurences <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_237_check_occurences.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_occurences\n    if(!identical(candidate(list(list(3, 1), list(1, 3), list(2, 5), list(5, 2), list(6, 3))), list(list(1, 3) = 2, list(2, 5) = 2, list(3, 6) = 1))){quit('no', 1)}\n    if(!identical(candidate(list(list(4, 2), list(2, 4), list(3, 6), list(6, 3), list(7, 4))), list(list(2, 4) = 2, list(3, 6) = 2, list(4, 7) = 1))){quit('no', 1)}\n    if(!identical(candidate(list(list(13, 2), list(11, 23), list(12, 25), list(25, 12), list(16, 23))), list(list(2, 13) = 1, list(11, 23) = 1, list(12, 25) = 2, list(16, 23) = 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_77_is_Diff",
    "language": "r",
    "prompt": "# Write a python function to find whether a number is divisible by 11.\nis_Diff <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_Diff\n    if(!identical(candidate(12345), FALSE)){quit('no', 1)}\n    if(!identical(candidate(1212112), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1212), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_123_amicable_numbers_sum",
    "language": "r",
    "prompt": "# Write a function to sum all amicable numbers from 1 to a specified number.\namicable_numbers_sum <- function(limit) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- amicable_numbers_sum\n    if(!identical(candidate(999), 504)){quit('no', 1)}\n    if(!identical(candidate(9999), 31626)){quit('no', 1)}\n    if(!identical(candidate(99), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_420_cube_Sum",
    "language": "r",
    "prompt": "# Write a python function to find the cube sum of first n even natural numbers.\ncube_Sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- cube_Sum\n    if(!identical(candidate(2), 72)){quit('no', 1)}\n    if(!identical(candidate(3), 288)){quit('no', 1)}\n    if(!identical(candidate(4), 800)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_585_expensive_items",
    "language": "r",
    "prompt": "# Write a function to find the n most expensive items in a given dataset.\nexpensive_items <- function(items, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_585_expensive_items.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- expensive_items\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22)), 1), list(list('name' = 'Item-2', 'price' = 555.22)))){quit('no', 1)}\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-3', 'price' = 45.09)), 2), list(list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-1', 'price' = 101.1)))){quit('no', 1)}\n    if(!identical(candidate(list(list('name' = 'Item-1', 'price' = 101.1), list('name' = 'Item-2', 'price' = 555.22), list('name' = 'Item-3', 'price' = 45.09), list('name' = 'Item-4', 'price' = 22.75)), 1), list(list('name' = 'Item-2', 'price' = 555.22)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_20_is_woodall",
    "language": "r",
    "prompt": "# Write a function to check if the given number is woodball or not.\nis_woodall <- function(x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_20_is_woodall.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_woodall\n    if(!identical(candidate(383), TRUE)){quit('no', 1)}\n    if(!identical(candidate(254), FALSE)){quit('no', 1)}\n    if(!identical(candidate(200), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_805_max_sum_list",
    "language": "r",
    "prompt": "# Write a function that returns the list in a list of lists whose sum of elements is the highest.\nmax_sum_list <- function(lists) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_sum_list\n    if(!identical(candidate(list(list(1, 2, 3), list(4, 5, 6), list(10, 11, 12), list(7, 8, 9))), list(10, 11, 12))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 2, 1), list(6, 5, 4), list(12, 11, 10))), list(12, 11, 10))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 3, 1))), list(2, 3, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_806_max_run_uppercase",
    "language": "r",
    "prompt": "# Write a function to find maximum run of uppercase characters in the given string.\nmax_run_uppercase <- function(test_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_run_uppercase\n    if(!identical(candidate('GeMKSForGERksISBESt'), 5)){quit('no', 1)}\n    if(!identical(candidate('PrECIOusMOVemENTSYT'), 6)){quit('no', 1)}\n    if(!identical(candidate('GooGLEFluTTER'), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_455_check_monthnumb_number",
    "language": "r",
    "prompt": "# Write a function to check whether the given month number contains 31 days or not.\ncheck_monthnumb_number <- function(monthnum2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_455_check_monthnumb_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_monthnumb_number\n    if(!identical(candidate(5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(6), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_577_last_Digit_Factorial",
    "language": "r",
    "prompt": "# Write a python function to find the last digit in factorial of a given number.\nlast_Digit_Factorial <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- last_Digit_Factorial\n    if(!identical(candidate(4), 4)){quit('no', 1)}\n    if(!identical(candidate(21), 0)){quit('no', 1)}\n    if(!identical(candidate(30), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_555_difference",
    "language": "r",
    "prompt": "# Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\ndifference <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- difference\n    if(!identical(candidate(3), 30)){quit('no', 1)}\n    if(!identical(candidate(5), 210)){quit('no', 1)}\n    if(!identical(candidate(2), 6)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_456_reverse_string_list",
    "language": "r",
    "prompt": "# Write a function to reverse each string in a given list of string values.\nreverse_string_list <- function(stringlist) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_456_reverse_string_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- reverse_string_list\n    if(!identical(candidate(c('Red', 'Green', 'Blue', 'White', 'Black')), list('deR', 'neerG', 'eulB', 'etihW', 'kcalB'))){quit('no', 1)}\n    if(!identical(candidate(c('john', 'amal', 'joel', 'george')), list('nhoj', 'lama', 'leoj', 'egroeg'))){quit('no', 1)}\n    if(!identical(candidate(c('jack', 'john', 'mary')), list('kcaj', 'nhoj', 'yram'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_587_list_tuple",
    "language": "r",
    "prompt": "# Write a function to convert a list to a tuple.\nlist_tuple <- function(listx) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_587_list_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- list_tuple\n    if(!identical(candidate(c(5, 10, 7, 4, 15, 3)), list(5, 10, 7, 4, 15, 3))){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 5, 6, 2, 3, 4, 4, 7)), list(2, 4, 5, 6, 2, 3, 4, 4, 7))){quit('no', 1)}\n    if(!identical(candidate(c(58, 44, 56)), list(58, 44, 56))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_612_merge",
    "language": "r",
    "prompt": "# Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\nmerge <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- merge\n    if(!identical(candidate(list(list('x', 'y'), list('a', 'b'), list('m', 'n'))), list(list('x', 'a', 'm'), list('y', 'b', 'n')))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2), list(3, 4), list(5, 6), list(7, 8))), list(list(1, 3, 5, 7), list(2, 4, 6, 8)))){quit('no', 1)}\n    if(!identical(candidate(list(list('x', 'y', 'z'), list('a', 'b', 'c'), list('m', 'n', 'o'))), list(list('x', 'a', 'm'), list('y', 'b', 'n'), list('z', 'c', 'o')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_12_sort_matrix",
    "language": "r",
    "prompt": "# Write a function to sort a given matrix in ascending order according to the sum of its rows.\nsort_matrix <- function(M) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_12_sort_matrix.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sort_matrix\n    if(!identical(candidate(list(list(1, 2, 3), list(2, 4, 5), list(1, 1, 1))), list(list(1, 1, 1), list(1, 2, 3), list(2, 4, 5)))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3), list(-2, 4, -5), list(1, -1, 1))), list(list(-2, 4, -5), list(1, -1, 1), list(1, 2, 3)))){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 8, 9), list(6, 4, 3), list(2, 1, 4))), list(list(2, 1, 4), list(6, 4, 3), list(5, 8, 9)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_584_find_adverbs",
    "language": "r",
    "prompt": "# Write a function to find the first adverb ending with ly and its positions in a given string.\nfind_adverbs <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_adverbs\n    if(!identical(candidate('Clearly, he has no excuse for such behavior.'), '0-7: Clearly')){quit('no', 1)}\n    if(!identical(candidate('Please handle the situation carefuly'), '28-36: carefuly')){quit('no', 1)}\n    if(!identical(candidate('Complete the task quickly'), '18-25: quickly')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_86_centered_hexagonal_number",
    "language": "r",
    "prompt": "# Write a function to find nth centered hexagonal number.\ncentered_hexagonal_number <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_86_centered_hexagonal_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- centered_hexagonal_number\n    if(!identical(candidate(10), 271)){quit('no', 1)}\n    if(!identical(candidate(2), 7)){quit('no', 1)}\n    if(!identical(candidate(9), 217)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_130_max_occurrences",
    "language": "r",
    "prompt": "# Write a function to find the item with maximum frequency in a given list.\nmax_occurrences <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_occurrences\n    if(!identical(candidate(c(2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18)), 8)){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10)), 20)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_580_extract_even",
    "language": "r",
    "prompt": "# Write a function to remove uneven elements in the nested mixed tuple.\nextract_even <- function(test_tuple) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_580_extract_even.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_even\n    if(!identical(candidate(list(4, 5, list(7, 6, list(2, 4)), 6, 8)), list(4, list(6, list(2, 4)), 6, 8))){quit('no', 1)}\n    if(!identical(candidate(list(5, 6, list(8, 7, list(4, 8)), 7, 9)), list(6, list(8, list(4, 8))))){quit('no', 1)}\n    if(!identical(candidate(list(5, 6, list(9, 8, list(4, 6)), 8, 10)), list(6, list(8, list(4, 6)), 8, 10))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_742_area_tetrahedron",
    "language": "r",
    "prompt": "# Write a function to caluclate the area of a tetrahedron.\narea_tetrahedron <- function(side) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- area_tetrahedron\n    if(!identical(candidate(3), 15.588457268119894)){quit('no', 1)}\n    if(!identical(candidate(20), 692.8203230275509)){quit('no', 1)}\n    if(!identical(candidate(10), 173.20508075688772)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_610_remove_kth_element",
    "language": "r",
    "prompt": "# Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.\nremove_kth_element <- function(list1, L) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_610_remove_kth_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_kth_element\n    if(!identical(candidate(c(1, 1, 2, 3, 4, 4, 5, 1), 3), list(1, 1, 3, 4, 4, 5, 1))){quit('no', 1)}\n    if(!identical(candidate(c(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4), 4), list(0, 0, 1, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10), 5), list(10, 10, 15, 19, 18, 17, 26, 26, 17, 18, 10))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_394_check_distinct",
    "language": "r",
    "prompt": "# Write a function to check if given list contains no duplicates.\ncheck_distinct <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_394_check_distinct.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_distinct\n    if(!identical(candidate(c(1, 4, 5, 6, 1, 4)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 4, 5, 6)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 4, 5, 6)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_793_last",
    "language": "r",
    "prompt": "# Write a python function to find the last position of an element in a sorted array.\nlast <- function(arr, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- last\n    if(!identical(candidate(c(1, 2, 3), 1), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1, 2, 3, 4), 1), 2)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 2, 3, 6, 8, 9), 3), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_728_sum_list",
    "language": "r",
    "prompt": "# Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nsum_list <- function(lst1, lst2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_list\n    if(!identical(candidate(c(10, 20, 30), c(15, 25, 35)), list(25, 45, 65))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), c(5, 6, 7)), list(6, 8, 10))){quit('no', 1)}\n    if(!identical(candidate(c(15, 20, 30), c(15, 45, 75)), list(30, 65, 105))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_566_sum_digits",
    "language": "r",
    "prompt": "# Write a function to get the sum of the digits of a non-negative integer.\nsum_digits <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_digits\n    if(!identical(candidate(345), 12)){quit('no', 1)}\n    if(!identical(candidate(12), 3)){quit('no', 1)}\n    if(!identical(candidate(97), 16)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_290_max_length",
    "language": "r",
    "prompt": "# Write a function to find the list of maximum length in a list of lists.\nmax_length <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_length\n    if(!identical(candidate(list(list(0), list(1, 3), list(5, 7), list(9, 11), list(13, 15, 17))), list(3, list(13, 15, 17)))){quit('no', 1)}\n    if(!identical(candidate(list(list(1), list(5, 7), list(10, 12, 14, 15))), list(4, list(10, 12, 14, 15)))){quit('no', 1)}\n    if(!identical(candidate(list(list(5), list(15, 20, 25))), list(3, list(15, 20, 25)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_413_extract_nth_element",
    "language": "r",
    "prompt": "# Write a function to extract the nth element from a given list of tuples.\nextract_nth_element <- function(list1, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_413_extract_nth_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_nth_element\n    if(!identical(candidate(list(list('Greyson Fulton', 98, 99), list('Brady Kent', 97, 96), list('Wyatt Knott', 91, 94), list('Beau Turnbull', 94, 98)), 0), list('Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull'))){quit('no', 1)}\n    if(!identical(candidate(list(list('Greyson Fulton', 98, 99), list('Brady Kent', 97, 96), list('Wyatt Knott', 91, 94), list('Beau Turnbull', 94, 98)), 2), list(99, 96, 94, 98))){quit('no', 1)}\n    if(!identical(candidate(list(list('Greyson Fulton', 98, 99), list('Brady Kent', 97, 96), list('Wyatt Knott', 91, 94), list('Beau Turnbull', 94, 98)), 1), list(98, 97, 91, 94))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_628_replace_spaces",
    "language": "r",
    "prompt": "# Write a function to replace all spaces in the given string with '%20'.\nreplace_spaces <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_spaces\n    if(!identical(candidate('My Name is Dawood'), 'My%20Name%20is%20Dawood')){quit('no', 1)}\n    if(!identical(candidate('I am a Programmer'), 'I%20am%20a%20Programmer')){quit('no', 1)}\n    if(!identical(candidate('I love Coding'), 'I%20love%20Coding')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_417_group_tuples",
    "language": "r",
    "prompt": "# Write a function to find common first element in given list of lists.\ngroup_tuples <- function(Input) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- group_tuples\n    if(!identical(candidate(list(list('x', 'y'), list('x', 'z'), list('w', 't'))), list(list('x', 'y', 'z'), list('w', 't')))){quit('no', 1)}\n    if(!identical(candidate(list(list('a', 'b'), list('a', 'c'), list('d', 'e'))), list(list('a', 'b', 'c'), list('d', 'e')))){quit('no', 1)}\n    if(!identical(candidate(list(list('f', 'g'), list('f', 'g'), list('h', 'i'))), list(list('f', 'g', 'g'), list('h', 'i')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_286_max_sub_array_sum_repeated",
    "language": "r",
    "prompt": "# Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\nmax_sub_array_sum_repeated <- function(a, n, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_sub_array_sum_repeated\n    if(!identical(candidate(c(10, 20, -30, -1), 4, 3), 30)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 10, 20), 3, 2), 59)){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, -3), 3, 3), -1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_66_pos_count",
    "language": "r",
    "prompt": "# Write a python function to count the number of positive numbers in a list.\npos_count <- function(list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- pos_count\n    if(!identical(candidate(c(1, -2, 3, -4)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(3, 4, 5, -1)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4)), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_450_extract_string",
    "language": "r",
    "prompt": "# Write a function to extract specified size of strings from a given list of string values.\nextract_string <- function(str, l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_string\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 8), list('practice', 'solution'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 6), list('Python'))){quit('no', 1)}\n    if(!identical(candidate(c('Python', 'list', 'exercises', 'practice', 'solution'), 9), list('exercises'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_444_trim_tuple",
    "language": "r",
    "prompt": "# Write a function to trim each list by k in the given lists.\ntrim_tuple <- function(test_list, K) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- trim_tuple\n    if(!identical(candidate(list(list(5, 3, 2, 1, 4), list(3, 4, 9, 2, 1), list(9, 1, 2, 3, 5), list(4, 8, 2, 1, 7)), 2), list(list(2), list(9), list(2), list(2)))){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 3, 2, 1, 4), list(3, 4, 9, 2, 1), list(9, 1, 2, 3, 5), list(4, 8, 2, 1, 7)), 1), list(list(3, 2, 1), list(4, 9, 2), list(1, 2, 3), list(8, 2, 1)))){quit('no', 1)}\n    if(!identical(candidate(list(list(7, 8, 4, 9), list(11, 8, 12, 4), list(4, 1, 7, 8), list(3, 6, 9, 7)), 1), list(list(8, 4), list(8, 12), list(1, 7), list(6, 9)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_439_multiple_to_single",
    "language": "r",
    "prompt": "# Write a function to join a list of multiple integers into a single integer.\nmultiple_to_single <- function(L) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_439_multiple_to_single.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- multiple_to_single\n    if(!identical(candidate(c(11, 33, 50)), 113350)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 2, 3, 4, 5, 6)), -123456)){quit('no', 1)}\n    if(!identical(candidate(c(10, 15, 20, 25)), 10152025)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_162_sum_series",
    "language": "r",
    "prompt": "# Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\nsum_series <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_series\n    if(!identical(candidate(6), 12)){quit('no', 1)}\n    if(!identical(candidate(10), 30)){quit('no', 1)}\n    if(!identical(candidate(9), 25)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_224_count_Set_Bits",
    "language": "r",
    "prompt": "# Write a python function to count the number of set bits (binary digits with value 1) in a given number.\ncount_Set_Bits <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_224_count_Set_Bits.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_Set_Bits\n    if(!identical(candidate(2), 1)){quit('no', 1)}\n    if(!identical(candidate(4), 1)){quit('no', 1)}\n    if(!identical(candidate(6), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_309_maximum",
    "language": "r",
    "prompt": "# Write a python function to find the maximum of two numbers.\nmaximum <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- maximum\n    if(!identical(candidate(5, 10), 10)){quit('no', 1)}\n    if(!identical(candidate(-1, -2), -1)){quit('no', 1)}\n    if(!identical(candidate(9, 7), 9)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_632_move_zero",
    "language": "r",
    "prompt": "# Write a python function to move all zeroes to the end of the given list.\nmove_zero <- function(num_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- move_zero\n    if(!identical(candidate(c(1, 0, 2, 0, 3, 4)), list(1, 2, 3, 4, 0, 0))){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 2, 0, 0, 4, 0, 5, 0)), list(2, 3, 2, 4, 5, 0, 0, 0, 0))){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 0, 1, 1)), list(1, 1, 1, 0, 0))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_168_frequency",
    "language": "r",
    "prompt": "# Write a function to count the number of occurrences of a number in a given list.\nfrequency <- function(a, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_168_frequency.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- frequency\n    if(!identical(candidate(c(1, 2, 3), 4), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 2, 3, 3, 3, 4), 3), 3)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 2, 3, 1, 2), 1), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_749_sort_numeric_strings",
    "language": "r",
    "prompt": "# Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nsort_numeric_strings <- function(nums_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sort_numeric_strings\n    if(!identical(candidate(c('4', '12', '45', '7', '0', '100', '200', '-12', '-500')), list(-500, -12, 0, 4, 7, 12, 45, 100, 200))){quit('no', 1)}\n    if(!identical(candidate(c('2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2')), list(1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9))){quit('no', 1)}\n    if(!identical(candidate(c('1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11')), list(1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_97_frequency_lists",
    "language": "r",
    "prompt": "# Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\nfrequency_lists <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- frequency_lists\n    if(!identical(candidate(list(list(1, 2, 3, 2), list(4, 5, 6, 2), list(7, 8, 9, 5))), list(1 = 1, 2 = 3, 3 = 1, 4 = 1, 5 = 2, 6 = 1, 7 = 1, 8 = 1, 9 = 1))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3, 4), list(5, 6, 7, 8), list(9, 10, 11, 12))), list(1 = 1, 2 = 1, 3 = 1, 4 = 1, 5 = 1, 6 = 1, 7 = 1, 8 = 1, 9 = 1, 10 = 1, 11 = 1, 12 = 1))){quit('no', 1)}\n    if(!identical(candidate(list(list(20, 30, 40, 17), list(18, 16, 14, 13), list(10, 20, 30, 40))), list(20 = 2, 30 = 2, 40 = 2, 17 = 1, 18 = 1, 16 = 1, 14 = 1, 13 = 1, 10 = 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_429_and_tuples",
    "language": "r",
    "prompt": "# Write a function to extract the elementwise and tuples from the given two tuples.\nand_tuples <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_429_and_tuples.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- and_tuples\n    if(!identical(candidate(list(10, 4, 6, 9), list(5, 2, 3, 3)), list(0, 0, 2, 1))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4), list(5, 6, 7, 8)), list(1, 2, 3, 0))){quit('no', 1)}\n    if(!identical(candidate(list(8, 9, 11, 12), list(7, 13, 14, 17)), list(0, 9, 10, 0))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_759_is_decimal",
    "language": "r",
    "prompt": "# Write a function to check whether a given string is a decimal number with a precision of 2.\nis_decimal <- function(num) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_decimal\n    if(!identical(candidate('123.11'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('e666.86'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('3.124587'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('1.11'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('1.1.11'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_599_sum_average",
    "language": "r",
    "prompt": "# Write a function to find sum and average of first n natural numbers.\nsum_average <- function(number) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_599_sum_average.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_average\n    if(!identical(candidate(10), list(55, 5.5))){quit('no', 1)}\n    if(!identical(candidate(15), list(120, 8.0))){quit('no', 1)}\n    if(!identical(candidate(20), list(210, 10.5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_804_is_product_even",
    "language": "r",
    "prompt": "# Write a function to check whether the product of numbers in a list is even or not.\nis_product_even <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_804_is_product_even.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_product_even\n    if(!identical(candidate(c(1, 2, 3)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1, 4)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_103_eulerian_num",
    "language": "r",
    "prompt": "# Write a function to find the Eulerian number a(n, m).\neulerian_num <- function(n, m) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- eulerian_num\n    if(!identical(candidate(3, 1), 4)){quit('no', 1)}\n    if(!identical(candidate(4, 1), 11)){quit('no', 1)}\n    if(!identical(candidate(5, 3), 26)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_391_convert_list_dictionary",
    "language": "r",
    "prompt": "# Write a function to convert more than one list to nested dictionary.\nconvert_list_dictionary <- function(l1, l2, l3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- convert_list_dictionary\n    if(!identical(candidate(c('S001', 'S002', 'S003', 'S004'), c('Adina Park', 'Leyton Marsh', 'Duncan Boyle', 'Saim Richards'), c(85, 98, 89, 92)), list(list('S001' = list('Adina Park' = 85)), list('S002' = list('Leyton Marsh' = 98)), list('S003' = list('Duncan Boyle' = 89)), list('S004' = list('Saim Richards' = 92))))){quit('no', 1)}\n    if(!identical(candidate(c('abc', 'def', 'ghi', 'jkl'), c('python', 'program', 'language', 'programs'), c(100, 200, 300, 400)), list(list('abc' = list('python' = 100)), list('def' = list('program' = 200)), list('ghi' = list('language' = 300)), list('jkl' = list('programs' = 400))))){quit('no', 1)}\n    if(!identical(candidate(c('A1', 'A2', 'A3', 'A4'), c('java', 'C', 'C++', 'DBMS'), c(10, 20, 30, 40)), list(list('A1' = list('java' = 10)), list('A2' = list('C' = 20)), list('A3' = list('C++' = 30)), list('A4' = list('DBMS' = 40))))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_635_heap_sort",
    "language": "r",
    "prompt": "# Write a function to sort the given list.\nheap_sort <- function(iterable) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- heap_sort\n    if(!identical(candidate(c(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)), list(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))){quit('no', 1)}\n    if(!identical(candidate(c(25, 35, 22, 85, 14, 65, 75, 25, 58)), list(14, 22, 25, 25, 35, 58, 65, 75, 85))){quit('no', 1)}\n    if(!identical(candidate(c(7, 1, 9, 5)), list(1, 5, 7, 9))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_270_sum_even_and_even_index",
    "language": "r",
    "prompt": "# Write a python function to find the sum of even numbers at even positions of a list.\nsum_even_and_even_index <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_270_sum_even_and_even_index.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_even_and_even_index\n    if(!identical(candidate(c(5, 6, 12, 1, 18, 8)), 30)){quit('no', 1)}\n    if(!identical(candidate(c(3, 20, 17, 9, 2, 10, 18, 13, 6, 18)), 26)){quit('no', 1)}\n    if(!identical(candidate(c(5, 6, 12, 1)), 12)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_787_text_match_three",
    "language": "r",
    "prompt": "# Write a function that matches a string that has an a followed by three 'b'.\ntext_match_three <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_three\n    if(!identical(candidate('ac'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('dc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abbbba'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('caacabbbba'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_765_is_polite",
    "language": "r",
    "prompt": "# Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nis_polite <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_polite\n    if(!identical(candidate(7), 11)){quit('no', 1)}\n    if(!identical(candidate(4), 7)){quit('no', 1)}\n    if(!identical(candidate(9), 13)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_459_remove_uppercase",
    "language": "r",
    "prompt": "# Write a function to remove uppercase substrings from a given string.\nremove_uppercase <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_459_remove_uppercase.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_uppercase\n    if(!identical(candidate('cAstyoUrFavoRitETVshoWs'), 'cstyoravoitshos')){quit('no', 1)}\n    if(!identical(candidate('wAtchTheinTernEtrAdIo'), 'wtchheinerntrdo')){quit('no', 1)}\n    if(!identical(candidate('VoicESeaRchAndreComMendaTionS'), 'oiceachndreomendaion')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_16_text_lowercase_underscore",
    "language": "r",
    "prompt": "# Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\ntext_lowercase_underscore <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_lowercase_underscore\n    if(!identical(candidate('aab_cbbbc'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aab_Abbbc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('Aaab_abbbc'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_731_lateralsurface_cone",
    "language": "r",
    "prompt": "# Write a function to find the lateral surface area of a cone given radius r and the height h.\nlateralsurface_cone <- function(r, h) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- lateralsurface_cone\n    if(!identical(candidate(5, 12), 204.20352248333654)){quit('no', 1)}\n    if(!identical(candidate(10, 15), 566.3586699569488)){quit('no', 1)}\n    if(!identical(candidate(19, 17), 1521.8090132193388)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_802_count_rotation",
    "language": "r",
    "prompt": "# Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\ncount_rotation <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_rotation\n    if(!identical(candidate(c(3, 2, 1)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 1, 2, 3)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9, 1, 2, 3)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 3, 2)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_782_odd_length_sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nodd_length_sum <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- odd_length_sum\n    if(!identical(candidate(c(1, 2, 4)), 14)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1, 2)), 15)){quit('no', 1)}\n    if(!identical(candidate(c(1, 7)), 8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_470_add_pairwise",
    "language": "r",
    "prompt": "# Write a function to find the pairwise addition of the neighboring elements of the given tuple.\nadd_pairwise <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_470_add_pairwise.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_pairwise\n    if(!identical(candidate(list(1, 5, 7, 8, 10)), list(6, 12, 15, 18))){quit('no', 1)}\n    if(!identical(candidate(list(2, 6, 8, 9, 11)), list(8, 14, 17, 20))){quit('no', 1)}\n    if(!identical(candidate(list(3, 7, 9, 10, 12)), list(10, 16, 19, 22))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_17_square_perimeter",
    "language": "r",
    "prompt": "# Write a function that returns the perimeter of a square given its side length as input.\nsquare_perimeter <- function(a) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- square_perimeter\n    if(!identical(candidate(10), 40)){quit('no', 1)}\n    if(!identical(candidate(5), 20)){quit('no', 1)}\n    if(!identical(candidate(4), 16)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
    "language": "r",
    "prompt": "# Write a python function to check whether all the bits are unset in the given range or not.\nall_Bits_Set_In_The_Given_Range <- function(n, l, r) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- all_Bits_Set_In_The_Given_Range\n    if(!identical(candidate(4, 1, 2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(17, 2, 4), TRUE)){quit('no', 1)}\n    if(!identical(candidate(39, 4, 6), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_240_replace_list",
    "language": "r",
    "prompt": "# Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.\nreplace_list <- function(list1, list2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_240_replace_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_list\n    if(!identical(candidate(list(1, 3, 5, 7, 9, 10), list(2, 4, 6, 8)), list(1, 3, 5, 7, 9, 2, 4, 6, 8))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5), list(5, 6, 7, 8)), list(1, 2, 3, 4, 5, 6, 7, 8))){quit('no', 1)}\n    if(!identical(candidate(list('red', 'blue', 'green'), list('yellow')), list('red', 'blue', 'yellow'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_447_cube_nums",
    "language": "r",
    "prompt": "# Write a function to find cubes of individual elements in a list.\ncube_nums <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_447_cube_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- cube_nums\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), list(1, 8, 27, 64, 125, 216, 343, 512, 729, 1000))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 30)), list(1000, 8000, 27000))){quit('no', 1)}\n    if(!identical(candidate(c(12, 15)), list(1728, 3375))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_261_division_elements",
    "language": "r",
    "prompt": "# Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\ndivision_elements <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_261_division_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- division_elements\n    if(!identical(candidate(list(10, 4, 6, 9), list(5, 2, 3, 3)), list(2, 2, 2, 3))){quit('no', 1)}\n    if(!identical(candidate(list(12, 6, 8, 16), list(6, 3, 4, 4)), list(2, 2, 2, 4))){quit('no', 1)}\n    if(!identical(candidate(list(20, 14, 36, 18), list(5, 7, 6, 9)), list(4, 2, 6, 2))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_581_surface_Area",
    "language": "r",
    "prompt": "# Write a python function to find the surface area of a square pyramid with a given base edge and height.\nsurface_Area <- function(b, s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- surface_Area\n    if(!identical(candidate(3, 4), 33)){quit('no', 1)}\n    if(!identical(candidate(4, 5), 56)){quit('no', 1)}\n    if(!identical(candidate(1, 2), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_283_validate",
    "language": "r",
    "prompt": "# Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nvalidate <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- validate\n    if(!identical(candidate(1234), TRUE)){quit('no', 1)}\n    if(!identical(candidate(51241), FALSE)){quit('no', 1)}\n    if(!identical(candidate(321), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_284_check_element",
    "language": "r",
    "prompt": "# Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.\ncheck_element <- function(list, element) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_284_check_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_element\n    if(!identical(candidate(list('green', 'orange', 'black', 'white'), 'blue'), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4), 7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list('green', 'green', 'green', 'green'), 'green'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_101_kth_element",
    "language": "r",
    "prompt": "# Write a function to find the kth element in the given array using 1-based indexing.\nkth_element <- function(arr, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_101_kth_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- kth_element\n    if(!identical(candidate(c(12, 3, 5, 7, 19), 2), 3)){quit('no', 1)}\n    if(!identical(candidate(c(17, 24, 8, 23), 3), 8)){quit('no', 1)}\n    if(!identical(candidate(c(16, 21, 25, 36, 4), 4), 36)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_461_upper_ctr",
    "language": "r",
    "prompt": "# Write a python function to count the upper case characters in a given string.\nupper_ctr <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_461_upper_ctr.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- upper_ctr\n    if(!identical(candidate('PYthon'), 1)){quit('no', 1)}\n    if(!identical(candidate('BigData'), 1)){quit('no', 1)}\n    if(!identical(candidate('program'), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_593_removezero_ip",
    "language": "r",
    "prompt": "# Write a function to remove leading zeroes from an ip address.\nremovezero_ip <- function(ip) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- removezero_ip\n    if(!identical(candidate('216.08.094.196'), '216.8.94.196')){quit('no', 1)}\n    if(!identical(candidate('12.01.024'), '12.1.24')){quit('no', 1)}\n    if(!identical(candidate('216.08.094.0196'), '216.8.94.196')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_788_new_tuple",
    "language": "r",
    "prompt": "# Write a function to create a new tuple from the given string and list.\nnew_tuple <- function(test_list, test_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_788_new_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- new_tuple\n    if(!identical(candidate(c('WEB', 'is'), 'best'), list('WEB', 'is', 'best'))){quit('no', 1)}\n    if(!identical(candidate(c('We', 'are'), 'Developers'), list('We', 'are', 'Developers'))){quit('no', 1)}\n    if(!identical(candidate(c('Part', 'is'), 'Wrong'), list('Part', 'is', 'Wrong'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_777_find_sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of non-repeated elements in a given list.\nfind_sum <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_sum\n    if(!identical(candidate(c(1, 2, 3, 1, 1, 4, 5, 6)), 21)){quit('no', 1)}\n    if(!identical(candidate(c(1, 10, 9, 4, 2, 10, 10, 45, 4)), 71)){quit('no', 1)}\n    if(!identical(candidate(c(12, 10, 9, 45, 2, 10, 10, 45, 10)), 78)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_586_split_Arr",
    "language": "r",
    "prompt": "# Write a python function to split a list at the nth eelment and add the first part to the end.\nsplit_Arr <- function(l, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_586_split_Arr.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- split_Arr\n    if(!identical(candidate(c(12, 10, 5, 6, 52, 36), 2), list(5, 6, 52, 36, 12, 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4), 1), list(2, 3, 4, 1))){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 2, 3, 4, 5, 6, 7), 3), list(3, 4, 5, 6, 7, 0, 1, 2))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_104_sort_sublists",
    "language": "r",
    "prompt": "# Write a function to sort each sublist of strings in a given list of lists.\nsort_sublists <- function(input_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_104_sort_sublists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sort_sublists\n    if(!identical(candidate(list(list('green', 'orange'), list('black', 'white'), list('white', 'black', 'orange'))), list(list('green', 'orange'), list('black', 'white'), list('black', 'orange', 'white')))){quit('no', 1)}\n    if(!identical(candidate(list(list(' red ', 'green'), list('blue ', ' black'), list(' orange', 'brown'))), list(list(' red ', 'green'), list(' black', 'blue '), list(' orange', 'brown')))){quit('no', 1)}\n    if(!identical(candidate(list(list('zilver', 'gold'), list('magnesium', 'aluminium'), list('steel', 'bronze'))), list(list('gold', 'zilver'), list('aluminium', 'magnesium'), list('bronze', 'steel')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_472_check_Consecutive",
    "language": "r",
    "prompt": "# Write a python function to check whether the given list contains consecutive numbers or not.\ncheck_Consecutive <- function(l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_Consecutive\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 5, 6)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_310_string_to_tuple",
    "language": "r",
    "prompt": "# Write a function to convert a given string to a list of characters.\nstring_to_tuple <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_310_string_to_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- string_to_tuple\n    if(!identical(candidate('python 3.0'), list('p', 'y', 't', 'h', 'o', 'n', '3', '.', '0'))){quit('no', 1)}\n    if(!identical(candidate('item1'), list('i', 't', 'e', 'm', '1'))){quit('no', 1)}\n    if(!identical(candidate('15.10'), list('1', '5', '.', '1', '0'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_266_lateralsurface_cube",
    "language": "r",
    "prompt": "# Write a function to find the lateral surface area of a cube given its side length.\nlateralsurface_cube <- function(l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_266_lateralsurface_cube.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- lateralsurface_cube\n    if(!identical(candidate(5), 100)){quit('no', 1)}\n    if(!identical(candidate(9), 324)){quit('no', 1)}\n    if(!identical(candidate(10), 400)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_271_even_Power_Sum",
    "language": "r",
    "prompt": "# Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\neven_Power_Sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_271_even_Power_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- even_Power_Sum\n    if(!identical(candidate(2), 1056)){quit('no', 1)}\n    if(!identical(candidate(3), 8832)){quit('no', 1)}\n    if(!identical(candidate(1), 32)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_238_number_of_substrings",
    "language": "r",
    "prompt": "# Write a python function to count the number of non-empty substrings of a given string.\nnumber_of_substrings <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- number_of_substrings\n    if(!identical(candidate('abc'), 6)){quit('no', 1)}\n    if(!identical(candidate('abcd'), 10)){quit('no', 1)}\n    if(!identical(candidate('abcde'), 15)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_592_sum_Of_product",
    "language": "r",
    "prompt": "# Write a python function to find the sum of the product of consecutive binomial co-efficients.\nsum_Of_product <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_Of_product\n    if(!identical(candidate(3), 15)){quit('no', 1)}\n    if(!identical(candidate(4), 56)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_74_is_samepatterns",
    "language": "r",
    "prompt": "# Write a function to check whether it follows the sequence given in the patterns array.\nis_samepatterns <- function(colors, patterns) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_samepatterns\n    if(!identical(candidate(c('red', 'green', 'green'), c('a', 'b', 'b')), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c('red', 'green', 'greenn'), c('a', 'b', 'b')), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c('red', 'green', 'greenn'), c('a', 'b')), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_415_max_Product",
    "language": "r",
    "prompt": "# Write a python function to find a pair with highest product from a given array of integers.\nmax_Product <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_Product\n    if(!identical(candidate(c(1, 2, 3, 4, 7, 0, 8, 4)), list(7, 8))){quit('no', 1)}\n    if(!identical(candidate(c(0, -1, -2, -4, 5, 0, -6)), list(-4, -6))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), list(2, 3))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_781_count_divisors",
    "language": "r",
    "prompt": "# Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php\ncount_divisors <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_781_count_divisors.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_divisors\n    if(!identical(candidate(10), TRUE)){quit('no', 1)}\n    if(!identical(candidate(100), FALSE)){quit('no', 1)}\n    if(!identical(candidate(125), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_441_surfacearea_cube",
    "language": "r",
    "prompt": "# Write a function to find the surface area of a cube of a given size.\nsurfacearea_cube <- function(l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_441_surfacearea_cube.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- surfacearea_cube\n    if(!identical(candidate(5), 150)){quit('no', 1)}\n    if(!identical(candidate(3), 54)){quit('no', 1)}\n    if(!identical(candidate(10), 600)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_396_check_char",
    "language": "r",
    "prompt": "# Write a function to check whether the given string starts and ends with the same character or not.\ncheck_char <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_396_check_char.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_char\n    if(!identical(candidate('abba'), 'Valid')){quit('no', 1)}\n    if(!identical(candidate('a'), 'Valid')){quit('no', 1)}\n    if(!identical(candidate('abcd'), 'Invalid')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_757_count_reverse_pairs",
    "language": "r",
    "prompt": "# Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\ncount_reverse_pairs <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_757_count_reverse_pairs.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_reverse_pairs\n    if(!identical(candidate(c('julia', 'best', 'tseb', 'for', 'ailuj')), 2)){quit('no', 1)}\n    if(!identical(candidate(c('geeks', 'best', 'for', 'skeeg')), 1)){quit('no', 1)}\n    if(!identical(candidate(c('makes', 'best', 'sekam', 'for', 'rof')), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_75_find_tuples",
    "language": "r",
    "prompt": "# Write a function to find tuples which have all elements divisible by k from the given list of tuples.\nfind_tuples <- function(test_list, K) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_tuples\n    if(!identical(candidate(list(list(6, 24, 12), list(7, 9, 6), list(12, 18, 21)), 6), list(list(6, 24, 12)))){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 25, 30), list(4, 2, 3), list(7, 8, 9)), 5), list(list(5, 25, 30)))){quit('no', 1)}\n    if(!identical(candidate(list(list(7, 9, 16), list(8, 16, 4), list(19, 17, 18)), 4), list(list(8, 16, 4)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_785_tuple_str_int",
    "language": "r",
    "prompt": "# Write a function to convert tuple string to integer tuple.\ntuple_str_int <- function(test_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tuple_str_int\n    if(!identical(candidate('(7, 8, 9)'), list(7, 8, 9))){quit('no', 1)}\n    if(!identical(candidate('(1, 2, 3)'), list(1, 2, 3))){quit('no', 1)}\n    if(!identical(candidate('(4, 5, 6)'), list(4, 5, 6))){quit('no', 1)}\n    if(!identical(candidate('(7, 81, 19)'), list(7, 81, 19))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_776_count_vowels",
    "language": "r",
    "prompt": "# Write a function to count those characters which have vowels as their neighbors in the given string.\ncount_vowels <- function(test_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_vowels\n    if(!identical(candidate('bestinstareels'), 7)){quit('no', 1)}\n    if(!identical(candidate('partofthejourneyistheend'), 12)){quit('no', 1)}\n    if(!identical(candidate('amazonprime'), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_277_dict_filter",
    "language": "r",
    "prompt": "# Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\ndict_filter <- function(dict, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_277_dict_filter.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- dict_filter\n    if(!identical(candidate(list('Cierra Vega' = 175, 'Alden Cantrell' = 180, 'Kierra Gentry' = 165, 'Pierre Cox' = 190), 170), list('Cierra Vega' = 175, 'Alden Cantrell' = 180, 'Pierre Cox' = 190))){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = 175, 'Alden Cantrell' = 180, 'Kierra Gentry' = 165, 'Pierre Cox' = 190), 180), list('Alden Cantrell' = 180, 'Pierre Cox' = 190))){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = 175, 'Alden Cantrell' = 180, 'Kierra Gentry' = 165, 'Pierre Cox' = 190), 190), list('Pierre Cox' = 190))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_468_max_product",
    "language": "r",
    "prompt": "# Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nmax_product <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_product\n    if(!identical(candidate(c(3, 100, 4, 5, 150, 6)), 3000)){quit('no', 1)}\n    if(!identical(candidate(c(4, 42, 55, 68, 80)), 50265600)){quit('no', 1)}\n    if(!identical(candidate(c(10, 22, 9, 33, 21, 50, 41, 60)), 2460)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_279_is_num_decagonal",
    "language": "r",
    "prompt": "# Write a function to find the nth decagonal number.\nis_num_decagonal <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_num_decagonal\n    if(!identical(candidate(3), 27)){quit('no', 1)}\n    if(!identical(candidate(7), 175)){quit('no', 1)}\n    if(!identical(candidate(10), 370)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_3_is_not_prime",
    "language": "r",
    "prompt": "# Write a python function to identify non-prime numbers.\nis_not_prime <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_not_prime\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(10), TRUE)){quit('no', 1)}\n    if(!identical(candidate(35), TRUE)){quit('no', 1)}\n    if(!identical(candidate(37), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_88_freq_count",
    "language": "r",
    "prompt": "# Write a function to get the frequency of all the elements in a list, returned as a dictionary.\nfreq_count <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_88_freq_count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- freq_count\n    if(!identical(candidate(c(10, 10, 10, 10, 20, 20, 20, 20, 40, 40, 50, 50, 30)), list(10 = 4, 20 = 4, 40 = 2, 50 = 2, 30 = 1))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 3, 2, 4, 1, 3, 1, 4)), list(1 = 3, 2 = 2, 3 = 3, 4 = 3))){quit('no', 1)}\n    if(!identical(candidate(c(5, 6, 7, 4, 9, 10, 4, 5, 6, 7, 9, 5)), list(10 = 1, 5 = 3, 6 = 2, 7 = 2, 4 = 2, 9 = 2))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_259_maximize_elements",
    "language": "r",
    "prompt": "# Write a function to maximize the given two lists.\nmaximize_elements <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_259_maximize_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- maximize_elements\n    if(!identical(candidate(list(list(1, 3), list(4, 5), list(2, 9), list(1, 10)), list(list(6, 7), list(3, 9), list(1, 1), list(7, 3))), list(list(6, 7), list(4, 9), list(2, 9), list(7, 10)))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(5, 6), list(3, 10), list(2, 11)), list(list(7, 8), list(4, 10), list(2, 2), list(8, 4))), list(list(7, 8), list(5, 10), list(3, 10), list(8, 11)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(6, 7), list(4, 11), list(3, 12)), list(list(8, 9), list(5, 11), list(3, 3), list(9, 5))), list(list(8, 9), list(6, 11), list(4, 11), list(9, 12)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_568_empty_list",
    "language": "r",
    "prompt": "# Write a function to create a list of N empty dictionaries.\nempty_list <- function(length) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_568_empty_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- empty_list\n    if(!identical(candidate(5), list(list(), list(), list(), list(), list()))){quit('no', 1)}\n    if(!identical(candidate(6), list(list(), list(), list(), list(), list(), list()))){quit('no', 1)}\n    if(!identical(candidate(7), list(list(), list(), list(), list(), list(), list(), list()))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_285_text_match_two_three",
    "language": "r",
    "prompt": "# Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\ntext_match_two_three <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_285_text_match_two_three.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_two_three\n    if(!identical(candidate('ac'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('dc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abbbba'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_721_maxAverageOfPath",
    "language": "r",
    "prompt": "# Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.\nmaxAverageOfPath <- function(cost) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_721_maxAverageOfPath.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- maxAverageOfPath\n    if(!identical(candidate(list(list(1, 2, 3), list(6, 5, 4), list(7, 3, 9))), 5.2)){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 3, 4), list(7, 6, 5), list(8, 4, 10))), 6.2)){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 4, 5), list(8, 7, 6), list(9, 5, 11))), 7.2)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3), list(4, 5, 6), list(7, 8, 9))), 5.8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_797_sum_in_range",
    "language": "r",
    "prompt": "# Write a python function to find the sum of all odd natural numbers within the range l and r.\nsum_in_range <- function(l, r) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_797_sum_in_range.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_in_range\n    if(!identical(candidate(2, 5), 8)){quit('no', 1)}\n    if(!identical(candidate(5, 7), 12)){quit('no', 1)}\n    if(!identical(candidate(7, 13), 40)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_4_heap_queue_largest",
    "language": "r",
    "prompt": "# Write a function to find the n largest integers from a given list of numbers, returned in descending order.\nheap_queue_largest <- function(nums, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_4_heap_queue_largest.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- heap_queue_largest\n    if(!identical(candidate(c(25, 35, 22, 85, 14, 65, 75, 22, 58), 3), list(85, 75, 65))){quit('no', 1)}\n    if(!identical(candidate(c(25, 35, 22, 85, 14, 65, 75, 22, 58), 2), list(85, 75))){quit('no', 1)}\n    if(!identical(candidate(c(25, 35, 22, 85, 14, 65, 75, 22, 58), 5), list(85, 75, 65, 58, 35))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_120_max_product_tuple",
    "language": "r",
    "prompt": "# Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\nmax_product_tuple <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_product_tuple\n    if(!identical(candidate(list(list(2, 7), list(2, 6), list(1, 8), list(4, 9))), 36)){quit('no', 1)}\n    if(!identical(candidate(list(list(10, 20), list(15, 2), list(5, 10))), 200)){quit('no', 1)}\n    if(!identical(candidate(list(list(11, 44), list(10, 15), list(20, 5), list(12, 9))), 484)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_230_replace_blank",
    "language": "r",
    "prompt": "# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\nreplace_blank <- function(str1, char) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_230_replace_blank.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_blank\n    if(!identical(candidate('hello people', '@'), 'hello@people')){quit('no', 1)}\n    if(!identical(candidate('python program language', '$'), 'python$program$language')){quit('no', 1)}\n    if(!identical(candidate('blank space', '-'), 'blank-space')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_600_is_Even",
    "language": "r",
    "prompt": "# Write a python function to check whether the given number is even or not.\nis_Even <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_600_is_Even.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_Even\n    if(!identical(candidate(1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(3), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_440_find_adverb_position",
    "language": "r",
    "prompt": "# Write a function to find the first adverb and their positions in a given sentence.\nfind_adverb_position <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_adverb_position\n    if(!identical(candidate('clearly!! we can see the sky'), list(0, 7, 'clearly'))){quit('no', 1)}\n    if(!identical(candidate('seriously!! there are many roses'), list(0, 9, 'seriously'))){quit('no', 1)}\n    if(!identical(candidate('unfortunately!! sita is going to home'), list(0, 13, 'unfortunately'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_773_occurance_substring",
    "language": "r",
    "prompt": "# Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\noccurance_substring <- function(text, pattern) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- occurance_substring\n    if(!identical(candidate('python programming, python language', 'python'), list('python', 0, 6))){quit('no', 1)}\n    if(!identical(candidate('python programming,programming language', 'programming'), list('programming', 7, 18))){quit('no', 1)}\n    if(!identical(candidate('python programming,programming language', 'language'), list('language', 31, 39))){quit('no', 1)}\n    if(!identical(candidate('c++ programming, c++ language', 'python'), NULL)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_239_get_total_number_of_sequences",
    "language": "r",
    "prompt": "# Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\nget_total_number_of_sequences <- function(m, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_239_get_total_number_of_sequences.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_total_number_of_sequences\n    if(!identical(candidate(10, 4), 4)){quit('no', 1)}\n    if(!identical(candidate(5, 2), 6)){quit('no', 1)}\n    if(!identical(candidate(16, 3), 84)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_265_list_split",
    "language": "r",
    "prompt": "# Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.\nlist_split <- function(S, step) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_265_list_split.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- list_split\n    if(!identical(candidate(list('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'), 3), list(list('a', 'd', 'g', 'j', 'm'), list('b', 'e', 'h', 'k', 'n'), list('c', 'f', 'i', 'l')))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), 3), list(list(1, 4, 7, 10, 13), list(2, 5, 8, 11, 14), list(3, 6, 9, 12)))){quit('no', 1)}\n    if(!identical(candidate(list('python', 'java', 'C', 'C++', 'DBMS', 'SQL'), 2), list(list('python', 'C', 'DBMS'), list('java', 'C++', 'SQL')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_412_remove_odd",
    "language": "r",
    "prompt": "# Write a python function to remove odd numbers from a given list.\nremove_odd <- function(l) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_odd\n    if(!identical(candidate(c(1, 2, 3)), list(2))){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 6)), list(2, 4, 6))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 3)), list(10, 20))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_414_overlapping",
    "language": "r",
    "prompt": "# Write a python function to check whether any value in a sequence exists in a sequence or not.\noverlapping <- function(list1, list2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_414_overlapping.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- overlapping\n    if(!identical(candidate(c(1, 2, 3, 4, 5), c(6, 7, 8, 9)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), c(4, 5, 6)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 4, 5), c(1, 4, 5)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_160_find_solution",
    "language": "r",
    "prompt": "# Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nfind_solution <- function(a, b, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_solution\n    if(!identical(candidate(2, 3, 7), list(2, 1))){quit('no', 1)}\n    if(!identical(candidate(4, 2, 7), NULL)){quit('no', 1)}\n    if(!identical(candidate(1, 13, 17), list(4, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_559_max_sub_array_sum",
    "language": "r",
    "prompt": "# Write a function to find the sum of the largest contiguous sublist in the given list.\nmax_sub_array_sum <- function(a, size) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_sub_array_sum\n    if(!identical(candidate(c(-2, -3, 4, -1, -2, 1, 5, -3), 8), 7)){quit('no', 1)}\n    if(!identical(candidate(c(-3, -4, 5, -2, -3, 2, 6, -4), 8), 8)){quit('no', 1)}\n    if(!identical(candidate(c(-4, -5, 6, -3, -4, 3, 7, -5), 8), 10)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_809_check_smaller",
    "language": "r",
    "prompt": "# Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.\ncheck_smaller <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_809_check_smaller.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_smaller\n    if(!identical(candidate(list(1, 2, 3), list(2, 3, 4)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(4, 5, 6), list(3, 4, 5)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(11, 12, 13), list(10, 11, 12)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_629_Split",
    "language": "r",
    "prompt": "# Write a python function to find even numbers from a list of numbers.\nSplit <- function(list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Split\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), list(2, 4))){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6, 7, 8, 0, 1)), list(4, 6, 8, 0))){quit('no', 1)}\n    if(!identical(candidate(c(8, 12, 15, 19)), list(8, 12))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_723_count_same_pair",
    "language": "r",
    "prompt": "# The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.\ncount_same_pair <- function(nums1, nums2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_723_count_same_pair.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_same_pair\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8), c(2, 2, 3, 1, 2, 6, 7, 9)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8), c(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)), 11)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, -6, -9, 11, -12, 14, -5, 17), c(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 1, 2), c(0, 1, 2, 2)), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_242_count_charac",
    "language": "r",
    "prompt": "# Write a function to count the total number of characters in a string.\ncount_charac <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_242_count_charac.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_charac\n    if(!identical(candidate('python programming'), 18)){quit('no', 1)}\n    if(!identical(candidate('language'), 8)){quit('no', 1)}\n    if(!identical(candidate('words'), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_616_tuple_modulo",
    "language": "r",
    "prompt": "# Write a function which takes two tuples of the same length and performs the element wise modulo.\ntuple_modulo <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_616_tuple_modulo.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tuple_modulo\n    if(!identical(candidate(list(10, 4, 5, 6), list(5, 6, 7, 5)), list(0, 4, 5, 1))){quit('no', 1)}\n    if(!identical(candidate(list(11, 5, 6, 7), list(6, 7, 8, 6)), list(5, 5, 6, 1))){quit('no', 1)}\n    if(!identical(candidate(list(12, 6, 7, 8), list(7, 8, 9, 7)), list(5, 6, 7, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_583_catalan_number",
    "language": "r",
    "prompt": "# Write a function which returns nth catalan number.\ncatalan_number <- function(num) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- catalan_number\n    if(!identical(candidate(10), 16796)){quit('no', 1)}\n    if(!identical(candidate(9), 4862)){quit('no', 1)}\n    if(!identical(candidate(7), 429)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_129_magic_square_test",
    "language": "r",
    "prompt": "# Write a function to calculate whether the matrix is a magic square.\nmagic_square_test <- function(my_matrix) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_129_magic_square_test.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- magic_square_test\n    if(!identical(candidate(list(list(7, 12, 1, 14), list(2, 13, 8, 11), list(16, 3, 10, 5), list(9, 6, 15, 4))), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 7, 6), list(9, 5, 1), list(4, 3, 8))), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 7, 6), list(9, 5, 1), list(4, 3, 7))), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_61_count_Substrings",
    "language": "r",
    "prompt": "# Write a python function to count the number of substrings with the sum of digits equal to their length.\ncount_Substrings <- function(s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_Substrings\n    if(!identical(candidate('112112'), 6)){quit('no', 1)}\n    if(!identical(candidate('111'), 6)){quit('no', 1)}\n    if(!identical(candidate('1101112'), 12)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_287_square_Sum",
    "language": "r",
    "prompt": "# Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.\nsquare_Sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_287_square_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- square_Sum\n    if(!identical(candidate(2), 20)){quit('no', 1)}\n    if(!identical(candidate(3), 56)){quit('no', 1)}\n    if(!identical(candidate(4), 120)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_93_power",
    "language": "r",
    "prompt": "# Write a function to calculate the value of 'a' to the power 'b'.\npower <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_93_power.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- power\n    if(!identical(candidate(3, 4), 81)){quit('no', 1)}\n    if(!identical(candidate(2, 3), 8)){quit('no', 1)}\n    if(!identical(candidate(5, 5), 3125)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_607_find_literals",
    "language": "r",
    "prompt": "# Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.\nfind_literals <- function(text, pattern) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_607_find_literals.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_literals\n    if(!identical(candidate('The quick brown fox jumps over the lazy dog.', 'fox'), list('fox', 16, 19))){quit('no', 1)}\n    if(!identical(candidate('Its been a very crazy procedure right', 'crazy'), list('crazy', 16, 21))){quit('no', 1)}\n    if(!identical(candidate('Hardest choices required strongest will', 'will'), list('will', 35, 39))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_94_index_minimum",
    "language": "r",
    "prompt": "# Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\nindex_minimum <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- index_minimum\n    if(!identical(candidate(list(list('Rash', 143), list('Manjeet', 200), list('Varsha', 100))), 'Varsha')){quit('no', 1)}\n    if(!identical(candidate(list(list('Yash', 185), list('Dawood', 125), list('Sanya', 175))), 'Dawood')){quit('no', 1)}\n    if(!identical(candidate(list(list('Sai', 345), list('Salman', 145), list('Ayesha', 96))), 'Ayesha')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
    "language": "r",
    "prompt": "# Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nis_Sum_Of_Powers_Of_Two <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_Sum_Of_Powers_Of_Two\n    if(!identical(candidate(10), TRUE)){quit('no', 1)}\n    if(!identical(candidate(7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(14), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_594_diff_even_odd",
    "language": "r",
    "prompt": "# Write a function to find the difference of the first even and first odd number of a given list.\ndiff_even_odd <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- diff_even_odd\n    if(!identical(candidate(c(1, 3, 5, 7, 4, 1, 6, 8)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(1, 5, 7, 9, 10)), 9)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_274_even_binomial_Coeff_Sum",
    "language": "r",
    "prompt": "# Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.\neven_binomial_Coeff_Sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_274_even_binomial_Coeff_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- even_binomial_Coeff_Sum\n    if(!identical(candidate(4), 8)){quit('no', 1)}\n    if(!identical(candidate(6), 32)){quit('no', 1)}\n    if(!identical(candidate(2), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_126_sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of common divisors of two given numbers.\nsum <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum\n    if(!identical(candidate(10, 15), 6)){quit('no', 1)}\n    if(!identical(candidate(100, 150), 93)){quit('no', 1)}\n    if(!identical(candidate(4, 6), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_769_Diff",
    "language": "r",
    "prompt": "# Write a python function to get the difference between two lists.\nDiff <- function(li1, li2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Diff\n    if(!identical(candidate(c(10, 15, 20, 25, 30, 35, 40), c(25, 40, 35)), list(10, 20, 30, 15))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5), c(6, 7, 1)), list(2, 3, 4, 5, 6, 7))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), c(6, 7, 1)), list(2, 3, 6, 7))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_796_return_sum",
    "language": "r",
    "prompt": "# Write function to find the sum of all items in the given dictionary.\nreturn_sum <- function(dict) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- return_sum\n    if(!identical(candidate(list('a' = 100, 'b' = 200, 'c' = 300)), 600)){quit('no', 1)}\n    if(!identical(candidate(list('a' = 25, 'b' = 18, 'c' = 45)), 88)){quit('no', 1)}\n    if(!identical(candidate(list('a' = 36, 'b' = 39, 'c' = 49)), 124)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_574_surfacearea_cylinder",
    "language": "r",
    "prompt": "# Write a function to find the surface area of a cylinder.\nsurfacearea_cylinder <- function(r, h) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- surfacearea_cylinder\n    if(!identical(candidate(10, 5), 942.45)){quit('no', 1)}\n    if(!identical(candidate(4, 5), 226.18800000000002)){quit('no', 1)}\n    if(!identical(candidate(4, 10), 351.848)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_783_rgb_to_hsv",
    "language": "r",
    "prompt": "# Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nrgb_to_hsv <- function(r, g, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- rgb_to_hsv\n    if(!identical(candidate(255, 255, 255), list(0.0, 0.0, 100.0))){quit('no', 1)}\n    if(!identical(candidate(0, 215, 0), list(120.0, 100.0, 84.31372549019608))){quit('no', 1)}\n    if(!identical(candidate(10, 215, 110), list(149.26829268292684, 95.34883720930233, 84.31372549019608))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_70_get_equal",
    "language": "r",
    "prompt": "# Write a function to find whether all the given lists have equal length or not.\nget_equal <- function(Input) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_70_get_equal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_equal\n    if(!identical(candidate(list(list(11, 22, 33), list(44, 55, 66))), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3), list(4, 5, 6, 7))), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2), list(3, 4))), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_267_square_Sum",
    "language": "r",
    "prompt": "# Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nsquare_Sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- square_Sum\n    if(!identical(candidate(2), 10)){quit('no', 1)}\n    if(!identical(candidate(3), 35)){quit('no', 1)}\n    if(!identical(candidate(4), 84)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_171_perimeter_pentagon",
    "language": "r",
    "prompt": "# Write a function to find the perimeter of a regular pentagon from the length of its sides.\nperimeter_pentagon <- function(a) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_171_perimeter_pentagon.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- perimeter_pentagon\n    if(!identical(candidate(5), 25)){quit('no', 1)}\n    if(!identical(candidate(10), 50)){quit('no', 1)}\n    if(!identical(candidate(15), 75)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_222_check_type",
    "language": "r",
    "prompt": "# Write a function to check if all the elements in tuple have same data type or not.\ncheck_type <- function(test_tuple) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_type\n    if(!identical(candidate(list(5, 6, 7, 3, 5, 6)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, '4')), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(3, 2, 1, 4, 5)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_164_are_equivalent",
    "language": "r",
    "prompt": "# Write a function to determine if the sum of the divisors of two integers are the same.\nare_equivalent <- function(num1, num2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- are_equivalent\n    if(!identical(candidate(36, 57), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2, 4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(23, 47), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_803_is_perfect_square",
    "language": "r",
    "prompt": "# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nis_perfect_square <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_perfect_square\n    if(!identical(candidate(10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(36), TRUE)){quit('no', 1)}\n    if(!identical(candidate(14), FALSE)){quit('no', 1)}\n    if(!identical(candidate(196), TRUE)){quit('no', 1)}\n    if(!identical(candidate(125), FALSE)){quit('no', 1)}\n    if(!identical(candidate(15625), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_305_start_withp",
    "language": "r",
    "prompt": "# Write a function to return two words from a list of words starting with letter 'p'.\nstart_withp <- function(words) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- start_withp\n    if(!identical(candidate(c('Python PHP', 'Java JavaScript', 'c c++')), list('Python', 'PHP'))){quit('no', 1)}\n    if(!identical(candidate(c('Python Programming', 'Java Programming')), list('Python', 'Programming'))){quit('no', 1)}\n    if(!identical(candidate(c('Pqrst Pqr', 'qrstuv')), list('Pqrst', 'Pqr'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_617_min_Jumps",
    "language": "r",
    "prompt": "# Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.\nmin_Jumps <- function(steps, d) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_617_min_Jumps.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_Jumps\n    if(!identical(candidate(list(3, 4), 11), 3.5)){quit('no', 1)}\n    if(!identical(candidate(list(3, 4), 0), 0)){quit('no', 1)}\n    if(!identical(candidate(list(11, 14), 11), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_117_list_to_float",
    "language": "r",
    "prompt": "# Write a function to convert all possible convertible elements in a list of lists to floats.\nlist_to_float <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_117_list_to_float.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- list_to_float\n    if(!identical(candidate(list(list('3', '4'), list('1', '26.45'), list('7.32', '8'), list('4', '8'))), list(list(3.0, 4.0), list(1.0, 26.45), list(7.32, 8.0), list(4.0, 8.0)))){quit('no', 1)}\n    if(!identical(candidate(list(list('4', '4'), list('2', '27'), list('4.12', '9'), list('7', '11'))), list(list(4.0, 4.0), list(2.0, 27.0), list(4.12, 9.0), list(7.0, 11.0)))){quit('no', 1)}\n    if(!identical(candidate(list(list('6', '78'), list('5', '26.45'), list('1.33', '4'), list('82', '13'))), list(list(6.0, 78.0), list(5.0, 26.45), list(1.33, 4.0), list(82.0, 13.0)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_425_count_element_in_list",
    "language": "r",
    "prompt": "# Write a function to count the number of sublists containing a particular element.\ncount_element_in_list <- function(list1, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_425_count_element_in_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_element_in_list\n    if(!identical(candidate(list(list(1, 3), list(5, 7), list(1, 11), list(1, 15, 7)), 1), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list('A', 'B'), list('A', 'C'), list('A', 'D', 'E'), list('B', 'C', 'D')), 'A'), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list('A', 'B'), list('A', 'C'), list('A', 'D', 'E'), list('B', 'C', 'D')), 'E'), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_67_bell_number",
    "language": "r",
    "prompt": "# Write a function to find the number of ways to partition a set of Bell numbers.\nbell_number <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_67_bell_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- bell_number\n    if(!identical(candidate(2), 2)){quit('no', 1)}\n    if(!identical(candidate(10), 115975)){quit('no', 1)}\n    if(!identical(candidate(56), 6775685320645824322581483068371419745979053216268760300)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_404_minimum",
    "language": "r",
    "prompt": "# Write a python function to find the minimum of two numbers.\nminimum <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_404_minimum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- minimum\n    if(!identical(candidate(1, 2), 1)){quit('no', 1)}\n    if(!identical(candidate(-5, -4), -5)){quit('no', 1)}\n    if(!identical(candidate(0, 0), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_14_find_Volume",
    "language": "r",
    "prompt": "# Write a python function to find the volume of a triangular prism.\nfind_Volume <- function(l, b, h) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Volume\n    if(!identical(candidate(10, 8, 6), 240)){quit('no', 1)}\n    if(!identical(candidate(3, 2, 2), 6)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_8_square_nums",
    "language": "r",
    "prompt": "# Write a function to find squares of individual elements in a list.\nsquare_nums <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_8_square_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- square_nums\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), list(1, 4, 9, 16, 25, 36, 49, 64, 81, 100))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 30)), list(100, 400, 900))){quit('no', 1)}\n    if(!identical(candidate(c(12, 15)), list(144, 225))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_722_filter_data",
    "language": "r",
    "prompt": "# The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.\nfilter_data <- function(students, h, w) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_722_filter_data.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- filter_data\n    if(!identical(candidate(list('Cierra Vega' = list(6.2, 70), 'Alden Cantrell' = list(5.9, 65), 'Kierra Gentry' = list(6.0, 68), 'Pierre Cox' = list(5.8, 66)), 6.0, 70), list('Cierra Vega' = list(6.2, 70)))){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = list(6.2, 70), 'Alden Cantrell' = list(5.9, 65), 'Kierra Gentry' = list(6.0, 68), 'Pierre Cox' = list(5.8, 66)), 5.9, 67), list('Cierra Vega' = list(6.2, 70), 'Kierra Gentry' = list(6.0, 68)))){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = list(6.2, 70), 'Alden Cantrell' = list(5.9, 65), 'Kierra Gentry' = list(6.0, 68), 'Pierre Cox' = list(5.8, 66)), 5.7, 64), list('Cierra Vega' = list(6.2, 70), 'Alden Cantrell' = list(5.9, 65), 'Kierra Gentry' = list(6.0, 68), 'Pierre Cox' = list(5.8, 66)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_244_next_Perfect_Square",
    "language": "r",
    "prompt": "# Write a python function to find the next perfect square greater than a given number.\nnext_Perfect_Square <- function(N) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- next_Perfect_Square\n    if(!identical(candidate(35), 36)){quit('no', 1)}\n    if(!identical(candidate(6), 9)){quit('no', 1)}\n    if(!identical(candidate(9), 16)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_755_second_smallest",
    "language": "r",
    "prompt": "# Write a function to find the second smallest number in a list.\nsecond_smallest <- function(numbers) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- second_smallest\n    if(!identical(candidate(list(1, 2, -8, -2, 0, -2)), -2)){quit('no', 1)}\n    if(!identical(candidate(list(1, 1, -0.5, 0, 2, -2, -2)), -0.5)){quit('no', 1)}\n    if(!identical(candidate(list(2, 2)), NULL)){quit('no', 1)}\n    if(!identical(candidate(list(2, 2, 2)), NULL)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_405_check_tuplex",
    "language": "r",
    "prompt": "# Write a function to check whether an element exists within a tuple.\ncheck_tuplex <- function(tuplex, tuple1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_tuplex\n    if(!identical(candidate(list('w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'), 'r'), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list('w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'), '5'), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list('w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'), 3), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_292_find",
    "language": "r",
    "prompt": "# Write a python function to find quotient of two numbers (rounded down to the nearest integer).\nfind <- function(n, m) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find\n    if(!identical(candidate(10, 3), 3)){quit('no', 1)}\n    if(!identical(candidate(4, 2), 2)){quit('no', 1)}\n    if(!identical(candidate(20, 5), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_603_get_ludic",
    "language": "r",
    "prompt": "# Write a function to get all lucid numbers smaller than or equal to a given integer.\nget_ludic <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_603_get_ludic.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_ludic\n    if(!identical(candidate(10), list(1, 2, 3, 5, 7))){quit('no', 1)}\n    if(!identical(candidate(25), list(1, 2, 3, 5, 7, 11, 13, 17, 23, 25))){quit('no', 1)}\n    if(!identical(candidate(45), list(1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_734_sum_Of_Subarray_Prod",
    "language": "r",
    "prompt": "# Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nsum_Of_Subarray_Prod <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_Of_Subarray_Prod\n    if(!identical(candidate(c(1, 2, 3)), 20)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4)), 84)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_563_extract_values",
    "language": "r",
    "prompt": "# Write a function to extract values between quotation marks from a string.\nextract_values <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_values\n    if(!identical(candidate('\"Python\", \"PHP\", \"Java\"'), list('Python', 'PHP', 'Java'))){quit('no', 1)}\n    if(!identical(candidate('\"python\",\"program\",\"language\"'), list('python', 'program', 'language'))){quit('no', 1)}\n    if(!identical(candidate('\"red\",\"blue\",\"green\",\"yellow\"'), list('red', 'blue', 'green', 'yellow'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_567_issort_list",
    "language": "r",
    "prompt": "# Write a function to check whether a specified list is sorted or not.\nissort_list <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- issort_list\n    if(!identical(candidate(c(1, 2, 4, 6, 8, 10, 12, 14, 16, 17)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 6, 8, 10, 12, 14, 20, 17)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 6, 8, 10, 15, 14, 20)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_475_sort_counter",
    "language": "r",
    "prompt": "# Write a function to sort a dictionary by value.\nsort_counter <- function(dict1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sort_counter\n    if(!identical(candidate(list('Math' = 81, 'Physics' = 83, 'Chemistry' = 87)), list(list('Chemistry', 87), list('Physics', 83), list('Math', 81)))){quit('no', 1)}\n    if(!identical(candidate(list('Math' = 400, 'Physics' = 300, 'Chemistry' = 250)), list(list('Math', 400), list('Physics', 300), list('Chemistry', 250)))){quit('no', 1)}\n    if(!identical(candidate(list('Math' = 900, 'Physics' = 1000, 'Chemistry' = 1250)), list(list('Chemistry', 1250), list('Physics', 1000), list('Math', 900)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_65_recursive_list_sum",
    "language": "r",
    "prompt": "# Write a function to flatten a list and sum all of its elements.\nrecursive_list_sum <- function(data_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- recursive_list_sum\n    if(!identical(candidate(list(1, 2, list(3, 4), list(5, 6))), 21)){quit('no', 1)}\n    if(!identical(candidate(list(7, 10, list(15, 14), list(19, 41))), 106)){quit('no', 1)}\n    if(!identical(candidate(list(10, 20, list(30, 40), list(50, 60))), 210)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_560_union_elements",
    "language": "r",
    "prompt": "# Write a function to find the union of the elements of two given lists and output them in sorted order.\nunion_elements <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_560_union_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- union_elements\n    if(!identical(candidate(c(3, 4, 5, 6), c(5, 7, 4, 10)), list(3, 4, 5, 6, 7, 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4), c(3, 4, 5, 6)), list(1, 2, 3, 4, 5, 6))){quit('no', 1)}\n    if(!identical(candidate(c(11, 12, 13, 14), c(13, 15, 16, 17)), list(11, 12, 13, 14, 15, 16, 17))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_737_check_str",
    "language": "r",
    "prompt": "# Write a function to check whether the given string is starting with a vowel or not using regex.\ncheck_str <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_str\n    if(!identical(candidate('annie'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('dawood'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('Else'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_626_triangle_area",
    "language": "r",
    "prompt": "# Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\ntriangle_area <- function(r) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- triangle_area\n    if(!identical(candidate(-1), NULL)){quit('no', 1)}\n    if(!identical(candidate(0), 0)){quit('no', 1)}\n    if(!identical(candidate(2), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_253_count_integer",
    "language": "r",
    "prompt": "# Write a python function that returns the number of integer elements in a given list.\ncount_integer <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_253_count_integer.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_integer\n    if(!identical(candidate(list(1, 2, 'abc', 1.2)), 2)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3)), 3)){quit('no', 1)}\n    if(!identical(candidate(list(1, 1.2, 4, 5.1)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_463_max_subarray_product",
    "language": "r",
    "prompt": "# Write a function to find the maximum product subarray of the given array.\nmax_subarray_product <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_subarray_product\n    if(!identical(candidate(c(1, -2, -3, 0, 7, -8, -2)), 112)){quit('no', 1)}\n    if(!identical(candidate(c(6, -3, -10, 0, 2)), 180)){quit('no', 1)}\n    if(!identical(candidate(c(-2, -40, 0, -2, -3)), 80)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_223_is_majority",
    "language": "r",
    "prompt": "# Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\nis_majority <- function(arr, n, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_majority\n    if(!identical(candidate(c(1, 2, 3, 3, 3, 3, 10), 7, 3), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 2, 4, 4, 4, 6, 6), 8, 4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1, 2, 2), 5, 1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 2, 2), 5, 1), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_794_text_starta_endb",
    "language": "r",
    "prompt": "# Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.\ntext_starta_endb <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_794_text_starta_endb.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_starta_endb\n    if(!identical(candidate('aabbbb'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aabAbbbc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('accddbbjjj'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_79_word_len",
    "language": "r",
    "prompt": "# Write a python function to check whether the length of the word is odd or not.\nword_len <- function(s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- word_len\n    if(!identical(candidate('Hadoop'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('great'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('structure'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_390_add_string",
    "language": "r",
    "prompt": "# Write a function to apply a given format string to all of the elements in a list.\nadd_string <- function(list_, string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_390_add_string.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_string\n    if(!identical(candidate(list(1, 2, 3, 4), 'temp{0}'), list('temp1', 'temp2', 'temp3', 'temp4'))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'b', 'c', 'd'), 'python{0}'), list('pythona', 'pythonb', 'pythonc', 'pythond'))){quit('no', 1)}\n    if(!identical(candidate(list(5, 6, 7, 8), 'string{0}'), list('string5', 'string6', 'string7', 'string8'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_741_all_Characters_Same",
    "language": "r",
    "prompt": "# Write a python function to check whether all the characters are same or not.\nall_Characters_Same <- function(s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- all_Characters_Same\n    if(!identical(candidate('python'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('aaa'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('data'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_775_odd_position",
    "language": "r",
    "prompt": "# Write a python function to check whether every odd index contains odd numbers of a given list.\nodd_position <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_775_odd_position.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- odd_position\n    if(!identical(candidate(c(2, 1, 4, 3, 6, 7, 6, 3)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(4, 1, 2)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_644_reverse_Array_Upto_K",
    "language": "r",
    "prompt": "# Write a python function to reverse an array upto a given position.\nreverse_Array_Upto_K <- function(input, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- reverse_Array_Upto_K\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), 4), list(4, 3, 2, 1, 5, 6))){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6, 7), 2), list(5, 4, 6, 7))){quit('no', 1)}\n    if(!identical(candidate(c(9, 8, 7, 6, 5), 3), list(7, 8, 9, 6, 5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_588_big_diff",
    "language": "r",
    "prompt": "# Write a python function to find the difference between largest and smallest value in a given list.\nbig_diff <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- big_diff\n    if(!identical(candidate(c(1, 2, 3, 4)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 12)), 8)){quit('no', 1)}\n    if(!identical(candidate(c(9, 2, 3)), 7)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_297_flatten_list",
    "language": "r",
    "prompt": "# Write a function to flatten a given nested list structure.\nflatten_list <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- flatten_list\n    if(!identical(candidate(list(0, 10, list(20, 30), 40, 50, list(60, 70, 80), list(90, 100, 110, 120))), list(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120))){quit('no', 1)}\n    if(!identical(candidate(list(list(10, 20), list(40), list(30, 56, 25), list(10, 20), list(33), list(40))), list(10, 20, 40, 30, 56, 25, 10, 20, 33, 40))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3), list(4, 5, 6), list(10, 11, 12), list(7, 8, 9))), list(1, 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_445_index_multiplication",
    "language": "r",
    "prompt": "# Write a function to perform index wise multiplication of list elements in the given two lists.\nindex_multiplication <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- index_multiplication\n    if(!identical(candidate(list(list(1, 3), list(4, 5), list(2, 9), list(1, 10)), list(list(6, 7), list(3, 9), list(1, 1), list(7, 3))), list(list(6, 21), list(12, 45), list(2, 9), list(7, 30)))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(5, 6), list(3, 10), list(2, 11)), list(list(7, 8), list(4, 10), list(2, 2), list(8, 4))), list(list(14, 32), list(20, 60), list(6, 20), list(16, 44)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(6, 7), list(4, 11), list(3, 12)), list(list(8, 9), list(5, 11), list(3, 3), list(9, 5))), list(list(24, 45), list(30, 77), list(12, 33), list(27, 60)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_256_count_Primes_nums",
    "language": "r",
    "prompt": "# Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.\ncount_Primes_nums <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_256_count_Primes_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_Primes_nums\n    if(!identical(candidate(5), 2)){quit('no', 1)}\n    if(!identical(candidate(10), 4)){quit('no', 1)}\n    if(!identical(candidate(100), 25)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_170_sum_range_list",
    "language": "r",
    "prompt": "# Write a function to find the sum of numbers in a list within a range specified by two indices.\nsum_range_list <- function(list1, m, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_range_list\n    if(!identical(candidate(c(2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12), 8, 10), 29)){quit('no', 1)}\n    if(!identical(candidate(c(2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12), 5, 7), 16)){quit('no', 1)}\n    if(!identical(candidate(c(2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12), 7, 10), 38)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_71_comb_sort",
    "language": "r",
    "prompt": "# Write a function to sort a list of elements.\ncomb_sort <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- comb_sort\n    if(!identical(candidate(c(5, 15, 37, 25, 79)), list(5, 15, 25, 37, 79))){quit('no', 1)}\n    if(!identical(candidate(c(41, 32, 15, 19, 22)), list(15, 19, 22, 32, 41))){quit('no', 1)}\n    if(!identical(candidate(c(99, 15, 13, 47)), list(13, 15, 47, 99))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_451_remove_whitespaces",
    "language": "r",
    "prompt": "# Write a function to remove all whitespaces from the given string.\nremove_whitespaces <- function(text1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_451_remove_whitespaces.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_whitespaces\n    if(!identical(candidate(' Google    Flutter '), 'GoogleFlutter')){quit('no', 1)}\n    if(!identical(candidate(' Google    Dart '), 'GoogleDart')){quit('no', 1)}\n    if(!identical(candidate(' iOS    Swift '), 'iOSSwift')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_747_lcs_of_three",
    "language": "r",
    "prompt": "# Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nlcs_of_three <- function(X, Y, Z) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- lcs_of_three\n    if(!identical(candidate('AGGT12', '12TXAYB', '12XBA'), 2)){quit('no', 1)}\n    if(!identical(candidate('Reels', 'Reelsfor', 'ReelsforReels'), 5)){quit('no', 1)}\n    if(!identical(candidate('abcd1e2', 'bc12ea', 'bd1ea'), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_257_swap_numbers",
    "language": "r",
    "prompt": "# Write a function that takes in two numbers and returns a list with the second number and then the first number.\nswap_numbers <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- swap_numbers\n    if(!identical(candidate(10, 20), list(20, 10))){quit('no', 1)}\n    if(!identical(candidate(15, 17), list(17, 15))){quit('no', 1)}\n    if(!identical(candidate(100, 200), list(200, 100))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_64_subject_marks",
    "language": "r",
    "prompt": "# Write a function to sort a list of tuples using the second value of each tuple.\nsubject_marks <- function(subjectmarks) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- subject_marks\n    if(!identical(candidate(list(list('English', 88), list('Science', 90), list('Maths', 97), list('Social sciences', 82))), list(list('Social sciences', 82), list('English', 88), list('Science', 90), list('Maths', 97)))){quit('no', 1)}\n    if(!identical(candidate(list(list('Telugu', 49), list('Hindhi', 54), list('Social', 33))), list(list('Social', 33), list('Telugu', 49), list('Hindhi', 54)))){quit('no', 1)}\n    if(!identical(candidate(list(list('Physics', 96), list('Chemistry', 97), list('Biology', 45))), list(list('Biology', 45), list('Physics', 96), list('Chemistry', 97)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_116_tuple_to_int",
    "language": "r",
    "prompt": "# Write a function to convert a given tuple of positive integers into a single integer.\ntuple_to_int <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_116_tuple_to_int.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tuple_to_int\n    if(!identical(candidate(list(1, 2, 3)), 123)){quit('no', 1)}\n    if(!identical(candidate(list(4, 5, 6)), 456)){quit('no', 1)}\n    if(!identical(candidate(list(5, 6, 7)), 567)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_479_first_Digit",
    "language": "r",
    "prompt": "# Write a python function to find the first digit of a given number.\nfirst_Digit <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- first_Digit\n    if(!identical(candidate(123), 1)){quit('no', 1)}\n    if(!identical(candidate(456), 4)){quit('no', 1)}\n    if(!identical(candidate(12), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_118_string_to_list",
    "language": "r",
    "prompt": "# Write a function to convert a string to a list of strings split on the space character.\nstring_to_list <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- string_to_list\n    if(!identical(candidate('python programming'), list('python', 'programming'))){quit('no', 1)}\n    if(!identical(candidate('lists tuples strings'), list('lists', 'tuples', 'strings'))){quit('no', 1)}\n    if(!identical(candidate('write a program'), list('write', 'a', 'program'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_763_find_min_diff",
    "language": "r",
    "prompt": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\nfind_min_diff <- function(arr, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_min_diff\n    if(!identical(candidate(c(1, 5, 3, 19, 18, 25), 6), 1)){quit('no', 1)}\n    if(!identical(candidate(c(4, 3, 2, 6), 4), 1)){quit('no', 1)}\n    if(!identical(candidate(c(30, 5, 20, 9), 4), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_408_k_smallest_pairs",
    "language": "r",
    "prompt": "# Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.\nk_smallest_pairs <- function(nums1, nums2, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_408_k_smallest_pairs.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- k_smallest_pairs\n    if(!identical(candidate(c(1, 3, 7), c(2, 4, 6), 2), list(list(1, 2), list(1, 4)))){quit('no', 1)}\n    if(!identical(candidate(c(1, 3, 7), c(2, 4, 6), 1), list(list(1, 2)))){quit('no', 1)}\n    if(!identical(candidate(c(1, 3, 7), c(2, 4, 6), 7), list(list(1, 2), list(1, 4), list(3, 2), list(1, 6), list(3, 4), list(3, 6), list(7, 2)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_748_capital_words_spaces",
    "language": "r",
    "prompt": "# Write a function to put spaces between words starting with capital letters in a given string.\ncapital_words_spaces <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- capital_words_spaces\n    if(!identical(candidate('Python'), 'Python')){quit('no', 1)}\n    if(!identical(candidate('PythonProgrammingExamples'), 'Python Programming Examples')){quit('no', 1)}\n    if(!identical(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_252_convert",
    "language": "r",
    "prompt": "# Write a python function to convert complex numbers to polar coordinates.\nconvert <- function(numbers) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_252_convert.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- convert\n    if(!identical(candidate(1), list(1.0, 0.0))){quit('no', 1)}\n    if(!identical(candidate(4), list(4.0, 0.0))){quit('no', 1)}\n    if(!identical(candidate(5), list(5.0, 0.0))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_436_neg_nos",
    "language": "r",
    "prompt": "# Write a python function to return the negative numbers in a list.\nneg_nos <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- neg_nos\n    if(!identical(candidate(c(-1, 4, 5, -6)), list(-1, -6))){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, 3, 4)), list(-1, -2))){quit('no', 1)}\n    if(!identical(candidate(c(-7, -6, 8, 9)), list(-7, -6))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_397_median_numbers",
    "language": "r",
    "prompt": "# Write a function to find the median of three numbers.\nmedian_numbers <- function(a, b, c) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- median_numbers\n    if(!identical(candidate(25, 55, 65), 55.0)){quit('no', 1)}\n    if(!identical(candidate(20, 10, 30), 20.0)){quit('no', 1)}\n    if(!identical(candidate(15, 45, 75), 45.0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_462_combinations_list",
    "language": "r",
    "prompt": "# Write a function to find all possible combinations of the elements of a given list.\ncombinations_list <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_462_combinations_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- combinations_list\n    if(!identical(candidate(c('orange', 'red', 'green', 'blue')), list(list(), list('orange'), list('red'), list('red', 'orange'), list('green'), list('green', 'orange'), list('green', 'red'), list('green', 'red', 'orange'), list('blue'), list('blue', 'orange'), list('blue', 'red'), list('blue', 'red', 'orange'), list('blue', 'green'), list('blue', 'green', 'orange'), list('blue', 'green', 'red'), list('blue', 'green', 'red', 'orange')))){quit('no', 1)}\n    if(!identical(candidate(c('red', 'green', 'blue', 'white', 'black', 'orange')), list(list(), list('red'), list('green'), list('green', 'red'), list('blue'), list('blue', 'red'), list('blue', 'green'), list('blue', 'green', 'red'), list('white'), list('white', 'red'), list('white', 'green'), list('white', 'green', 'red'), list('white', 'blue'), list('white', 'blue', 'red'), list('white', 'blue', 'green'), list('white', 'blue', 'green', 'red'), list('black'), list('black', 'red'), list('black', 'green'), list('black', 'green', 'red'), list('black', 'blue'), list('black', 'blue', 'red'), list('black', 'blue', 'green'), list('black', 'blue', 'green', 'red'), list('black', 'white'), list('black', 'white', 'red'), list('black', 'white', 'green'), list('black', 'white', 'green', 'red'), list('black', 'white', 'blue'), list('black', 'white', 'blue', 'red'), list('black', 'white', 'blue', 'green'), list('black', 'white', 'blue', 'green', 'red'), list('orange'), list('orange', 'red'), list('orange', 'green'), list('orange', 'green', 'red'), list('orange', 'blue'), list('orange', 'blue', 'red'), list('orange', 'blue', 'green'), list('orange', 'blue', 'green', 'red'), list('orange', 'white'), list('orange', 'white', 'red'), list('orange', 'white', 'green'), list('orange', 'white', 'green', 'red'), list('orange', 'white', 'blue'), list('orange', 'white', 'blue', 'red'), list('orange', 'white', 'blue', 'green'), list('orange', 'white', 'blue', 'green', 'red'), list('orange', 'black'), list('orange', 'black', 'red'), list('orange', 'black', 'green'), list('orange', 'black', 'green', 'red'), list('orange', 'black', 'blue'), list('orange', 'black', 'blue', 'red'), list('orange', 'black', 'blue', 'green'), list('orange', 'black', 'blue', 'green', 'red'), list('orange', 'black', 'white'), list('orange', 'black', 'white', 'red'), list('orange', 'black', 'white', 'green'), list('orange', 'black', 'white', 'green', 'red'), list('orange', 'black', 'white', 'blue'), list('orange', 'black', 'white', 'blue', 'red'), list('orange', 'black', 'white', 'blue', 'green'), list('orange', 'black', 'white', 'blue', 'green', 'red')))){quit('no', 1)}\n    if(!identical(candidate(c('red', 'green', 'black', 'orange')), list(list(), list('red'), list('green'), list('green', 'red'), list('black'), list('black', 'red'), list('black', 'green'), list('black', 'green', 'red'), list('orange'), list('orange', 'red'), list('orange', 'green'), list('orange', 'green', 'red'), list('orange', 'black'), list('orange', 'black', 'red'), list('orange', 'black', 'green'), list('orange', 'black', 'green', 'red')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_745_divisible_by_digits",
    "language": "r",
    "prompt": "# Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\ndivisible_by_digits <- function(startnum, endnum) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- divisible_by_digits\n    if(!identical(candidate(1, 22), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22))){quit('no', 1)}\n    if(!identical(candidate(1, 15), list(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15))){quit('no', 1)}\n    if(!identical(candidate(20, 25), list(22, 24))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_554_Split",
    "language": "r",
    "prompt": "# Write a python function which takes a list of integers and only returns the odd ones.\nSplit <- function(list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Split\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6)), list(1, 3, 5))){quit('no', 1)}\n    if(!identical(candidate(c(10, 11, 12, 13)), list(11, 13))){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9, 1)), list(7, 9, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_128_long_words",
    "language": "r",
    "prompt": "# Write a function to find words that are longer than n characters from a given list of words.\nlong_words <- function(n, str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- long_words\n    if(!identical(candidate(3, 'python is a programming language'), list('python', 'programming', 'language'))){quit('no', 1)}\n    if(!identical(candidate(2, 'writing a program'), list('writing', 'program'))){quit('no', 1)}\n    if(!identical(candidate(5, 'sorting list'), list('sorting'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_69_is_sublist",
    "language": "r",
    "prompt": "# Write a function to check whether a list contains the given sublist or not.\nis_sublist <- function(l, s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_sublist\n    if(!identical(candidate(c(2, 4, 3, 5, 7), c(3, 7)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 3, 5, 7), c(4, 3)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 3, 5, 7), c(1, 6)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_431_common_element",
    "language": "r",
    "prompt": "# Write a function that takes two lists and returns true if they have at least one common element.\ncommon_element <- function(list1, list2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- common_element\n    if(!identical(candidate(list(1, 2, 3, 4, 5), list(5, 6, 7, 8, 9)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5), list(6, 7, 8, 9)), NULL)){quit('no', 1)}\n    if(!identical(candidate(list('a', 'b', 'c'), list('d', 'b', 'e')), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_732_replace_specialchar",
    "language": "r",
    "prompt": "# Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nreplace_specialchar <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_specialchar\n    if(!identical(candidate('Python language, Programming language.'), 'Python:language::Programming:language:')){quit('no', 1)}\n    if(!identical(candidate('a b c,d e f'), 'a:b:c:d:e:f')){quit('no', 1)}\n    if(!identical(candidate('ram reshma,ram rahim'), 'ram:reshma:ram:rahim')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_141_pancake_sort",
    "language": "r",
    "prompt": "# Write a function to sort a list of elements.\npancake_sort <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- pancake_sort\n    if(!identical(candidate(c(15, 79, 25, 38, 69)), list(15, 25, 38, 69, 79))){quit('no', 1)}\n    if(!identical(candidate(c(98, 12, 54, 36, 85)), list(12, 36, 54, 85, 98))){quit('no', 1)}\n    if(!identical(candidate(c(41, 42, 32, 12, 23)), list(12, 23, 32, 41, 42))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_308_large_product",
    "language": "r",
    "prompt": "# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\nlarge_product <- function(nums1, nums2, N) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- large_product\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), c(3, 6, 8, 9, 10, 6), 3), list(60, 54, 50))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), c(3, 6, 8, 9, 10, 6), 4), list(60, 54, 50, 48))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), c(3, 6, 8, 9, 10, 6), 5), list(60, 54, 50, 48, 45))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_293_otherside_rightangle",
    "language": "r",
    "prompt": "# Write a function to find the third side of a right angled triangle.\notherside_rightangle <- function(w, h) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- otherside_rightangle\n    if(!identical(candidate(7, 8), 10.63014581273465)){quit('no', 1)}\n    if(!identical(candidate(3, 4), 5)){quit('no', 1)}\n    if(!identical(candidate(7, 15), 16.55294535724685)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_106_add_lists",
    "language": "r",
    "prompt": "# Write a function to append the given list to the given tuples.\nadd_lists <- function(test_list, test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_lists\n    if(!identical(candidate(c(5, 6, 7), list(9, 10)), list(9, 10, 5, 6, 7))){quit('no', 1)}\n    if(!identical(candidate(c(6, 7, 8), list(10, 11)), list(10, 11, 6, 7, 8))){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9), list(11, 12)), list(11, 12, 7, 8, 9))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_720_add_dict_to_tuple",
    "language": "r",
    "prompt": "# Write a function to add a dictionary to the tuple. The output should be a tuple.\nadd_dict_to_tuple <- function(test_tup, test_dict) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_720_add_dict_to_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_dict_to_tuple\n    if(!identical(candidate(list(4, 5, 6), list('MSAM' = 1, 'is' = 2, 'best' = 3)), list(4, 5, 6, list('MSAM' = 1, 'is' = 2, 'best' = 3)))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3), list('UTS' = 2, 'is' = 3, 'Worst' = 4)), list(1, 2, 3, list('UTS' = 2, 'is' = 3, 'Worst' = 4)))){quit('no', 1)}\n    if(!identical(candidate(list(8, 9, 10), list('POS' = 3, 'is' = 4, 'Okay' = 5)), list(8, 9, 10, list('POS' = 3, 'is' = 4, 'Okay' = 5)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_395_first_non_repeating_character",
    "language": "r",
    "prompt": "# Write a python function to find the first non-repeated character in a given string.\nfirst_non_repeating_character <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- first_non_repeating_character\n    if(!identical(candidate('abcabc'), NULL)){quit('no', 1)}\n    if(!identical(candidate('abc'), 'a')){quit('no', 1)}\n    if(!identical(candidate('ababc'), 'c')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_457_Find_Min",
    "language": "r",
    "prompt": "# Write a python function to find the sublist having minimum length.\nFind_Min <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Find_Min\n    if(!identical(candidate(list(list(1), list(1, 2), list(1, 2, 3))), list(1))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 1), list(1, 1, 1), list(1, 2, 7, 8))), list(1, 1))){quit('no', 1)}\n    if(!identical(candidate(list(list('x'), list('x', 'y'), list('x', 'y', 'z'))), list('x'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_725_extract_quotation",
    "language": "r",
    "prompt": "# Write a function to extract values between quotation marks \" \" of the given string.\nextract_quotation <- function(text1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_quotation\n    if(!identical(candidate('Cortex \"A53\" Based \"multi\" tasking \"Processor\"'), list('A53', 'multi', 'Processor'))){quit('no', 1)}\n    if(!identical(candidate('Cast your \"favorite\" entertainment \"apps\"'), list('favorite', 'apps'))){quit('no', 1)}\n    if(!identical(candidate('Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support'), list('4k Ultra HD', 'HDR 10'))){quit('no', 1)}\n    if(!identical(candidate(\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\"), list())){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_9_find_Rotations",
    "language": "r",
    "prompt": "# Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.\nfind_Rotations <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_9_find_Rotations.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Rotations\n    if(!identical(candidate('aaaa'), 1)){quit('no', 1)}\n    if(!identical(candidate('ab'), 2)){quit('no', 1)}\n    if(!identical(candidate('abc'), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_792_count_list",
    "language": "r",
    "prompt": "# Write a python function to count the number of lists in a given number of lists.\ncount_list <- function(input_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_792_count_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_list\n    if(!identical(candidate(list(list(1, 3), list(5, 7), list(9, 11), list(13, 15, 17))), 4)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2), list(2, 3), list(4, 5))), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 0), list(2, 0))), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_477_is_lower",
    "language": "r",
    "prompt": "# Write a python function to convert the given string to lower case.\nis_lower <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_lower\n    if(!identical(candidate('InValid'), 'invalid')){quit('no', 1)}\n    if(!identical(candidate('TruE'), 'true')){quit('no', 1)}\n    if(!identical(candidate('SenTenCE'), 'sentence')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_422_find_Average_Of_Cube",
    "language": "r",
    "prompt": "# Write a python function to find the average of cubes of first n natural numbers.\nfind_Average_Of_Cube <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Average_Of_Cube\n    if(!identical(candidate(2), 4.5)){quit('no', 1)}\n    if(!identical(candidate(3), 12)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_637_noprofit_noloss",
    "language": "r",
    "prompt": "# Write a function to check whether the given amount has no profit and no loss\nnoprofit_noloss <- function(actual_cost, sale_amount) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- noprofit_noloss\n    if(!identical(candidate(1500, 1200), FALSE)){quit('no', 1)}\n    if(!identical(candidate(100, 100), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2000, 5000), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_557_toggle_string",
    "language": "r",
    "prompt": "# Write a function to toggle the case of all characters in a string.\ntoggle_string <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- toggle_string\n    if(!identical(candidate('Python'), 'pYTHON')){quit('no', 1)}\n    if(!identical(candidate('Pangram'), 'pANGRAM')){quit('no', 1)}\n    if(!identical(candidate('LIttLE'), 'liTTle')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_786_right_insertion",
    "language": "r",
    "prompt": "# Write a function to locate the right insertion point for a specified value in sorted order.\nright_insertion <- function(a, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_786_right_insertion.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- right_insertion\n    if(!identical(candidate(c(1, 2, 4, 5), 6), 4)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 5), 3), 2)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 5), 7), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_807_first_odd",
    "language": "r",
    "prompt": "# Write a python function to find the first odd number in a given list of numbers.\nfirst_odd <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- first_odd\n    if(!identical(candidate(c(1, 3, 5)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 1, 3)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(8, 9, 1)), 9)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_631_replace_spaces",
    "language": "r",
    "prompt": "# Write a function to replace whitespaces with an underscore and vice versa in a given string.\nreplace_spaces <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_631_replace_spaces.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_spaces\n    if(!identical(candidate('Jumanji The Jungle'), 'Jumanji_The_Jungle')){quit('no', 1)}\n    if(!identical(candidate('The_Avengers'), 'The Avengers')){quit('no', 1)}\n    if(!identical(candidate('Fast and Furious'), 'Fast_and_Furious')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_573_unique_product",
    "language": "r",
    "prompt": "# Write a python function to calculate the product of the unique numbers in a given list.\nunique_product <- function(list_data) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- unique_product\n    if(!identical(candidate(c(10, 20, 30, 40, 20, 50, 60, 40)), 720000000)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 1)), 6)){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9, 0, 1, 1)), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_643_text_match_wordz_middle",
    "language": "r",
    "prompt": "# Write a function that checks if a strings contains 'z', except at the start and end of the word.\ntext_match_wordz_middle <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_wordz_middle\n    if(!identical(candidate('pythonzabc.'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('zxyabc.'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('  lang  .'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_299_max_aggregate",
    "language": "r",
    "prompt": "# Write a function to calculate the maximum aggregate from the list of tuples.\nmax_aggregate <- function(stdata) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_aggregate\n    if(!identical(candidate(list(list('Juan Whelan', 90), list('Sabah Colley', 88), list('Peter Nichols', 7), list('Juan Whelan', 122), list('Sabah Colley', 84))), list('Juan Whelan', 212))){quit('no', 1)}\n    if(!identical(candidate(list(list('Juan Whelan', 50), list('Sabah Colley', 48), list('Peter Nichols', 37), list('Juan Whelan', 22), list('Sabah Colley', 14))), list('Juan Whelan', 72))){quit('no', 1)}\n    if(!identical(candidate(list(list('Juan Whelan', 10), list('Sabah Colley', 20), list('Peter Nichols', 30), list('Juan Whelan', 40), list('Sabah Colley', 50))), list('Sabah Colley', 70))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_474_replace_char",
    "language": "r",
    "prompt": "# Write a function to replace characters in a string.\nreplace_char <- function(str1, ch, newch) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- replace_char\n    if(!identical(candidate('polygon', 'y', 'l'), 'pollgon')){quit('no', 1)}\n    if(!identical(candidate('character', 'c', 'a'), 'aharaater')){quit('no', 1)}\n    if(!identical(candidate('python', 'l', 'a'), 'python')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_433_check_greater",
    "language": "r",
    "prompt": "# Write a function to check whether the entered number is greater than the elements of the given array.\ncheck_greater <- function(arr, number) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_433_check_greater.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_greater\n    if(!identical(candidate(c(1, 2, 3, 4, 5), 4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 4, 5, 6), 8), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(9, 7, 4, 8, 6, 1), 11), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_427_change_date_format",
    "language": "r",
    "prompt": "# Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nchange_date_format <- function(dt) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- change_date_format\n    if(!identical(candidate('2026-01-02'), '02-01-2026')){quit('no', 1)}\n    if(!identical(candidate('2020-11-13'), '13-11-2020')){quit('no', 1)}\n    if(!identical(candidate('2021-04-26'), '26-04-2021')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_442_positive_count",
    "language": "r",
    "prompt": "# Write a function to find the ration of positive numbers in an array of integers.\npositive_count <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- positive_count\n    if(!identical(candidate(c(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)), 0.54)){quit('no', 1)}\n    if(!identical(candidate(c(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)), 0.69)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, -6, -9, 11, -12, 14, -5, 17)), 0.56)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_453_sumofFactors",
    "language": "r",
    "prompt": "# Write a python function to find the sum of even factors of a number.\nsumofFactors <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_453_sumofFactors.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sumofFactors\n    if(!identical(candidate(18), 26)){quit('no', 1)}\n    if(!identical(candidate(30), 48)){quit('no', 1)}\n    if(!identical(candidate(6), 8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_478_remove_lowercase",
    "language": "r",
    "prompt": "# Write a function to remove lowercase substrings from a given string.\nremove_lowercase <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_lowercase\n    if(!identical(candidate('PYTHon'), 'PYTH')){quit('no', 1)}\n    if(!identical(candidate('FInD'), 'FID')){quit('no', 1)}\n    if(!identical(candidate('STRinG'), 'STRG')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_18_remove_dirty_chars",
    "language": "r",
    "prompt": "# Write a function to remove characters from the first string which are present in the second string.\nremove_dirty_chars <- function(string, second_string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_dirty_chars\n    if(!identical(candidate('probasscurve', 'pros'), 'bacuve')){quit('no', 1)}\n    if(!identical(candidate('digitalindia', 'talent'), 'digiidi')){quit('no', 1)}\n    if(!identical(candidate('exoticmiles', 'toxic'), 'emles')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_730_consecutive_duplicates",
    "language": "r",
    "prompt": "# Write a function to remove consecutive duplicates of a given list.\nconsecutive_duplicates <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- consecutive_duplicates\n    if(!identical(candidate(list(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)), list(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4))){quit('no', 1)}\n    if(!identical(candidate(list(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)), list(10, 15, 19, 18, 17, 26, 17, 18, 10))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'a', 'b', 'c', 'd', 'd')), list('a', 'b', 'c', 'd'))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'a', 'b', 'c', 'd', 'd', 'a', 'a')), list('a', 'b', 'c', 'd', 'a'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_446_count_Occurrence",
    "language": "r",
    "prompt": "# Write a python function to count the occurence of all elements of list in a tuple.\ncount_Occurrence <- function(tup, lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_Occurrence\n    if(!identical(candidate(list('a', 'a', 'c', 'b', 'd'), list('a', 'b')), 3)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 1, 4, 6, 7, 1, 4), list(1, 4, 7)), 6)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6), list(1, 2)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_772_remove_length",
    "language": "r",
    "prompt": "# Write a function to remove all the words with k length in the given string.\nremove_length <- function(test_str, K) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_length\n    if(!identical(candidate('The person is most value tet', 3), 'person is most value')){quit('no', 1)}\n    if(!identical(candidate('If you told me about this ok', 4), 'If you me about ok')){quit('no', 1)}\n    if(!identical(candidate('Forces of darkeness is come into the play', 4), 'Forces of darkeness is the')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_752_jacobsthal_num",
    "language": "r",
    "prompt": "# Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\njacobsthal_num <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- jacobsthal_num\n    if(!identical(candidate(5), 11)){quit('no', 1)}\n    if(!identical(candidate(2), 1)){quit('no', 1)}\n    if(!identical(candidate(4), 5)){quit('no', 1)}\n    if(!identical(candidate(13), 2731)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_145_max_Abs_Diff",
    "language": "r",
    "prompt": "# Write a python function to find the maximum difference between any two elements in a given array.\nmax_Abs_Diff <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_Abs_Diff\n    if(!identical(candidate(c(2, 1, 5, 3)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(9, 3, 2, 5, 1)), 8)){quit('no', 1)}\n    if(!identical(candidate(c(3, 2, 1)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_572_two_unique_nums",
    "language": "r",
    "prompt": "# Write a python function to remove duplicate numbers from a given number of lists.\ntwo_unique_nums <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- two_unique_nums\n    if(!identical(candidate(c(1, 2, 3, 2, 3, 4, 5)), list(1, 4, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 2, 4, 5)), list(1, 3, 4, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), list(1, 2, 3, 4, 5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_556_find_Odd_Pair",
    "language": "r",
    "prompt": "# Write a python function to count the number of pairs whose xor value is odd.\nfind_Odd_Pair <- function(A, N) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_556_find_Odd_Pair.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Odd_Pair\n    if(!identical(candidate(c(5, 4, 7, 2, 1), 5), 6)){quit('no', 1)}\n    if(!identical(candidate(c(7, 2, 8, 1, 0, 5, 11), 7), 12)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), 3), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_306_max_sum_increasing_subseq",
    "language": "r",
    "prompt": "# Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\nmax_sum_increasing_subseq <- function(a, n, index, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_306_max_sum_increasing_subseq.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_sum_increasing_subseq\n    if(!identical(candidate(c(1, 101, 2, 3, 100, 4, 5), 7, 4, 6), 11)){quit('no', 1)}\n    if(!identical(candidate(c(1, 101, 2, 3, 100, 4, 5), 7, 2, 5), 7)){quit('no', 1)}\n    if(!identical(candidate(c(11, 15, 19, 21, 26, 28, 31), 7, 2, 4), 71)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_388_highest_Power_of_2",
    "language": "r",
    "prompt": "# Write a python function to find the highest power of 2 that is less than or equal to n.\nhighest_Power_of_2 <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- highest_Power_of_2\n    if(!identical(candidate(10), 8)){quit('no', 1)}\n    if(!identical(candidate(19), 16)){quit('no', 1)}\n    if(!identical(candidate(32), 32)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_401_add_nested_tuples",
    "language": "r",
    "prompt": "# Write a function to perform index wise addition of list elements in the given two nested lists.\nadd_nested_tuples <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_401_add_nested_tuples.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_nested_tuples\n    if(!identical(candidate(list(list(1, 3), list(4, 5), list(2, 9), list(1, 10)), list(list(6, 7), list(3, 9), list(1, 1), list(7, 3))), list(list(7, 10), list(7, 14), list(3, 10), list(8, 13)))){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(5, 6), list(3, 10), list(2, 11)), list(list(7, 8), list(4, 10), list(2, 2), list(8, 4))), list(list(9, 12), list(9, 16), list(5, 12), list(10, 15)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(6, 7), list(4, 11), list(3, 12)), list(list(8, 9), list(5, 11), list(3, 3), list(9, 5))), list(list(11, 14), list(11, 18), list(7, 14), list(12, 17)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_435_last_Digit",
    "language": "r",
    "prompt": "# Write a python function to find the last digit of a given number.\nlast_Digit <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_435_last_Digit.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- last_Digit\n    if(!identical(candidate(123), 3)){quit('no', 1)}\n    if(!identical(candidate(25), 5)){quit('no', 1)}\n    if(!identical(candidate(30), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_611_max_of_nth",
    "language": "r",
    "prompt": "# Write a function which given a matrix represented as a list of lists returns the max of the n'th column.\nmax_of_nth <- function(test_list, N) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_611_max_of_nth.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_of_nth\n    if(!identical(candidate(list(list(5, 6, 7), list(1, 3, 5), list(8, 9, 19)), 2), 19)){quit('no', 1)}\n    if(!identical(candidate(list(list(6, 7, 8), list(2, 4, 6), list(9, 10, 20)), 1), 10)){quit('no', 1)}\n    if(!identical(candidate(list(list(7, 8, 9), list(3, 5, 7), list(10, 11, 21)), 1), 11)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_280_sequential_search",
    "language": "r",
    "prompt": "# Write a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\nsequential_search <- function(dlist, item) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_280_sequential_search.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sequential_search\n    if(!identical(candidate(c(11, 23, 58, 31, 56, 77, 43, 12, 65, 19), 31), list(TRUE, 3))){quit('no', 1)}\n    if(!identical(candidate(c(12, 32, 45, 62, 35, 47, 44, 61), 61), list(TRUE, 7))){quit('no', 1)}\n    if(!identical(candidate(c(9, 10, 17, 19, 22, 39, 48, 56), 48), list(TRUE, 6))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_576_is_Sub_Array",
    "language": "r",
    "prompt": "# Write a python function to check whether a list is sublist of another or not.\nis_Sub_Array <- function(A, B) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_Sub_Array\n    if(!identical(candidate(c(1, 4, 3, 5), c(1, 2)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1), c(1, 2, 1)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 0, 2, 2), c(2, 2, 0)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_131_reverse_vowels",
    "language": "r",
    "prompt": "# Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nreverse_vowels <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- reverse_vowels\n    if(!identical(candidate('Python'), 'Python')){quit('no', 1)}\n    if(!identical(candidate('USA'), 'ASU')){quit('no', 1)}\n    if(!identical(candidate('ab'), 'ab')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_432_median_trapezium",
    "language": "r",
    "prompt": "# Write a function to find the median length of a trapezium.\nmedian_trapezium <- function(base1, base2, height) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- median_trapezium\n    if(!identical(candidate(15, 25, 35), 20)){quit('no', 1)}\n    if(!identical(candidate(10, 20, 30), 15)){quit('no', 1)}\n    if(!identical(candidate(6, 9, 4), 7.5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_161_remove_elements",
    "language": "r",
    "prompt": "# Write a function to remove all elements from a given list present in another list.\nremove_elements <- function(list1, list2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_161_remove_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_elements\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), c(2, 4, 6, 8)), list(1, 3, 5, 7, 9, 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), c(1, 3, 5, 7)), list(2, 4, 6, 8, 9, 10))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), c(5, 7)), list(1, 2, 3, 4, 6, 8, 9, 10))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_597_find_kth",
    "language": "r",
    "prompt": "# Write a function to find kth element from the given two sorted arrays.\nfind_kth <- function(arr1, arr2, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_597_find_kth.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_kth\n    if(!identical(candidate(c(2, 3, 6, 7, 9), c(1, 4, 8, 10), 5), 6)){quit('no', 1)}\n    if(!identical(candidate(c(100, 112, 256, 349, 770), c(72, 86, 113, 119, 265, 445, 892), 7), 256)){quit('no', 1)}\n    if(!identical(candidate(c(3, 4, 7, 8, 10), c(2, 5, 9, 11), 6), 8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_226_odd_values_string",
    "language": "r",
    "prompt": "# Write a python function to remove the characters which have odd index values of a given string.\nodd_values_string <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_226_odd_values_string.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- odd_values_string\n    if(!identical(candidate('abcdef'), 'ace')){quit('no', 1)}\n    if(!identical(candidate('python'), 'pto')){quit('no', 1)}\n    if(!identical(candidate('data'), 'dt')){quit('no', 1)}\n    if(!identical(candidate('lambs'), 'lms')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_278_count_first_elements",
    "language": "r",
    "prompt": "# Write a function to find the number of elements that occurs before the list element in the given tuple.\ncount_first_elements <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_278_count_first_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_first_elements\n    if(!identical(candidate(list(1, 5, 7, list(4, 6), 10)), 3)){quit('no', 1)}\n    if(!identical(candidate(list(2, 9, list(5, 7), 11)), 2)){quit('no', 1)}\n    if(!identical(candidate(list(11, 15, 5, 8, list(2, 3), 8)), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_269_ascii_value",
    "language": "r",
    "prompt": "# Write a function to find the ascii value of a character.\nascii_value <- function(k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- ascii_value\n    if(!identical(candidate('A'), 65)){quit('no', 1)}\n    if(!identical(candidate('R'), 82)){quit('no', 1)}\n    if(!identical(candidate('S'), 83)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_739_find_Index",
    "language": "r",
    "prompt": "# Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfind_Index <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Index\n    if(!identical(candidate(2), 4)){quit('no', 1)}\n    if(!identical(candidate(3), 14)){quit('no', 1)}\n    if(!identical(candidate(4), 45)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_19_test_duplicate",
    "language": "r",
    "prompt": "# Write a function to find whether a given array of integers contains any duplicate element.\ntest_duplicate <- function(arraynums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_19_test_duplicate.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- test_duplicate\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 4)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 2, 2, 3, 3, 4, 4, 5)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_62_smallest_num",
    "language": "r",
    "prompt": "# Write a python function to find smallest number in a list.\nsmallest_num <- function(xs) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_62_smallest_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- smallest_num\n    if(!identical(candidate(c(10, 20, 1, 45, 99)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(45, 46, 50, 60)), 45)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_746_sector_area",
    "language": "r",
    "prompt": "# Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nsector_area <- function(r, a) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sector_area\n    if(!identical(candidate(4, 45), 6.283185307179586)){quit('no', 1)}\n    if(!identical(candidate(9, 45), 31.808625617596654)){quit('no', 1)}\n    if(!identical(candidate(9, 361), NULL)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_142_count_samepair",
    "language": "r",
    "prompt": "# Write a function to count number items that are identical in the same position of three given lists.\ncount_samepair <- function(list1, list2, list3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_142_count_samepair.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_samepair\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8), c(2, 2, 3, 1, 2, 6, 7, 9), c(2, 1, 3, 1, 2, 6, 7, 9)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8), c(2, 2, 3, 1, 2, 6, 7, 8), c(2, 1, 3, 1, 2, 6, 7, 8)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 2, 6, 7, 8), c(2, 2, 3, 1, 2, 6, 7, 8), c(2, 1, 3, 1, 2, 6, 7, 8)), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_400_extract_freq",
    "language": "r",
    "prompt": "# Write a function to extract the number of unique tuples in the given list.\nextract_freq <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_400_extract_freq.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_freq\n    if(!identical(candidate(list(list(3, 4), list(1, 2), list(4, 3), list(5, 6))), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list(4, 15), list(2, 3), list(5, 4), list(6, 7))), 4)){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 16), list(2, 3), list(6, 5), list(6, 9))), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_595_min_Swaps",
    "language": "r",
    "prompt": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\nmin_Swaps <- function(str1, str2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_Swaps\n    if(!identical(candidate('1101', '1110'), 1)){quit('no', 1)}\n    if(!identical(candidate('111', '000'), 'Not Possible')){quit('no', 1)}\n    if(!identical(candidate('111', '110'), 'Not Possible')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_135_hexagonal_num",
    "language": "r",
    "prompt": "# Write a function to find the nth hexagonal number.\nhexagonal_num <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- hexagonal_num\n    if(!identical(candidate(10), 190)){quit('no', 1)}\n    if(!identical(candidate(5), 45)){quit('no', 1)}\n    if(!identical(candidate(7), 91)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_800_remove_all_spaces",
    "language": "r",
    "prompt": "# Write a function to remove all whitespaces from a string.\nremove_all_spaces <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_800_remove_all_spaces.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_all_spaces\n    if(!identical(candidate('python  program'), 'pythonprogram')){quit('no', 1)}\n    if(!identical(candidate('python   programming    language'), 'pythonprogramminglanguage')){quit('no', 1)}\n    if(!identical(candidate('python                     program'), 'pythonprogram')){quit('no', 1)}\n    if(!identical(candidate('   python                     program'), 'pythonprogram')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_127_multiply_int",
    "language": "r",
    "prompt": "# Write a function to multiply two integers.\nmultiply_int <- function(x, y) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- multiply_int\n    if(!identical(candidate(10, 20), 200)){quit('no', 1)}\n    if(!identical(candidate(5, 10), 50)){quit('no', 1)}\n    if(!identical(candidate(4, 8), 32)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_764_number_ctr",
    "language": "r",
    "prompt": "# Write a python function to count number of digits in a given string.\nnumber_ctr <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- number_ctr\n    if(!identical(candidate('program2bedone'), 1)){quit('no', 1)}\n    if(!identical(candidate('3wonders'), 1)){quit('no', 1)}\n    if(!identical(candidate('123'), 3)){quit('no', 1)}\n    if(!identical(candidate('3wond-1ers2'), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_767_get_pairs_count",
    "language": "r",
    "prompt": "# Write a python function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\nget_pairs_count <- function(arr, sum) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_pairs_count\n    if(!identical(candidate(c(1, 1, 1, 1), 2), 6)){quit('no', 1)}\n    if(!identical(candidate(c(1, 5, 7, -1, 5), 6), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, -2, 3), 1), 1)){quit('no', 1)}\n    if(!identical(candidate(c(-1, -2, 3), -3), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_99_decimal_to_binary",
    "language": "r",
    "prompt": "# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\ndecimal_to_binary <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- decimal_to_binary\n    if(!identical(candidate(8), '1000')){quit('no', 1)}\n    if(!identical(candidate(18), '10010')){quit('no', 1)}\n    if(!identical(candidate(7), '111')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_119_search",
    "language": "r",
    "prompt": "# Write a python function to find the element that appears only once in a sorted array.\nsearch <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- search\n    if(!identical(candidate(c(1, 1, 2, 2, 3)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8)), 8)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 2, 3, 3, 4, 4)), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_92_is_undulating",
    "language": "r",
    "prompt": "# Write a function to check whether the given number is undulating or not.\nis_undulating <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_undulating\n    if(!identical(candidate(1212121), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1991), FALSE)){quit('no', 1)}\n    if(!identical(candidate(121), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_105_count",
    "language": "r",
    "prompt": "# Write a python function to count true booleans in the given list.\ncount <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_105_count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count\n    if(!identical(candidate(c(TRUE, FALSE, TRUE)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(FALSE, FALSE)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(TRUE, TRUE, TRUE)), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_766_pair_wise",
    "language": "r",
    "prompt": "# Write a function to return a list of all pairs of consecutive items in a given list.\npair_wise <- function(l1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- pair_wise\n    if(!identical(candidate(c(1, 1, 2, 3, 3, 4, 4, 5)), list(list(1, 1), list(1, 2), list(2, 3), list(3, 3), list(3, 4), list(4, 4), list(4, 5)))){quit('no', 1)}\n    if(!identical(candidate(c(1, 5, 7, 9, 10)), list(list(1, 5), list(5, 7), list(7, 9), list(9, 10)))){quit('no', 1)}\n    if(!identical(candidate(c(5, 1, 9, 7, 10)), list(list(5, 1), list(1, 9), list(9, 7), list(7, 10)))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), list(list(1, 2), list(2, 3), list(3, 4), list(4, 5), list(5, 6), list(6, 7), list(7, 8), list(8, 9), list(9, 10)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_464_check_value",
    "language": "r",
    "prompt": "# Write a function to check if all values are same in a dictionary.\ncheck_value <- function(dict, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_464_check_value.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_value\n    if(!identical(candidate(list('Cierra Vega' = 12, 'Alden Cantrell' = 12, 'Kierra Gentry' = 12, 'Pierre Cox' = 12), 10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = 12, 'Alden Cantrell' = 12, 'Kierra Gentry' = 12, 'Pierre Cox' = 12), 12), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list('Cierra Vega' = 12, 'Alden Cantrell' = 12, 'Kierra Gentry' = 12, 'Pierre Cox' = 12), 5), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_443_largest_neg",
    "language": "r",
    "prompt": "# Write a python function to find the largest negative number from the given list.\nlargest_neg <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- largest_neg\n    if(!identical(candidate(c(1, 2, 3, -4, -6)), -6)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, -8, -9)), -9)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, -1)), -1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_602_first_repeated_char",
    "language": "r",
    "prompt": "# Write a python function to find the first repeated character in a given string.\nfirst_repeated_char <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_602_first_repeated_char.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- first_repeated_char\n    if(!identical(candidate('abcabc'), 'a')){quit('no', 1)}\n    if(!identical(candidate('abc'), NULL)){quit('no', 1)}\n    if(!identical(candidate('123123'), '1')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_770_odd_num_sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of fourth power of first n odd natural numbers.\nodd_num_sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- odd_num_sum\n    if(!identical(candidate(2), 82)){quit('no', 1)}\n    if(!identical(candidate(3), 707)){quit('no', 1)}\n    if(!identical(candidate(4), 3108)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_424_extract_rear",
    "language": "r",
    "prompt": "# Write a function to extract only the rear index element of each string in the given tuple.\nextract_rear <- function(test_tuple) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_424_extract_rear.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_rear\n    if(!identical(candidate(list('Mers', 'for', 'Vers')), list('s', 'r', 's'))){quit('no', 1)}\n    if(!identical(candidate(list('Avenge', 'for', 'People')), list('e', 'r', 'e'))){quit('no', 1)}\n    if(!identical(candidate(list('Gotta', 'get', 'go')), list('a', 't', 'o'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_133_sum_negativenum",
    "language": "r",
    "prompt": "# Write a function to calculate the sum of the negative numbers of a given list of numbers.\nsum_negativenum <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_133_sum_negativenum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_negativenum\n    if(!identical(candidate(c(2, 4, -6, -9, 11, -12, 14, -5, 17)), -32)){quit('no', 1)}\n    if(!identical(candidate(c(10, 15, -14, 13, -18, 12, -20)), -52)){quit('no', 1)}\n    if(!identical(candidate(c(19, -65, 57, 39, 152, -639, 121, 44, 90, -190)), -894)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_760_unique_Element",
    "language": "r",
    "prompt": "# Write a python function to check whether a list of numbers contains only one distinct element or not.\nunique_Element <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- unique_Element\n    if(!identical(candidate(c(1, 1, 1)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1, 2)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_281_all_unique",
    "language": "r",
    "prompt": "# Write a python function to check if the elements of a given list are unique or not.\nall_unique <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- all_unique\n    if(!identical(candidate(c(1, 2, 3)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1, 2)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_406_find_Parity",
    "language": "r",
    "prompt": "# Write a python function to find whether the parity of a given number is odd.\nfind_Parity <- function(x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_406_find_Parity.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Parity\n    if(!identical(candidate(12), FALSE)){quit('no', 1)}\n    if(!identical(candidate(7), TRUE)){quit('no', 1)}\n    if(!identical(candidate(10), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_562_Find_Max_Length",
    "language": "r",
    "prompt": "# Write a python function to find the length of the longest sublists.\nFind_Max_Length <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Find_Max_Length\n    if(!identical(candidate(list(list(1), list(1, 4), list(5, 6, 7, 8))), 4)){quit('no', 1)}\n    if(!identical(candidate(list(list(0, 1), list(2, 2), list(3, 2, 1))), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list(7), list(22, 23), list(13, 14, 15), list(10, 20, 30, 40, 50))), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_87_merge_dictionaries_three",
    "language": "r",
    "prompt": "# Write a function to merge three dictionaries into a single dictionary.\nmerge_dictionaries_three <- function(dict1, dict2, dict3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_87_merge_dictionaries_three.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- merge_dictionaries_three\n    if(!identical(candidate(list('R' = 'Red', 'B' = 'Black', 'P' = 'Pink'), list('G' = 'Green', 'W' = 'White'), list('O' = 'Orange', 'W' = 'White', 'B' = 'Black')), list('B' = 'Black', 'R' = 'Red', 'P' = 'Pink', 'G' = 'Green', 'W' = 'White', 'O' = 'Orange'))){quit('no', 1)}\n    if(!identical(candidate(list('R' = 'Red', 'B' = 'Black', 'P' = 'Pink'), list('G' = 'Green', 'W' = 'White'), list('L' = 'lavender', 'B' = 'Blue')), list('W' = 'White', 'P' = 'Pink', 'B' = 'Black', 'R' = 'Red', 'G' = 'Green', 'L' = 'lavender'))){quit('no', 1)}\n    if(!identical(candidate(list('R' = 'Red', 'B' = 'Black', 'P' = 'Pink'), list('L' = 'lavender', 'B' = 'Blue'), list('G' = 'Green', 'W' = 'White')), list('B' = 'Black', 'P' = 'Pink', 'R' = 'Red', 'G' = 'Green', 'L' = 'lavender', 'W' = 'White'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_11_remove_Occ",
    "language": "r",
    "prompt": "# Write a python function to remove first and last occurrence of a given character from the string.\nremove_Occ <- function(s, ch) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_Occ\n    if(!identical(candidate('hello', 'l'), 'heo')){quit('no', 1)}\n    if(!identical(candidate('abcda', 'a'), 'bcd')){quit('no', 1)}\n    if(!identical(candidate('PHP', 'P'), 'H')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_751_check_min_heap",
    "language": "r",
    "prompt": "# Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\ncheck_min_heap <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_min_heap\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 4, 5, 10, 15)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 10, 4, 5, 3, 15)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_410_min_val",
    "language": "r",
    "prompt": "# Write a function to find the minimum value in a given heterogeneous list.\nmin_val <- function(listval) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_410_min_val.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_val\n    if(!identical(candidate(list('Python', 3, 2, 4, 5, 'version')), 2)){quit('no', 1)}\n    if(!identical(candidate(list('Python', 15, 20, 25)), 15)){quit('no', 1)}\n    if(!identical(candidate(list('Python', 30, 20, 40, 50, 'version')), 20)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_578_interleave_lists",
    "language": "r",
    "prompt": "# Write a function to interleave 3 lists of the same length into a single flat list.\ninterleave_lists <- function(list1, list2, list3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_578_interleave_lists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- interleave_lists\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7), c(10, 20, 30, 40, 50, 60, 70), c(100, 200, 300, 400, 500, 600, 700)), list(1, 10, 100, 2, 20, 200, 3, 30, 300, 4, 40, 400, 5, 50, 500, 6, 60, 600, 7, 70, 700))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20), c(15, 2), c(5, 10)), list(10, 15, 5, 20, 2, 10))){quit('no', 1)}\n    if(!identical(candidate(c(11, 44), c(10, 15), c(20, 5)), list(11, 10, 20, 44, 15, 5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_90_len_log",
    "language": "r",
    "prompt": "# Write a python function to find the length of the longest word.\nlen_log <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- len_log\n    if(!identical(candidate(c('python', 'PHP', 'bigdata')), 7)){quit('no', 1)}\n    if(!identical(candidate(c('a', 'ab', 'abc')), 3)){quit('no', 1)}\n    if(!identical(candidate(c('small', 'big', 'tall')), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_452_loss_amount",
    "language": "r",
    "prompt": "# Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nloss_amount <- function(actual_cost, sale_amount) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- loss_amount\n    if(!identical(candidate(1500, 1200), 0)){quit('no', 1)}\n    if(!identical(candidate(100, 200), 100)){quit('no', 1)}\n    if(!identical(candidate(2000, 5000), 3000)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_798__sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of an array.\n_sum <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_798__sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- _sum\n    if(!identical(candidate(c(1, 2, 3)), 6)){quit('no', 1)}\n    if(!identical(candidate(c(15, 12, 13, 10)), 50)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 2)), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_393_max_length_list",
    "language": "r",
    "prompt": "# Write a function to find the list with maximum length.\nmax_length_list <- function(input_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_393_max_length_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_length_list\n    if(!identical(candidate(list(list(0), list(1, 3), list(5, 7), list(9, 11), list(13, 15, 17))), list(3, list(13, 15, 17)))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3, 4, 5), list(1, 2, 3, 4), list(1, 2, 3), list(1, 2), list(1))), list(5, list(1, 2, 3, 4, 5)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 4, 5), list(6, 7, 8, 9), list(10, 11, 12))), list(4, list(6, 7, 8, 9)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_272_rear_extract",
    "language": "r",
    "prompt": "# Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.\nrear_extract <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_272_rear_extract.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- rear_extract\n    if(!identical(candidate(list(list(1, 'Rash', 21), list(2, 'Varsha', 20), list(3, 'Kil', 19))), list(21, 20, 19))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 'Sai', 36), list(2, 'Ayesha', 25), list(3, 'Salman', 45))), list(36, 25, 45))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 'Sudeep', 14), list(2, 'Vandana', 36), list(3, 'Dawood', 56))), list(14, 36, 56))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_564_count_Pairs",
    "language": "r",
    "prompt": "# Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\ncount_Pairs <- function(arr, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_Pairs\n    if(!identical(candidate(c(1, 2, 1), 3), 2)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1, 1), 4), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5), 5), 10)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_438_count_bidirectional",
    "language": "r",
    "prompt": "# Write a function to count bidirectional tuple pairs.\ncount_bidirectional <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_bidirectional\n    if(!identical(candidate(list(list(5, 6), list(1, 2), list(6, 5), list(9, 1), list(6, 5), list(2, 1))), 3)){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 6), list(1, 3), list(6, 5), list(9, 1), list(6, 5), list(2, 1))), 2)){quit('no', 1)}\n    if(!identical(candidate(list(list(5, 6), list(1, 2), list(6, 5), list(9, 2), list(6, 5), list(2, 1))), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_640_remove_parenthesis",
    "language": "r",
    "prompt": "# Write a function to remove the parenthesis and what is inbetween them from a string.\nremove_parenthesis <- function(items) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_parenthesis\n    if(!identical(candidate(c('python (chrome)')), 'python')){quit('no', 1)}\n    if(!identical(candidate(c('string(.abc)')), 'string')){quit('no', 1)}\n    if(!identical(candidate(c('alpha(num)')), 'alpha')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_72_dif_Square",
    "language": "r",
    "prompt": "# Write a python function to check whether the given number can be represented as the difference of two squares or not.\ndif_Square <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- dif_Square\n    if(!identical(candidate(5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(15), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_448_cal_sum",
    "language": "r",
    "prompt": "# Write a function to calculate the sum of perrin numbers.\ncal_sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- cal_sum\n    if(!identical(candidate(9), 49)){quit('no', 1)}\n    if(!identical(candidate(10), 66)){quit('no', 1)}\n    if(!identical(candidate(11), 88)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_96_divisor",
    "language": "r",
    "prompt": "# Write a python function to find the number of divisors of a given integer.\ndivisor <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- divisor\n    if(!identical(candidate(15), 4)){quit('no', 1)}\n    if(!identical(candidate(12), 6)){quit('no', 1)}\n    if(!identical(candidate(9), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_296_get_Inv_Count",
    "language": "r",
    "prompt": "# Write a python function to count inversions in an array.\nget_Inv_Count <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_296_get_Inv_Count.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_Inv_Count\n    if(!identical(candidate(c(1, 20, 6, 4, 5)), 5)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 5, 6, 1)), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_57_find_Max_Num",
    "language": "r",
    "prompt": "# Write a python function to find the largest number that can be formed with the given list of digits.\nfind_Max_Num <- function(arr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Max_Num\n    if(!identical(candidate(c(1, 2, 3)), 321)){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6, 1)), 6541)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 9)), 9321)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_614_cummulative_sum",
    "language": "r",
    "prompt": "# Write a function to find the cumulative sum of all the values that are present in the given list of lists.\ncummulative_sum <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_614_cummulative_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- cummulative_sum\n    if(!identical(candidate(list(list(1, 3), list(5, 6, 7), list(2, 6))), 30)){quit('no', 1)}\n    if(!identical(candidate(list(list(2, 4), list(6, 7, 8), list(3, 7))), 37)){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(7, 8, 9), list(4, 8))), 44)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_623_nth_nums",
    "language": "r",
    "prompt": "# Write a function to compute the n-th power of each number in a list.\nnth_nums <- function(nums, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_623_nth_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- nth_nums\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2), list(1, 4, 9, 16, 25, 36, 49, 64, 81, 100))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 30), 3), list(1000, 8000, 27000))){quit('no', 1)}\n    if(!identical(candidate(c(12, 15), 5), list(248832, 759375))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_799_left_rotate",
    "language": "r",
    "prompt": "# Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.\nleft_rotate <- function(n, d) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_799_left_rotate.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- left_rotate\n    if(!identical(candidate(16, 2), 64)){quit('no', 1)}\n    if(!identical(candidate(10, 2), 40)){quit('no', 1)}\n    if(!identical(candidate(99, 3), 792)){quit('no', 1)}\n    if(!identical(candidate(99, 3), 792)){quit('no', 1)}\n    if(!identical(candidate(1, 3), 8)){quit('no', 1)}\n    if(!identical(candidate(5, 3), 40)){quit('no', 1)}\n    if(!identical(candidate(29, 3), 232)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_247_lps",
    "language": "r",
    "prompt": "# Write a function to find the length of the longest palindromic subsequence in the given string.\nlps <- function(str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_247_lps.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- lps\n    if(!identical(candidate('TENS FOR TENS'), 5)){quit('no', 1)}\n    if(!identical(candidate('CARDIO FOR CARDS'), 7)){quit('no', 1)}\n    if(!identical(candidate('PART OF THE JOURNEY IS PART'), 9)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_735_toggle_middle_bits",
    "language": "r",
    "prompt": "# Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\ntoggle_middle_bits <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- toggle_middle_bits\n    if(!identical(candidate(9), 15)){quit('no', 1)}\n    if(!identical(candidate(10), 12)){quit('no', 1)}\n    if(!identical(candidate(11), 13)){quit('no', 1)}\n    if(!identical(candidate(65), 127)){quit('no', 1)}\n    if(!identical(candidate(77), 115)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_132_tup_string",
    "language": "r",
    "prompt": "# Write a function to convert a list to a string.\ntup_string <- function(tup1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_132_tup_string.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tup_string\n    if(!identical(candidate(c('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's')), 'exercises')){quit('no', 1)}\n    if(!identical(candidate(c('p', 'y', 't', 'h', 'o', 'n')), 'python')){quit('no', 1)}\n    if(!identical(candidate(c('p', 'r', 'o', 'g', 'r', 'a', 'm')), 'program')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_460_Extract",
    "language": "r",
    "prompt": "# Write a python function to get the first element of each sublist.\nExtract <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Extract\n    if(!identical(candidate(list(list(1, 2), list(3, 4, 5), list(6, 7, 8, 9))), list(1, 3, 6))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2, 3), list(4, 5))), list(1, 4))){quit('no', 1)}\n    if(!identical(candidate(list(list(9, 8, 1), list(1, 2))), list(9, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_606_radian_degree",
    "language": "r",
    "prompt": "# Write a function to convert degrees to radians.\nradian_degree <- function(degree) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- radian_degree\n    if(!identical(candidate(90), 1.5707963267948966)){quit('no', 1)}\n    if(!identical(candidate(60), 1.0471975511965976)){quit('no', 1)}\n    if(!identical(candidate(120), 2.0943951023931953)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_167_next_power_of_2",
    "language": "r",
    "prompt": "# Write a python function to find the smallest power of 2 greater than or equal to n.\nnext_power_of_2 <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- next_power_of_2\n    if(!identical(candidate(0), 1)){quit('no', 1)}\n    if(!identical(candidate(5), 8)){quit('no', 1)}\n    if(!identical(candidate(17), 32)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_756_text_match_zero_one",
    "language": "r",
    "prompt": "# Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/python-exercises/re/python-re-exercise-3.php\ntext_match_zero_one <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_zero_one\n    if(!identical(candidate('ac'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('dc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abbbba'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('dsabbbba'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('asbbbba'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abaaa'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_633_pair_xor_Sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of xor of all pairs of numbers in the given list.\npair_xor_Sum <- function(arr, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- pair_xor_Sum\n    if(!identical(candidate(c(5, 9, 7, 6), 4), 47)){quit('no', 1)}\n    if(!identical(candidate(c(7, 3, 5), 3), 12)){quit('no', 1)}\n    if(!identical(candidate(c(7, 3), 2), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_458_rectangle_area",
    "language": "r",
    "prompt": "# Write a function to find the area of a rectangle.\nrectangle_area <- function(l, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_458_rectangle_area.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- rectangle_area\n    if(!identical(candidate(10, 20), 200)){quit('no', 1)}\n    if(!identical(candidate(10, 5), 50)){quit('no', 1)}\n    if(!identical(candidate(4, 2), 8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_738_geometric_sum",
    "language": "r",
    "prompt": "# Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\ngeometric_sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- geometric_sum\n    if(!identical(candidate(7), 1.9921875)){quit('no', 1)}\n    if(!identical(candidate(4), 1.9375)){quit('no', 1)}\n    if(!identical(candidate(8), 1.99609375)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_426_filter_oddnumbers",
    "language": "r",
    "prompt": "# Write a function to filter odd numbers.\nfilter_oddnumbers <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_426_filter_oddnumbers.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- filter_oddnumbers\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), list(1, 3, 5, 7, 9))){quit('no', 1)}\n    if(!identical(candidate(c(10, 20, 45, 67, 84, 93)), list(45, 67, 93))){quit('no', 1)}\n    if(!identical(candidate(c(5, 7, 9, 8, 6, 4, 3)), list(5, 7, 9, 3))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_437_remove_odd",
    "language": "r",
    "prompt": "# Write a function to remove odd characters in a string.\nremove_odd <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_437_remove_odd.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_odd\n    if(!identical(candidate('python'), 'yhn')){quit('no', 1)}\n    if(!identical(candidate('program'), 'rga')){quit('no', 1)}\n    if(!identical(candidate('language'), 'agae')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_227_min_of_three",
    "language": "r",
    "prompt": "# Write a function to find minimum of three numbers.\nmin_of_three <- function(a, b, c) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_of_three\n    if(!identical(candidate(10, 20, 0), 0)){quit('no', 1)}\n    if(!identical(candidate(19, 15, 18), 15)){quit('no', 1)}\n    if(!identical(candidate(-10, -20, -30), -30)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_172_count_occurance",
    "language": "r",
    "prompt": "# Write a function to count the number of occurence of the string 'std' in a given string.\ncount_occurance <- function(s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_occurance\n    if(!identical(candidate('letstdlenstdporstd'), 3)){quit('no', 1)}\n    if(!identical(candidate('truststdsolensporsd'), 1)){quit('no', 1)}\n    if(!identical(candidate('makestdsostdworthit'), 2)){quit('no', 1)}\n    if(!identical(candidate('stds'), 1)){quit('no', 1)}\n    if(!identical(candidate(''), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_434_text_match_one",
    "language": "r",
    "prompt": "# Write a function that matches a string that has an a followed by one or more b's.\ntext_match_one <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_one\n    if(!identical(candidate('ac'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('dc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abba'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_291_count_no_of_ways",
    "language": "r",
    "prompt": "# Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\ncount_no_of_ways <- function(n, k) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_no_of_ways\n    if(!identical(candidate(2, 4), 16)){quit('no', 1)}\n    if(!identical(candidate(3, 2), 6)){quit('no', 1)}\n    if(!identical(candidate(4, 4), 228)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_471_find_remainder",
    "language": "r",
    "prompt": "# Write a python function to find the product of the array multiplication modulo n.\nfind_remainder <- function(arr, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_471_find_remainder.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_remainder\n    if(!identical(candidate(c(100, 10, 5, 25, 35, 14), 11), 9)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1), 1), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 1), 2), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_808_check_K",
    "language": "r",
    "prompt": "# Write a function to check if the given tuples contain the k or not.\ncheck_K <- function(test_tup, K) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_808_check_K.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_K\n    if(!identical(candidate(c(10, 4, 5, 6, 8), 6), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), 7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9, 44, 11, 12), 11), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_68_is_Monotonic",
    "language": "r",
    "prompt": "# Write a python function to check whether the given array is monotonic or not.\nis_Monotonic <- function(A) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_Monotonic\n    if(!identical(candidate(c(6, 5, 4, 4)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 2, 3)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 3, 2)), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_430_parabola_directrix",
    "language": "r",
    "prompt": "# Write a function to find the directrix of a parabola.\nparabola_directrix <- function(a, b, c) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- parabola_directrix\n    if(!identical(candidate(5, 3, 2), -198)){quit('no', 1)}\n    if(!identical(candidate(9, 8, 4), -2336)){quit('no', 1)}\n    if(!identical(candidate(2, 4, 6), -130)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_618_div_list",
    "language": "r",
    "prompt": "# Write a function to divide two lists element wise.\ndiv_list <- function(nums1, nums2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_618_div_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- div_list\n    if(!identical(candidate(c(4, 5, 6), c(1, 2, 3)), list(4.0, 2.5, 2.0))){quit('no', 1)}\n    if(!identical(candidate(c(3, 2), c(1, 4)), list(3.0, 0.5))){quit('no', 1)}\n    if(!identical(candidate(c(90, 120), c(50, 70)), list(1.8, 1.7142857142857142))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_421_concatenate_tuple",
    "language": "r",
    "prompt": "# Write a function to concatenate each element of tuple by the delimiter.\nconcatenate_tuple <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_421_concatenate_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- concatenate_tuple\n    if(!identical(candidate(list('ID', 'is', 4, 'UTS')), 'ID-is-4-UTS')){quit('no', 1)}\n    if(!identical(candidate(list('QWE', 'is', 4, 'RTY')), 'QWE-is-4-RTY')){quit('no', 1)}\n    if(!identical(candidate(list('ZEN', 'is', 4, 'OP')), 'ZEN-is-4-OP')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_750_add_tuple",
    "language": "r",
    "prompt": "# Write a function to add the given tuple to the given list.\nadd_tuple <- function(test_list, test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- add_tuple\n    if(!identical(candidate(c(5, 6, 7), list(9, 10)), list(5, 6, 7, 9, 10))){quit('no', 1)}\n    if(!identical(candidate(c(6, 7, 8), list(10, 11)), list(6, 7, 8, 10, 11))){quit('no', 1)}\n    if(!identical(candidate(c(7, 8, 9), list(11, 12)), list(7, 8, 9, 11, 12))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_304_find_Element",
    "language": "r",
    "prompt": "# Write a python function to find element at a given index after number of rotations.\nfind_Element <- function(arr, ranges, rotations, index) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_304_find_Element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_Element\n    if(!identical(candidate(c(1, 2, 3, 4, 5), list(list(0, 2), list(0, 3)), 2, 1), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4), list(list(0, 1), list(0, 2)), 1, 2), 3)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6), list(list(0, 1), list(0, 2)), 1, 1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_740_tuple_to_dict",
    "language": "r",
    "prompt": "# Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/\ntuple_to_dict <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tuple_to_dict\n    if(!identical(candidate(list(1, 5, 7, 10, 13, 5)), list(1 = 5, 7 = 10, 13 = 5))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, 5, 6)), list(1 = 2, 3 = 4, 5 = 6))){quit('no', 1)}\n    if(!identical(candidate(list(7, 8, 9, 10, 11, 12)), list(7 = 8, 9 = 10, 11 = 12))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_627_find_First_Missing",
    "language": "r",
    "prompt": "# Write a python function to find the smallest missing number from a sorted list of natural numbers.\nfind_First_Missing <- function(array) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_627_find_First_Missing.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_First_Missing\n    if(!identical(candidate(c(0, 1, 2, 3)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1, 2, 6, 9)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 5, 8, 9)), 0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_294_max_val",
    "language": "r",
    "prompt": "# Write a function to find the maximum value in a given heterogeneous list.\nmax_val <- function(listval) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_294_max_val.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_val\n    if(!identical(candidate(list('Python', 3, 2, 4, 5, 'version')), 5)){quit('no', 1)}\n    if(!identical(candidate(list('Python', 15, 20, 25)), 25)){quit('no', 1)}\n    if(!identical(candidate(list('Python', 30, 20, 40, 50, 'version')), 50)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_165_count_char_position",
    "language": "r",
    "prompt": "# Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\ncount_char_position <- function(str1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_char_position\n    if(!identical(candidate('xbcefg'), 2)){quit('no', 1)}\n    if(!identical(candidate('ABcED'), 3)){quit('no', 1)}\n    if(!identical(candidate('AbgdeF'), 5)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_589_perfect_squares",
    "language": "r",
    "prompt": "# Write a function to find perfect squares between two given numbers.\nperfect_squares <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_589_perfect_squares.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- perfect_squares\n    if(!identical(candidate(1, 30), list(1, 4, 9, 16, 25))){quit('no', 1)}\n    if(!identical(candidate(50, 100), list(64, 81, 100))){quit('no', 1)}\n    if(!identical(candidate(100, 200), list(100, 121, 144, 169, 196))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_744_check_none",
    "language": "r",
    "prompt": "# Write a function to check if the given tuple has any none value or not.\ncheck_none <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_744_check_none.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_none\n    if(!identical(candidate(list(10, 4, 5, 6, NULL)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(list(7, 8, 9, 11, 14)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4, NULL)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_726_multiply_elements",
    "language": "r",
    "prompt": "# Write a function that takes as input a list of numbers (t_1,...,t_{N+1}) and returns a list of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.\nmultiply_elements <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_726_multiply_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- multiply_elements\n    if(!identical(candidate(c(1, 5, 7, 8, 10)), list(5, 35, 56, 80))){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 5, 6, 7)), list(8, 20, 30, 42))){quit('no', 1)}\n    if(!identical(candidate(c(12, 13, 14, 9, 15)), list(156, 182, 126, 135))){quit('no', 1)}\n    if(!identical(candidate(c(12)), list())){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_736_left_insertion",
    "language": "r",
    "prompt": "# Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php\nleft_insertion <- function(a, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- left_insertion\n    if(!identical(candidate(c(1, 2, 4, 5), 6), 4)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 5), 3), 2)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 5), 7), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_63_max_difference",
    "language": "r",
    "prompt": "# Write a function to find the maximum difference between available pairs in the given tuple list.\nmax_difference <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- max_difference\n    if(!identical(candidate(list(list(3, 5), list(1, 7), list(10, 3), list(1, 2))), 7)){quit('no', 1)}\n    if(!identical(candidate(list(list(4, 6), list(2, 17), list(9, 13), list(11, 12))), 15)){quit('no', 1)}\n    if(!identical(candidate(list(list(12, 35), list(21, 27), list(13, 23), list(41, 22))), 23)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_264_dog_age",
    "language": "r",
    "prompt": "# Write a function to calculate a dog's age in dog's years.\ndog_age <- function(h_age) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_264_dog_age.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- dog_age\n    if(!identical(candidate(12), 61)){quit('no', 1)}\n    if(!identical(candidate(15), 73)){quit('no', 1)}\n    if(!identical(candidate(24), 109)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_273_substract_elements",
    "language": "r",
    "prompt": "# Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\nsubstract_elements <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- substract_elements\n    if(!identical(candidate(list(10, 4, 5), list(2, 5, 18)), list(8, -1, -13))){quit('no', 1)}\n    if(!identical(candidate(list(11, 2, 3), list(24, 45, 16)), list(-13, -43, -13))){quit('no', 1)}\n    if(!identical(candidate(list(7, 18, 9), list(10, 11, 12)), list(-3, 7, -3))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_83_get_Char",
    "language": "r",
    "prompt": "# Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nget_Char <- function(strr) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_Char\n    if(!identical(candidate('abc'), 'f')){quit('no', 1)}\n    if(!identical(candidate('gfg'), 't')){quit('no', 1)}\n    if(!identical(candidate('ab'), 'c')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_91_find_substring",
    "language": "r",
    "prompt": "# Write a function to check if a string is present as a substring in a given list of string values.\nfind_substring <- function(str1, sub_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_substring\n    if(!identical(candidate(c('red', 'black', 'white', 'green', 'orange'), 'ack'), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c('red', 'black', 'white', 'green', 'orange'), 'abc'), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c('red', 'black', 'white', 'green', 'orange'), 'ange'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_100_next_smallest_palindrome",
    "language": "r",
    "prompt": "# Write a function to find the next smallest palindrome of a specified integer, returned as an integer.\nnext_smallest_palindrome <- function(num) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_100_next_smallest_palindrome.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- next_smallest_palindrome\n    if(!identical(candidate(99), 101)){quit('no', 1)}\n    if(!identical(candidate(1221), 1331)){quit('no', 1)}\n    if(!identical(candidate(120), 121)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_282_sub_list",
    "language": "r",
    "prompt": "# Write a function to subtract two lists element-wise.\nsub_list <- function(nums1, nums2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_282_sub_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sub_list\n    if(!identical(candidate(c(1, 2, 3), c(4, 5, 6)), list(-3, -3, -3))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2), c(3, 4)), list(-2, -2))){quit('no', 1)}\n    if(!identical(candidate(c(90, 120), c(50, 70)), list(40, 50))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_790_even_position",
    "language": "r",
    "prompt": "# Write a python function to check whether every even index contains even numbers of a given list.\neven_position <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- even_position\n    if(!identical(candidate(c(3, 2, 1)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(2, 1, 4)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_411_snake_to_camel",
    "language": "r",
    "prompt": "# Write a function to convert the given snake case string to camel case string.\nsnake_to_camel <- function(word) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- snake_to_camel\n    if(!identical(candidate('android_tv'), 'AndroidTv')){quit('no', 1)}\n    if(!identical(candidate('google_pixel'), 'GooglePixel')){quit('no', 1)}\n    if(!identical(candidate('apple_watch'), 'AppleWatch')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_754_extract_index_list",
    "language": "r",
    "prompt": "# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\nextract_index_list <- function(l1, l2, l3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- extract_index_list\n    if(!identical(candidate(c(1, 1, 3, 4, 5, 6, 7), c(0, 1, 2, 3, 4, 5, 7), c(0, 1, 2, 3, 4, 5, 7)), list(1, 7))){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 3, 4, 5, 6, 7), c(0, 1, 2, 3, 4, 6, 5), c(0, 1, 2, 3, 4, 6, 7)), list(1, 6))){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 3, 4, 6, 5, 6), c(0, 1, 2, 3, 4, 5, 7), c(0, 1, 2, 3, 4, 5, 7)), list(1, 5))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 6, 6, 6), c(0, 1, 2, 3, 4, 5, 7), c(0, 1, 2, 3, 4, 5, 7)), list())){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_56_checks",
    "language": "r",
    "prompt": "# Write a python function to check if a given number is one less than twice its reverse.\nchecks <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- checks\n    if(!identical(candidate(70), FALSE)){quit('no', 1)}\n    if(!identical(candidate(23), FALSE)){quit('no', 1)}\n    if(!identical(candidate(73), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_724_power_base_sum",
    "language": "r",
    "prompt": "# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\npower_base_sum <- function(base, power) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- power_base_sum\n    if(!identical(candidate(2, 100), 115)){quit('no', 1)}\n    if(!identical(candidate(8, 10), 37)){quit('no', 1)}\n    if(!identical(candidate(8, 15), 62)){quit('no', 1)}\n    if(!identical(candidate(3, 3), 9)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_268_find_star_num",
    "language": "r",
    "prompt": "# Write a function to find the n'th star number.\nfind_star_num <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_star_num\n    if(!identical(candidate(3), 37)){quit('no', 1)}\n    if(!identical(candidate(4), 73)){quit('no', 1)}\n    if(!identical(candidate(5), 121)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_251_insert_element",
    "language": "r",
    "prompt": "# Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.\ninsert_element <- function(list, element) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_251_insert_element.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- insert_element\n    if(!identical(candidate(c('Red', 'Green', 'Black'), 'c'), list('c', 'Red', 'c', 'Green', 'c', 'Black'))){quit('no', 1)}\n    if(!identical(candidate(c('python', 'java'), 'program'), list('program', 'python', 'program', 'java'))){quit('no', 1)}\n    if(!identical(candidate(c('happy', 'sad'), 'laugh'), list('laugh', 'happy', 'laugh', 'sad'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_428_shell_sort",
    "language": "r",
    "prompt": "# Write a function to sort the given array by using shell sort.\nshell_sort <- function(my_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- shell_sort\n    if(!identical(candidate(c(12, 23, 4, 5, 3, 2, 12, 81, 56, 95)), list(2, 3, 4, 5, 12, 12, 23, 56, 81, 95))){quit('no', 1)}\n    if(!identical(candidate(c(24, 22, 39, 34, 87, 73, 68)), list(22, 24, 34, 39, 68, 73, 87))){quit('no', 1)}\n    if(!identical(candidate(c(32, 30, 16, 96, 82, 83, 74)), list(16, 30, 32, 74, 82, 83, 96))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_476_big_sum",
    "language": "r",
    "prompt": "# Write a python function to find the sum of the largest and smallest value in a given array.\nbig_sum <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- big_sum\n    if(!identical(candidate(c(1, 2, 3)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 2, 3, 4)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 6)), 8)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_465_drop_empty",
    "language": "r",
    "prompt": "# Write a function to drop empty items from a given dictionary.\ndrop_empty <- function(dict1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_465_drop_empty.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- drop_empty\n    if(!identical(candidate(list('c1' = 'Red', 'c2' = 'Green', 'c3' = NULL)), list('c1' = 'Red', 'c2' = 'Green'))){quit('no', 1)}\n    if(!identical(candidate(list('c1' = 'Red', 'c2' = NULL, 'c3' = NULL)), list('c1' = 'Red'))){quit('no', 1)}\n    if(!identical(candidate(list('c1' = NULL, 'c2' = 'Green', 'c3' = NULL)), list('c2' = 'Green'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_454_text_match_wordz",
    "language": "r",
    "prompt": "# Write a function that matches a word containing 'z'.\ntext_match_wordz <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_454_text_match_wordz.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- text_match_wordz\n    if(!identical(candidate('pythonz.'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('xyz.'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('  lang  .'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_605_prime_num",
    "language": "r",
    "prompt": "# Write a function to check if the given integer is a prime number.\nprime_num <- function(num) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_605_prime_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- prime_num\n    if(!identical(candidate(13), TRUE)){quit('no', 1)}\n    if(!identical(candidate(7), TRUE)){quit('no', 1)}\n    if(!identical(candidate(-1010), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_108_merge_sorted_list",
    "language": "r",
    "prompt": "# Write a function to merge three lists into a single sorted list.\nmerge_sorted_list <- function(num1, num2, num3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- merge_sorted_list\n    if(!identical(candidate(c(25, 24, 15, 4, 5, 29, 110), c(19, 20, 11, 56, 25, 233, 154), c(24, 26, 54, 48)), list(4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233))){quit('no', 1)}\n    if(!identical(candidate(c(1, 3, 5, 6, 8, 9), c(2, 5, 7, 11), c(1, 4, 7, 8, 12)), list(1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12))){quit('no', 1)}\n    if(!identical(candidate(c(18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1), c(25, 35, 22, 85, 14, 65, 75, 25, 58), c(12, 74, 9, 50, 61, 41)), list(1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_639_sample_nam",
    "language": "r",
    "prompt": "# Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.\nsample_nam <- function(sample_names) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sample_nam\n    if(!identical(candidate(c('sally', 'Dylan', 'rebecca', 'Diana', 'Joanne', 'keith')), 16)){quit('no', 1)}\n    if(!identical(candidate(c('php', 'res', 'Python', 'abcd', 'Java', 'aaa')), 10)){quit('no', 1)}\n    if(!identical(candidate(c('abcd', 'Python', 'abba', 'aba')), 6)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_409_min_product_tuple",
    "language": "r",
    "prompt": "# Write a function to find the minimum product from the pairs of tuples within a given list.\nmin_product_tuple <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_product_tuple\n    if(!identical(candidate(list(list(2, 7), list(2, 6), list(1, 8), list(4, 9))), 8)){quit('no', 1)}\n    if(!identical(candidate(list(list(10, 20), list(15, 2), list(5, 10))), 30)){quit('no', 1)}\n    if(!identical(candidate(list(list(11, 44), list(10, 15), list(20, 5), list(12, 9))), 100)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_791_remove_nested",
    "language": "r",
    "prompt": "# Write a function to remove tuples from the given tuple.\nremove_nested <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_791_remove_nested.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- remove_nested\n    if(!identical(candidate(list(1, 5, 7, list(4, 6), 10)), list(1, 5, 7, 10))){quit('no', 1)}\n    if(!identical(candidate(list(2, 6, 8, list(5, 7), 11)), list(2, 6, 8, 11))){quit('no', 1)}\n    if(!identical(candidate(list(3, 7, 9, list(6, 8), 12)), list(3, 7, 9, 12))){quit('no', 1)}\n    if(!identical(candidate(list(3, 7, 9, list(6, 8), list(5, 12), 12)), list(3, 7, 9, 12))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_591_swap_List",
    "language": "r",
    "prompt": "# Write a python function to interchange the first and last elements in a list.\nswap_List <- function(newList) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- swap_List\n    if(!identical(candidate(c(12, 35, 9, 56, 24)), list(24, 35, 9, 56, 12))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), list(3, 2, 1))){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6)), list(6, 5, 4))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_419_round_and_sum",
    "language": "r",
    "prompt": "# Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.\nround_and_sum <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_419_round_and_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- round_and_sum\n    if(!identical(candidate(list(22.4, 4.0, -16.22, -9.1, 11.0, -12.22, 14.2, -5.2, 17.5)), 243)){quit('no', 1)}\n    if(!identical(candidate(list(5, 2, 9, 24.3, 29)), 345)){quit('no', 1)}\n    if(!identical(candidate(list(25.0, 56.7, 89.2)), 513)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_84_sequence",
    "language": "r",
    "prompt": "# Write a function to find the nth number in the newman conway sequence.\nsequence <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_84_sequence.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sequence\n    if(!identical(candidate(10), 6)){quit('no', 1)}\n    if(!identical(candidate(2), 1)){quit('no', 1)}\n    if(!identical(candidate(3), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_260_newman_prime",
    "language": "r",
    "prompt": "# Write a function to find the nth newman\u2013shanks\u2013williams prime number.\nnewman_prime <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_260_newman_prime.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- newman_prime\n    if(!identical(candidate(3), 7)){quit('no', 1)}\n    if(!identical(candidate(4), 17)){quit('no', 1)}\n    if(!identical(candidate(5), 41)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_418_Find_Max",
    "language": "r",
    "prompt": "# Write a python function to find the element of a list having maximum length.\nFind_Max <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Find_Max\n    if(!identical(candidate(list(list('A'), list('A', 'B'), list('A', 'B', 'C'))), list('A', 'B', 'C'))){quit('no', 1)}\n    if(!identical(candidate(list(list(1), list(1, 2), list(1, 2, 3))), list(1, 2, 3))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 1), list(1, 2, 3), list(1, 5, 6, 1))), list(1, 5, 6, 1))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_565_split",
    "language": "r",
    "prompt": "# Write a python function to split a string into characters.\nsplit <- function(word) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_565_split.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- split\n    if(!identical(candidate('python'), list('p', 'y', 't', 'h', 'o', 'n'))){quit('no', 1)}\n    if(!identical(candidate('Name'), list('N', 'a', 'm', 'e'))){quit('no', 1)}\n    if(!identical(candidate('program'), list('p', 'r', 'o', 'g', 'r', 'a', 'm'))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_778_pack_consecutive_duplicates",
    "language": "r",
    "prompt": "# Write a function to pack consecutive duplicates of a given list elements into sublists.\npack_consecutive_duplicates <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- pack_consecutive_duplicates\n    if(!identical(candidate(list(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)), list(list(0, 0), list(1), list(2), list(3), list(4, 4), list(5), list(6, 6, 6), list(7), list(8), list(9), list(4, 4)))){quit('no', 1)}\n    if(!identical(candidate(list(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)), list(list(10, 10), list(15), list(19), list(18, 18), list(17), list(26, 26), list(17), list(18), list(10)))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'a', 'b', 'c', 'd', 'd')), list(list('a', 'a'), list('b'), list('c'), list('d', 'd')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_753_min_k",
    "language": "r",
    "prompt": "# Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases\nmin_k <- function(test_list, K) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- min_k\n    if(!identical(candidate(list(list('Manjeet', 10), list('Akshat', 4), list('Akash', 2), list('Nikhil', 8)), 2), list(list('Akash', 2), list('Akshat', 4)))){quit('no', 1)}\n    if(!identical(candidate(list(list('Sanjeev', 11), list('Angat', 5), list('Akash', 3), list('Nepin', 9)), 3), list(list('Akash', 3), list('Angat', 5), list('Nepin', 9)))){quit('no', 1)}\n    if(!identical(candidate(list(list('tanmay', 14), list('Amer', 11), list('Ayesha', 9), list('SKD', 16)), 1), list(list('Ayesha', 9)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_113_check_integer",
    "language": "r",
    "prompt": "# Write a function to check if a string represents an integer or not.\ncheck_integer <- function(text) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_integer\n    if(!identical(candidate('python'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('1'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('12345'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_743_rotate_right",
    "language": "r",
    "prompt": "# Write a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/\nrotate_right <- function(list, m) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- rotate_right\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 3), list(8, 9, 10, 1, 2, 3, 4, 5, 6, 7))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2), list(9, 10, 1, 2, 3, 4, 5, 6, 7, 8))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 5), list(6, 7, 8, 9, 10, 1, 2, 3, 4, 5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_598_armstrong_number",
    "language": "r",
    "prompt": "# Write a function to check whether the given number is armstrong or not.\narmstrong_number <- function(number) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- armstrong_number\n    if(!identical(candidate(153), TRUE)){quit('no', 1)}\n    if(!identical(candidate(259), FALSE)){quit('no', 1)}\n    if(!identical(candidate(4458), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_398_sum_of_digits",
    "language": "r",
    "prompt": "# Write a function to compute the sum of digits of each number of a given list.\nsum_of_digits <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_of_digits\n    if(!identical(candidate(list(10, 2, 56)), 14)){quit('no', 1)}\n    if(!identical(candidate(list(list(10, 20, 4, 5, 'b', 70, 'a'))), 19)){quit('no', 1)}\n    if(!identical(candidate(list(10, 20, -4, 5, -70)), 19)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_229_re_arrange_array",
    "language": "r",
    "prompt": "# Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\nre_arrange_array <- function(arr, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- re_arrange_array\n    if(!identical(candidate(c(-1, 2, -3, 4, 5, 6, -7, 8, 9), 9), list(-1, -3, -7, 4, 5, 6, 2, 8, 9))){quit('no', 1)}\n    if(!identical(candidate(c(12, -14, -26, 13, 15), 5), list(-14, -26, 12, 13, 15))){quit('no', 1)}\n    if(!identical(candidate(c(10, 24, 36, -42, -39, -78, 85), 7), list(-42, -39, -78, 10, 24, 36, 85))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_638_wind_chill",
    "language": "r",
    "prompt": "# Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.\nwind_chill <- function(v, t) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_638_wind_chill.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- wind_chill\n    if(!identical(candidate(120, 35), 40)){quit('no', 1)}\n    if(!identical(candidate(40, 20), 19)){quit('no', 1)}\n    if(!identical(candidate(10, 8), 6)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_608_bell_Number",
    "language": "r",
    "prompt": "# Write a python function to find nth bell number.\nbell_Number <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- bell_Number\n    if(!identical(candidate(2), 2)){quit('no', 1)}\n    if(!identical(candidate(3), 5)){quit('no', 1)}\n    if(!identical(candidate(4), 15)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_295_sum_div",
    "language": "r",
    "prompt": "# Write a function to return the sum of all divisors of a number.\nsum_div <- function(number) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_295_sum_div.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sum_div\n    if(!identical(candidate(8), 7)){quit('no', 1)}\n    if(!identical(candidate(12), 16)){quit('no', 1)}\n    if(!identical(candidate(7), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_630_get_coordinates",
    "language": "r",
    "prompt": "# Write a function to extract all the adjacent coordinates of the given coordinate tuple.\nget_coordinates <- function(test_tup) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_coordinates\n    if(!identical(candidate(list(3, 4)), list(list(2, 3), list(2, 4), list(2, 5), list(3, 3), list(3, 4), list(3, 5), list(4, 3), list(4, 4), list(4, 5)))){quit('no', 1)}\n    if(!identical(candidate(list(4, 5)), list(list(3, 4), list(3, 5), list(3, 6), list(4, 4), list(4, 5), list(4, 6), list(5, 4), list(5, 5), list(5, 6)))){quit('no', 1)}\n    if(!identical(candidate(list(5, 6)), list(list(4, 5), list(4, 6), list(4, 7), list(5, 5), list(5, 6), list(5, 7), list(6, 5), list(6, 6), list(6, 7)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_579_find_dissimilar",
    "language": "r",
    "prompt": "# Write a function to find the dissimilar elements in the given two tuples.\nfind_dissimilar <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_579_find_dissimilar.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_dissimilar\n    if(!identical(candidate(list(3, 4, 5, 6), list(5, 7, 4, 10)), list(3, 6, 7, 10))){quit('no', 1)}\n    if(!identical(candidate(list(1, 2, 3, 4), list(7, 2, 3, 9)), list(1, 4, 7, 9))){quit('no', 1)}\n    if(!identical(candidate(list(21, 11, 25, 26), list(26, 34, 21, 36)), list(34, 36, 11, 25))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_125_find_length",
    "language": "r",
    "prompt": "# Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfind_length <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_length\n    if(!identical(candidate('11000010001'), 6)){quit('no', 1)}\n    if(!identical(candidate('10111'), 1)){quit('no', 1)}\n    if(!identical(candidate('11011101100101'), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_262_split_two_parts",
    "language": "r",
    "prompt": "# Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\nsplit_two_parts <- function(list1, L) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- split_two_parts\n    if(!identical(candidate(list(1, 1, 2, 3, 4, 4, 5, 1), 3), list(list(1, 1, 2), list(3, 4, 4, 5, 1)))){quit('no', 1)}\n    if(!identical(candidate(list('a', 'b', 'c', 'd'), 2), list(list('a', 'b'), list('c', 'd')))){quit('no', 1)}\n    if(!identical(candidate(list('p', 'y', 't', 'h', 'o', 'n'), 4), list(list('p', 'y', 't', 'h'), list('o', 'n')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_771_check_expression",
    "language": "r",
    "prompt": "# Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\ncheck_expression <- function(exp) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_771_check_expression.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_expression\n    if(!identical(candidate('{()}[{}]'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('{()}[{]'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('{()}[{}][]({})'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_801_test_three_equal",
    "language": "r",
    "prompt": "# Write a python function to count the number of equal numbers from three given integers.\ntest_three_equal <- function(x, y, z) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- test_three_equal\n    if(!identical(candidate(1, 1, 1), 3)){quit('no', 1)}\n    if(!identical(candidate(-1, -2, -3), 0)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 2), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_389_find_lucas",
    "language": "r",
    "prompt": "# Write a function to find the n'th lucas number.\nfind_lucas <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_389_find_lucas.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_lucas\n    if(!identical(candidate(9), 76)){quit('no', 1)}\n    if(!identical(candidate(4), 7)){quit('no', 1)}\n    if(!identical(candidate(3), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_102_snake_to_camel",
    "language": "r",
    "prompt": "# Write a function to convert a snake case string to camel case string.\nsnake_to_camel <- function(word) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- snake_to_camel\n    if(!identical(candidate('python_program'), 'PythonProgram')){quit('no', 1)}\n    if(!identical(candidate('python_language'), 'PythonLanguage')){quit('no', 1)}\n    if(!identical(candidate('programming_language'), 'ProgrammingLanguage')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_604_reverse_words",
    "language": "r",
    "prompt": "# Write a function to reverse words seperated by spaces in a given string.\nreverse_words <- function(s) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- reverse_words\n    if(!identical(candidate('python program'), 'program python')){quit('no', 1)}\n    if(!identical(candidate('java language'), 'language java')){quit('no', 1)}\n    if(!identical(candidate('indian man'), 'man indian')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_624_is_upper",
    "language": "r",
    "prompt": "# Write a python function to convert a given string to uppercase.\nis_upper <- function(string) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_upper\n    if(!identical(candidate('person'), 'PERSON')){quit('no', 1)}\n    if(!identical(candidate('final'), 'FINAL')){quit('no', 1)}\n    if(!identical(candidate('Valid'), 'VALID')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_558_digit_distance_nums",
    "language": "r",
    "prompt": "# Write a python function to find the sum of the per-digit difference between two integers.\ndigit_distance_nums <- function(n1, n2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- digit_distance_nums\n    if(!identical(candidate(1, 2), 1)){quit('no', 1)}\n    if(!identical(candidate(23, 56), 6)){quit('no', 1)}\n    if(!identical(candidate(123, 256), 7)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_143_find_lists",
    "language": "r",
    "prompt": "# Write a function to find number of lists present in the given list.\nfind_lists <- function(Input) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_143_find_lists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_lists\n    if(!identical(candidate(list(list(1, 2, 3, 4), list(5, 6, 7, 8))), 2)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2), list(3, 4), list(5, 6))), 3)){quit('no', 1)}\n    if(!identical(candidate(list(9, 8, 7, 6, 5, 4, 3, 2, 1)), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_615_average_tuple",
    "language": "r",
    "prompt": "# Write a function which takes a lists of lists and returns the average value for each sublist as a list.\naverage_tuple <- function(nums) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- average_tuple\n    if(!identical(candidate(list(list(10, 10, 10, 12), list(30, 45, 56, 45), list(81, 80, 39, 32), list(1, 2, 3, 4))), list(30.5, 34.25, 27.0, 23.25))){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 1, -5), list(30, -15, 56), list(81, -60, -39), list(-10, 2, 3))), list(25.5, -18.0, 3.75))){quit('no', 1)}\n    if(!identical(candidate(list(list(100, 100, 100, 120), list(300, 450, 560, 450), list(810, 800, 390, 320), list(10, 20, 30, 40))), list(305.0, 342.5, 270.0, 232.5))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_166_find_even_pair",
    "language": "r",
    "prompt": "# Write a function that counts the number of pairs of integers in a list that xor to an even number.\nfind_even_pair <- function(A) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_even_pair\n    if(!identical(candidate(c(5, 4, 7, 2, 1)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(7, 2, 8, 1, 0, 5, 11)), 9)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3)), 1)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_58_opposite_Signs",
    "language": "r",
    "prompt": "# Write a python function to check whether the given two integers have opposite sign or not.\nopposite_Signs <- function(x, y) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- opposite_Signs\n    if(!identical(candidate(1, -2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(3, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-10, -10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-2, 2), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_569_sort_sublists",
    "language": "r",
    "prompt": "# Write a function to sort each sublist of strings in a given list of lists.\nsort_sublists <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- sort_sublists\n    if(!identical(candidate(list(list('green', 'orange'), list('black', 'white'), list('white', 'black', 'orange'))), list(list('green', 'orange'), list('black', 'white'), list('black', 'orange', 'white')))){quit('no', 1)}\n    if(!identical(candidate(list(list('green', 'orange'), list('black'), list('green', 'orange'), list('white'))), list(list('green', 'orange'), list('black'), list('green', 'orange'), list('white')))){quit('no', 1)}\n    if(!identical(candidate(list(list('a', 'b'), list('d', 'c'), list('g', 'h'), list('f', 'e'))), list(list('a', 'b'), list('c', 'd'), list('g', 'h'), list('e', 'f')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_255_combinations_colors",
    "language": "r",
    "prompt": "# Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a list for each combination.\ncombinations_colors <- function(l, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_255_combinations_colors.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- combinations_colors\n    if(!identical(candidate(c('Red', 'Green', 'Blue'), 1), list(list('Red'), list('Green'), list('Blue')))){quit('no', 1)}\n    if(!identical(candidate(c('Red', 'Green', 'Blue'), 2), list(list('Red', 'Red'), list('Red', 'Green'), list('Red', 'Blue'), list('Green', 'Green'), list('Green', 'Blue'), list('Blue', 'Blue')))){quit('no', 1)}\n    if(!identical(candidate(c('Red', 'Green', 'Blue'), 3), list(list('Red', 'Red', 'Red'), list('Red', 'Red', 'Green'), list('Red', 'Red', 'Blue'), list('Red', 'Green', 'Green'), list('Red', 'Green', 'Blue'), list('Red', 'Blue', 'Blue'), list('Green', 'Green', 'Green'), list('Green', 'Green', 'Blue'), list('Green', 'Blue', 'Blue'), list('Blue', 'Blue', 'Blue')))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_619_move_num",
    "language": "r",
    "prompt": "# Write a function to move all the numbers to the end of the given string.\nmove_num <- function(test_str) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- move_num\n    if(!identical(candidate('I1love143you55three3000thousand'), 'Iloveyouthreethousand1143553000')){quit('no', 1)}\n    if(!identical(candidate('Avengers124Assemble'), 'AvengersAssemble124')){quit('no', 1)}\n    if(!identical(candidate('Its11our12path13to14see15things16do17things'), 'Itsourpathtoseethingsdothings11121314151617')){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_249_intersection_array",
    "language": "r",
    "prompt": "# Write a function to find the intersection of two arrays.\nintersection_array <- function(array_nums1, array_nums2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- intersection_array\n    if(!identical(candidate(c(1, 2, 3, 5, 7, 8, 9, 10), c(1, 2, 4, 8, 9)), list(1, 2, 8, 9))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 5, 7, 8, 9, 10), c(3, 5, 7, 9)), list(3, 5, 7, 9))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 5, 7, 8, 9, 10), c(10, 20, 30, 40)), list(10))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_250_count_X",
    "language": "r",
    "prompt": "# Write a python function that takes in a tuple and an element and counts the occcurences of the element in the list.\ncount_X <- function(tup, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_250_count_X.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- count_X\n    if(!identical(candidate(c(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), 4), 0)){quit('no', 1)}\n    if(!identical(candidate(c(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), 10), 3)){quit('no', 1)}\n    if(!identical(candidate(c(10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2), 8), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_622_get_median",
    "language": "r",
    "prompt": "# Write a function to find the median of two sorted lists of same size.\nget_median <- function(arr1, arr2, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_median\n    if(!identical(candidate(c(1, 12, 15, 26, 38), c(2, 13, 17, 30, 45), 5), 16.0)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 8, 9), c(7, 13, 19, 28), 4), 8.5)){quit('no', 1)}\n    if(!identical(candidate(c(3, 6, 14, 23, 36, 42), c(2, 18, 27, 39, 49, 55), 6), 25.0)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_80_tetrahedral_number",
    "language": "r",
    "prompt": "# Write a function to find the nth tetrahedral number.\ntetrahedral_number <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- tetrahedral_number\n    if(!identical(candidate(5), 35)){quit('no', 1)}\n    if(!identical(candidate(6), 56)){quit('no', 1)}\n    if(!identical(candidate(7), 84)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_780_find_combinations",
    "language": "r",
    "prompt": "# Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/\nfind_combinations <- function(test_list) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_780_find_combinations.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_combinations\n    if(!identical(candidate(list(list(2, 4), list(6, 7), list(5, 1), list(6, 10))), list(list(8, 11), list(7, 5), list(8, 14), list(11, 8), list(12, 17), list(11, 11)))){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 5), list(7, 8), list(6, 2), list(7, 11))), list(list(10, 13), list(9, 7), list(10, 16), list(13, 10), list(14, 19), list(13, 13)))){quit('no', 1)}\n    if(!identical(candidate(list(list(4, 6), list(8, 9), list(7, 3), list(8, 12))), list(list(12, 15), list(11, 9), list(12, 18), list(15, 12), list(16, 21), list(15, 15)))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_733_find_first_occurrence",
    "language": "r",
    "prompt": "# Write a function to find the index of the first occurrence of a given number in a sorted array.\nfind_first_occurrence <- function(A, x) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_733_find_first_occurrence.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- find_first_occurrence\n    if(!identical(candidate(c(2, 5, 5, 5, 6, 6, 8, 9, 9, 9), 5), 1)){quit('no', 1)}\n    if(!identical(candidate(c(2, 3, 5, 5, 6, 6, 8, 9, 9, 9), 5), 2)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 1, 5, 6, 6, 8, 9, 9, 9), 6), 4)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_6_differ_At_One_Bit_Pos",
    "language": "r",
    "prompt": "# Write a python function to check whether the two numbers differ at one bit position only or not.\ndiffer_At_One_Bit_Pos <- function(a, b) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_6_differ_At_One_Bit_Pos.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- differ_At_One_Bit_Pos\n    if(!identical(candidate(13, 9), TRUE)){quit('no', 1)}\n    if(!identical(candidate(15, 8), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2, 4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2, 3), TRUE)){quit('no', 1)}\n    if(!identical(candidate(5, 1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1, 5), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_762_check_monthnumber_number",
    "language": "r",
    "prompt": "# Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.\ncheck_monthnumber_number <- function(monthnum3) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_762_check_monthnumber_number.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- check_monthnumber_number\n    if(!identical(candidate(6), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(12), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_625_swap_List",
    "language": "r",
    "prompt": "# Write a python function to interchange the first and last element in a given list.\nswap_List <- function(newList) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_625_swap_List.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- swap_List\n    if(!identical(candidate(c(1, 2, 3)), list(3, 2, 1))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 4)), list(4, 2, 3, 4, 1))){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6)), list(6, 5, 4))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_407_rearrange_bigger",
    "language": "r",
    "prompt": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nrearrange_bigger <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- rearrange_bigger\n    if(!identical(candidate(12), 21)){quit('no', 1)}\n    if(!identical(candidate(10), FALSE)){quit('no', 1)}\n    if(!identical(candidate(102), 120)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_392_get_max_sum",
    "language": "r",
    "prompt": "# Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nget_max_sum <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- get_max_sum\n    if(!identical(candidate(60), 106)){quit('no', 1)}\n    if(!identical(candidate(10), 12)){quit('no', 1)}\n    if(!identical(candidate(2), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_784_mul_even_odd",
    "language": "r",
    "prompt": "# Write a function to find the product of first even and odd number of a given list.\nmul_even_odd <- function(list1) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- mul_even_odd\n    if(!identical(candidate(c(1, 3, 5, 7, 4, 1, 6, 8)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(1, 5, 7, 9, 10)), 10)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_109_odd_Equivalent",
    "language": "r",
    "prompt": "# Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.\nodd_Equivalent <- function(s, n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_109_odd_Equivalent.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- odd_Equivalent\n    if(!identical(candidate('011001', 6), 3)){quit('no', 1)}\n    if(!identical(candidate('11011', 5), 4)){quit('no', 1)}\n    if(!identical(candidate('1010', 4), 2)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_95_Find_Min_Length",
    "language": "r",
    "prompt": "# Write a python function to find the length of the smallest list in a list of lists.\nFind_Min_Length <- function(lst) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_95_Find_Min_Length.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- Find_Min_Length\n    if(!identical(candidate(list(list(1), list(1, 2))), 1)){quit('no', 1)}\n    if(!identical(candidate(list(list(1, 2), list(1, 2, 3), list(1, 2, 3, 4))), 2)){quit('no', 1)}\n    if(!identical(candidate(list(list(3, 3, 3), list(4, 4, 4, 4))), 3)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_399_bitwise_xor",
    "language": "r",
    "prompt": "# Write a function to perform the mathematical bitwise xor operation across the given tuples.\nbitwise_xor <- function(test_tup1, test_tup2) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_399_bitwise_xor.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- bitwise_xor\n    if(!identical(candidate(list(10, 4, 6, 9), list(5, 2, 3, 3)), list(15, 6, 5, 10))){quit('no', 1)}\n    if(!identical(candidate(list(11, 5, 7, 10), list(6, 3, 4, 4)), list(13, 6, 3, 14))){quit('no', 1)}\n    if(!identical(candidate(list(12, 6, 8, 11), list(7, 4, 5, 6)), list(11, 2, 13, 13))){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_641_is_nonagonal",
    "language": "r",
    "prompt": "# Write a function to find the nth nonagonal number.\nis_nonagonal <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_nonagonal\n    if(!identical(candidate(10), 325)){quit('no', 1)}\n    if(!identical(candidate(15), 750)){quit('no', 1)}\n    if(!identical(candidate(18), 1089)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  },
  {
    "name": "mbpp_59_is_octagonal",
    "language": "r",
    "prompt": "# Write a function to find the nth octagonal number.\nis_octagonal <- function(n) {",
    "doctests": "keep",
    "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
    "prompt_terminology": "verbatim",
    "tests": "test_humaneval <- function() {\ncandidate <- is_octagonal\n    if(!identical(candidate(5), 65)){quit('no', 1)}\n    if(!identical(candidate(10), 280)){quit('no', 1)}\n    if(!identical(candidate(15), 645)){quit('no', 1)}\n}\ntest_humaneval()",
    "stop_tokens": [
      "\n#",
      "\n```"
    ]
  }
]
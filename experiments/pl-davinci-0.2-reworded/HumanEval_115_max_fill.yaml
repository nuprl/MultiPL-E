name: HumanEval_115_max_fill
language: pl
prompt: "# You are given a rectangular grid of wells. Each row represents a single\
  \ well,\n# and each 1 in a row represents a single unit of water.\n# Each well has\
  \ a corresponding bucket that can be used to extract water from it, \n# and all\
  \ buckets have the same capacity.\n# Your task is to use the buckets to empty the\
  \ wells.\n# Output the number of times you need to lower the buckets.\n# Example\
  \ 1:\n# >>> max_fill([[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1)\n# 6\n# Example\
  \ 2:\n# >>> max_fill([[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2)\n\
  # 5\n# Example 3:\n# >>> max_fill([[0, 0, 0], [0, 0, 0]], 5)\n# 0\n# Constraints:\n\
  # * all wells have the same length\n# * 1 <= grid.length <= 10^2\n# * 1 <= grid[:,1].length\
  \ <= 10^2\n# * grid[i][j] -> 0 | 1\n# * 1 <= capacity <= 10\nsub max_fill {\n  \
  \  my($grid, $capacity) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_fill;\n\
  \        if(eq_deeply($candidate->([[0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], 1),6))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[0,\
  \ 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 1, 1, 1]], 2),5)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[0,\
  \ 0, 0], [0, 0, 0]], 5),0)) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->([[1, 1, 1, 1], [1, 1, 1, 1]], 2),4))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1,\
  \ 1, 1, 1], [1, 1, 1, 1]], 9),2)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    my $max = 0;\n    for my $row (@$grid) {\n\
    \        my $sum = 0;\n        for my $col (@$row) {\n            $sum += $col;\n\
    \        }\n        if ($sum > $max) {\n            $max = $sum;\n        }\n\
    \    }\n    $count = $max / $capacity;\n    if ($max % $capacity) {\n        $count++;\n\
    \    }\n    return $count;\n}", "    my $total = 0;\n    my $row_max = 0;\n  \
    \  for my $row (@$grid) {\n        my $row_total = 0;\n        for my $well (@$row)\
    \ {\n            $row_total += $well;\n        }\n        $row_max = $row_total\
    \ if $row_total > $row_max;\n        $total += $row_total;\n    }\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $row_fill\
    \ = int($capacity / $col_count);\n    my $row_fill_count = int($row_count / $row_fill);\n\
    \    my $row_fill_remainder = $row_count % $row_fill;\n    my $row_fill_remainder_count\
    \ = int($row_fill_remainder / $row_max);\n    my $row_fill_remainder_remainder\
    \ = $row_fill_remainder % $row_max;\n    my $row_fill_remainder_remainder_count\
    \ = int($row_fill_remainder_remainder / $capacity);\n    return $row_fill_count\
    \ + $row_fill_remainder_count + $row_fill_remainder_remainder_count;\n}", "  \
    \  my $count = 0;\n    for my $row (@$grid) {\n        my $fill = 0;\n       \
    \ for my $well (@$row) {\n            $fill += $well;\n            if ($fill ==\
    \ $capacity) {\n                $count++;\n                $fill = 0;\n      \
    \      }\n        }\n        $count += int($fill / $capacity);\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my\
    \ $col_count = scalar @{$grid->[0]};\n    my $row_index = 0;\n    my $col_index\
    \ = 0;\n    my $row_sum = 0;\n    my $col_sum = 0;\n    my $row_max = 0;\n   \
    \ my $col_max = 0;\n    my $row_max_index = 0;\n    my $col_max_index = 0;\n \
    \   my $row_max_sum = 0;\n    my $col_max_sum = 0;\n    my $row_max_count = 0;\n\
    \    my $col_max_count = 0;\n    my $row_max_count_index = 0;\n    my $col_max_count_index\
    \ = 0;\n    my $row_max_count_sum = 0;\n    my $col_max_count_sum = 0;\n    my\
    \ $row_max_count_max = 0;\n    my $col_max_count_max = 0;\n    my $row_max_count_max_index\
    \ = 0;\n    my $col_max_count_max_index = 0;\n    my $row_max_count_max_sum =\
    \ 0;\n    my $col_max_count_max_sum = 0;\n    my $row_max_count_max_count = 0;\n\
    \    my $col_max_count_max_count = 0;\n    my $row_max_count_max_count_index =\
    \ 0;\n    my $col_max_count_max_count_index = 0;\n    my $row_max_count_max_count_sum\
    \ = 0;\n    my $col_max_count_max_count_sum = 0;\n    my $row_max_count_max_count_max\
    \ = 0;\n    my $col_max_count_max_count_max = 0;\n    my $row_max_count_max_count_max_index\
    \ = 0;\n    my $col_max_count_max_count_max_index = 0;\n    my $row_max_count_max",
  "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n     \
    \   my $row_height = 0;\n        for my $well (@$row) {\n            $row_height\
    \ += $well;\n        }\n        $max_height = $row_height if $row_height > $max_height;\n\
    \    }\n    while ($max_height > 0) {\n        my $row_height = 0;\n        for\
    \ my $row (@$grid) {\n            $row_height = 0;\n            for my $well (@$row)\
    \ {\n                if ($well > 0) {\n                    $well--;\n        \
    \            $row_height++;\n                }\n            }\n            $count\
    \ += $row_height;\n        }\n        $max_height--;\n    }\n    return $count;\n\
    }", "    my $rows = scalar @$grid;\n    my $cols = scalar @{$grid->[0]};\n   \
    \ my $count = 0;\n    my $bucket = $capacity;\n    for my $row (0..$rows-1) {\n\
    \        for my $col (0..$cols-1) {\n            if ($grid->[$row][$col] == 1)\
    \ {\n                if ($bucket == 0) {\n                    $bucket = $capacity;\n\
    \                    $count++;\n                }\n                $bucket--;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $max_height = 0;\n    my $max_height_index = 0;\n    my $max_height_row\
    \ = 0;\n    for my $row (0 .. $#{$grid}) {\n        for my $col (0 .. $#{$grid->[$row]})\
    \ {\n            if ($grid->[$row][$col] == 1) {\n                $max_height++;\n\
    \                $max_height_index = $col;\n                $max_height_row =\
    \ $row;\n            }\n        }\n    }\n    for my $row (0 .. $#{$grid}) {\n\
    \        for my $col (0 .. $#{$grid->[$row]}) {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                if ($row == $max_height_row && $col == $max_height_index)\
    \ {\n                    $count += $max_height;\n                } else {\n  \
    \                  $count += $max_height - $row;\n                }\n        \
    \    }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my\
    \ $max_height = 0;\n    for my $row (@$grid) {\n        my $height = 0;\n    \
    \    for my $col (@$row) {\n            $height += $col;\n        }\n        $max_height\
    \ = $height if $height > $max_height;\n    }\n    for my $row (@$grid) {\n   \
    \     my $height = 0;\n        for my $col (@$row) {\n            $height += $col;\n\
    \        }\n        $count += $max_height - $height;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $row_count = @$grid;\n    my $col_count = @{$grid->[0]};\n\
    \    my $row_index = 0;\n    my $col_index = 0;\n    my $row_index_max = $row_count\
    \ - 1;\n    my $col_index_max = $col_count - 1;\n    my $row_index_min = 0;\n\
    \    my $col_index_min = 0;\n    my $row_index_next = 0;\n    my $col_index_next\
    \ = 0;\n    my $row_index_prev = 0;\n    my $col_index_prev = 0;\n    my $row_index_new\
    \ = 0;\n    my $col_index_new = 0;\n    my $row_index_new_max = 0;\n    my $col_index_new_max\
    \ = 0;\n    my $row_index_new_min = 0;\n    my $col_index_new_min = 0;\n    my\
    \ $row_index_new_next = 0;\n    my $col_index_new_next = 0;\n    my $row_index_new_prev\
    \ = 0;\n    my $col_index_new_prev = 0;\n    my $row_index_new_new = 0;\n    my\
    \ $col_index_new_new = 0;\n    my $row_index_new_new_max = 0;\n    my $col_index_new_new_max\
    \ = 0;\n    my $row_index_new_new_min = 0;\n    my $col_index_new_new_min = 0;\n\
    \    my $row_index_new_new_next = 0;\n    my $col_index_new_new_next = 0;\n  \
    \  my $row_index_new_new_prev = 0;\n    my $col_index_new_new_prev = 0;\n    my\
    \ $row_index_new_new_new = 0;\n    my $col_index_new_new_new = 0;\n    my $row_index_new_new_new_max\
    \ = 0;\n    my $col_index", "    my $count = 0;\n    my $max_height = 0;\n   \
    \ for my $row (@$grid) {\n        my $height = 0;\n        for my $col (@$row)\
    \ {\n            $height += $col;\n        }\n        $max_height = $height if\
    \ $height > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $col (@$row) {\n            $height += $col;\n        }\n\
    \        $count += $max_height - $height;\n    }\n    return $count;\n}", "  \
    \  my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n        for\
    \ my $cell (@$row) {\n            $sum += $cell;\n        }\n        $count +=\
    \ $sum / $capacity;\n        $count += $sum % $capacity;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n\
    \        my $height = 0;\n        for my $well (@$row) {\n            $height++\
    \ if $well;\n        }\n        $max_height = $height if $height > $max_height;\n\
    \    }\n    for my $height (1 .. $max_height) {\n        for my $row (@$grid)\
    \ {\n            my $row_height = 0;\n            for my $well (@$row) {\n   \
    \             $row_height++ if $well;\n                if ($row_height == $height)\
    \ {\n                    $count++;\n                    last;\n              \
    \  }\n            }\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my $row = 0;\n    my $col = 0;\n    my $max_row = scalar @$grid;\n\
    \    my $max_col = scalar @{$grid->[0]};\n    while ($row < $max_row) {\n    \
    \    $col = 0;\n        while ($col < $max_col) {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                $grid->[$row][$col] = 0;\n                $count++;\n\
    \                $row = 0;\n                $col = 0;\n            }\n       \
    \     $col++;\n        }\n        $row++;\n    }\n    return $count;\n}", "  \
    \  my $count = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar\
    \ @{$grid->[0]};\n    my $row_index = 0;\n    my $col_index = 0;\n    my $row_max\
    \ = 0;\n    my $col_max = 0;\n    my $row_sum = 0;\n    my $col_sum = 0;\n   \
    \ my $row_max_index = 0;\n    my $col_max_index = 0;\n    my $row_max_sum = 0;\n\
    \    my $col_max_sum = 0;\n    my $row_max_count = 0;\n    my $col_max_count =\
    \ 0;\n    my $row_max_index_count = 0;\n    my $col_max_index_count = 0;\n   \
    \ my $row_max_sum_count = 0;\n    my $col_max_sum_count = 0;\n    my $row_max_sum_index\
    \ = 0;\n    my $col_max_sum_index = 0;\n    my $row_max_sum_index_count = 0;\n\
    \    my $col_max_sum_index_count = 0;\n    my $row_max_sum_index_count_max = 0;\n\
    \    my $col_max_sum_index_count_max = 0;\n    my $row_max_sum_index_count_max_index\
    \ = 0;\n    my $col_max_sum_index_count_max_index = 0;\n    my $row_max_sum_index_count_max_index_count\
    \ = 0;\n    my $col_max_sum_index_count_max_index_count = 0;\n    my $row_max_sum_index_count_max_index_count_max\
    \ = 0;\n    my $col_max_sum_index_count_max_index_count_max = 0;\n    my $row_max_sum_index_count_max_index_count_max_index\
    \ = 0;\n    my $col_max_sum_index_count_max_index_count_max_index = 0;\n    my",
  "    my $rows = scalar @$grid;\n    my $cols = scalar @{$grid->[0]};\n    my $total\
    \ = 0;\n    for my $row (0..$rows-1) {\n        for my $col (0..$cols-1) {\n \
    \           if ($grid->[$row][$col]) {\n                $total += $capacity;\n\
    \            }\n        }\n    }\n    return $total;\n}", "    my $count = 0;\n\
    \    my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    my $row_index = 0;\n    my $col_index = 0;\n    my $row_sum = 0;\n    my\
    \ $col_sum = 0;\n    while ($row_index < $row_count) {\n        $row_sum += $grid->[$row_index][$col_index];\n\
    \        $col_sum += $grid->[$row_index][$col_index];\n        if ($row_sum ==\
    \ $capacity) {\n            $row_sum = 0;\n            $row_index++;\n       \
    \ }\n        if ($col_sum == $capacity) {\n            $col_sum = 0;\n       \
    \     $col_index++;\n        }\n        $count++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n\
    \        my $height = 0;\n        for my $col (@$row) {\n            $height +=\
    \ $col;\n        }\n        $max_height = $height if $height > $max_height;\n\
    \    }\n    while ($max_height > 0) {\n        $count += $capacity;\n        $max_height\
    \ -= $capacity;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $max_height\
    \ = 0;\n    for my $row (@$grid) {\n        my $height = 0;\n        for my $cell\
    \ (@$row) {\n            $height++ if $cell;\n        }\n        $max_height =\
    \ $height if $height > $max_height;\n    }\n    for my $height (1 .. $max_height)\
    \ {\n        for my $row (@$grid) {\n            my $fill = 0;\n            for\
    \ my $cell (@$row) {\n                $fill++ if $cell;\n                if ($fill\
    \ == $height) {\n                    $count++;\n                    $fill = 0;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n       \
    \ for my $col (@$row) {\n            $sum += $col;\n        }\n        $count\
    \ += int($sum / $capacity);\n        $count += $sum % $capacity;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my\
    \ $col_count = scalar @{$grid->[0]};\n    my $water_count = 0;\n    for my $row\
    \ (0..$row_count-1) {\n        for my $col (0..$col_count-1) {\n            if\
    \ ($grid->[$row][$col] == 1) {\n                $water_count++;\n            }\n\
    \        }\n    }\n    $count += $water_count / $capacity;\n    $count += $water_count\
    \ % $capacity;\n    return $count;\n}", "    my $rows = @$grid;\n    my $cols\
    \ = @{$grid->[0]};\n    my $total = 0;\n    for my $i (0..$rows-1) {\n       \
    \ for my $j (0..$cols-1) {\n            if ($grid->[$i][$j]) {\n             \
    \   $total += $capacity;\n            }\n        }\n    }\n    return $total;\n\
    }", "    my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n  \
    \      for my $col (@$row) {\n            $sum += $col;\n        }\n        $count\
    \ += int($sum / $capacity);\n        $count += $sum % $capacity;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    for my $row (@$grid) {\n        my $sum\
    \ = 0;\n        for my $cell (@$row) {\n            $sum += $cell;\n        }\n\
    \        $count += int($sum / $capacity);\n        $count += $sum % $capacity;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $max = 0;\n    my\
    \ $max_index = 0;\n    for my $i (0 .. $#{$grid}) {\n        my $sum = 0;\n  \
    \      for my $j (0 .. $#{$grid->[$i]}) {\n            $sum += $grid->[$i][$j];\n\
    \        }\n        if ($sum > $max) {\n            $max = $sum;\n           \
    \ $max_index = $i;\n        }\n    }\n    for my $i (0 .. $#{$grid}) {\n     \
    \   my $sum = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n            $sum\
    \ += $grid->[$i][$j];\n        }\n        if ($i == $max_index) {\n          \
    \  $count += $sum;\n        } else {\n            $count += $capacity;\n     \
    \   }\n    }\n    return $count;\n}", "    my $count = 0;\n    my $row_count =\
    \ scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $row_index\
    \ = 0;\n    my $col_index = 0;\n    my $row_max = 0;\n    my $col_max = 0;\n \
    \   my $row_sum = 0;\n    my $col_sum = 0;\n    my $row_max_index = 0;\n    my\
    \ $col_max_index = 0;\n    my $row_max_sum = 0;\n    my $col_max_sum = 0;\n  \
    \  my $row_max_count = 0;\n    my $col_max_count = 0;\n    my $row_max_count_index\
    \ = 0;\n    my $col_max_count_index = 0;\n    my $row_max_count_sum = 0;\n   \
    \ my $col_max_count_sum = 0;\n    my $row_max_count_max = 0;\n    my $col_max_count_max\
    \ = 0;\n    my $row_max_count_max_index = 0;\n    my $col_max_count_max_index\
    \ = 0;\n    my $row_max_count_max_sum = 0;\n    my $col_max_count_max_sum = 0;\n\
    \    my $row_max_count_max_count = 0;\n    my $col_max_count_max_count = 0;\n\
    \    my $row_max_count_max_count_index = 0;\n    my $col_max_count_max_count_index\
    \ = 0;\n    my $row_max_count_max_count_sum = 0;\n    my $col_max_count_max_count_sum\
    \ = 0;\n    my $row_max_count_max_count_max = 0;\n    my $col_max_count_max_count_max\
    \ = 0;\n    my $row_max_count_max_count_max_index = 0;\n    my $col_max_count_max_count_max_index\
    \ = 0;\n    my $row_max_count_max", "    my $n = @$grid;\n    my $m = @{$grid->[0]};\n\
    \    my $count = 0;\n    for my $i (0..$n-1) {\n        for my $j (0..$m-1) {\n\
    \            if ($grid->[$i][$j] == 1) {\n                $count += $capacity;\n\
    \                for my $k ($i..$n-1) {\n                    $grid->[$k][$j] =\
    \ 0;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n\
    \        my $row_height = 0;\n        for my $well (@$row) {\n            $row_height\
    \ += $well;\n        }\n        $max_height = $row_height if $row_height > $max_height;\n\
    \    }\n    for my $row (@$grid) {\n        my $row_height = 0;\n        for my\
    \ $well (@$row) {\n            $row_height += $well;\n        }\n        $count\
    \ += $max_height - $row_height;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    my $row_index = 0;\n    my $col_index = 0;\n    my $row_max = 0;\n    my\
    \ $col_max = 0;\n    my $row_sum = 0;\n    my $col_sum = 0;\n    my $row_fill\
    \ = 0;\n    my $col_fill = 0;\n    my $row_fill_count = 0;\n    my $col_fill_count\
    \ = 0;\n    my $row_fill_max = 0;\n    my $col_fill_max = 0;\n    my $row_fill_sum\
    \ = 0;\n    my $col_fill_sum = 0;\n    my $row_fill_index = 0;\n    my $col_fill_index\
    \ = 0;\n    my $row_fill_max_index = 0;\n    my $col_fill_max_index = 0;\n   \
    \ my $row_fill_sum_index = 0;\n    my $col_fill_sum_index = 0;\n    my $row_fill_max_sum\
    \ = 0;\n    my $col_fill_max_sum = 0;\n    my $row_fill_max_sum_index = 0;\n \
    \   my $col_fill_max_sum_index = 0;\n    my $row_fill_max_sum_count = 0;\n   \
    \ my $col_fill_max_sum_count = 0;\n    my $row_fill_max_sum_index_count = 0;\n\
    \    my $col_fill_max_sum_index_count = 0;\n    my $row_fill_max_sum_index_count_count\
    \ = 0;\n    my $col_fill_max_sum_index_count_count = 0;\n    my $row_fill_max_sum_index_count_count_count\
    \ = 0;\n    my $col_fill_max_sum_index_count_count_count = 0;\n    my $row_fill_max_sum_index_count_count_count_count\
    \ = 0;\n    my", "    my $count = 0;\n    my $max_height = 0;\n    for my $row\
    \ (@$grid) {\n        my $height = 0;\n        for my $col (@$row) {\n       \
    \     $height++ if $col;\n        }\n        $max_height = $height if $height\
    \ > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height = 0;\n\
    \        for my $col (@$row) {\n            $height++ if $col;\n        }\n  \
    \      $count += $max_height - $height;\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n        my\
    \ $height = 0;\n        for my $cell (@$row) {\n            if ($cell == 1) {\n\
    \                $height++;\n            }\n        }\n        $max_height = $height\
    \ if $height > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $cell (@$row) {\n            if ($cell == 1) {\n      \
    \          $height++;\n            }\n        }\n        $count += $max_height\
    \ - $height;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $max_height\
    \ = 0;\n    for my $i (0..$row_count-1) {\n        for my $j (0..$col_count-1)\
    \ {\n            $max_height = max($max_height, $grid->[$i][$j]);\n        }\n\
    \    }\n    for my $height (1..$max_height) {\n        for my $i (0..$row_count-1)\
    \ {\n            for my $j (0..$col_count-1) {\n                if ($grid->[$i][$j]\
    \ >= $height) {\n                    $count += $capacity;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $max_height = 0;\n    for my $row (@$grid) {\n        my $height = 0;\n\
    \        for my $well (@$row) {\n            $height++ if $well;\n        }\n\
    \        $max_height = $height if $height > $max_height;\n    }\n    for my $row\
    \ (@$grid) {\n        my $height = 0;\n        for my $well (@$row) {\n      \
    \      $height++ if $well;\n        }\n        $count += $max_height - $height;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n\
    \    my $max_height_index = 0;\n    for my $i (0 .. $#{$grid}) {\n        my $height\
    \ = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n            $height += $grid->[$i][$j];\n\
    \        }\n        if ($height > $max_height) {\n            $max_height = $height;\n\
    \            $max_height_index = $i;\n        }\n    }\n    for my $i (0 .. $#{$grid})\
    \ {\n        my $height = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n   \
    \         $height += $grid->[$i][$j];\n        }\n        if ($i != $max_height_index)\
    \ {\n            $count += $max_height - $height;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid)\
    \ {\n        my $height = 0;\n        for my $well (@$row) {\n            if ($well)\
    \ {\n                $height++;\n            }\n            else {\n         \
    \       $max_height = max($max_height, $height);\n                $height = 0;\n\
    \            }\n        }\n        $max_height = max($max_height, $height);\n\
    \    }\n    $count += $max_height / $capacity;\n    $count += $max_height % $capacity\
    \ ? 1 : 0;\n    return $count;\n}", "    my $count = 0;\n    my $max_height =\
    \ 0;\n    for my $row (@$grid) {\n        my $height = 0;\n        for my $col\
    \ (@$row) {\n            $height++ if $col;\n        }\n        $max_height =\
    \ $height if $height > $max_height;\n    }\n    for my $row (@$grid) {\n     \
    \   my $height = 0;\n        for my $col (@$row) {\n            $height++ if $col;\n\
    \        }\n        $count += $max_height - $height;\n    }\n    return $count;\n\
    }", "    my $max_fill = 0;\n    my $fill = 0;\n    for my $i (0 .. $#{$grid})\
    \ {\n        for my $j (0 .. $#{$grid->[$i]}) {\n            if ($grid->[$i][$j]\
    \ == 1) {\n                $fill += $capacity;\n            }\n            else\
    \ {\n                $max_fill = $fill if $fill > $max_fill;\n               \
    \ $fill = 0;\n            }\n        }\n        $max_fill = $fill if $fill > $max_fill;\n\
    \        $fill = 0;\n    }\n    return $max_fill;\n}", "    my $count = 0;\n \
    \   for my $row (@$grid) {\n        my $sum = 0;\n        for my $col (@$row)\
    \ {\n            $sum += $col;\n        }\n        $count += int($sum / $capacity);\n\
    \        $count += $sum % $capacity;\n    }\n    return $count;\n}", "    my $num_rows\
    \ = scalar @$grid;\n    my $num_cols = scalar @{$grid->[0]};\n    my $num_fills\
    \ = 0;\n    for my $row (0..$num_rows-1) {\n        my $row_sum = sum(@{$grid->[$row]});\n\
    \        if ($row_sum > 0) {\n            $num_fills += int($row_sum / $capacity);\n\
    \            $num_fills += 1 if $row_sum % $capacity > 0;\n        }\n    }\n\
    \    return $num_fills;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n\
    \    my $col_count = scalar @{$grid->[0]};\n    my $max_row = $row_count - 1;\n\
    \    my $max_col = $col_count - 1;\n    my $row = 0;\n    my $col = 0;\n    my\
    \ $row_dir = 1;\n    my $col_dir = 1;\n    while ($row >= 0 && $row <= $max_row\
    \ && $col >= 0 && $col <= $max_col) {\n        if ($grid->[$row][$col] == 1) {\n\
    \            $grid->[$row][$col] = 0;\n            $count++;\n        }\n    \
    \    if ($row == 0) {\n            $row_dir = 1;\n        }\n        elsif ($row\
    \ == $max_row) {\n            $row_dir = -1;\n        }\n        if ($col == 0)\
    \ {\n            $col_dir = 1;\n        }\n        elsif ($col == $max_col) {\n\
    \            $col_dir = -1;\n        }\n        $row += $row_dir;\n        $col\
    \ += $col_dir;\n    }\n    return $count;\n}", "    my $count = 0;\n    for my\
    \ $row (@$grid) {\n        my $sum = 0;\n        for my $well (@$row) {\n    \
    \        $sum += $well;\n        }\n        $count += int($sum / $capacity);\n\
    \        $count += $sum % $capacity;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $row (@$grid) {\n        my $fill = 0;\n        for my $well\
    \ (@$row) {\n            if ($well) {\n                $fill++;\n            }\n\
    \            else {\n                if ($fill) {\n                    $count\
    \ += $fill / $capacity;\n                    $fill = 0;\n                }\n \
    \           }\n        }\n        if ($fill) {\n            $count += $fill /\
    \ $capacity;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for my $row (@$grid) {\n        my $sum = 0;\n        for my $cell (@$row)\
    \ {\n            $sum += $cell;\n        }\n        $count += $sum / $capacity;\n\
    \        $count += $sum % $capacity;\n    }\n    return $count;\n}", "    my $rows\
    \ = scalar @$grid;\n    my $cols = scalar @{$grid->[0]};\n    my $total = 0;\n\
    \    for my $row (0..$rows-1) {\n        my $row_total = 0;\n        for my $col\
    \ (0..$cols-1) {\n            $row_total += $grid->[$row][$col];\n        }\n\
    \        $total += $row_total / $capacity;\n        $total += $row_total % $capacity;\n\
    \    }\n    return $total;\n}", "    my $count = 0;\n    my $max_height = 0;\n\
    \    my $max_height_index = 0;\n    for my $i (0 .. $#{$grid}) {\n        my $height\
    \ = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n            $height += $grid->[$i][$j];\n\
    \        }\n        if ($height > $max_height) {\n            $max_height = $height;\n\
    \            $max_height_index = $i;\n        }\n    }\n    for my $i (0 .. $#{$grid})\
    \ {\n        if ($i == $max_height_index) {\n            next;\n        }\n  \
    \      my $height = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n         \
    \   $height += $grid->[$i][$j];\n        }\n        $count += $max_height - $height;\n\
    \    }\n    return $count;\n}", "    my $rows = @$grid;\n    my $cols = @{$grid->[0]};\n\
    \    my $total = 0;\n    for my $i (0..$rows-1) {\n        my $row = $grid->[$i];\n\
    \        my $fill = 0;\n        for my $j (0..$cols-1) {\n            my $cell\
    \ = $row->[$j];\n            if ($cell == 1) {\n                $fill++;\n   \
    \         }\n            elsif ($fill > 0) {\n                $total += $fill;\n\
    \                $fill = 0;\n            }\n        }\n        $total += $fill;\n\
    \    }\n    return $total * $capacity;\n}", "    my $count = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    for my $row\
    \ (0..$row_count-1) {\n        for my $col (0..$col_count-1) {\n            if\
    \ ($grid->[$row][$col] == 1) {\n                $count++;\n                $grid->[$row][$col]\
    \ = 0;\n                my $water = $capacity;\n                while ($water\
    \ > 0) {\n                    if ($row > 0 && $grid->[$row-1][$col] == 1) {\n\
    \                        $grid->[$row-1][$col] = 0;\n                        $water--;\n\
    \                    }\n                    if ($row < $row_count-1 && $grid->[$row+1][$col]\
    \ == 1) {\n                        $grid->[$row+1][$col] = 0;\n              \
    \          $water--;\n                    }\n                    if ($col > 0\
    \ && $grid->[$row][$col-1] == 1) {\n                        $grid->[$row][$col-1]\
    \ = 0;\n                        $water--;\n                    }\n           \
    \         if ($col < $col_count-1 && $grid->[$row][$col+1] == 1) {\n         \
    \               $grid->[$row][$col+1] = 0;\n                        $water--;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for\
    \ my $row (@$grid) {\n        my $height = 0;\n        for my $cell (@$row) {\n\
    \            $height += $cell;\n        }\n        $max_height = $height if $height\
    \ > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height = 0;\n\
    \        for my $cell (@$row) {\n            $height += $cell;\n        }\n  \
    \      $count += $max_height - $height;\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar\
    \ @{$grid->[0]};\n    my $max_height = 0;\n    for my $row (0..$row_count-1) {\n\
    \        for my $col (0..$col_count-1) {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                $max_height = $row if $row > $max_height;\n       \
    \     }\n        }\n    }\n    for my $row (0..$max_height) {\n        for my\
    \ $col (0..$col_count-1) {\n            if ($grid->[$row][$col] == 1) {\n    \
    \            $count++;\n            }\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar\
    \ @{$grid->[0]};\n    for my $row (0..$row_count-1) {\n        my $col = 0;\n\
    \        while ($col < $col_count) {\n            if ($grid->[$row][$col] == 1)\
    \ {\n                $count += $capacity;\n                $col += $capacity;\n\
    \            } else {\n                $col++;\n            }\n        }\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n\
    \    my $col_count = scalar @{$grid->[0]};\n    for my $row (0..$row_count-1)\
    \ {\n        for my $col (0..$col_count-1) {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                $count += $capacity;\n                for my $i (0..$row_count-1)\
    \ {\n                    for my $j (0..$col_count-1) {\n                     \
    \   if ($grid->[$i][$j] == 1) {\n                            $grid->[$i][$j] =\
    \ 0;\n                        }\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return $count;\n}", "    my $row_count = @$grid;\n\
    \    my $col_count = @{$grid->[0]};\n    my $count = 0;\n    for my $row (0..$row_count-1)\
    \ {\n        my $col = 0;\n        while ($col < $col_count) {\n            if\
    \ ($grid->[$row][$col] == 1) {\n                $count++;\n                $col\
    \ += $capacity;\n            }\n            else {\n                $col++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $max_fill =\
    \ 0;\n    my $max_fill_count = 0;\n    my $row_count = scalar @$grid;\n    my\
    \ $col_count = scalar @{$grid->[0]};\n    for my $row (0..$row_count-1) {\n  \
    \      my $fill = 0;\n        for my $col (0..$col_count-1) {\n            $fill\
    \ += $grid->[$row][$col];\n        }\n        $max_fill = $fill if $fill > $max_fill;\n\
    \    }\n    for my $row (0..$row_count-1) {\n        my $fill = 0;\n        for\
    \ my $col (0..$col_count-1) {\n            $fill += $grid->[$row][$col];\n   \
    \         if ($fill == $max_fill) {\n                $max_fill_count++;\n    \
    \            $fill = 0;\n            }\n        }\n    }\n    return $max_fill_count\
    \ * $capacity;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for my $row\
    \ (@$grid) {\n        my $height = 0;\n        for my $cell (@$row) {\n      \
    \      $height++ if $cell;\n        }\n        $max_height = $height if $height\
    \ > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height = 0;\n\
    \        for my $cell (@$row) {\n            $height++ if $cell;\n        }\n\
    \        $count += $max_height - $height;\n    }\n    return $count;\n}", "  \
    \  my $count = 0;\n    my $max = 0;\n    for my $row (@$grid) {\n        my $sum\
    \ = 0;\n        for my $col (@$row) {\n            $sum += $col;\n        }\n\
    \        $max = $sum if $sum > $max;\n    }\n    $count += $max;\n    $count +=\
    \ $capacity - 1;\n    return $count;\n}", "    my $num_rows = scalar @$grid;\n\
    \    my $num_cols = scalar @{$grid->[0]};\n    my $num_buckets = 0;\n    for my\
    \ $row (0..$num_rows-1) {\n        my $num_units = 0;\n        for my $col (0..$num_cols-1)\
    \ {\n            $num_units += $grid->[$row][$col];\n        }\n        $num_buckets\
    \ += int($num_units / $capacity);\n        $num_buckets += $num_units % $capacity;\n\
    \    }\n    return $num_buckets;\n}", "    my $count = 0;\n    my $row_count =\
    \ scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $max_row =\
    \ $row_count - 1;\n    my $max_col = $col_count - 1;\n    my $row = 0;\n    my\
    \ $col = 0;\n    my $direction = 'right';\n    while ($row <= $max_row && $col\
    \ <= $max_col) {\n        if ($direction eq 'right') {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                $grid->[$row][$col] = 0;\n                $count++;\n\
    \            }\n            if ($col == $max_col) {\n                $row++;\n\
    \                $direction = 'down';\n            }\n            else {\n   \
    \             $col++;\n            }\n        }\n        elsif ($direction eq\
    \ 'down') {\n            if ($grid->[$row][$col] == 1) {\n                $grid->[$row][$col]\
    \ = 0;\n                $count++;\n            }\n            if ($row == $max_row)\
    \ {\n                $col--;\n                $direction = 'left';\n         \
    \   }\n            else {\n                $row++;\n            }\n        }\n\
    \        elsif ($direction eq 'left') {\n            if ($grid->[$row][$col] ==\
    \ 1) {\n                $grid->[$row][$col] = 0;\n                $count++;\n\
    \            }\n            if ($col == 0) {\n                $row--;\n      \
    \          $direction = 'up';\n            }\n            else {\n           \
    \     $col--;\n            }\n        }\n        elsif ($direction eq 'up') {\n\
    \            if ($grid->[$row][$col] == 1) {\n                $grid->[$row][$col]\
    \ = 0;\n                $count++;\n            }\n            if ($row == 0) {\n\
    \                $col++;\n                $direction = 'right';\n            }\n\
    \            else {\n                $row--;\n            }\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    my\
    \ $max_height_index = 0;\n    for my $i (0 .. $#{$grid}) {\n        my $height\
    \ = 0;\n        for my $j (0 .. $#{$grid->[$i]}) {\n            $height += $grid->[$i][$j];\n\
    \        }\n        if ($height > $max_height) {\n            $max_height = $height;\n\
    \            $max_height_index = $i;\n        }\n    }\n    for my $i (0 .. $#{$grid})\
    \ {\n        if ($i == $max_height_index) {\n            $count += $max_height;\n\
    \        } else {\n            my $height = 0;\n            for my $j (0 .. $#{$grid->[$i]})\
    \ {\n                $height += $grid->[$i][$j];\n            }\n            $count\
    \ += $max_height - $height;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n        for my\
    \ $col (@$row) {\n            $sum += $col;\n        }\n        $count += int($sum\
    \ / $capacity);\n        $count += $sum % $capacity;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my $col_count\
    \ = scalar @{$grid->[0]};\n    my $max_row = $row_count - 1;\n    my $max_col\
    \ = $col_count - 1;\n    my $row = 0;\n    my $col = 0;\n    my $row_dir = 1;\n\
    \    my $col_dir = 1;\n    while ($row >= 0 && $row <= $max_row && $col >= 0 &&\
    \ $col <= $max_col) {\n        if ($grid->[$row][$col] == 1) {\n            $grid->[$row][$col]\
    \ = 0;\n            $count++;\n        }\n        if ($row == 0) {\n         \
    \   $row_dir = 1;\n        }\n        elsif ($row == $max_row) {\n           \
    \ $row_dir = -1;\n        }\n        if ($col == 0) {\n            $col_dir =\
    \ 1;\n        }\n        elsif ($col == $max_col) {\n            $col_dir = -1;\n\
    \        }\n        $row += $row_dir;\n        $col += $col_dir;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my\
    \ $col_count = scalar @{$grid->[0]};\n    for my $row (0..$row_count-1) {\n  \
    \      for my $col (0..$col_count-1) {\n            if ($grid->[$row][$col] ==\
    \ 1) {\n                $count += $capacity;\n                $grid->[$row][$col]\
    \ = 0;\n            }\n        }\n    }\n    return $count;\n}", "    my $max_fill\
    \ = 0;\n    my $max_fill_count = 0;\n    my $max_fill_row = 0;\n    my $max_fill_col\
    \ = 0;\n    my $max_fill_row_count = 0;\n    my $max_fill_col_count = 0;\n   \
    \ my $max_fill_row_col_count = 0;\n    my $max_fill_col_row_count = 0;\n    my\
    \ $max_fill_row_col_row_count = 0;\n    my $max_fill_col_row_col_count = 0;\n\
    \    my $max_fill_row_col_row_col_count = 0;\n    my $max_fill_col_row_col_row_count\
    \ = 0;\n    my $max_fill_row_col_row_col_row_count = 0;\n    my $max_fill_col_row_col_row_col_count\
    \ = 0;\n    my $max_fill_row_col_row_col_row_col_count = 0;\n    my $max_fill_col_row_col_row_col_row_count\
    \ = 0;\n    my $max_fill_row_col_row_col_row_col_row_count = 0;\n    my $max_fill_col_row_col_row_col_row_col_count\
    \ = 0;\n    my $max_fill_row_col_row_col_row_col_row_col_count = 0;\n    my $max_fill_col_row_col_row_col_row_col_row_count\
    \ = 0;\n    my $max_fill_row_col_row_col_row_col_row_col_row_count = 0;\n    my\
    \ $max_fill_col_row_col_row_col_row_col_row_col_count = 0;\n    my $max_fill_row_col_row_col_row_col_row_col_row_col_count\
    \ = 0;\n    my $max_fill_col_row_col_row_col_row_col_row_col_row_count = 0;\n\
    \    my $max_", "    my $n_rows = scalar @$grid;\n    my $n_cols = scalar @{$grid->[0]};\n\
    \    my $n_fill = 0;\n    for my $row (0..$n_rows-1) {\n        my $n_units =\
    \ 0;\n        for my $col (0..$n_cols-1) {\n            $n_units += $grid->[$row][$col];\n\
    \        }\n        $n_fill += int($n_units / $capacity);\n        $n_fill +=\
    \ $n_units % $capacity;\n    }\n    return $n_fill;\n}", "    my $max_fill = 0;\n\
    \    my $num_rows = scalar @$grid;\n    my $num_cols = scalar @{$grid->[0]};\n\
    \    for (my $i = 0; $i < $num_rows; $i++) {\n        for (my $j = 0; $j < $num_cols;\
    \ $j++) {\n            if ($grid->[$i][$j] == 1) {\n                $max_fill\
    \ += $capacity;\n                for (my $k = $i; $k < $num_rows; $k++) {\n  \
    \                  for (my $l = $j; $l < $num_cols; $l++) {\n                \
    \        if ($grid->[$k][$l] == 1) {\n                            $grid->[$k][$l]\
    \ = 0;\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    return $max_fill;\n}", "    my $count =\
    \ 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $well (@$row) {\n            $height++ if $well;\n    \
    \    }\n        $max_height = $height if $height > $max_height;\n    }\n    for\
    \ my $row (@$grid) {\n        my $height = 0;\n        for my $well (@$row) {\n\
    \            $height++ if $well;\n        }\n        if ($height < $max_height)\
    \ {\n            $count += $max_height - $height;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid)\
    \ {\n        my $height = 0;\n        for my $well (@$row) {\n            $height\
    \ += $well;\n        }\n        $max_height = $height if $height > $max_height;\n\
    \    }\n    for my $row (@$grid) {\n        my $height = 0;\n        for my $well\
    \ (@$row) {\n            $height += $well;\n        }\n        $count += $capacity\
    \ - $height;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $row_index\
    \ = 0;\n    my $col_index = 0;\n    while ($row_index < $row_count) {\n      \
    \  while ($col_index < $col_count) {\n            if ($grid->[$row_index][$col_index]\
    \ == 1) {\n                $count++;\n                $grid->[$row_index][$col_index]\
    \ = 0;\n                my $row_index_temp = $row_index;\n                my $col_index_temp\
    \ = $col_index;\n                while ($capacity > 0) {\n                   \
    \ if ($row_index_temp > 0 && $grid->[$row_index_temp - 1][$col_index_temp] ==\
    \ 1) {\n                        $grid->[$row_index_temp - 1][$col_index_temp]\
    \ = 0;\n                        $row_index_temp--;\n                    } elsif\
    \ ($col_index_temp > 0 && $grid->[$row_index_temp][$col_index_temp - 1] == 1)\
    \ {\n                        $grid->[$row_index_temp][$col_index_temp - 1] = 0;\n\
    \                        $col_index_temp--;\n                    } elsif ($row_index_temp\
    \ < $row_count - 1 && $grid->[$row_index_temp + 1][$col_index_temp] == 1) {\n\
    \                        $grid->[$row_index_temp + 1][$col_index_temp] = 0;\n\
    \                        $row_index_temp++;\n                    } elsif ($col_index_temp\
    \ < $col_count - 1 && $grid->[$row_index_temp][$col_index_temp + 1] == 1) {\n\
    \                        $grid->[$row_index_temp][$col_index_temp + 1] = 0;\n\
    \                        $col_index_temp++;\n                    } else {\n  \
    \                      last;\n                    }\n                    $capacity--;\n\
    \                }\n            }\n            $col_index++;\n        }\n    \
    \    $row", "    my $count = 0;\n    my $row_count = @$grid;\n    my $col_count\
    \ = @{$grid->[0]};\n    my $row_index = 0;\n    my $col_index = 0;\n    while\
    \ ($row_index < $row_count) {\n        my $row = $grid->[$row_index];\n      \
    \  while ($col_index < $col_count) {\n            if ($row->[$col_index] == 1)\
    \ {\n                $count += $capacity;\n                $col_index++;\n   \
    \         }\n            else {\n                $col_index++;\n            }\n\
    \        }\n        $row_index++;\n        $col_index = 0;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my\
    \ $col_count = scalar @{$grid->[0]};\n    my $row_index = 0;\n    my $col_index\
    \ = 0;\n    while ($row_index < $row_count) {\n        while ($col_index < $col_count)\
    \ {\n            if ($grid->[$row_index][$col_index] == 1) {\n               \
    \ $count++;\n                $col_index += $capacity;\n            } else {\n\
    \                $col_index++;\n            }\n        }\n        $row_index++;\n\
    \        $col_index = 0;\n    }\n    return $count;\n}", "    my $max_fill = 0;\n\
    \    for my $row (@$grid) {\n        my $fill = 0;\n        for my $well (@$row)\
    \ {\n            $fill += $well;\n            if ($fill == $capacity) {\n    \
    \            $max_fill++;\n                $fill = 0;\n            }\n       \
    \ }\n        $max_fill += $fill;\n    }\n    return $max_fill;\n}", "    my $num_rows\
    \ = scalar @$grid;\n    my $num_cols = scalar @{$grid->[0]};\n    my $num_fills\
    \ = 0;\n    my $row_idx = 0;\n    my $col_idx = 0;\n    while ($row_idx < $num_rows)\
    \ {\n        while ($col_idx < $num_cols) {\n            if ($grid->[$row_idx][$col_idx]\
    \ == 1) {\n                $num_fills++;\n                $grid->[$row_idx][$col_idx]\
    \ = 0;\n                my $water_left = $capacity - 1;\n                my $row_idx_inner\
    \ = $row_idx;\n                my $col_idx_inner = $col_idx;\n               \
    \ while ($water_left > 0) {\n                    if ($row_idx_inner + 1 < $num_rows\
    \ && $grid->[$row_idx_inner + 1][$col_idx_inner] == 1) {\n                   \
    \     $grid->[$row_idx_inner + 1][$col_idx_inner] = 0;\n                     \
    \   $row_idx_inner++;\n                        $water_left--;\n              \
    \      }\n                    elsif ($col_idx_inner + 1 < $num_cols && $grid->[$row_idx_inner][$col_idx_inner\
    \ + 1] == 1) {\n                        $grid->[$row_idx_inner][$col_idx_inner\
    \ + 1] = 0;\n                        $col_idx_inner++;\n                     \
    \   $water_left--;\n                    }\n                    else {\n      \
    \                  last;\n                    }\n                }\n         \
    \   }\n            $col_idx++;\n        }\n        $row_idx++;\n        $col_idx\
    \ = 0;\n    }\n    return $num_fills;\n}", "    my $count = 0;\n    for my $row\
    \ (@$grid) {\n        my $sum = 0;\n        for my $col (@$row) {\n          \
    \  $sum += $col;\n        }\n        $count += int($sum / $capacity);\n      \
    \  if ($sum % $capacity) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my $times = 0;\n    my $rows = scalar @$grid;\n    my $cols\
    \ = scalar @{$grid->[0]};\n    for my $row (0..$rows-1) {\n        for my $col\
    \ (0..$cols-1) {\n            if ($grid->[$row][$col] == 1) {\n              \
    \  $times++;\n                $grid->[$row][$col] = 0;\n                for my\
    \ $i ($row..$rows-1) {\n                    for my $j ($col..$cols-1) {\n    \
    \                    if ($grid->[$i][$j] == 1) {\n                           \
    \ $grid->[$i][$j] = 0;\n                        }\n                    }\n   \
    \             }\n            }\n        }\n    }\n    return $times;\n}", "  \
    \  my $num_rows = scalar @$grid;\n    my $num_cols = scalar @{$grid->[0]};\n \
    \   my $num_buckets = 0;\n    my $row_idx = 0;\n    my $col_idx = 0;\n    while\
    \ ($row_idx < $num_rows) {\n        while ($col_idx < $num_cols) {\n         \
    \   if ($grid->[$row_idx][$col_idx] == 1) {\n                $num_buckets++;\n\
    \                $col_idx += $capacity;\n            } else {\n              \
    \  $col_idx++;\n            }\n        }\n        $row_idx++;\n        $col_idx\
    \ = 0;\n    }\n    return $num_buckets;\n}", "    my $count = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    my $max_row\
    \ = $row_count - 1;\n    my $max_col = $col_count - 1;\n    my $row = 0;\n   \
    \ my $col = 0;\n    my $dir = 0;\n    my $dirs = [[0, 1], [1, 0], [0, -1], [-1,\
    \ 0]];\n    while ($row >= 0 && $row <= $max_row && $col >= 0 && $col <= $max_col)\
    \ {\n        if ($grid->[$row][$col] > 0) {\n            $grid->[$row][$col] -=\
    \ $capacity;\n            $count++;\n        }\n        if ($col == $max_col &&\
    \ $row == $max_row) {\n            last;\n        }\n        if ($col == $max_col)\
    \ {\n            $dir = 1;\n        }\n        elsif ($row == $max_row) {\n  \
    \          $dir = 2;\n        }\n        elsif ($col == 0) {\n            $dir\
    \ = 3;\n        }\n        elsif ($row == 0) {\n            $dir = 0;\n      \
    \  }\n        $row += $dirs->[$dir][0];\n        $col += $dirs->[$dir][1];\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n\
    \    for my $row (@$grid) {\n        my $height = 0;\n        for my $well (@$row)\
    \ {\n            $height += $well;\n        }\n        $max_height = $height if\
    \ $height > $max_height;\n    }\n    for my $height (1 .. $max_height) {\n   \
    \     my $row_count = 0;\n        for my $row (@$grid) {\n            my $well_count\
    \ = 0;\n            for my $well (@$row) {\n                $well_count += $well;\n\
    \            }\n            $row_count += int($well_count / $capacity);\n    \
    \    }\n        $count += $row_count;\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n        my\
    \ $height = 0;\n        for my $well (@$row) {\n            $height += $well;\n\
    \        }\n        $max_height = $height if $height > $max_height;\n    }\n \
    \   for my $i (0..$max_height) {\n        for my $row (@$grid) {\n           \
    \ my $height = 0;\n            for my $well (@$row) {\n                $height\
    \ += $well;\n            }\n            if ($height > $i) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    for my $row (@$grid) {\n        my $fill = 0;\n        for my $cell (@$row)\
    \ {\n            $fill += $cell;\n            if ($fill == $capacity) {\n    \
    \            $count++;\n                $fill = 0;\n            }\n        }\n\
    \        $count += int($fill / $capacity);\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    my $max = 0;\n    my $max_index = 0;\n    my $max_count\
    \ = 0;\n    my $max_count_index = 0;\n    my $max_count_value = 0;\n    my $max_count_value_index\
    \ = 0;\n    my $max_count_value_index_count = 0;\n    my $max_count_value_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_index_count = 0;\n    my $max_count_value_index_count_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count = 0;\n   \
    \ my $max_count_value_index_count_index_count_index_count_index = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    my $max_count_value_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_value_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    my $max_count_value_index_count_value_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    my $max_count_value_index_count_value_index_count_index_count_index_count_",
  "    my $max_fill = 0;\n    my $max_fill_count = 0;\n    my $max_fill_row = 0;\n\
    \    my $max_fill_col = 0;\n    my $max_fill_row_count = 0;\n    my $max_fill_col_count\
    \ = 0;\n    my $max_fill_row_col_count = 0;\n    my $max_fill_row_col_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count = 0;\n    my $max_fill_row_col_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count = 0;\n    my $max_fill_row_col_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count = 0;\n\
    \    my $max_fill_row_col_count_count_count_count_count_count_count_count = 0;\n\
    \    my $max_fill_row_col_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    my $max_fill_row_col_count_count_count_count_count_count_count_count_count_count_",
  "    my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n        for\
    \ my $col (@$row) {\n            $sum += $col;\n        }\n        $count += $sum\
    \ / $capacity;\n        $count += $sum % $capacity;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    for my $i (0 .. $#{$grid}) {\n        for my $j (0\
    \ .. $#{$grid->[$i]}) {\n            if ($grid->[$i][$j] == 1) {\n           \
    \     $count += $capacity;\n                for my $k ($i .. $#{$grid}) {\n  \
    \                  $grid->[$k][$j] = 0;\n                }\n            }\n  \
    \      }\n    }\n    return $count;\n}", "    my $total = 0;\n    my $row_count\
    \ = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n    for my $row\
    \ (0..$row_count-1) {\n        for my $col (0..$col_count-1) {\n            if\
    \ ($grid->[$row][$col] == 1) {\n                $total += $capacity;\n       \
    \         for my $i (0..$row_count-1) {\n                    for my $j (0..$col_count-1)\
    \ {\n                        if ($grid->[$i][$j] == 1) {\n                   \
    \         $grid->[$i][$j] = 0;\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return $total;\n\
    }", "    my $count = 0;\n    my $row = 0;\n    my $col = 0;\n    my $max_row =\
    \ scalar @$grid;\n    my $max_col = scalar @{$grid->[0]};\n    my $max_water =\
    \ 0;\n    my $water = 0;\n    my $bucket = $capacity;\n    while ($row < $max_row)\
    \ {\n        $col = 0;\n        while ($col < $max_col) {\n            if ($grid->[$row][$col]\
    \ == 1) {\n                if ($bucket == 0) {\n                    $count++;\n\
    \                    $bucket = $capacity;\n                }\n               \
    \ $bucket--;\n                $water++;\n            }\n            $col++;\n\
    \        }\n        $row++;\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    for my $row (0..$row_count-1) {\n        for my $col (0..$col_count-1) {\n\
    \            if ($grid->[$row][$col] == 1) {\n                $count += $capacity;\n\
    \                $grid->[$row][$col] = 0;\n            }\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for\
    \ my $row (@$grid) {\n        my $row_height = 0;\n        for my $well (@$row)\
    \ {\n            $row_height += $well;\n        }\n        $max_height = $row_height\
    \ if $row_height > $max_height;\n    }\n    for my $row (@$grid) {\n        my\
    \ $row_height = 0;\n        for my $well (@$row) {\n            $row_height +=\
    \ $well;\n        }\n        $count += $max_height - $row_height;\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n    for my\
    \ $row (@$grid) {\n        my $height = 0;\n        for my $well (@$row) {\n \
    \           if ($well) {\n                $height++;\n            }\n        \
    \    else {\n                $max_height = max($max_height, $height);\n      \
    \          $height = 0;\n            }\n        }\n        $max_height = max($max_height,\
    \ $height);\n    }\n    $count += $max_height / $capacity;\n    $count += $max_height\
    \ % $capacity ? 1 : 0;\n    return $count;\n}", "    my $count = 0;\n    my $max_height\
    \ = 0;\n    for my $row (@$grid) {\n        my $height = 0;\n        for my $well\
    \ (@$row) {\n            $height += $well;\n        }\n        $max_height = $height\
    \ if $height > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $well (@$row) {\n            $height += $well;\n      \
    \  }\n        $count += $max_height - $height;\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my $row_count = scalar @$grid;\n    my $col_count = scalar\
    \ @{$grid->[0]};\n    for my $row (0..$row_count-1) {\n        for my $col (0..$col_count-1)\
    \ {\n            if ($grid->[$row][$col] == 1) {\n                $count += $capacity;\n\
    \                my $row_offset = $row;\n                while ($row_offset <\
    \ $row_count) {\n                    $grid->[$row_offset][$col] = 0;\n       \
    \             $row_offset++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}", "    my $count = 0;\n    my $max_height = 0;\n \
    \   for my $row (@$grid) {\n        my $height = 0;\n        for my $well (@$row)\
    \ {\n            $height += $well;\n        }\n        $max_height = $height if\
    \ $height > $max_height;\n    }\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $well (@$row) {\n            $height += $well;\n      \
    \  }\n        $count += $capacity - $height;\n    }\n    return $count + $max_height;\n\
    }", "    my $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n  \
    \      for my $well (@$row) {\n            $sum += $well;\n        }\n       \
    \ $count += int($sum / $capacity);\n        $count += $sum % $capacity;\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my $max = 0;\n    for my $row\
    \ (@$grid) {\n        for my $col (@$row) {\n            $max = $col if $col >\
    \ $max;\n        }\n    }\n    for my $row (@$grid) {\n        for my $col (@$row)\
    \ {\n            $count += $max - $col;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n\
    \        my $height = 0;\n        for my $well (@$row) {\n            if ($well)\
    \ {\n                $height++;\n            }\n            else {\n         \
    \       $max_height = max($max_height, $height);\n                $height = 0;\n\
    \            }\n        }\n        $max_height = max($max_height, $height);\n\
    \    }\n    my $buckets = int($max_height / $capacity);\n    $count += $buckets;\n\
    \    $count += $max_height % $capacity;\n    return $count;\n}", "    my $count\
    \ = 0;\n    my $max = 0;\n    for my $row (@$grid) {\n        for my $well (@$row)\
    \ {\n            if ($well) {\n                $max = $well if $well > $max;\n\
    \            }\n        }\n    }\n    for my $row (@$grid) {\n        for my $well\
    \ (@$row) {\n            if ($well) {\n                $count += $well - $max;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $row_count = scalar @$grid;\n    my $col_count = scalar @{$grid->[0]};\n\
    \    my $max_water = $row_count * $col_count;\n    my $water = 0;\n    my $row\
    \ = 0;\n    my $col = 0;\n    while ($water < $max_water) {\n        my $water_in_row\
    \ = 0;\n        for my $i (0 .. $col_count - 1) {\n            if ($grid->[$row][$i]\
    \ == 1) {\n                $water_in_row++;\n            }\n        }\n      \
    \  if ($water_in_row > 0) {\n            $count++;\n            $water += $water_in_row;\n\
    \        }\n        $row++;\n        if ($row >= $row_count) {\n            $row\
    \ = 0;\n            $col++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    for my $row (@$grid) {\n        my $sum = 0;\n        for my\
    \ $col (@$row) {\n            $sum += $col;\n        }\n        $count += int($sum\
    \ / $capacity);\n        $count += $sum % $capacity;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    my $max_height_index = 0;\n\
    \    my $max_height_index_count = 0;\n    my $max_height_index_count_max = 0;\n\
    \    my $max_height_index_count_max_index = 0;\n    my $max_height_index_count_max_index_count\
    \ = 0;\n    my $max_height_index_count_max_index_count_max = 0;\n    my $max_height_index_count_max_index_count_max_index\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count = 0;\n\
    \    my $max_height_index_count_max_index_count_max_index_count_max = 0;\n   \
    \ my $max_height_index_count_max_index_count_max_index_count_max_index = 0;\n\
    \    my $max_height_index_count_max_index_count_max_index_count_max_index_count\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max_index\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max_index_count\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max_index\
    \ = 0;\n    my $max_height_index_count_max_index_count_max_index_count_max_index_count_max_index_count_max_index_count\
    \ = 0;\n    my $max_height_index_count_max_index_count_", "    my $num_rows =\
    \ @$grid;\n    my $num_cols = @{$grid->[0]};\n    my $num_fills = 0;\n    my $row_idx\
    \ = 0;\n    my $col_idx = 0;\n    while ($row_idx < $num_rows) {\n        my $row\
    \ = $grid->[$row_idx];\n        my $col_idx = 0;\n        while ($col_idx < $num_cols)\
    \ {\n            my $cell = $row->[$col_idx];\n            if ($cell) {\n    \
    \            my $fill_count = 0;\n                while ($cell && $fill_count\
    \ < $capacity) {\n                    $cell--;\n                    $fill_count++;\n\
    \                }\n                $num_fills++;\n            }\n           \
    \ $col_idx++;\n        }\n        $row_idx++;\n    }\n    return $num_fills;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n\
    \        my $height = 0;\n        for my $cell (@$row) {\n            $height\
    \ += $cell;\n        }\n        $max_height = $height if $height > $max_height;\n\
    \    }\n    for my $height (0..$max_height) {\n        my $row_count = 0;\n  \
    \      for my $row (@$grid) {\n            my $row_height = 0;\n            for\
    \ my $cell (@$row) {\n                $row_height += $cell;\n            }\n \
    \           if ($row_height >= $height) {\n                $row_count++;\n   \
    \         }\n        }\n        $count += $row_count;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $max_height = 0;\n    foreach my $row (@$grid)\
    \ {\n        my $height = 0;\n        foreach my $well (@$row) {\n           \
    \ $height += $well;\n        }\n        $max_height = $height if $height > $max_height;\n\
    \    }\n    for (my $i = 0; $i < $max_height; $i += $capacity) {\n        $count\
    \ += scalar @$grid;\n    }\n    return $count;\n}", "    my $count = 0;\n    my\
    \ $max_height = 0;\n    for my $row (@$grid) {\n        my $height = 0;\n    \
    \    for my $well (@$row) {\n            $height += $well;\n        }\n      \
    \  $max_height = $height if $height > $max_height;\n    }\n    for my $row (@$grid)\
    \ {\n        my $height = 0;\n        for my $well (@$row) {\n            $height\
    \ += $well;\n        }\n        $count += $max_height - $height;\n    }\n    return\
    \ $count;\n}", "    my $num_rows = scalar @$grid;\n    my $num_cols = scalar @{$grid->[0]};\n\
    \    my $num_fills = 0;\n    my $curr_row = 0;\n    my $curr_col = 0;\n    my\
    \ $curr_fill = 0;\n    while ($curr_row < $num_rows) {\n        if ($grid->[$curr_row][$curr_col]\
    \ == 1) {\n            $curr_fill++;\n            $grid->[$curr_row][$curr_col]\
    \ = 0;\n        }\n        if ($curr_fill == $capacity) {\n            $num_fills++;\n\
    \            $curr_fill = 0;\n            $curr_col++;\n            if ($curr_col\
    \ == $num_cols) {\n                $curr_col = 0;\n                $curr_row++;\n\
    \            }\n        }\n    }\n    return $num_fills;\n}", "    my $count =\
    \ 0;\n    my $max_height = 0;\n    for my $row (@$grid) {\n        my $height\
    \ = 0;\n        for my $cell (@$row) {\n            $height++ if $cell;\n    \
    \    }\n        $max_height = $height if $height > $max_height;\n    }\n    for\
    \ my $row (@$grid) {\n        my $height = 0;\n        for my $cell (@$row) {\n\
    \            $height++ if $cell;\n        }\n        my $diff = $max_height -\
    \ $height;\n        $count += $diff;\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    for my $row (@$grid) {\n        my $fill = 0;\n        for my $well\
    \ (@$row) {\n            $fill += $well;\n            if ($fill == $capacity)\
    \ {\n                $count++;\n                $fill = 0;\n            }\n  \
    \      }\n        $count += int($fill / $capacity);\n    }\n    return $count;\n\
    }", "    my $rows = scalar @$grid;\n    my $cols = scalar @{$grid->[0]};\n   \
    \ my $total = 0;\n    my $max = 0;\n    for my $row (@$grid) {\n        for my\
    \ $col (@$row) {\n            $total += $col;\n        }\n    }\n    for my $row\
    \ (@$grid) {\n        for my $col (@$row) {\n            $max = $col if $col >\
    \ $max;\n        }\n    }\n    return $total * $capacity if $max < $capacity;\n\
    \    return $rows * $cols * $capacity;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

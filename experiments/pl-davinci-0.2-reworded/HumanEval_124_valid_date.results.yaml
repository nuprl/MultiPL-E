language: pl
name: HumanEval_124_valid_date
results:
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    return '' unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d,\
    \ $y) = ($1, $2, $3);\n    return '' if $m < 1 || $m > 12;\n    return '' if $d\
    \ < 1 || $d > 31;\n    return '' if $m == 2 && $d > 29;\n    return '' if $m ==\
    \ 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n    return '' if $m ==\
    \ 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n    return 1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return \"\" if ($m < 1 || $m > 12);\n    return \"\" if ($d < 1\
    \ || $d > 31);\n    return \"\" if ($m == 2 && $d > 29);\n    return \"\" if ($m\
    \ == 4 && $d > 30);\n    return \"\" if ($m == 6 && $d > 30);\n    return \"\"\
    \ if ($m == 9 && $d > 30);\n    return \"\" if ($m == 11 && $d > 30);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_arr = split(/-/, $date);\n    if(scalar(@date_arr) != 3) {\n        $result\
    \ = '';\n    } else {\n        my $month = $date_arr[0];\n        my $day = $date_arr[1];\n\
    \        my $year = $date_arr[2];\n        if($month < 1 || $month > 12) {\n \
    \           $result = '';\n        } elsif($month == 2) {\n            if($day\
    \ < 1 || $day > 29) {\n                $result = '';\n            }\n        }\
    \ elsif($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month ==\
    \ 8 || $month == 10 || $month == 12) {\n            if($day < 1 || $day > 31)\
    \ {\n                $result = '';\n            }\n        } else {\n        \
    \    if($day < 1 || $day > 30) {\n                $result = '';\n            }\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $date eq \"\";\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return\
    \ \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day >\
    \ 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 2000 || $year > 2020;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return \"\
    \";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return \"\";\n        }\n    } elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n     \
    \       return \"\";\n        }\n    } else {\n        if ($day < 1 || $day >\
    \ 31) {\n            return \"\";\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my ($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if ($m == 2 && $d > 29);\n\
    \    return '' if ($m == 4 && $d > 30);\n    return '' if ($m == 6 && $d > 30);\n\
    \    return '' if ($m == 9 && $d > 30);\n    return '' if ($m == 11 && $d > 30);\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d{2}$/ && $d =~ /^\\d{2}$/ && $y =~ /^\\d{4}$/;\n\
    \    return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d\
    \ <= 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m\
    \ == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m\
    \ == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m\
    \ == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = '';\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <= 12) {\n\
    \            if ($month == 2) {\n                if ($day >= 1 && $day <= 29)\
    \ {\n                    $ret = 1;\n                }\n            } elsif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $ret = 1;\n                }\n            } else {\n        \
    \        if ($day >= 1 && $day <= 30) {\n                    $ret = 1;\n     \
    \           }\n            }\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($month, $day, $year) = split /-/, $date;\n    return '' unless $month\
    \ && $day && $year;\n    return '' unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/\
    \ && $year =~ /^\\d+$/;\n    return '' unless $month >= 1 && $month <= 12;\n \
    \   return '' unless $day >= 1 && $day <= 31;\n    return '' unless $year >= 1;\n\
    \    return '' unless $month == 2 && $day <= 29;\n    return '' unless $month\
    \ == 4 && $day <= 30;\n    return '' unless $month == 6 && $day <= 30;\n    return\
    \ '' unless $month == 9 && $day <= 30;\n    return '' unless $month == 11 && $day\
    \ <= 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if !$month || !$day || !$year;\n    return\
    \ '' if $month < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n\
    \    return '' if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day\
    \ > 30;\n    return '' if $month == 6 && $day > 30;\n    return '' if $month ==\
    \ 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m ==\
    \ 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m ==\
    \ 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m and $d and $y;\n\
    \    return '' unless $m =~ /^\\d+$/ and $d =~ /^\\d+$/ and $y =~ /^\\d+$/;\n\
    \    return '' unless $m >= 1 and $m <= 12;\n    return '' unless $d >= 1 and\
    \ $d <= 31;\n    return '' unless $y >= 1900 and $y <= 2100;\n    return '' unless\
    \ $m == 2 and $d <= 29;\n    return '' unless $m == 4 and $d <= 30;\n    return\
    \ '' unless $m == 6 and $d <= 30;\n    return '' unless $m == 9 and $d <= 30;\n\
    \    return '' unless $m == 11 and $d <= 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/)\
    \ {\n        my $month = $1;\n        my $day = $2;\n        my $year = $3;\n\
    \        if ($month == 2) {\n            if ($day <= 29) {\n                return\
    \ 1;\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day <= 30) {\n                return\
    \ 1;\n            }\n        } else {\n            if ($day <= 31) {\n       \
    \         return 1;\n            }\n        }\n    }\n    return '';\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 0;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $date eq '';\n    return '' if $month\
    \ < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n    return ''\
    \ if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n \
    \   return '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day\
    \ > 30;\n    return '' if $month == 11 && $day > 30;\n    return '' if $year <\
    \ 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return \"\" if ($year < 1);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($month, $day, $year) = split /-/, $date;\n    return '' unless $month\
    \ && $day && $year;\n    return '' unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/\
    \ && $year =~ /^\\d+$/;\n    return '' unless $month >= 1 && $month <= 12;\n \
    \   return '' unless $day >= 1 && $day <= 31;\n    return '' unless $year >= 1900\
    \ && $year <= 2100;\n    return '' if $month == 2 && $day > 29;\n    return ''\
    \ if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n \
    \   return '' if $month == 9 && $day > 30;\n    return '' if $month == 11 && $day\
    \ > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month < 1 || $month > 12) {\n            return '';\n\
    \        }\n        if ($month == 2) {\n            if ($day < 1 || $day > 29)\
    \ {\n                return '';\n            }\n        } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n            if ($day < 1 || $day\
    \ > 30) {\n                return '';\n            }\n        } else {\n     \
    \       if ($day < 1 || $day > 31) {\n                return '';\n           \
    \ }\n        }\n        return 1;\n    }\n    return '';\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = \"\";\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <=\
    \ 12) {\n            if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ >= 1 && $day <= 31) {\n                    $ret = 1;\n                }\n  \
    \          } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n                if ($day >= 1 && $day <= 30) {\n                    $ret\
    \ = 1;\n                }\n            } elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $ret = 1;\n          \
    \      }\n            }\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $date eq \"\";\n    return \"\" if $month\
    \ < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return \"\
    \" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return \"\"\
    \ if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n\
    \    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month == 11\
    \ && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $day = $2;\n       \
    \ my $month = $1;\n        my $year = $3;\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = '';\n        } elsif ($month == 2) {\n        \
    \    if ($day < 1 || $day > 29) {\n                $result = '';\n           \
    \ }\n        } elsif ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n            if ($day < 1\
    \ || $day > 31) {\n                $result = '';\n            }\n        } else\
    \ {\n            if ($day < 1 || $day > 30) {\n                $result = '';\n\
    \            }\n        }\n    } else {\n        $result = '';\n    }\n    return\
    \ $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return \"\" if ($m < 1 || $m > 12);\n    return \"\" if ($d < 1\
    \ || $d > 31);\n    return \"\" if ($m == 2 && $d > 29);\n    return \"\" if ($m\
    \ == 4 && $d > 30);\n    return \"\" if ($m == 6 && $d > 30);\n    return \"\"\
    \ if ($m == 9 && $d > 30);\n    return \"\" if ($m == 11 && $d > 30);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4\
    \ && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\"\
    \ if $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m ==\
    \ 2 && $d > 29;\n    return '' if ($m == 4 || $m == 6 || $m == 9 || $m == 11)\
    \ && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my @date_parts\
    \ = split(/-/, $date);\n    my $month = $date_parts[0];\n    my $day = $date_parts[1];\n\
    \    my $year = $date_parts[2];\n    my $days_in_month = 0;\n    if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n        $days_in_month = 31;\n    } elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n        $days_in_month = 30;\n\
    \    } elsif ($month == 2) {\n        $days_in_month = 29;\n    }\n    if ($date\
    \ eq '' || $day < 1 || $day > $days_in_month || $month < 1 || $month > 12 || $year\
    \ < 1) {\n        $valid = '';\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_array = split(/-/, $date);\n    my $month = $date_array[0];\n    my $day\
    \ = $date_array[1];\n    my $year = $date_array[2];\n    if ($month < 1 || $month\
    \ > 12) {\n        $result = \"\";\n    }\n    if ($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n        if ($day < 1 || $day > 31) {\n            $result = \"\";\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day < 1 || $day > 30) {\n            $result = \"\";\n     \
    \   }\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n \
    \           $result = \"\";\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n    };\n\
    \    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month\
    \ > 12) {\n            $valid = '';\n        }\n        elsif ($day < 1 || $day\
    \ > $months->{$month}) {\n            $valid = '';\n        }\n    }\n    else\
    \ {\n        $valid = '';\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my @date = split(/[-\\/]/, $date);\n    return \"\" if scalar @date\
    \ != 3;\n    my $month = $date[0];\n    my $day = $date[1];\n    my $year = $date[2];\n\
    \    return \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 ||\
    \ $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n    return \"\" if\
    \ $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n  \
    \  return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month == 11 &&\
    \ $day > 30;\n    return \"\" if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $month = 0;\n    my $day = 0;\n    my $year = 0;\n    my $date_format = \"\"\
    ;\n    my $date_format_regex = \"\";\n    my $date_regex = \"\";\n    my $date_regex_result\
    \ = \"\";\n    my $date_regex_result_count = 0;\n    my $date_regex_result_count_expected\
    \ = 0;\n    my $date_regex_result_count_expected_max = 0;\n    my $date_regex_result_count_expected_min\
    \ = 0;\n    my $date_regex_result_count_expected_max_month = 0;\n    my $date_regex_result_count_expected_min_month\
    \ = 0;\n    my $date_regex_result_count_expected_max_day = 0;\n    my $date_regex_result_count_expected_min_day\
    \ = 0;\n    my $date_regex_result_count_expected_max_year = 0;\n    my $date_regex_result_count_expected_min_year\
    \ = 0;\n    my $date_regex_result_count_expected_max_month_day = 0;\n    my $date_regex_result_count_expected_min_month_day\
    \ = 0;\n    my $date_regex_result_count_expected_max_month_year = 0;\n    my $date_regex_result_count_expected_min_month_year\
    \ = 0;\n    my $date_regex_result_count_expected_max_day_year = 0;\n    my $date_regex_result_count_expected_min_day_year\
    \ = 0;\n    my $date_regex_result_count_expected_max_month_day_year = 0;\n   \
    \ my $date_regex_result_count_expected_min_month_day_year = 0;\n    my $date_regex_result_count_expected_max_month_day_year_format\
    \ = 0;\n    my $date_regex_result_count_expected_min_month_day_year\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp6u038jo2.pl line 48, at end
    of line

    syntax error at /tmp/tmp6u038jo2.pl line 48, near "$date_regex_result_count_expected_min_month_day_year

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp6u038jo2.pl line 119, at end
    of line

    syntax error at /tmp/tmp6u038jo2.pl line 119, at EOF

    Execution of /tmp/tmp6u038jo2.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19|20)\\\
    d\\d$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return \"\
    \";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return \"\";\n        }\n    }\n    elsif ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            return \"\";\n        }\n    }\n    else {\n        if ($day < 1\
    \ || $day > 31) {\n            return \"\";\n        }\n    }\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $month;\n\
    \    my $day;\n    my $year;\n    if($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/)\
    \ {\n        $month = $1;\n        $day = $2;\n        $year = $3;\n        if($month\
    \ < 1 || $month > 12) {\n            $valid = \"\";\n        }\n        if($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n            if($day < 1 || $day > 31) {\n           \
    \     $valid = \"\";\n            }\n        }\n        if($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n            if($day < 1 || $day > 30)\
    \ {\n                $valid = \"\";\n            }\n        }\n        if($month\
    \ == 2) {\n            if($day < 1 || $day > 29) {\n                $valid = \"\
    \";\n            }\n        }\n    } else {\n        $valid = \"\";\n    }\n \
    \   return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = '';\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <=\
    \ 12) {\n            if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ >= 1 && $day <= 31) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n                if ($day >= 1 && $day <= 30) {\n                    $result\
    \ = 1;\n                }\n            } elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $result = 1;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 0;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $month\
    \ = 0;\n    my $day = 0;\n    my $year = 0;\n    my $date_regex = qr/^(\\d{2})-(\\\
    d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex) {\n        $month = $1;\n   \
    \     $day = $2;\n        $year = $3;\n    } else {\n        $valid = 0;\n   \
    \ }\n    if ($month < 1 || $month > 12) {\n        $valid = 0;\n    }\n    if\
    \ ($month == 2) {\n        if ($day < 1 || $day > 29) {\n            $valid =\
    \ 0;\n        }\n    } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day < 1 || $day > 30) {\n            $valid = 0;\n  \
    \      }\n    } else {\n        if ($day < 1 || $day > 31) {\n            $valid\
    \ = 0;\n        }\n    }\n    if ($valid) {\n        return 1;\n    } else {\n\
    \        return '';\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return '' if ($year < 1);\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if $m == 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n \
    \   return '' if $m == 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split /-/, $date;\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m ==\
    \ 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m ==\
    \ 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year);\n\
    \    my($result) = 1;\n    my($months) = {\n        1 => 31,\n        2 => 29,\n\
    \        3 => 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n    \
    \    7 => 31,\n        8 => 31,\n        9 => 30,\n        10 => 31,\n       \
    \ 11 => 30,\n        12 => 31\n    };\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpvwc2esrx.pl line 107,
    at end of line

    syntax error at /tmp/tmpvwc2esrx.pl line 107, at EOF

    Execution of /tmp/tmpvwc2esrx.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my @date = split(/\\-/,\
    \ $date);\n    my $month = $date[0];\n    my $day = $date[1];\n    my $year =\
    \ $date[2];\n    my $result = 1;\n    if (length($date) == 0) {\n        $result\
    \ = '';\n    }\n    if ($month < 1 || $month > 12) {\n        $result = '';\n\
    \    }\n    if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            $result = '';\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $result = '';\n        }\n    }\n    if ($month == 2) {\n       \
    \ if ($day < 1 || $day > 29) {\n            $result = '';\n        }\n    }\n\
    \    if ($year < 1) {\n        $result = '';\n    }\n    return $result;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($month, $day, $year) = split /-/, $date;\n    return '' unless $month\
    \ && $day && $year;\n    return '' unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/\
    \ && $year =~ /^\\d+$/;\n    return '' unless $month >= 1 && $month <= 12;\n \
    \   return '' unless $day >= 1 && $day <= 31;\n    return '' unless $year >= 1;\n\
    \    return '' unless $month == 2 && $day <= 29;\n    return '' unless $month\
    \ == 4 && $day <= 30;\n    return '' unless $month == 6 && $day <= 30;\n    return\
    \ '' unless $month == 9 && $day <= 30;\n    return '' unless $month == 11 && $day\
    \ <= 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my($valid) = 1;\n    if ($date eq \"\") {\n      \
    \  $valid = \"\";\n    }\n    if ($day < 1 || $day > 31) {\n        $valid = \"\
    \";\n    }\n    if ($month < 1 || $month > 12) {\n        $valid = \"\";\n   \
    \ }\n    if ($year < 1) {\n        $valid = \"\";\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    return '' unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d,\
    \ $y) = ($1, $2, $3);\n    return '' if $m < 1 || $m > 12;\n    return '' if $d\
    \ < 1 || $d > 31;\n    return '' if $m == 2 && $d > 29;\n    return '' if $m ==\
    \ 4 && $d > 30;\n    return '' if $m == 6 && $d > 30;\n    return '' if $m ==\
    \ 9 && $d > 30;\n    return '' if $m == 11 && $d > 30;\n    return 1;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m ==\
    \ 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m ==\
    \ 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return \"\" if ($year < 1);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = '';\n        }\n        if ($month ==\
    \ 2) {\n            if ($day < 1 || $day > 29) {\n                $ret = '';\n\
    \            }\n        } elsif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            if\
    \ ($day < 1 || $day > 31) {\n                $ret = '';\n            }\n     \
    \   } else {\n            if ($day < 1 || $day > 30) {\n                $ret =\
    \ '';\n            }\n        }\n    } else {\n        $ret = '';\n    }\n   \
    \ return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_array = split(/-/, $date);\n    my $month = $date_array[0];\n    my $day\
    \ = $date_array[1];\n    my $year = $date_array[2];\n    if ($date eq '') {\n\
    \        $result = '';\n    }\n    elsif ($month < 1 || $month > 12) {\n     \
    \   $result = '';\n    }\n    elsif ($month == 1 || $month == 3 || $month == 5\
    \ || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if\
    \ ($day < 1 || $day > 31) {\n            $result = '';\n        }\n    }\n   \
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \  if ($day < 1 || $day > 30) {\n            $result = '';\n        }\n    }\n\
    \    elsif ($month == 2) {\n        if ($day < 1 || $day > 29) {\n           \
    \ $result = '';\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $days\
    \ = 0;\n    my $month = 0;\n    my $year = 0;\n    my $date_format = 0;\n    my\
    \ $date_format_regex = qr/^\\d{2}-\\d{2}-\\d{4}$/;\n    if ($date =~ $date_format_regex)\
    \ {\n        $date_format = 1;\n    }\n    if ($date_format) {\n        ($month,\
    \ $days, $year) = split(/-/, $date);\n        if ($month < 1 || $month > 12) {\n\
    \            $valid = 0;\n        }\n        if ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \            if ($days < 1 || $days > 31) {\n                $valid = 0;\n   \
    \         }\n        }\n        if ($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n            if ($days < 1 || $days > 30) {\n           \
    \     $valid = 0;\n            }\n        }\n        if ($month == 2) {\n    \
    \        if ($days < 1 || $days > 29) {\n                $valid = 0;\n       \
    \     }\n        }\n    }\n    else {\n        $valid = 0;\n    }\n    if ($valid)\
    \ {\n        return 1;\n    }\n    else {\n        return '';\n    }\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' if $m ==\
    \ 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return '' if $m ==\
    \ 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return '' if $m ==\
    \ 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $date eq '';\n    return '' if $month\
    \ < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n    return ''\
    \ if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n \
    \   return '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day\
    \ > 30;\n    return '' if $month == 11 && $day > 30;\n    return '' if $year <\
    \ 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my @date = split(/\\-/,\
    \ $date);\n    my $month = $date[0];\n    my $day = $date[1];\n    my $year =\
    \ $date[2];\n    my $result = '';\n    if ($date ne '') {\n        if ($month\
    \ >= 1 && $month <= 12) {\n            if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if ($day >= 1 && $day <= 31) {\n                    $result = 1;\n\
    \                }\n            }\n            elsif ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n                if ($day >= 1 && $day <=\
    \ 30) {\n                    $result = 1;\n                }\n            }\n\
    \            elsif ($month == 2) {\n                if ($day >= 1 && $day <= 29)\
    \ {\n                    $result = 1;\n                }\n            }\n    \
    \    }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    return '' unless $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return '' if $month < 1 || $month > 12;\n\
    \    return '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day\
    \ > 29;\n    return '' if $month == 4 && $day > 30;\n    return '' if $month ==\
    \ 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if\
    \ $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n   \
    \     my $month = $1;\n        my $day = $2;\n        my $year = $3;\n       \
    \ if ($month < 1 || $month > 12) {\n            $result = '';\n        } elsif\
    \ ($month == 2) {\n            if ($day < 1 || $day > 29) {\n                $result\
    \ = '';\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n        \
    \        $result = '';\n            }\n        } elsif ($day < 1 || $day > 31)\
    \ {\n            $result = '';\n        }\n    } else {\n        $result = '';\n\
    \    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d\
    \ <= 31;\n    return '' unless $y >= 1900 && $y <= 2100;\n    return '' unless\
    \ $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    # your code here\n    if($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/){\n        if($1>0 && $1<13){\n          \
    \  if($1==2){\n                if($2>0 && $2<30){\n                    return\
    \ 1;\n                }\n            }\n            elsif($1==1 || $1==3 || $1==5\
    \ || $1==7 || $1==8 || $1==10 || $1==12){\n                if($2>0 && $2<32){\n\
    \                    return 1;\n                }\n            }\n           \
    \ elsif($1==4 || $1==6 || $1==9 || $1==11){\n                if($2>0 && $2<31){\n\
    \                    return 1;\n                }\n            }\n        }\n\
    \    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_parts = split(/-/, $date);\n    my $month = $date_parts[0];\n    my $day\
    \ = $date_parts[1];\n    my $year = $date_parts[2];\n    if ($date eq '') {\n\
    \        $result = '';\n    } elsif ($month < 1 || $month > 12) {\n        $result\
    \ = '';\n    } elsif ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day\
    \ > 31) {\n            $result = '';\n        }\n    } elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $result = '';\n        }\n    } elsif ($month == 2) {\n        if\
    \ ($day < 1 || $day > 29) {\n            $result = '';\n        }\n    }\n   \
    \ return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n        my\
    \ $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month\
    \ < 1 || $month > 12) {\n            $ret = '';\n        } elsif ($month == 2)\
    \ {\n            if ($day < 1 || $day > 29) {\n                $ret = '';\n  \
    \          }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $ret = '';\n\
    \            }\n        } elsif ($day < 1 || $day > 31) {\n            $ret =\
    \ '';\n        }\n    } else {\n        $ret = '';\n    }\n    return $ret;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1900 || $year > 2020;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = '';\n        } elsif ($month == 2) {\n        \
    \    if ($day < 1 || $day > 29) {\n                $result = '';\n           \
    \ }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day < 1 || $day > 30) {\n                $result = '';\n\
    \            }\n        } elsif ($day < 1 || $day > 31) {\n            $result\
    \ = '';\n        }\n    } else {\n        $result = '';\n    }\n    return $result;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = '';\n        }\n        if ($month ==\
    \ 2) {\n            if ($day < 1 || $day > 29) {\n                $ret = '';\n\
    \            }\n        } elsif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            if\
    \ ($day < 1 || $day > 31) {\n                $ret = '';\n            }\n     \
    \   } else {\n            if ($day < 1 || $day > 30) {\n                $ret =\
    \ '';\n            }\n        }\n    } else {\n        $ret = '';\n    }\n   \
    \ return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m and $d and $y;\n\
    \    return '' unless $m =~ /^\\d+$/ and $d =~ /^\\d+$/ and $y =~ /^\\d+$/;\n\
    \    return '' unless $m >= 1 and $m <= 12;\n    return '' unless $d >= 1 and\
    \ $d <= 31;\n    return '' unless $y >= 1900 and $y <= 2100;\n    return '' if\
    \ $m == 2 and $d > 29;\n    return '' if $m == 4 and $d > 30;\n    return '' if\
    \ $m == 6 and $d > 30;\n    return '' if $m == 9 and $d > 30;\n    return '' if\
    \ $m == 11 and $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date;\n\
    \    my($m, $d, $y) = split(/-/, $date);\n    return '' unless $m && $d && $y;\n\
    \    return '' unless $m =~ /^\\d+$/ && $d =~ /^\\d+$/ && $y =~ /^\\d+$/;\n  \
    \  return '' unless $m >= 1 && $m <= 12;\n    return '' unless $d >= 1 && $d <=\
    \ 31;\n    return '' unless $y >= 1;\n    return '' if $m == 2 && $d > 29;\n \
    \   return '' if ($m == 4 || $m == 6 || $m == 9 || $m == 11) && $d > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $valid = '';\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $valid = '';\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $valid = '';\n          \
    \  }\n        } else {\n            if ($day < 1 || $day > 31) {\n           \
    \     $valid = '';\n            }\n        }\n    } else {\n        $valid = '';\n\
    \    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($day, $month, $year)\
    \ = split(/-/, $date);\n    return \"\" if $day < 1 || $day > 31 || $month < 1\
    \ || $month > 12 || $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ '' if $m > 12 || $m < 1;\n    return '' if $d > 31 || $d < 1;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if ($m == 4 || $m == 6 || $m == 9 || $m\
    \ == 11) && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $month;\n\
    \    my $day;\n    my $year;\n    my $days_in_month;\n    my $days_in_feb;\n \
    \   my $leap_year;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpqu4ems8m.pl line 98, at
    end of line

    syntax error at /tmp/tmpqu4ems8m.pl line 98, at EOF

    Execution of /tmp/tmpqu4ems8m.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my($month, $day, $year) = ($1, $2, $3);\n       \
    \ if ($month >= 1 && $month <= 12) {\n            if ($month == 2) {\n       \
    \         if ($day >= 1 && $day <= 29) {\n                    return 1;\n    \
    \            }\n            } elsif ($month == 1 || $month == 3 || $month == 5\
    \ || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n         \
    \       if ($day >= 1 && $day <= 31) {\n                    return 1;\n      \
    \          }\n            } elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n                if ($day >= 1 && $day <= 30) {\n          \
    \          return 1;\n                }\n            }\n        }\n    }\n   \
    \ return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $pattern\
    \ = '^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$';\n    if ($date !~\
    \ /$pattern/) {\n        $ret = '';\n    } else {\n        my ($m, $d, $y) = split(/-/,\
    \ $date);\n        if ($m == 2) {\n            if ($d > 29) {\n              \
    \  $ret = '';\n            }\n        } elsif ($m == 4 || $m == 6 || $m == 9 ||\
    \ $m == 11) {\n            if ($d > 30) {\n                $ret = '';\n      \
    \      }\n        } elsif ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8\
    \ || $m == 10 || $m == 12) {\n            if ($d > 31) {\n                $ret\
    \ = '';\n            }\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $date eq '';\n    return '' if $month\
    \ < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n    return ''\
    \ if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n \
    \   return '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day\
    \ > 30;\n    return '' if $month == 11 && $day > 30;\n    return '' if $year <\
    \ 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $regex\
    \ = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n    if ($date\
    \ =~ $regex) {\n        my ($month, $day, $year) = split(/-/, $date);\n      \
    \  if ($month == 2) {\n            if ($day > 29) {\n                $valid =\
    \ '';\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day > 30) {\n                $valid =\
    \ '';\n            }\n        } elsif ($month == 1 || $month == 3 || $month ==\
    \ 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n       \
    \     if ($day > 31) {\n                $valid = '';\n            }\n        }\n\
    \    } else {\n        $valid = '';\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month >= 1 && $month <= 12) {\n            if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                return 1;\n                }\n            }\n            elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            \
    \    if ($day >= 1 && $day <= 30) {\n                    return 1;\n         \
    \       }\n            }\n            elsif ($month == 2) {\n                if\
    \ ($day >= 1 && $day <= 29) {\n                    return 1;\n               \
    \ }\n            }\n        }\n    }\n    return '';\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my $month = $1;\n    my $day = $2;\n  \
    \  my $year = $3;\n    return '' if $month < 1 || $month > 12;\n    return ''\
    \ if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n    return\
    \ '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n\
    \    return '' if $month == 9 && $day > 30;\n    return '' if $month == 11 &&\
    \ $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1900 || $year > 2100;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my($days_in_month) = 0;\n    if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n        $days_in_month = 31;\n    } elsif ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        $days_in_month = 30;\n    } elsif\
    \ ($month == 2) {\n        $days_in_month = 29;\n    }\n    if ($month < 1 ||\
    \ $month > 12) {\n        return '';\n    }\n    if ($day < 1 || $day > $days_in_month)\
    \ {\n        return '';\n    }\n    if ($year < 1) {\n        return '';\n   \
    \ }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($year < 1 || $year > 9999);\n\
    \    return '' if ($month == 2 && $day > 29);\n    return '' if ($month == 4 &&\
    \ $day > 30);\n    return '' if ($month == 6 && $day > 30);\n    return '' if\
    \ ($month == 9 && $day > 30);\n    return '' if ($month == 11 && $day > 30);\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])-(\\\
    d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my $year =\
    \ $3;\n        if ($month == 2) {\n            if ($day > 29) {\n            \
    \    return '';\n            }\n        } elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n            if ($day > 30) {\n             \
    \   return '';\n            }\n        } elsif ($day > 31) {\n            return\
    \ '';\n        }\n        return 1;\n    }\n    return '';\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my($valid) = 1;\n    if ($date eq '') {\n        $valid\
    \ = '';\n    } elsif ($day < 1 || $day > 31) {\n        $valid = '';\n    } elsif\
    \ ($month < 1 || $month > 12) {\n        $valid = '';\n    } elsif ($year < 1)\
    \ {\n        $valid = '';\n    } elsif ($month == 2 && $day > 29) {\n        $valid\
    \ = '';\n    } elsif ($month == 4 && $day > 30) {\n        $valid = '';\n    }\
    \ elsif ($month == 6 && $day > 30) {\n        $valid = '';\n    } elsif ($month\
    \ == 9 && $day > 30) {\n        $valid = '';\n    } elsif ($month == 11 && $day\
    \ > 30) {\n        $valid = '';\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if($month < 1 || $month > 12);\n    return\
    \ '' if($day < 1 || $day > 31);\n    return '' if($month == 2 && $day > 29);\n\
    \    return '' if($month == 4 && $day > 30);\n    return '' if($month == 6 &&\
    \ $day > 30);\n    return '' if($month == 9 && $day > 30);\n    return '' if($month\
    \ == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $regex\
    \ = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$/;\n    if ($date =~\
    \ $regex) {\n        my ($month, $day, $year) = split /-/, $date;\n        if\
    \ ($month == 2) {\n            if ($day > 29) {\n                $ret = '';\n\
    \            }\n        } elsif ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n            if ($day > 30) {\n                $ret = '';\n\
    \            }\n        }\n    } else {\n        $ret = '';\n    }\n    return\
    \ $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return '';\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return '';\n        }\n    } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n            return\
    \ '';\n        }\n    } else {\n        if ($day < 1 || $day > 31) {\n       \
    \     return '';\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $error\
    \ = '';\n    my $months = {\n        1 => 31,\n        2 => 29,\n        3 =>\
    \ 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n        7 => 31,\n\
    \        8 => 31,\n        9 => 30,\n        10 => 31,\n        11 => 30,\n  \
    \      12 => 31\n    };\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n\
    \        my $month = $1;\n        my $day = $2;\n        my $year = $3;\n    \
    \    if ($month < 1 || $month > 12) {\n            $valid = '';\n            $error\
    \ = \"Month is not valid: $month\";\n        }\n        if ($day < 1 || $day >\
    \ $months->{$month}) {\n            $valid = '';\n            $error = \"Day is\
    \ not valid: $day\";\n        }\n        if ($year < 1) {\n            $valid\
    \ = '';\n            $error = \"Year is not valid: $year\";\n        }\n    }\
    \ else {\n        $valid = '';\n        $error = \"Date is not in the correct\
    \ format: $date\";\n    }\n    if ($valid) {\n        return 1;\n    } else {\n\
    \        return $error;\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n   \
    \     my $month = $1;\n        my $day = $2;\n        my $year = $3;\n       \
    \ if ($month < 1 || $month > 12) {\n            $result = '';\n        }\n   \
    \     if ($month == 2) {\n            if ($day < 1 || $day > 29) {\n         \
    \       $result = '';\n            }\n        }\n        elsif ($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n            if ($day < 1 || $day\
    \ > 30) {\n                $result = '';\n            }\n        }\n        else\
    \ {\n            if ($day < 1 || $day > 31) {\n                $result = '';\n\
    \            }\n        }\n    }\n    else {\n        $result = '';\n    }\n \
    \   return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date !~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ \"\" if $m < 1 || $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return\
    \ \"\" if $m == 2 && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return\
    \ \"\" if $m == 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return\
    \ \"\" if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m > 12 || $m < 1;\n    return '' if $d > 31 || $d < 1;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $month\
    \ = substr($date, 0, 2);\n    my $day = substr($date, 3, 2);\n    my $year = substr($date,\
    \ 6, 4);\n    if ($date eq '') {\n        $valid = '';\n    } elsif ($month <\
    \ 1 || $month > 12) {\n        $valid = '';\n    } elsif ($day < 1 || $day > 31)\
    \ {\n        $valid = '';\n    } elsif ($month == 2 && $day > 29) {\n        $valid\
    \ = '';\n    } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            $valid = '';\n        }\n    }\n  \
    \  return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month, $day, $year) = ($1, $2, $3);\n\
    \    return '' if $month < 1 || $month > 12;\n    return '' if $day < 1 || $day\
    \ > 31;\n    return '' if $month == 2 && $day > 29;\n    return '' if $month ==\
    \ 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n    return '' if\
    \ $month == 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if !$month || !$day || !$year;\n    return\
    \ '' if $month < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n\
    \    return '' if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day\
    \ > 30;\n    return '' if $month == 6 && $day > 30;\n    return '' if $month ==\
    \ 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month, $day, $year) = ($1, $2, $3);\n\
    \    return '' if $month < 1 || $month > 12;\n    return '' if $day < 1 || $day\
    \ > 31;\n    return '' if $month == 2 && $day > 29;\n    return '' if $month ==\
    \ 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n    return '' if\
    \ $month == 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $date eq \"\";\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return\
    \ \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day >\
    \ 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $date eq '';\n    return '' if $month\
    \ < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n    return ''\
    \ if $year < 1;\n    return '' if $month == 2 && $day > 29;\n    return '' if\
    \ $month == 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n    return\
    \ '' if $month == 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($year < 1);\n    return ''\
    \ if ($month == 2 && $day > 29);\n    return '' if ($month == 4 && $day > 30);\n\
    \    return '' if ($month == 6 && $day > 30);\n    return '' if ($month == 9 &&\
    \ $day > 30);\n    return '' if ($month == 11 && $day > 30);\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_parts = split('-', $date);\n    if (scalar @date_parts != 3) {\n     \
    \   $result = '';\n    } else {\n        my $month = $date_parts[0];\n       \
    \ my $day = $date_parts[1];\n        my $year = $date_parts[2];\n        if ($month\
    \ < 1 || $month > 12) {\n            $result = '';\n        } elsif ($month ==\
    \ 2) {\n            if ($day < 1 || $day > 29) {\n                $result = '';\n\
    \            }\n        } elsif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            if\
    \ ($day < 1 || $day > 31) {\n                $result = '';\n            }\n  \
    \      } else {\n            if ($day < 1 || $day > 30) {\n                $result\
    \ = '';\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $valid = '';\n        }\n        if ($month ==\
    \ 2) {\n            if ($day < 1 || $day > 29) {\n                $valid = '';\n\
    \            }\n        }\n        elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n        \
    \        $valid = '';\n            }\n        }\n        else {\n            if\
    \ ($day < 1 || $day > 31) {\n                $valid = '';\n            }\n   \
    \     }\n    }\n    else {\n        $valid = '';\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my @months\
    \ = qw(31 30 31 30 31 30 31 31 30 31 30 31);\n    my @date = split /-/, $date;\n\
    \    if (scalar @date != 3) {\n        $ret = '';\n    }\n    else {\n       \
    \ my $month = $date[0];\n        my $day = $date[1];\n        my $year = $date[2];\n\
    \        if ($month < 1 || $month > 12) {\n            $ret = '';\n        }\n\
    \        elsif ($day < 1 || $day > $months[$month - 1]) {\n            $ret =\
    \ '';\n        }\n        elsif ($month == 2 && $day == 29 && !is_leap_year($year))\
    \ {\n            $ret = '';\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n   \
    \     my $month = $1;\n        my $day = $2;\n        my $year = $3;\n       \
    \ if ($month < 1 || $month > 12) {\n            $result = \"\";\n        }\n \
    \       if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n            if ($day < 1 || $day >\
    \ 31) {\n                $result = \"\";\n            }\n        }\n        if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if\
    \ ($day < 1 || $day > 30) {\n                $result = \"\";\n            }\n\
    \        }\n        if ($month == 2) {\n            if ($day < 1 || $day > 29)\
    \ {\n                $result = \"\";\n            }\n        }\n    } else {\n\
    \        $result = \"\";\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my @date_arr\
    \ = split(/\\-/, $date);\n    my $month = $date_arr[0];\n    my $day = $date_arr[1];\n\
    \    my $year = $date_arr[2];\n    if ($month < 1 || $month > 12) {\n        $valid\
    \ = '';\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            $valid = '';\n        }\n    }\n    elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $valid = '';\n        }\n    }\n    else {\n        if ($day < 1\
    \ || $day > 31) {\n            $valid = '';\n        }\n    }\n    if ($year <\
    \ 1) {\n        $valid = '';\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ m{^(\\d{2})-(\\d{2})-(\\d{4})$};\n    my($month, $day, $year) = ($1, $2, $3);\n\
    \    return '' if $month < 1 || $month > 12;\n    return '' if $day < 1 || $day\
    \ > 31;\n    return '' if $month == 2 && $day > 29;\n    return '' if $month ==\
    \ 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n    return '' if\
    \ $month == 9 && $day > 30;\n    return '' if $month == 11 && $day > 30;\n   \
    \ return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n  \
    \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year);\n\
    \    my($days_in_month);\n    my($valid_date) = 1;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp46g9fhpr.pl line 94, at
    end of line

    syntax error at /tmp/tmp46g9fhpr.pl line 94, at EOF

    Execution of /tmp/tmp46g9fhpr.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_array = split(/-/, $date);\n    my $month = $date_array[0];\n    my $day\
    \ = $date_array[1];\n    my $year = $date_array[2];\n    if ($month < 1 || $month\
    \ > 12) {\n        $result = '';\n    }\n    if ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \        if ($day < 1 || $day > 31) {\n            $result = '';\n        }\n\
    \    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \        if ($day < 1 || $day > 30) {\n            $result = '';\n        }\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     $result = '';\n        }\n    }\n    if ($year < 1) {\n        $result =\
    \ '';\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return \"\" if ($year < 1);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19[0-9]{2}|20[0-9]{2})$/;\n\
    \    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $date_regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n\
    \    if ($date =~ $date_regex) {\n        my $month = $1;\n        my $day = $2;\n\
    \        my $year = $3;\n        if ($month == 2) {\n            if ($day > 29)\
    \ {\n                $result = '';\n            }\n        }\n        elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ > 30) {\n                $result = '';\n            }\n        }\n        else\
    \ {\n            if ($day > 31) {\n                $result = '';\n           \
    \ }\n        }\n    }\n    else {\n        $result = '';\n    }\n    return $result;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my($m, $d, $y) = ($1, $2, $3);\n        if ($m <\
    \ 1 || $m > 12) {\n            return '';\n        }\n        if ($m == 2) {\n\
    \            if ($d < 1 || $d > 29) {\n                return '';\n          \
    \  }\n        } elsif ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n        \
    \    if ($d < 1 || $d > 30) {\n                return '';\n            }\n   \
    \     } else {\n            if ($d < 1 || $d > 31) {\n                return '';\n\
    \            }\n        }\n        return 1;\n    }\n    return '';\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split(/-/, $date);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my $valid = 1;\n    if ($month < 1 || $month > 12)\
    \ {\n        $valid = 0;\n    }\n    if ($month == 2) {\n        if ($day < 1\
    \ || $day > 29) {\n            $valid = 0;\n        }\n    }\n    elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1\
    \ || $day > 30) {\n            $valid = 0;\n        }\n    }\n    else {\n   \
    \     if ($day < 1 || $day > 31) {\n            $valid = 0;\n        }\n    }\n\
    \    if ($valid) {\n        return 1;\n    }\n    else {\n        return '';\n\
    \    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my ($m, $d, $y) = split /-/, $date;\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my $valid = 1;\n    if ($month < 1 || $month > 12)\
    \ {\n        $valid = '';\n    }\n    if ($month == 2) {\n        if ($day < 1\
    \ || $day > 29) {\n            $valid = '';\n        }\n    } elsif ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 ||\
    \ $day > 30) {\n            $valid = '';\n        }\n    } else {\n        if\
    \ ($day < 1 || $day > 31) {\n            $valid = '';\n        }\n    }\n    return\
    \ $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($m, $d, $y) = split(/-/,\
    \ $date);\n    return '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d\
    \ > 31;\n    return '' if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d\
    \ > 30;\n    return '' if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d\
    \ > 30;\n    return '' if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19[0-9][0-9]|20[0-1][0-9])$/;\n\
    \    if ($date =~ $regex) {\n        my ($month, $day, $year) = split(/-/, $date);\n\
    \        if ($month == 2) {\n            if ($day > 29) {\n                $result\
    \ = '';\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day > 30) {\n                $result\
    \ = '';\n            }\n        }\n    } else {\n        $result = '';\n    }\n\
    \    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return \"\
    \";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return \"\";\n        }\n    }\n    if ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n     \
    \       return \"\";\n        }\n    }\n    if ($month == 1 || $month == 3 ||\
    \ $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n\
    \        if ($day < 1 || $day > 31) {\n            return \"\";\n        }\n \
    \   }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19|20)\\\
    d\\d$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $days\
    \ = 0;\n    my $month = 0;\n    my $year = 0;\n    my $date_format = 0;\n    my\
    \ $date_format_regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my $date_format_regex_2\
    \ = qr/^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\n    if ($date =~ $date_format_regex)\
    \ {\n        $date_format = 1;\n        $month = $1;\n        $days = $2;\n  \
    \      $year = $3;\n    } elsif ($date =~ $date_format_regex_2) {\n        $date_format\
    \ = 1;\n        $month = $1;\n        $days = $2;\n        $year = $3;\n    }\n\
    \    if ($date_format == 0) {\n        $ret = '';\n    } elsif ($month < 1 ||\
    \ $month > 12) {\n        $ret = '';\n    } elsif ($month == 1 || $month == 3\
    \ || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12)\
    \ {\n        if ($days < 1 || $days > 31) {\n            $ret = '';\n        }\n\
    \    } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n \
    \       if ($days < 1 || $days > 30) {\n            $ret = '';\n        }\n  \
    \  } elsif ($month == 2) {\n        if ($days < 1 || $days > 29) {\n         \
    \   $ret = '';\n        }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ( $date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/ ) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ( $month < 1 || $month > 12 ) {\n\
    \            $ret = '';\n        } elsif ( $month == 2 ) {\n            if ( $day\
    \ < 1 || $day > 29 ) {\n                $ret = '';\n            }\n        } elsif\
    \ ( $month == 4 || $month == 6 || $month == 9 || $month == 11 ) {\n          \
    \  if ( $day < 1 || $day > 30 ) {\n                $ret = '';\n            }\n\
    \        } else {\n            if ( $day < 1 || $day > 31 ) {\n              \
    \  $ret = '';\n            }\n        }\n    } else {\n        $ret = '';\n  \
    \  }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my($m, $d, $y) = ($1, $2, $3);\n        if ($m >\
    \ 0 && $m < 13) {\n            if ($m == 2) {\n                if ($d > 0 && $d\
    \ < 30) {\n                    return 1;\n                }\n            } elsif\
    \ ($m == 1 || $m == 3 || $m == 5 || $m == 7 || $m == 8 || $m == 10 || $m == 12)\
    \ {\n                if ($d > 0 && $d < 32) {\n                    return 1;\n\
    \                }\n            } else {\n                if ($d > 0 && $d < 31)\
    \ {\n                    return 1;\n                }\n            }\n       \
    \ }\n    }\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if(!$month || !$day || !$year);\n    return\
    \ '' if($month < 1 || $month > 12);\n    return '' if($day < 1 || $day > 31);\n\
    \    return '' if($month == 2 && $day > 29);\n    return '' if($month == 4 &&\
    \ $day > 30);\n    return '' if($month == 6 && $day > 30);\n    return '' if($month\
    \ == 9 && $day > 30);\n    return '' if($month == 11 && $day > 30);\n    return\
    \ '' if($year < 1);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($day, $month, $year)\
    \ = split(/-/, $date);\n    return '' if $date eq '';\n    return '' if $day <\
    \ 1 or $day > 31;\n    return '' if $month < 1 or $month > 12;\n    return ''\
    \ if $year < 1;\n    return '' if $day > 30 and ($month == 4 or $month == 6 or\
    \ $month == 9 or $month == 11);\n    return '' if $day > 29 and $month == 2;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return '' if ($year < 1900 || $year > 2020);\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $date eq '';\n    return '' if $month\
    \ < 1 || $month > 12;\n    return '' if $day < 1 || $day > 31;\n    return ''\
    \ if $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n \
    \   return '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day\
    \ > 30;\n    return '' if $month == 11 && $day > 30;\n    return '' if $year <\
    \ 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = '';\n        } elsif ($month == 2) {\n            if ($day <\
    \ 1 || $day > 29) {\n                $ret = '';\n            }\n        } elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if\
    \ ($day < 1 || $day > 30) {\n                $ret = '';\n            }\n     \
    \   } else {\n            if ($day < 1 || $day > 31) {\n                $ret =\
    \ '';\n            }\n        }\n    } else {\n        $ret = '';\n    }\n   \
    \ return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($month == 2 && $day > 29);\n\
    \    return '' if ($month == 4 && $day > 30);\n    return '' if ($month == 6 &&\
    \ $day > 30);\n    return '' if ($month == 9 && $day > 30);\n    return '' if\
    \ ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n    };\n\
    \    if(!$date) {\n        $valid = \"\";\n    } else {\n        my($month, $day,\
    \ $year) = split(/-/, $date);\n        if($month < 1 || $month > 12) {\n     \
    \       $valid = \"\";\n        } elsif($day < 1 || $day > $months->{$month})\
    \ {\n            $valid = \"\";\n        } elsif($year < 1) {\n            $valid\
    \ = \"\";\n        }\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_parts = split(/-/, $date);\n    my $month = $date_parts[0];\n    my $day\
    \ = $date_parts[1];\n    my $year = $date_parts[2];\n    if (length($date) ==\
    \ 0) {\n        $result = '';\n    } elsif ($month < 1 || $month > 12) {\n   \
    \     $result = '';\n    } elsif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day\
    \ < 1 || $day > 31) {\n            $result = '';\n        }\n    } elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1\
    \ || $day > 30) {\n            $result = '';\n        }\n    } elsif ($month ==\
    \ 2) {\n        if ($day < 1 || $day > 29) {\n            $result = '';\n    \
    \    }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return \"\" if ($year < 1);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\\
    d{4}$/) {\n        my($month, $day, $year) = split(/-/, $date);\n        if ($month\
    \ == 2) {\n            if ($day > 29) {\n                return '';\n        \
    \    }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11) {\n            if ($day > 30) {\n                return '';\n          \
    \  }\n        }\n        return 1;\n    }\n    return '';\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || ($m == 2 && $d > 29) ||\
    \ ($m == 4 && $d > 30) || ($m == 6 && $d > 30) || ($m == 9 && $d > 30) || ($m\
    \ == 11 && $d > 30) || ($m == 1 && $d > 31) || ($m == 3 && $d > 31) || ($m ==\
    \ 5 && $d > 31) || ($m == 7 && $d > 31) || ($m == 8 && $d > 31) || ($m == 10 &&\
    \ $d > 31) || ($m == 12 && $d > 31);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ m{^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$};\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078452
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$/;\n\
    \    return $date =~ $regex ? 1 : '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078452
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if ($month < 1 || $month > 12);\n    return\
    \ '' if ($day < 1 || $day > 31);\n    return '' if ($year < 1);\n    return ''\
    \ if ($month == 2 && $day > 29);\n    return '' if ($month == 4 && $day > 30);\n\
    \    return '' if ($month == 6 && $day > 30);\n    return '' if ($month == 9 &&\
    \ $day > 30);\n    return '' if ($month == 11 && $day > 30);\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n \
    \   return '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day\
    \ > 30;\n    return '' if $month == 9 && $day > 30;\n    return '' if $month ==\
    \ 11 && $day > 30;\n    return '' if $year < 1900 || $year > 2100;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return '';\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return '';\n    }\n    if ($month\
    \ == 2) {\n        if ($day > 29) {\n            return '';\n        }\n    }\n\
    \    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \  if ($day > 30) {\n            return '';\n        }\n    }\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078452
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my @months = qw(01 02 03\
    \ 04 05 06 07 08 09 10 11 12);\n    my @days = qw(31 30 31 30 31 31 30 31 30 31\
    \ 31 30 31);\n    my @date = split(/-/, $date);\n    my $month = $date[0];\n \
    \   my $day = $date[1];\n    my $year = $date[2];\n    if (length($date) == 0)\
    \ {\n        return \"\";\n    }\n    if ($month !~ /^\\d+$/ || $day !~ /^\\d+$/\
    \ || $year !~ /^\\d+$/) {\n        return \"\";\n    }\n    if ($month < 1 ||\
    \ $month > 12) {\n        return \"\";\n    }\n    if ($day < 1 || $day > $days[$month\
    \ - 1]) {\n        return \"\";\n    }\n    if ($year < 1) {\n        return \"\
    \";\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078452
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n       \
    \ if ($month >= 1 && $month <= 12) {\n            if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n                if ($day >= 1 && $day <= 31) {\n                    return\
    \ 1;\n                }\n            } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n                if ($day >= 1 && $day <= 30) {\n  \
    \                  return 1;\n                }\n            } elsif ($month ==\
    \ 2) {\n                if ($day >= 1 && $day <= 29) {\n                    return\
    \ 1;\n                }\n            }\n        }\n    }\n    return '';\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078452
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = '';\n        } elsif ($month == 2) {\n            if ($day <\
    \ 1 || $day > 29) {\n                $ret = '';\n            }\n        } elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if\
    \ ($day < 1 || $day > 30) {\n                $ret = '';\n            }\n     \
    \   } else {\n            if ($day < 1 || $day > 31) {\n                $ret =\
    \ '';\n            }\n        }\n    } else {\n        $ret = '';\n    }\n   \
    \ return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise ''.\n# The date is valid if all of\
    \ the following rules are satisfied:\n# 1. The date string is not empty.\n# 2.\
    \ The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return '' if $month < 1 || $month > 12;\n    return\
    \ '' if $day < 1 || $day > 31;\n    return '' if $year < 1;\n    return '' if\
    \ $month == 2 && $day > 29;\n    return '' if $month == 4 && $day > 30;\n    return\
    \ '' if $month == 6 && $day > 30;\n    return '' if $month == 9 && $day > 30;\n\
    \    return '' if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660078451

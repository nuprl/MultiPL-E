language: pl
name: HumanEval_124_valid_date
results:
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\d+$/;\n \
    \   return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 1 && $year <= 9999;\n \
    \   return \"\" unless $month == 2 && $day <= 29;\n    return \"\" unless $month\
    \ == 4 && $day <= 30;\n    return \"\" unless $month == 6 && $day <= 30;\n   \
    \ return \"\" unless $month == 9 && $day <= 30;\n    return \"\" unless $month\
    \ == 11 && $day <= 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4\
    \ && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\"\
    \ if $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my @date\
    \ = split(/\\-/, $date);\n    my $month = $date[0];\n    my $day = $date[1];\n\
    \    my $year = $date[2];\n    if ($year < 0 || $year > 9999) {\n        $ret\
    \ = \"\";\n    }\n    if ($month < 1 || $month > 12) {\n        $ret = \"\";\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     $ret = \"\";\n        }\n    } elsif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            $ret = \"\";\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            $ret = \"\";\n   \
    \     }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n   \
    \     my $month = $1;\n        my $day = $2;\n        my $year = $3;\n       \
    \ if ($month < 1 || $month > 12) {\n            $result = \"\";\n        } elsif\
    \ ($month == 2) {\n            if ($day < 1 || $day > 29) {\n                $result\
    \ = \"\";\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n        \
    \        $result = \"\";\n            }\n        } elsif ($day < 1 || $day > 31)\
    \ {\n            $result = \"\";\n        }\n    } else {\n        $result = \"\
    \";\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = \"\";\n        } elsif ($month == 2) {\n\
    \            if ($day < 1 || $day > 29) {\n                $ret = \"\";\n    \
    \        }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $ret = \"\
    \";\n            }\n        } elsif ($day < 1 || $day > 31) {\n            $ret\
    \ = \"\";\n        }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my @date\
    \ = split(/-/, $date);\n    my $month = $date[0];\n    my $day = $date[1];\n \
    \   my $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        $ret =\
    \ \"\";\n    }\n    if ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 ||\
    \ $day > 31) {\n            $ret = \"\";\n        }\n    }\n    if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 ||\
    \ $day > 30) {\n            $ret = \"\";\n        }\n    }\n    if ($month ==\
    \ 2) {\n        if ($day < 1 || $day > 29) {\n            $ret = \"\";\n     \
    \   }\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($m, $d, $y) = split /-/,\
    \ $date;\n    return \"\" unless $m && $d && $y;\n    return \"\" unless $m =~\
    \ /^\\d{2}$/ && $d =~ /^\\d{2}$/ && $y =~ /^\\d{4}$/;\n    return \"\" unless\
    \ $m >= 1 && $m <= 12;\n    return \"\" unless $d >= 1 && $d <= 31;\n    return\
    \ \"\" unless $y >= 1900 && $y <= 2100;\n    return \"\" if $m == 2 && $d > 29;\n\
    \    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n\
    \    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($year < 1);\n    return \"\" if ($month == 2 && $day > 29);\n\
    \    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month ==\
    \ 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $msg\
    \ = \"\";\n    my $regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~\
    \ $regex) {\n        my $month = $1;\n        my $day = $2;\n        my $year\
    \ = $3;\n        if ($month < 1 || $month > 12) {\n            $valid = 0;\n \
    \           $msg = \"Invalid month\";\n        } elsif ($day < 1 || $day > 31)\
    \ {\n            $valid = 0;\n            $msg = \"Invalid day\";\n        } elsif\
    \ ($month == 2 && $day > 29) {\n            $valid = 0;\n            $msg = \"\
    Invalid day for February\";\n        } elsif ($month == 2 && $day == 29 && $year\
    \ % 4 != 0) {\n            $valid = 0;\n            $msg = \"Invalid day for February\"\
    ;\n        } elsif ($month == 2 && $day == 29 && $year % 100 == 0 && $year % 400\
    \ != 0) {\n            $valid = 0;\n            $msg = \"Invalid day for February\"\
    ;\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day > 30) {\n                $valid = 0;\n             \
    \   $msg = \"Invalid day for this month\";\n            }\n        }\n    } else\
    \ {\n        $valid = 0;\n        $msg = \"Invalid date format\";\n    }\n   \
    \ if ($valid) {\n        return 1;\n    } else {\n        return $msg;\n    }\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my @date = split(/\\-/,\
    \ $date);\n    my $month = $date[0];\n    my $day = $date[1];\n    my $year =\
    \ $date[2];\n    my $valid_date = 1;\n    if ($month < 1 || $month > 12) {\n \
    \       $valid_date = \"\";\n    }\n    if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            $valid_date = \"\";\n        }\n\
    \    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\
    \        if ($day < 1 || $day > 30) {\n            $valid_date = \"\";\n     \
    \   }\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n \
    \           $valid_date = \"\";\n        }\n    }\n    if ($year < 1) {\n    \
    \    $valid_date = \"\";\n    }\n    return $valid_date;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return \"\" if ($year < 1);\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_parts = split(/-/, $date);\n    if(scalar(@date_parts) != 3) {\n     \
    \   $result = \"\";\n    }\n    my $month = $date_parts[0];\n    my $day = $date_parts[1];\n\
    \    my $year = $date_parts[2];\n    if($month < 1 || $month > 12) {\n       \
    \ $result = \"\";\n    }\n    if($month == 2) {\n        if($day < 1 || $day >\
    \ 29) {\n            $result = \"\";\n        }\n    }\n    if($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n        if($day < 1 || $day > 31) {\n            $result =\
    \ \"\";\n        }\n    }\n    if($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n        if($day < 1 || $day > 30) {\n            $result =\
    \ \"\";\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($day, $month, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($day eq \"\" || $month eq \"\" ||\
    \ $year eq \"\");\n    return \"\" if ($day < 1 || $day > 31);\n    return \"\"\
    \ if ($month < 1 || $month > 12);\n    return \"\" if ($year < 1);\n    return\
    \ \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month == 2 && $day\
    \ == 29 && !is_leap_year($year));\n    return \"\" if ($month == 4 && $day > 30);\n\
    \    return \"\" if ($month == 6 && $day > 30);\n    return \"\" if ($month ==\
    \ 9 && $day > 30);\n    return \"\" if ($month == 11 && $day > 30);\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my $result = 1;\n    if ($date eq \"\") {\n      \
    \  $result = \"\";\n    }\n    elsif ($month < 1 || $month > 12) {\n        $result\
    \ = \"\";\n    }\n    elsif ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1\
    \ || $day > 31) {\n            $result = \"\";\n        }\n    }\n    elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day < 1\
    \ || $day > 30) {\n            $result = \"\";\n        }\n    }\n    elsif ($month\
    \ == 2) {\n        if ($day < 1 || $day > 29) {\n            $result = \"\";\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return \"\" if ($year < 0);\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ \"\" if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = \"\";\n        } elsif ($month == 2) {\n\
    \            if ($day < 1 || $day > 29) {\n                $ret = \"\";\n    \
    \        }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $ret = \"\
    \";\n            }\n        } elsif ($day < 1 || $day > 31) {\n            $ret\
    \ = \"\";\n        }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split /-/, $date;\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 1900 || $y > 2100;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n    };\n\
    \    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if ($day < 1 || $day >\
    \ $months->{$month}) {\n            $valid = \"\";\n        }\n        if ($month\
    \ < 1 || $month > 12) {\n            $valid = \"\";\n        }\n    } else {\n\
    \        $valid = \"\";\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $re = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my\
    \ $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month\
    \ < 1 || $month > 12) {\n            $result = \"\";\n        } elsif ($month\
    \ == 2) {\n            if ($day < 1 || $day > 29) {\n                $result =\
    \ \"\";\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n        \
    \        $result = \"\";\n            }\n        } elsif ($day < 1 || $day > 31)\
    \ {\n            $result = \"\";\n        }\n    } else {\n        $result = \"\
    \";\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_array = split(/\\-/, $date);\n    my $month = $date_array[0];\n    my\
    \ $day = $date_array[1];\n    my $year = $date_array[2];\n    if ($date eq \"\"\
    ) {\n        $result = \"\";\n    } elsif ($month > 12 || $month < 1) {\n    \
    \    $result = \"\";\n    } elsif ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day\
    \ > 31 || $day < 1) {\n            $result = \"\";\n        }\n    } elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day > 30\
    \ || $day < 1) {\n            $result = \"\";\n        }\n    } elsif ($month\
    \ == 2) {\n        if ($day > 29 || $day < 1) {\n            $result = \"\";\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $month == 2 && $day == 29\
    \ && !is_leap_year($year);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/[-\\/]/, $date);\n    return \"\" unless $month && $day && $year;\n\
    \    return \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\\
    d+$/;\n    return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless\
    \ $day >= 1 && $day <= 31;\n    return \"\" unless $year >= 0 && $year <= 9999;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if ($month == 4\
    \ || $month == 6 || $month == 9 || $month == 11) && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n    };\n\
    \    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month\
    \ > 12) {\n            $valid = \"\";\n        }\n        if ($day < 1 || $day\
    \ > $months->{$month}) {\n            $valid = \"\";\n        }\n    } else {\n\
    \        $valid = \"\";\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ \"\" if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n\
    \    return \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 ||\
    \ $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n    return \"\" if\
    \ $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n  \
    \  return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month == 11 &&\
    \ $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $date eq \"\";\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $year < 0;\n    return \"\" if $month == 2 && $day > 29;\n    return\
    \ \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day >\
    \ 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($year < 1);\n    return \"\" if ($month == 2 && $day > 29);\n\
    \    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month ==\
    \ 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 1900 || $y > 2100;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ \"\" if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\d+$/;\n \
    \   return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 1 && $year <= 9999;\n \
    \   return \"\" unless $month == 2 && $day <= 29;\n    return \"\" unless $month\
    \ == 4 && $day <= 30;\n    return \"\" unless $month == 6 && $day <= 30;\n   \
    \ return \"\" unless $month == 9 && $day <= 30;\n    return \"\" unless $month\
    \ == 11 && $day <= 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month < 1 || $month > 12) {\n            return \"\
    \";\n        }\n        if ($month == 2) {\n            if ($day < 1 || $day >\
    \ 29) {\n                return \"\";\n            }\n        }\n        if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ < 1 || $day > 30) {\n                return \"\";\n            }\n        }\n\
    \        if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n            if ($day < 1 || $day >\
    \ 31) {\n                return \"\";\n            }\n        }\n        return\
    \ 1;\n    }\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $date =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n\
    \    return \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 ||\
    \ $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n    return \"\" if\
    \ $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n  \
    \  return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month == 11 &&\
    \ $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my @months = (0,31,29,31,30,31,30,31,31,30,31,30,31);\n\
    \    my @date = split(/-/,$date);\n    if(@date != 3) {\n        return \"\";\n\
    \    }\n    if($date[0] < 1 || $date[0] > 12) {\n        return \"\";\n    }\n\
    \    if($date[0] == 2 && $date[2] % 4 != 0) {\n        if($date[1] < 1 || $date[1]\
    \ > 28) {\n            return \"\";\n        }\n    }\n    else {\n        if($date[1]\
    \ < 1 || $date[1] > $months[$date[0]]) {\n            return \"\";\n        }\n\
    \    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my @date\
    \ = split(/\\-/, $date);\n    my $month = $date[0];\n    my $day = $date[1];\n\
    \    my $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        $valid\
    \ = \"\";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            $valid = \"\";\n        }\n    }\n    if ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $valid = \"\";\n        }\n    }\n    if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            $valid = \"\";\n  \
    \      }\n    }\n    if ($year < 1) {\n        $valid = \"\";\n    }\n    return\
    \ $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1900 || $year > 2020;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($date =~ /^\\d{2}-\\d{2}-\\d{4}$/) {\n       \
    \ if ($month >= 1 && $month <= 12) {\n            if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n                if ($day >= 1 && $day <= 31) {\n                    return\
    \ 1;\n                }\n            } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n                if ($day >= 1 && $day <= 30) {\n  \
    \                  return 1;\n                }\n            } elsif ($month ==\
    \ 2) {\n                if ($day >= 1 && $day <= 29) {\n                    return\
    \ 1;\n                }\n            }\n        }\n    }\n    return \"\";\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\d+$/;\n \
    \   return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 1900 && $year <= 2100;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$/;\n    if ($date\
    \ =~ $regex) {\n        my ($month, $day, $year) = split(/-/, $date);\n      \
    \  if ($month == 2) {\n            if ($day > 29) {\n                $result =\
    \ \"\";\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day > 30) {\n                $result\
    \ = \"\";\n            }\n        } elsif ($day > 31) {\n            $result =\
    \ \"\";\n        }\n    } else {\n        $result = \"\";\n    }\n    return $result;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = \"\";\n   \
    \ my $regex = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19[0-9][0-9]|20[0-1][0-9])$/;\n\
    \    if ($date =~ $regex) {\n        my @date = split /-/, $date;\n        if\
    \ ($date[1] == 2) {\n            if ($date[2] % 4 == 0) {\n                if\
    \ ($date[0] <= 29) {\n                    $result = 1;\n                }\n  \
    \          } else {\n                if ($date[0] <= 28) {\n                 \
    \   $result = 1;\n                }\n            }\n        } elsif ($date[1]\
    \ == 4 || $date[1] == 6 || $date[1] == 9 || $date[1] == 11) {\n            if\
    \ ($date[0] <= 30) {\n                $result = 1;\n            }\n        } else\
    \ {\n            if ($date[0] <= 31) {\n                $result = 1;\n       \
    \     }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split(/-/, $date);\n    return \"\" if $m < 1 || $m > 12;\n    return\
    \ \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return\
    \ \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1900 || $year > 2020;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year);\n\
    \    my(@months) = (31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\n    my($i);\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpz4yzk_od.pl line 94, at
    end of line

    syntax error at /tmp/tmpz4yzk_od.pl line 94, at EOF

    Execution of /tmp/tmpz4yzk_od.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if($month < 1 || $month > 12) {\n   \
    \         $result = \"\";\n        }\n        elsif($month == 2) {\n         \
    \   if($day < 1 || $day > 29) {\n                $result = \"\";\n           \
    \ }\n        }\n        elsif($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if($day < 1 || $day > 30) {\n                $result =\
    \ \"\";\n            }\n        }\n        elsif($day < 1 || $day > 31) {\n  \
    \          $result = \"\";\n        }\n    }\n    else {\n        $result = \"\
    \";\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split /-/, $date;\n    return \"\" if $month\
    \ < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return \"\"\
    \ if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31,\n    };\n\
    \    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if ($day < 1 || $day >\
    \ $months->{$month}) {\n            $ret = \"\";\n        }\n        if ($month\
    \ < 1 || $month > 12) {\n            $ret = \"\";\n        }\n    } else {\n \
    \       $ret = \"\";\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 0;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\\
    d+$/ && $year =~ /^\\d+$/;\n    return \"\" unless $month >= 1 && $month <= 12;\n\
    \    return \"\" unless $day >= 1 && $day <= 31;\n    return \"\" unless $year\
    \ >= 1900 && $year <= 2100;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return \"\
    \";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return \"\";\n        }\n    } elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n     \
    \       return \"\";\n        }\n    } else {\n        if ($day < 1 || $day >\
    \ 31) {\n            return \"\";\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $date_regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex) {\n     \
    \   my $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if\
    \ ($month < 1 || $month > 12) {\n            $valid = \"\";\n        }\n     \
    \   if ($month == 2) {\n            if ($day < 1 || $day > 29) {\n           \
    \     $valid = \"\";\n            }\n        }\n        if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n            if ($day < 1 || $day > 30)\
    \ {\n                $valid = \"\";\n            }\n        }\n        if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n            if ($day < 1 || $day > 31) {\n          \
    \      $valid = \"\";\n            }\n        }\n    } else {\n        $valid\
    \ = \"\";\n    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($year < 1);\n    return \"\" if ($month == 2 && $day > 29);\n\
    \    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month ==\
    \ 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return \"\
    \";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n   \
    \         return \"\";\n        }\n    } elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n     \
    \       return \"\";\n        }\n    } else {\n        if ($day < 1 || $day >\
    \ 31) {\n            return \"\";\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $month = 0;\n    my $day = 0;\n    my $year = 0;\n    my $date_format = \"\"\
    ;\n    my $date_format_regex = \"\";\n    my $date_regex = \"\";\n    my $date_regex_result\
    \ = 0;\n    my $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n\
    \    my $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n    my\
    \ $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n    my $date_format_regex_result\
    \ = 0;\n    my $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n\
    \    my $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n    my\
    \ $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n    my $date_regex_result\
    \ = 0;\n    my $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n\
    \    my $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n    my\
    \ $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n    my $date_format_regex_result\
    \ = 0;\n    my $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n\
    \    my $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n    my\
    \ $date_regex_result = 0;\n    my $date_format_regex_result = 0;\n    my $date_regex_result\
    \ = 0;\n    my $date_format_regex_result = 0;\n    my $date_regex_result = 0;\n\
    \    my $date_format_regex_result =\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmptwwknhew.pl line 59, at end
    of line

    syntax error at /tmp/tmptwwknhew.pl line 59, near "use Test::Deep"

    Missing right curly or square bracket at /tmp/tmptwwknhew.pl line 130, at end
    of line

    syntax error at /tmp/tmptwwknhew.pl line 130, at EOF

    Execution of /tmp/tmptwwknhew.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 1000 || $y > 9999;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $month\
    \ = 0;\n    my $day = 0;\n    my $year = 0;\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\\
    d{4})$/) {\n        $month = $1;\n        $day = $2;\n        $year = $3;\n  \
    \  } else {\n        $valid = 0;\n    }\n    if ($valid) {\n        if ($month\
    \ < 1 || $month > 12) {\n            $valid = 0;\n        }\n        if ($month\
    \ == 2) {\n            if ($day < 1 || $day > 29) {\n                $valid =\
    \ 0;\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n           \
    \     $valid = 0;\n            }\n        } else {\n            if ($day < 1 ||\
    \ $day > 31) {\n                $valid = 0;\n            }\n        }\n    }\n\
    \    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day = $2;\n        my\
    \ $year = $3;\n        if ($month < 1 || $month > 12) {\n            return \"\
    \";\n        }\n        if ($month == 2) {\n            if ($day < 1 || $day >\
    \ 29) {\n                return \"\";\n            }\n        }\n        if ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ < 1 || $day > 30) {\n                return \"\";\n            }\n        }\n\
    \        if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n            if ($day < 1 || $day >\
    \ 31) {\n                return \"\";\n            }\n        }\n        return\
    \ 1;\n    }\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d\\d$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = \"\";\n   \
    \ my $pattern = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$/;\n   \
    \ if ($date =~ $pattern) {\n        my ($month, $day, $year) = split(/-/, $date);\n\
    \        if ($month == 2) {\n            if ($day <= 29) {\n                $result\
    \ = 1;\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day <= 30) {\n                $result\
    \ = 1;\n            }\n        } else {\n            if ($day <= 31) {\n     \
    \           $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return \"\" if $month < 1 || $month > 12;\n\
    \    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 &&\
    \ $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\" if\
    \ $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n  \
    \  return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $date_regex\
    \ = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-\\d{4}$/;\n    if ($date !~\
    \ $date_regex) {\n        $ret = \"\";\n    }\n    else {\n        my ($month,\
    \ $day, $year) = split(/-/, $date);\n        if ($month == 2) {\n            if\
    \ ($day > 29) {\n                $ret = \"\";\n            }\n        }\n    \
    \    elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \         if ($day > 30) {\n                $ret = \"\";\n            }\n    \
    \    }\n        elsif ($month == 1 || $month == 3 || $month == 5 || $month ==\
    \ 7 || $month == 8 || $month == 10 || $month == 12) {\n            if ($day >\
    \ 31) {\n                $ret = \"\";\n            }\n        }\n    }\n    return\
    \ $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ \"\" if $year < 0;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split(/-/, $date);\n    return \"\" if $m < 1 || $m > 12;\n    return\
    \ \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return\
    \ \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = \"\";\n        } elsif ($month == 2) {\n\
    \            if ($day < 1 || $day > 29) {\n                $ret = \"\";\n    \
    \        }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $ret = \"\
    \";\n            }\n        } elsif ($day < 1 || $day > 31) {\n            $ret\
    \ = \"\";\n        }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date !~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ \"\" if $m < 1 || $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return\
    \ \"\" if $m == 2 && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return\
    \ \"\" if $m == 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return\
    \ \"\" if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return \"\" if $month < 1 || $month > 12;\n\
    \    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 &&\
    \ $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\" if\
    \ $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n  \
    \  return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4\
    \ && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\"\
    \ if $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($mm, $dd, $yyyy) = split(/-/,\
    \ $date);\n    return \"\" if ($mm < 1 || $mm > 12);\n    return \"\" if ($dd\
    \ < 1 || $dd > 31);\n    return \"\" if ($mm == 2 && $dd > 29);\n    return \"\
    \" if ($mm == 4 && $dd > 30);\n    return \"\" if ($mm == 6 && $dd > 30);\n  \
    \  return \"\" if ($mm == 9 && $dd > 30);\n    return \"\" if ($mm == 11 && $dd\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split(/-/, $date);\n    return \"\" if $m < 1 || $m > 12;\n    return\
    \ \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return\
    \ \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if(!$date)\
    \ {\n        $result = \"\";\n    } else {\n        my @date_arr = split(/-/,\
    \ $date);\n        my $month = $date_arr[0];\n        my $day = $date_arr[1];\n\
    \        my $year = $date_arr[2];\n        if(!$month || !$day || !$year) {\n\
    \            $result = \"\";\n        } else {\n            if($month < 1 || $month\
    \ > 12) {\n                $result = \"\";\n            } elsif($month == 2) {\n\
    \                if($day < 1 || $day > 29) {\n                    $result = \"\
    \";\n                }\n            } elsif($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \            if($day < 1 || $day > 31) {\n                    $result = \"\";\n\
    \                }\n            } else {\n                if($day < 1 || $day\
    \ > 30) {\n                    $result = \"\";\n                }\n          \
    \  }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split /-/, $date;\n    return \"\" if $m !~ /^\\\
    d+$/ || $d !~ /^\\d+$/ || $y !~ /^\\d+$/;\n    return \"\" if $m < 1 || $m > 12;\n\
    \    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n\
    \    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n\
    \    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $date eq \"\";\n    return \"\" if $month\
    \ < 1 or $month > 12;\n    return \"\" if $day < 1 or $day > 31;\n    return \"\
    \" if $year < 1;\n    return \"\" if $month == 2 and $day > 29;\n    return \"\
    \" if $month == 4 and $day > 30;\n    return \"\" if $month == 6 and $day > 30;\n\
    \    return \"\" if $month == 9 and $day > 30;\n    return \"\" if $month == 11\
    \ and $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    my $valid = 1;\n    if ($date eq \"\") {\n       \
    \ $valid = \"\";\n    }\n    elsif ($day < 1 || $day > 31) {\n        $valid =\
    \ \"\";\n    }\n    elsif ($month < 1 || $month > 12) {\n        $valid = \"\"\
    ;\n    }\n    elsif ($year < 1) {\n        $valid = \"\";\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" unless $date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n   \
    \ return \"\" if $m < 1 || $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n \
    \   return \"\" if $m == 2 && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n\
    \    return \"\" if $m == 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n\
    \    return \"\" if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return \"\" if ($month == 2 && $day > 29);\n    return \"\" if ($month ==\
    \ 4 && $day > 30);\n    return \"\" if ($month == 6 && $day > 30);\n    return\
    \ \"\" if ($month == 9 && $day > 30);\n    return \"\" if ($month == 11 && $day\
    \ > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if ($month == 4\
    \ || $month == 6 || $month == 9 || $month == 11) && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 0;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 0;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month >= 1 && $month <= 12) {\n\
    \            if ($month == 2) {\n                if ($day >= 1 && $day <= 29)\
    \ {\n                    $valid = 1;\n                }\n            } elsif ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                if ($day >= 1 && $day <= 31) {\n    \
    \                $valid = 1;\n                }\n            } else {\n      \
    \          if ($day >= 1 && $day <= 30) {\n                    $valid = 1;\n \
    \               }\n            }\n        }\n    }\n    return $valid;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        }\n        if ($month == 2) {\n            if\
    \ ($day < 1 || $day > 29) {\n                $ret = \"\";\n            }\n   \
    \     } elsif ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n            if ($day < 1 || $day >\
    \ 31) {\n                $ret = \"\";\n            }\n        } else {\n     \
    \       if ($day < 1 || $day > 30) {\n                $ret = \"\";\n         \
    \   }\n        }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my ($month,\
    \ $day, $year) = split /-/, $date;\n    return \"\" if $month < 1 || $month >\
    \ 12;\n    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month ==\
    \ 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\
    \" if $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n\
    \    return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($month == 2 && $day >\
    \ 29);\n    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month\
    \ == 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my($month, $day, $year) = ($1, $2, $3);\n       \
    \ if ($month =~ /^(0[1-9]|1[0-2])$/) {\n            if ($day =~ /^(0[1-9]|[12][0-9]|3[01])$/)\
    \ {\n                if ($year =~ /^\\d{4}$/) {\n                    return 1;\n\
    \                }\n            }\n        }\n    }\n    return \"\";\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $date eq \"\";\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return\
    \ \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day >\
    \ 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 0;\n    my $regex\
    \ = qr/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-(19[0-9][0-9]|20[0-9][0-9])$/;\n\
    \    if ($date =~ $regex) {\n        my ($month, $day, $year) = split(/-/, $date);\n\
    \        if ($month == 2) {\n            if ($day <= 29) {\n                $valid\
    \ = 1;\n            }\n        } elsif ($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n            if ($day <= 30) {\n                $valid\
    \ = 1;\n            }\n        } else {\n            if ($day <= 31) {\n     \
    \           $valid = 1;\n            }\n        }\n    }\n    return $valid;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n        my\
    \ $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month\
    \ < 1 || $month > 12) {\n            $valid = \"\";\n        }\n        if ($month\
    \ == 2) {\n            if ($day < 1 || $day > 29) {\n                $valid =\
    \ \"\";\n            }\n        } elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n        \
    \        $valid = \"\";\n            }\n        } else {\n            if ($day\
    \ < 1 || $day > 31) {\n                $valid = \"\";\n            }\n       \
    \ }\n    } else {\n        $valid = \"\";\n    }\n    return $valid;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    if\
    \ ($month == 2) {\n        return \"\" if ($day < 1 || $day > 29);\n    } elsif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        return\
    \ \"\" if ($day < 1 || $day > 30);\n    } else {\n        return \"\" if ($day\
    \ < 1 || $day > 31);\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\d+$/;\n \
    \   return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 0 && $year <= 9999;\n \
    \   return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 &&\
    \ $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if\
    \ $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n \
    \   return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1900 || $year > 2100;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my $month = $1;\n    my $day = $2;\n  \
    \  my $year = $3;\n    return '' if $month < 1 || $month > 12;\n    return ''\
    \ if $day < 1 || $day > 31;\n    return '' if $month == 2 && $day > 29;\n    return\
    \ '' if $month == 4 && $day > 30;\n    return '' if $month == 6 && $day > 30;\n\
    \    return '' if $month == 9 && $day > 30;\n    return '' if $month == 11 &&\
    \ $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d{2}$/ && $day =~ /^\\d{2}$/ && $year =~ /^\\d{4}$/;\n\
    \    return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 0 && $year <= 9999;\n \
    \   return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 &&\
    \ $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if\
    \ $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n \
    \   return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 0;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my ($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if ($m == 2 && $d > 29);\n    return\
    \ \"\" if ($m == 4 && $d > 30);\n    return \"\" if ($m == 6 && $d > 30);\n  \
    \  return \"\" if ($m == 9 && $d > 30);\n    return \"\" if ($m == 11 && $d >\
    \ 30);\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4\
    \ && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\"\
    \ if $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $months\
    \ = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4 => 30,\n\
    \        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n    \
    \    9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31,\n    };\n\
    \    if($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n\
    \        my $day = $2;\n        my $year = $3;\n        if($month < 1 || $month\
    \ > 12) {\n            $ret = \"\";\n        } elsif($day < 1 || $day > $months->{$month})\
    \ {\n            $ret = \"\";\n        }\n    } else {\n        $ret = \"\";\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($date eq \"\");\n    return \"\" if\
    \ ($month < 1 || $month > 12);\n    return \"\" if ($day < 1 || $day > 31);\n\
    \    return \"\" if ($year < 1);\n    return \"\" if ($month == 2 && $day > 29);\n\
    \    return \"\" if ($month == 4 && $day > 30);\n    return \"\" if ($month ==\
    \ 6 && $day > 30);\n    return \"\" if ($month == 9 && $day > 30);\n    return\
    \ \"\" if ($month == 11 && $day > 30);\n    return 1;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 1900 || $y > 2020;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 1;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if ($month < 1 || $month > 12);\n    return\
    \ \"\" if ($day < 1 || $day > 31);\n    return \"\" if ($year < 1 || $year > 9999);\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date !~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ \"\" if $m < 1 || $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return\
    \ \"\" if $m == 2 && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return\
    \ \"\" if $m == 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return\
    \ \"\" if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $year < 1;\n    return \"\
    \" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n\
    \    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month == 9\
    \ && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 0 if $date eq \"\"\
    ;\n    return 0 if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month, $day,\
    \ $year) = ($1, $2, $3);\n    return 0 if $month < 1 || $month > 12;\n    return\
    \ 0 if $day < 1 || $day > 31;\n    return 0 if $month == 2 && $day > 29;\n   \
    \ return 0 if $month == 4 && $day > 30;\n    return 0 if $month == 6 && $day >\
    \ 30;\n    return 0 if $month == 9 && $day > 30;\n    return 0 if $month == 11\
    \ && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date !~ $regex) {\n        $ret\
    \ = \"\";\n    }\n    else {\n        my ($month, $day, $year) = ($1, $2, $3);\n\
    \        if ($month < 1 || $month > 12) {\n            $ret = \"\";\n        }\n\
    \        elsif ($month == 2) {\n            if ($day < 1 || $day > 29) {\n   \
    \             $ret = \"\";\n            }\n        }\n        elsif ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day < 1\
    \ || $day > 30) {\n                $ret = \"\";\n            }\n        }\n  \
    \      elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n        }\n\
    \    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = \"\";\n   \
    \ if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n  \
    \      my $day = $2;\n        my $year = $3;\n        if ($month >= 1 && $month\
    \ <= 12) {\n            if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ >= 1 && $day <= 31) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n                if ($day >= 1 && $day <= 30) {\n                    $result\
    \ = 1;\n                }\n            } elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $result = 1;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return \"\" if $month < 1 || $month > 12;\n\
    \    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 &&\
    \ $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\" if\
    \ $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n  \
    \  return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_arr = split('-', $date);\n    my $month = $date_arr[0];\n    my $day =\
    \ $date_arr[1];\n    my $year = $date_arr[2];\n    if ($month < 1 || $month >\
    \ 12) {\n        $result = '';\n    }\n    if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            $result = '';\n        }\n    }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \  if ($day < 1 || $day > 30) {\n            $result = '';\n        }\n    } elsif\
    \ ($month == 2) {\n        if ($day < 1 || $day > 29) {\n            $result =\
    \ '';\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if !$month || !$day || !$year;\n    return\
    \ \"\" if $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n\
    \    return \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4\
    \ && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\"\
    \ if $month == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n\
    \    return \"\" if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ( $date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/ ) {\n        my $month = $1;\n   \
    \     my $day = $2;\n        my $year = $3;\n        if ( $month < 1 || $month\
    \ > 12 ) {\n            $result = \"\";\n        }\n        elsif ( $month ==\
    \ 2 ) {\n            if ( $day < 1 || $day > 29 ) {\n                $result =\
    \ \"\";\n            }\n        }\n        elsif ( $month == 4 || $month == 6\
    \ || $month == 9 || $month == 11 ) {\n            if ( $day < 1 || $day > 30 )\
    \ {\n                $result = \"\";\n            }\n        }\n        elsif\
    \ ( $day < 1 || $day > 31 ) {\n            $result = \"\";\n        }\n    }\n\
    \    else {\n        $result = \"\";\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    if ($date =~ /^(\\d{2})-(\\\
    d{2})-(\\d{4})$/) {\n        my($m, $d, $y) = ($1, $2, $3);\n        if ($m ==\
    \ 2) {\n            return ($d >= 1 && $d <= 29) ? 1 : \"\";\n        } elsif\
    \ ($m == 4 || $m == 6 || $m == 9 || $m == 11) {\n            return ($d >= 1 &&\
    \ $d <= 30) ? 1 : \"\";\n        } elsif ($m == 1 || $m == 3 || $m == 5 || $m\
    \ == 7 || $m == 8 || $m == 10 || $m == 12) {\n            return ($d >= 1 && $d\
    \ <= 31) ? 1 : \"\";\n        } else {\n            return \"\";\n        }\n\
    \    } else {\n        return \"\";\n    }\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m,\
    \ $d, $y) = ($1, $2, $3);\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 255
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @months = qw(01 02 03 04 05 06 07 08 09 10 11 12);\n    my @days = qw(01 02\
    \ 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\
    \ 29 30 31);\n    my @years = qw(2000 2001 2002 2003 2004 2005 2006 2007 2008\
    \ 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024\
    \ 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040\
    \ 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050);\n    my @date = split(/-/,\
    \ $date);\n    if ($date eq \"\") {\n        $result = \"\";\n    }\n    elsif\
    \ ($date =~ /\\//) {\n        $result = \"\";\n    }\n    elsif ($date =~ /\\\
    s/) {\n        $result = \"\";\n    }\n    elsif ($date =~ /\\,/) {\n        $result\
    \ = \"\";\n    }\n    elsif ($date =~ /\\*/) {\n        $result = \"\";\n    }\n\
    \    elsif ($date =~ /\\#/) {\n        $result = \"\";\n    }\n    elsif ($date\
    \ =~ /\\@/) {\n        $result = \"\";\n    }\n    elsif ($date =~ /\\$/) {\n\
    \        $result = \"\";\n    }\n    elsif ($date =~ /\\%/) {\n        $result\
    \ = \"\";\n    }\n    elsif ($date =~ /\\^/) {\n        $result = \"\";\n    }\n\
    \    elsif ($date =~ /\\&/) {\n        $result = \"\";\n    }\n    elsif ($date\
    \ =~ /\\(/) {\n        $result = \"\";\n    }\n    elsif ($date =~ /\\)/) {\n\
    \        $result = \"\";\n    }\n    elsif ($date =~ /\\=/) {\n        $result\
    \ = \"\";\n    }\n    elsif ($date =~ /\\+/)\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpxdilr6lg.pl line 68, at end
    of line

    syntax error at /tmp/tmpxdilr6lg.pl line 68, near ")

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpxdilr6lg.pl line 139, at end
    of line

    syntax error at /tmp/tmpxdilr6lg.pl line 139, at EOF

    Execution of /tmp/tmpxdilr6lg.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my @date = split(/\\-/, $date);\n    return \"\" if scalar @date\
    \ != 3;\n    return \"\" if $date[0] < 1 || $date[0] > 12;\n    return \"\" if\
    \ $date[1] < 1 || $date[1] > 31;\n    return \"\" if $date[2] < 1 || $date[2]\
    \ > 9999;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $date_regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date !~ $date_regex) {\n     \
    \   $valid = '';\n    }\n    else {\n        my ($month, $day, $year) = ($1, $2,\
    \ $3);\n        if ($month < 1 || $month > 12) {\n            $valid = '';\n \
    \       }\n        elsif ($month == 2) {\n            if ($day < 1 || $day > 29)\
    \ {\n                $valid = '';\n            }\n        }\n        elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ < 1 || $day > 30) {\n                $valid = '';\n            }\n        }\n\
    \        elsif ($day < 1 || $day > 31) {\n            $valid = '';\n        }\n\
    \    }\n    return $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($month, $day, $year) = split(/-/, $date);\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $month == 2 && $day > 29;\n    return \"\" if $month == 4 && $day >\
    \ 30;\n    return \"\" if $month == 6 && $day > 30;\n    return \"\" if $month\
    \ == 9 && $day > 30;\n    return \"\" if $month == 11 && $day > 30;\n    return\
    \ \"\" if $year < 1;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" unless $month && $day && $year;\n    return\
    \ \"\" unless $month =~ /^\\d+$/ && $day =~ /^\\d+$/ && $year =~ /^\\d+$/;\n \
    \   return \"\" unless $month >= 1 && $month <= 12;\n    return \"\" unless $day\
    \ >= 1 && $day <= 31;\n    return \"\" unless $year >= 1 && $year <= 9999;\n \
    \   return \"\" unless $month == 2 && $day <= 29;\n    return \"\" unless $month\
    \ == 4 && $day <= 30;\n    return \"\" unless $month == 6 && $day <= 30;\n   \
    \ return \"\" unless $month == 9 && $day <= 30;\n    return \"\" unless $month\
    \ == 11 && $day <= 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $months = {\n        1 => 31,\n        2 => 29,\n        3 => 31,\n        4\
    \ => 30,\n        5 => 31,\n        6 => 30,\n        7 => 31,\n        8 => 31,\n\
    \        9 => 30,\n        10 => 31,\n        11 => 30,\n        12 => 31\n  \
    \  };\n    if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month =\
    \ $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1 ||\
    \ $month > 12) {\n            $result = \"\";\n        }\n        if ($day < 1\
    \ || $day > $months->{$month}) {\n            $result = \"\";\n        }\n   \
    \ } else {\n        $result = \"\";\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $error\
    \ = \"\";\n    my $months = {\n        1 => 31,\n        2 => 29,\n        3 =>\
    \ 31,\n        4 => 30,\n        5 => 31,\n        6 => 30,\n        7 => 31,\n\
    \        8 => 31,\n        9 => 30,\n        10 => 31,\n        11 => 30,\n  \
    \      12 => 31\n    };\n    if ($date eq \"\") {\n        $valid = 0;\n     \
    \   $error = \"Date string is empty\";\n    } else {\n        my @date = split\
    \ /-/, $date;\n        if (scalar @date != 3) {\n            $valid = 0;\n   \
    \         $error = \"Date string is not in the format: mm-dd-yyyy\";\n       \
    \ } else {\n            my $month = $date[0];\n            my $day = $date[1];\n\
    \            my $year = $date[2];\n            if ($month < 1 || $month > 12)\
    \ {\n                $valid = 0;\n                $error = \"Months should not\
    \ be less than 1 or higher than 12\";\n            } elsif ($day < 1 || $day >\
    \ $months->{$month}) {\n                $valid = 0;\n                $error =\
    \ \"The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\";\n            }\n        }\n    }\n    return $valid ? $valid : $error;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $month = 0;\n    my $day = 0;\n    my $year = 0;\n    my $date_regex = qr/^(\\\
    d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex) {\n        $month =\
    \ $1;\n        $day = $2;\n        $year = $3;\n    } else {\n        $result\
    \ = \"\";\n    }\n    if ($result == 1) {\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = \"\";\n        }\n        if ($month == 2) {\n\
    \            if ($day < 1 || $day > 29) {\n                $result = \"\";\n \
    \           }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $result\
    \ = \"\";\n            }\n        } else {\n            if ($day < 1 || $day >\
    \ 31) {\n                $result = \"\";\n            }\n        }\n    }\n  \
    \  return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1;\n    return 1;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $date eq \"\";\n    return \"\" if\
    \ $month < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return\
    \ \"\" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return\
    \ \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day >\
    \ 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month\
    \ == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my ($m, $d,\
    \ $y) = split /-/, $date;\n    return \"\" if $m < 1 || $m > 12;\n    return \"\
    \" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return \"\
    \" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($month,\
    \ $day, $year) = ($1, $2, $3);\n    return \"\" if $month < 1 || $month > 12;\n\
    \    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 &&\
    \ $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\" if\
    \ $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n  \
    \  return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date = split('-', $date);\n    my $month = $date[0];\n    my $day = $date[1];\n\
    \    my $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        $result\
    \ = '';\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            $result = '';\n        }\n    }\n    if ($month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $result = '';\n        }\n    }\n    if ($month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12) {\n        if ($day < 1 || $day > 31) {\n            $result = '';\n   \
    \     }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    my($m, $d, $y) = split(/-/, $date);\n    return \"\" if $m < 1 ||\
    \ $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2\
    \ && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return \"\" if $m ==\
    \ 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return \"\" if $m\
    \ == 11 && $d > 30;\n    return \"\" if $y < 0;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = \"\";\n        } elsif ($month == 2) {\n      \
    \      if ($day < 1 || $day > 29) {\n                $result = \"\";\n       \
    \     }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $result\
    \ = \"\";\n            }\n        } elsif ($day < 1 || $day > 31) {\n        \
    \    $result = \"\";\n        }\n    } else {\n        $result = \"\";\n    }\n\
    \    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    if ($month < 1 || $month > 12) {\n        return '';\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return '';\n        }\n    }\n    elsif ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n            return\
    \ '';\n        }\n    }\n    else {\n        if ($day < 1 || $day > 31) {\n  \
    \          return '';\n        }\n    }\n    return 1;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $valid = 1;\n    my $regex\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $regex) {\n        my\
    \ $month = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month\
    \ < 1 || $month > 12) {\n            $valid = \"\";\n        }\n        if ($month\
    \ == 2) {\n            if ($day < 1 || $day > 29) {\n                $valid =\
    \ \"\";\n            }\n        }\n        elsif ($month == 4 || $month == 6 ||\
    \ $month == 9 || $month == 11) {\n            if ($day < 1 || $day > 30) {\n \
    \               $valid = \"\";\n            }\n        }\n        else {\n   \
    \         if ($day < 1 || $day > 31) {\n                $valid = \"\";\n     \
    \       }\n        }\n    }\n    else {\n        $valid = \"\";\n    }\n    return\
    \ $valid;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\\
    &valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n      \
    \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = \"\";\n        } elsif ($month == 2) {\n      \
    \      if ($day < 1 || $day > 29) {\n                $result = \"\";\n       \
    \     }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $result\
    \ = \"\";\n            }\n        } elsif ($day < 1 || $day > 31) {\n        \
    \    $result = \"\";\n        }\n    } else {\n        $result = \"\";\n    }\n\
    \    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    if ($date\
    \ =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n        my $day\
    \ = $2;\n        my $year = $3;\n        if ($month < 1 || $month > 12) {\n  \
    \          $ret = \"\";\n        } elsif ($month == 2) {\n            if ($day\
    \ < 1 || $day > 29) {\n                $ret = \"\";\n            }\n        }\
    \ elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n      \
    \      if ($day < 1 || $day > 30) {\n                $ret = \"\";\n          \
    \  }\n        } elsif ($day < 1 || $day > 31) {\n            $ret = \"\";\n  \
    \      }\n    } else {\n        $ret = \"\";\n    }\n    return $ret;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n \
    \       if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date = split(/\\-/, $date);\n    my $month = $date[0];\n    my $day = $date[1];\n\
    \    my $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        $result\
    \ = \"\";\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n\
    \            $result = \"\";\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day < 1 || $day > 30) {\n\
    \            $result = \"\";\n        }\n    }\n    if ($month == 1 || $month\
    \ == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month\
    \ == 12) {\n        if ($day < 1 || $day > 31) {\n            $result = \"\";\n\
    \        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = \"\";\n   \
    \ if ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n  \
    \      my $day = $2;\n        my $year = $3;\n        if ($month >= 1 && $month\
    \ <= 12) {\n            if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n                if ($day\
    \ >= 1 && $day <= 31) {\n                    $result = 1;\n                }\n\
    \            } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n                if ($day >= 1 && $day <= 30) {\n                    $result\
    \ = 1;\n                }\n            } elsif ($month == 2) {\n             \
    \   if ($day >= 1 && $day <= 29) {\n                    $result = 1;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ m{^(\\d{2})-(\\d{2})-(\\d{4})$};\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return \"\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split(/-/, $date);\n    return \"\" if $month < 1 || $month > 12;\n    return\
    \ \"\" if $day < 1 || $day > 31;\n    return \"\" if $month == 2 && $day > 29;\n\
    \    return \"\" if $month == 4 && $day > 30;\n    return \"\" if $month == 6\
    \ && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n    return \"\"\
    \ if $month == 11 && $day > 30;\n    return \"\" if $year < 1900 || $year > 2020;\n\
    \    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $ret = 1;\n    my $re\
    \ = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $re) {\n        my $month\
    \ = $1;\n        my $day = $2;\n        my $year = $3;\n        if ($month < 1\
    \ || $month > 12) {\n            $ret = '';\n        } elsif ($month == 2) {\n\
    \            if ($day < 1 || $day > 29) {\n                $ret = '';\n      \
    \      }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day < 1 || $day > 30) {\n                $ret = '';\n\
    \            }\n        } else {\n            if ($day < 1 || $day > 31) {\n \
    \               $ret = '';\n            }\n        }\n    } else {\n        $ret\
    \ = '';\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d,\
    \ $y) = split(/-/, $date);\n    return \"\" if $m < 1 || $m > 12;\n    return\
    \ \"\" if $d < 1 || $d > 31;\n    return \"\" if $m == 2 && $d > 29;\n    return\
    \ \"\" if $m == 4 && $d > 30;\n    return \"\" if $m == 6 && $d > 30;\n    return\
    \ \"\" if $m == 9 && $d > 30;\n    return \"\" if $m == 11 && $d > 30;\n    return\
    \ 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n\
    \        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"15-01-2012\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-04-2020\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ @date_parts = split(/[-\\/]/, $date);\n    if (scalar @date_parts != 3) {\n\
    \        $result = \"\";\n    }\n    else {\n        my $month = $date_parts[0];\n\
    \        my $day = $date_parts[1];\n        my $year = $date_parts[2];\n     \
    \   if ($month < 1 || $month > 12) {\n            $result = \"\";\n        }\n\
    \        elsif ($month == 2) {\n            if ($day < 1 || $day > 29) {\n   \
    \             $result = \"\";\n            }\n        }\n        elsif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n            if ($day\
    \ < 1 || $day > 30) {\n                $result = \"\";\n            }\n      \
    \  }\n        elsif ($day < 1 || $day > 31) {\n            $result = \"\";\n \
    \       }\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 1
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return 1 if $date =~ /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\\\
    d{4}$/;\n    return '';\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"),1)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my($month, $day, $year)\
    \ = split /-/, $date;\n    return \"\" if $date eq \"\";\n    return \"\" if $month\
    \ < 1 || $month > 12;\n    return \"\" if $day < 1 || $day > 31;\n    return \"\
    \" if $year < 1;\n    return \"\" if $month == 2 && $day > 29;\n    return \"\"\
    \ if $month == 4 && $day > 30;\n    return \"\" if $month == 6 && $day > 30;\n\
    \    return \"\" if $month == 9 && $day > 30;\n    return \"\" if $month == 11\
    \ && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"03-11-2000\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    15-01-2012\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-0-2040\"),\"\")) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-04-2020\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"01-01-2007\"),1)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"03-32-2011\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-31-3000\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    06-06-2005\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"21-31-2000\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-12-2003\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"04122003\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"20030412\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04-12\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"04-2003\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" unless $date\
    \ =~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($m, $d, $y) = split /-/, $date;\n    return\
    \ \"\" if $m < 1 || $m > 12;\n    return \"\" if $d < 1 || $d > 31;\n    return\
    \ \"\" if $m == 2 && $d > 29;\n    return \"\" if $m == 4 && $d > 30;\n    return\
    \ \"\" if $m == 6 && $d > 30;\n    return \"\" if $m == 9 && $d > 30;\n    return\
    \ \"\" if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    my\
    \ $date_regex = qr/^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    if ($date =~ $date_regex)\
    \ {\n        my $month = $1;\n        my $day = $2;\n        my $year = $3;\n\
    \        if ($month < 1 || $month > 12) {\n            $result = \"\";\n     \
    \   } elsif ($month == 2) {\n            if ($day < 1 || $day > 29) {\n      \
    \          $result = \"\";\n            }\n        } elsif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n            if ($day < 1 || $day > 30)\
    \ {\n                $result = \"\";\n            }\n        } elsif ($day < 1\
    \ || $day > 31) {\n            $result = \"\";\n        }\n    } else {\n    \
    \    $result = \"\";\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    my $result = 1;\n    if\
    \ ($date =~ /^(\\d{2})-(\\d{2})-(\\d{4})$/) {\n        my $month = $1;\n     \
    \   my $day = $2;\n        my $year = $3;\n        if ($month < 1 || $month >\
    \ 12) {\n            $result = '';\n        } elsif ($month == 2) {\n        \
    \    if ($day < 1 || $day > 29) {\n                $result = '';\n           \
    \ }\n        } elsif ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day < 1 || $day > 30) {\n                $result = '';\n\
    \            }\n        } else {\n            if ($day < 1 || $day > 31) {\n \
    \               $result = '';\n            }\n        }\n    } else {\n      \
    \  $result = '';\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return '' unless $date =~\
    \ /^(\\d{2})-(\\d{2})-(\\d{4})$/;\n    my($m, $d, $y) = ($1, $2, $3);\n    return\
    \ '' if $m < 1 || $m > 12;\n    return '' if $d < 1 || $d > 31;\n    return ''\
    \ if $m == 2 && $d > 29;\n    return '' if $m == 4 && $d > 30;\n    return ''\
    \ if $m == 6 && $d > 30;\n    return '' if $m == 9 && $d > 30;\n    return ''\
    \ if $m == 11 && $d > 30;\n    return 1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629
- exit_code: 0
  program: "# You have to write a function which validates a given date string and\n\
    # returns 1 if the date is valid otherwise .\n# The date is valid if all of the\
    \ following rules are satisfied:\n# 1. The date string is not empty.\n# 2. The\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n# 3. The months should not be less than 1 or higher than 12.\n# 4.\
    \ The date should be in the format: mm-dd-yyyy\n# >>> valid_date(\"03-11-2000\"\
    )\n# 1\n# >>> valid_date(\"15-01-2012\")\n# \"\"\n# >>> valid_date(\"04-0-2040\"\
    )\n# \"\"\n# >>> valid_date(\"06-04-2020\")\n# 1\n# >>> valid_date(\"06/04/2020\"\
    )\n# \"\"\nsub valid_date {\n    my($date) = @_;\n    return \"\" if $date eq\
    \ \"\";\n    return \"\" if $date !~ /^\\d{2}-\\d{2}-\\d{4}$/;\n    my($month,\
    \ $day, $year) = split /-/, $date;\n    return \"\" if $month < 1 || $month >\
    \ 12;\n    return \"\" if $day < 1 || $day > 31;\n    return \"\" if $month ==\
    \ 2 && $day > 29;\n    return \"\" if $month == 4 && $day > 30;\n    return \"\
    \" if $month == 6 && $day > 30;\n    return \"\" if $month == 9 && $day > 30;\n\
    \    return \"\" if $month == 11 && $day > 30;\n    return 1;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&valid_date;\n        if(eq_deeply($candidate->(\"\
    03-11-2000\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"15-01-2012\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04-0-2040\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->(\"06-04-2020\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    01-01-2007\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"03-32-2011\"),\"\")) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    \"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
    \   if(eq_deeply($candidate->(\"04-31-3000\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"06-06-2005\"\
    ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    21-31-2000\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
    \  }\n        if(eq_deeply($candidate->(\"04-12-2003\"),1)) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
    04122003\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->(\"20030412\"),\"\")) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2003-04\"\
    ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
    \ if(eq_deeply($candidate->(\"2003-04-12\"),\"\")) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"04-2003\"),\"\
    \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!ok!
  timestamp: 1660012629

name: HumanEval_72_will_it_fly
language: pl
prompt: "# Write a function that returns 1 if the object q will fly, and  otherwise.\n\
  # The object q will fly if it's balanced (it is a palindromic array) and the sum\
  \ of its elements is less than or equal the maximum possible weight w.\n# Example:\n\
  # >>> will_it_fly([1, 2], 5)\n# \"\"\n# # 1+2 is less than the maximum possible\
  \ weight, but it's unbalanced.\n# >>> will_it_fly([3, 2, 3], 1)\n# \"\"\n# # it's\
  \ balanced, but 3+2+3 is more than the maximum possible weight.\n# >>> will_it_fly([3,\
  \ 2, 3], 9)\n# 1\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
  # >>> will_it_fly([3], 5)\n# 1\n# # 3 is less than the maximum possible weight,\
  \ and it's balanced.\nsub will_it_fly {\n    my($q, $w) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&will_it_fly;\n\
  \        if(eq_deeply($candidate->([3, 2, 3], 9),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], 5),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3],\
  \ 5),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 3], 1),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, 2, 3], 6),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5], 5),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n\
    \    return 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2-1) {\n\
    \        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}", " \
    \   my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n     \
    \   return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n\
    }", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return\
    \ 1;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return\
    \ 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n  \
    \  while ($i < $j) {\n        if ($q->[$i] != $q->[$j]) {\n            return\
    \ 0;\n        }\n        $i++;\n        $j--;\n    }\n    foreach my $x (@$q)\
    \ {\n        $sum += $x;\n    }\n    return $sum <= $w;\n}", "    my $sum = 0;\n\
    \    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if $sum\
    \ > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "    my $sum =\
    \ 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if\
    \ $sum > $w;\n    }\n    return $sum <= $w && $q->[0] == $q->[-1];\n}", "    my\
    \ $sum = 0;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n   \
    \     return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n\
    \        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return\
    \ $sum <= $w;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = @$q - 1;\n \
    \   while ($i < $j) {\n        if ($q->[$i] != $q->[$j]) {\n            return\
    \ 0;\n        }\n        $sum += $q->[$i];\n        $i++;\n        $j--;\n   \
    \ }\n    if ($i == $j) {\n        $sum += $q->[$i];\n    }\n    return $sum <=\
    \ $w;\n}", "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n   \
    \ }\n    return 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2-1)\
    \ {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}",
  "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n      \
    \  return 0 if $sum > $w;\n    }\n    return 1 if $sum <= $w;\n    return 0;\n\
    }", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return $sum <= $w && $q->[0] == $q->[-1];\n\
    }", "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n   \
    \ return 0 if $sum > $w;\n    my $len = @$q;\n    for my $i (0..$len/2) {\n  \
    \      return 0 if $q->[$i] != $q->[$len-$i-1];\n    }\n    return 1;\n}", " \
    \   my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n     \
    \   return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n\
    }", "    my $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n   \
    \ return 0 if $sum > $w;\n    my $l = scalar @$q;\n    for my $i (0..$l/2) {\n\
    \        return 0 if $q->[$i] != $q->[$l-$i-1];\n    }\n    return 1;\n}", " \
    \   my $sum = 0;\n    for my $e (@$q) {\n        $sum += $e;\n    }\n    return\
    \ 0 if $sum > $w;\n    return 0 if $sum != $q->[0];\n    return 1;\n}", "    my\
    \ $sum = 0;\n    for my $i (@$q) {\n        $sum += $i;\n    }\n    return 0 if\
    \ $sum > $w;\n    for my $i (0..$#$q/2) {\n        return 0 if $q->[$i] != $q->[$#$q-$i];\n\
    \    }\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n\
    \    while ($i <= $j) {\n        $sum += $q->[$i];\n        $sum += $q->[$j];\n\
    \        return 0 if $sum > $w;\n        $i++;\n        $j--;\n    }\n    return\
    \ 1;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return $sum <= $w && $q->[0] == $q->[-1];\n\
    }", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return\
    \ 1;\n}", "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n\
    \    }\n    return 0 if $sum > $w;\n    my $len = scalar @$q;\n    for (my $i\
    \ = 0; $i < $len/2; $i++) {\n        return 0 if $q->[$i] != $q->[$len-$i-1];\n\
    \    }\n    return 1;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n    \
    \    $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 1;\n\
    }", "    my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n\
    \        $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return\
    \ 0 if $sum != $w;\n    for my $i (0..$len-1) {\n        return 0 if $q->[$i]\
    \ != $q->[$len-$i-1];\n    }\n    return 1;\n}", "    my $sum = 0;\n    for my\
    \ $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if $sum > $w;\n\
    \    }\n    return 0 if $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n  \
    \  for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if $sum\
    \ > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "    my $sum =\
    \ 0;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n        return\
    \ 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i] + $q->[$j];\n        $i++;\n\
    \        $j--;\n    }\n    $sum += $q->[$i] if $i == $j;\n    return $sum <= $w;\n\
    }", "    my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while\
    \ ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n    \
    \    $j--;\n    }\n    foreach my $x (@$q) {\n        $sum += $x;\n    }\n   \
    \ return $sum <= $w;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n\
    \    while ($i < $j) {\n        $sum += $q->[$i] + $q->[$j];\n        return 0\
    \ if $sum > $w;\n        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if\
    \ $i == $j;\n    return 0 if $sum > $w;\n    return 1;\n}", "    my $sum = 0;\n\
    \    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if $sum\
    \ > $w;\n    }\n    return $sum <= $w && $q->[0] == $q->[-1];\n}", "    my $sum\
    \ = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0\
    \ if $sum > $w;\n    }\n    return 0 if $sum > $w;\n    return $q->[0] == $q->[-1]\
    \ ? 1 : 0;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while\
    \ ($i <= $j) {\n        if ($q->[$i] != $q->[$j]) {\n            return 0;\n \
    \       }\n        $sum += $q->[$i];\n        $i++;\n        $j--;\n    }\n  \
    \  return $sum <= $w;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n    \
    \    $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 0 if\
    \ $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = $#{$q};\n    my $result = 1;\n    while ($i <= $j) {\n        $sum += $q->[$i]\
    \ + $q->[$j];\n        if ($sum > $w) {\n            $result = 0;\n          \
    \  last;\n        }\n        $i++;\n        $j--;\n    }\n    return $result;\n\
    }", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j)\
    \ {\n        if ($q->[$i] != $q->[$j]) {\n            return 0;\n        }\n \
    \       $sum += $q->[$i];\n        $i++;\n        $j--;\n    }\n    return $sum\
    \ <= $w;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = @$q - 1;\n    while\
    \ ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i]\
    \ + $q->[$j];\n        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i\
    \ == $j;\n    return $sum <= $w;\n}", "    my $sum = 0;\n    my $i = 0;\n    my\
    \ $j = $#{$q};\n    while ($i <= $j) {\n        $sum += $q->[$i];\n        $sum\
    \ += $q->[$j];\n        return 0 if $sum > $w;\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n\
    \    while ($i <= $j) {\n        $sum += $q->[$i];\n        $sum += $q->[$j];\n\
    \        $i++;\n        $j--;\n    }\n    return $sum <= $w && $i > $j;\n}", " \
    \   my $sum = 0;\n    my $i = 0;\n    my $j = scalar(@$q) - 1;\n    while ($i\
    \ < $j) {\n        if ($q->[$i] != $q->[$j]) {\n            return 0;\n      \
    \  }\n        $i++;\n        $j--;\n    }\n    foreach my $e (@$q) {\n       \
    \ $sum += $e;\n    }\n    return $sum <= $w;\n}", "    my $sum = 0;\n    for my\
    \ $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0 if $sum > $w;\n\
    \    }\n    return 0 if $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n  \
    \  my $len = scalar @$q;\n    for (my $i = 0; $i < $len; $i++) {\n        $sum\
    \ += $q->[$i];\n    }\n    return 0 if $sum > $w;\n    for (my $i = 0; $i < $len\
    \ / 2; $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n\
    \    return 1;\n}", "    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum\
    \ += $i;\n    }\n    if ($sum <= $w) {\n        my $i = 0;\n        my $j = $#$q;\n\
    \        while ($i < $j) {\n            if ($q->[$i] != $q->[$j]) {\n        \
    \        return 0;\n            }\n            $i++;\n            $j--;\n    \
    \    }\n        return 1;\n    }\n    return 0;\n}", "    my $sum = 0;\n    my\
    \ $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n        $sum += $q->[$i]\
    \ + $q->[$j];\n        $i++;\n        $j--;\n    }\n    return $sum <= $w && $i\
    \ > $j;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n\
    \        return 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return\
    \ 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i\
    \ < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n        $sum += $q->[$i]\
    \ + $q->[$j];\n        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if $i\
    \ == $j;\n    return $sum <= $w;\n}", "    return 1 if (sum(@$q) <= $w && is_palindrome($q));\n\
    \    return 0;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n \
    \   while ($i <= $j) {\n        $sum += $q->[$i];\n        return 0 if $sum >\
    \ $w;\n        return 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n\
    \    }\n    return 1;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n    \
    \    $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 0 if\
    \ $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = scalar(@$q) - 1;\n    while($i <= $j) {\n        if($q->[$i] != $q->[$j])\
    \ {\n            return 0;\n        }\n        $sum += $q->[$i];\n        $i++;\n\
    \        $j--;\n    }\n    return $sum <= $w;\n}", "    my $sum = 0;\n    foreach\
    \ my $i (@$q) {\n        $sum += $i;\n    }\n    return 0 if $sum > $w;\n    my\
    \ $len = scalar @$q;\n    for (my $i = 0; $i < $len / 2; $i++) {\n        return\
    \ 0 if $q->[$i] != $q->[$len - $i - 1];\n    }\n    return 1;\n}", "    my $sum\
    \ = sum(@$q);\n    return 0 if $sum > $w;\n    return 0 if $sum != sum(reverse\
    \ @$q);\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n\
    \    while ($i < $j) {\n        $sum += $q->[$i] + $q->[$j];\n        return 0\
    \ if $sum > $w;\n        $i++;\n        $j--;\n    }\n    $sum += $q->[$i] if\
    \ $i == $j;\n    return $sum <= $w;\n}", "    my $sum = 0;\n    for my $e (@$q)\
    \ {\n        $sum += $e;\n    }\n    if ($sum <= $w) {\n        my $i = 0;\n \
    \       my $j = $#$q;\n        while ($i < $j) {\n            if ($q->[$i] !=\
    \ $q->[$j]) {\n                return 0;\n            }\n            $i++;\n \
    \           $j--;\n        }\n        return 1;\n    }\n    return 0;\n}", " \
    \   my $sum = 0;\n    my $len = scalar @$q;\n    for my $i (0..$len-1) {\n   \
    \     $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 0 if\
    \ $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j\
    \ = @$q - 1;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
    \        $sum += $q->[$i];\n        $i++;\n        $j--;\n    }\n    $sum += $q->[$i]\
    \ if $i == $j;\n    return $sum <= $w;\n}", "    my $sum = 0;\n    foreach my\
    \ $x (@$q) {\n        $sum += $x;\n    }\n    return 0 if $sum > $w;\n    my $i\
    \ = 0;\n    my $j = $#$q;\n    while ($i < $j) {\n        return 0 if $q->[$i]\
    \ != $q->[$j];\n        $i++;\n        $j--;\n    }\n    return 1;\n}", "    my\
    \ $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return\
    \ 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "  \
    \  my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n\
    \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n \
    \   return $sum <= $w && $i > $j;\n}", "    my $sum = 0;\n    my $i = 0;\n   \
    \ my $j = @$q - 1;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
    \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n \
    \   $sum += $q->[$i] if $i == $j;\n    return $sum <= $w;\n}", "    my $sum =\
    \ 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return 0 if $sum\
    \ > $w;\n    my $l = scalar @$q;\n    for (my $i = 0; $i < $l/2; $i++) {\n   \
    \     return 0 if $q->[$i] != $q->[$l-$i-1];\n    }\n    return 1;\n}", "    my\
    \ $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return\
    \ 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "  \
    \  my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n\
    \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n \
    \   return $sum <= $w && $i > $j;\n}", "    my $sum = 0;\n    for (@$q) {\n  \
    \      $sum += $_;\n    }\n    return 0 if $sum > $w;\n    my $i = 0;\n    my\
    \ $j = $#$q;\n    while ($i < $j) {\n        return 0 if $q->[$i] != $q->[$j];\n\
    \        $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $sum = 0;\n \
    \   my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n        $sum += $q->[$i];\n\
    \        $sum += $q->[$j];\n        $i++;\n        $j--;\n    }\n    return $sum\
    \ <= $w && $i > $j;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n      \
    \  $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 0 if $sum\
    \ != $w;\n    return 1;\n}", "    my $sum = 0;\n    for my $i (0..$#$q) {\n  \
    \      $sum += $q->[$i];\n        return 0 if $sum > $w;\n    }\n    return 0\
    \ if $sum != $w;\n    return 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my\
    \ $j = @$q - 1;\n    while ($i < $j) {\n        if ($q->[$i] != $q->[$j]) {\n\
    \            return 0;\n        }\n        $sum += $q->[$i];\n        $i++;\n\
    \        $j--;\n    }\n    if ($i == $j) {\n        $sum += $q->[$i];\n    }\n\
    \    return $sum <= $w;\n}", "    my $sum = 0;\n    for my $i (@$q) {\n      \
    \  $sum += $i;\n    }\n    return 0 if $sum > $w;\n    for (my $i = 0; $i < @$q\
    \ / 2; $i++) {\n        return 0 if $q->[$i] != $q->[-1 - $i];\n    }\n    return\
    \ 1;\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i\
    \ <= $j) {\n        $sum += $q->[$i] + $q->[$j];\n        return 0 if $sum > $w;\n\
    \        $i++;\n        $j--;\n    }\n    return 1;\n}", "    my $sum = 0;\n \
    \   foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return 0 if $sum >\
    \ $w;\n    my $i = 0;\n    my $j = @$q - 1;\n    while ($i < $j) {\n        return\
    \ 0 if $q->[$i] != $q->[$j];\n        $i++;\n        $j--;\n    }\n    return\
    \ 1;\n}", "    my $sum = 0;\n    for (@$q) {\n        $sum += $_;\n    }\n   \
    \ return 0 if $sum > $w;\n    my $len = scalar @$q;\n    for (my $i = 0; $i <\
    \ $len / 2; $i++) {\n        return 0 if $q->[$i] != $q->[$len - $i - 1];\n  \
    \  }\n    return 1;\n}", "    my $sum = 0;\n    foreach my $i (@$q) {\n      \
    \  $sum += $i;\n    }\n    if ($sum <= $w) {\n        my $len = scalar @$q;\n\
    \        my $i = 0;\n        while ($i < $len/2) {\n            if ($q->[$i] !=\
    \ $q->[$len - $i - 1]) {\n                return 0;\n            }\n         \
    \   $i++;\n        }\n        return 1;\n    }\n    return 0;\n}", "    my $sum\
    \ = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return 0\
    \ if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "    my\
    \ $sum = 0;\n    for my $i (0..$#$q) {\n        $sum += $q->[$i];\n        return\
    \ 0 if $sum > $w;\n    }\n    return 0 if $sum != $w;\n    return 1;\n}", "  \
    \  my $sum = 0;\n    my $i = 0;\n    my $j = $#{$q};\n    while ($i <= $j) {\n\
    \        $sum += $q->[$i] + $q->[$j];\n        $i++;\n        $j--;\n    }\n \
    \   return $sum <= $w && $i > $j;\n}", "    my $sum = 0;\n    for my $i (@$q)\
    \ {\n        $sum += $i;\n    }\n    return 0 if $sum > $w;\n    my $n = @$q;\n\
    \    for my $i (0..$n/2-1) {\n        return 0 if $q->[$i] != $q->[$n-$i-1];\n\
    \    }\n    return 1;\n}", "    return 0 if sum($q) > $w;\n    return 0 if !is_palindrome($q);\n\
    \    return 1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

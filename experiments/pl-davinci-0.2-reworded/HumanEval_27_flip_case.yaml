name: HumanEval_27_flip_case
language: pl
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case(\"Hello\")\n# \"hELLO\"\nsub flip_case {\n    my($string)\
  \ = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&flip_case;\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Hello!\"),\"hELLO!\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $flipped = '';\n    for my $char (split //, $string) {\n   \
    \     if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n\
    \        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n     \
    \   }\n        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
  "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped =\
    \ \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my @chars = split(//, $string);\n    my @flipped;\n\
    \    foreach my $char (@chars) {\n        if ($char =~ /[a-z]/) {\n          \
    \  push(@flipped, uc($char));\n        } elsif ($char =~ /[A-Z]/) {\n        \
    \    push(@flipped, lc($char));\n        } else {\n            push(@flipped,\
    \ $char);\n        }\n    }\n    return join('', @flipped);\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped = \"\";\n \
    \   for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n    \
    \        $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n       \
    \     $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n    for my\
    \ $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped\
    \ .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .=\
    \ lc $char;\n        } else {\n            $flipped .= $char;\n        }\n   \
    \ }\n    return $flipped;\n}", "    my $flipped = '';\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        }\n        else {\n            $flipped .= $char;\n  \
    \      }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n    for my\
    \ $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped\
    \ .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        }\n        else {\n            $flipped .= $char;\n  \
    \      }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for my\
    \ $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped\
    \ .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .=\
    \ lc $char;\n        } else {\n            $flipped .= $char;\n        }\n   \
    \ }\n    return $flipped;\n}", "    my @chars = split(//, $string);\n    my @flipped\
    \ = map {\n        if($_ =~ /[a-z]/) {\n            uc($_);\n        } elsif($_\
    \ =~ /[A-Z]/) {\n            lc($_);\n        } else {\n            $_;\n    \
    \    }\n    } @chars;\n    return join('', @flipped);\n}", "    my @chars = split\
    \ //, $string;\n    my @flipped;\n    foreach my $char (@chars) {\n        if\
    \ ($char =~ /[a-z]/) {\n            push @flipped, uc $char;\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n        } else {\n\
    \            push @flipped, $char;\n        }\n    }\n    return join '', @flipped;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped = \"\";\n \
    \   for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n    \
    \        $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n       \
    \     $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    my $result = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n\
    \        }\n        else {\n            $result .= $char;\n        }\n    }\n\
    \    return $result;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n   \
    \     } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    return $string =~ tr/A-Za-z/a-zA-Z/r;\n}", "    my $flipped = \"\";\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n      \
    \      $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    foreach\
    \ my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n         \
    \   $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n           \
    \ $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n \
    \       }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $result = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $result .= lc $char;\n        }\n        else {\n           \
    \ $result .= $char;\n        }\n    }\n    return $result;\n}", "    my $flipped\
    \ = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my $result = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n\
    \        }\n        else {\n            $result .= $char;\n        }\n    }\n\
    \    return $result;\n}", "    my $result = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n    \
    \    } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }", "    my $flipped = '';\n    foreach my $char (split //, $string) {\n     \
    \   if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n  \
    \      elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n       \
    \ }\n        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n   \
    \     } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my @chars = split(//, $string);\n    my @flipped = map {\n        if\
    \ ($_ =~ /[a-z]/) {\n            uc $_;\n        } elsif ($_ =~ /[A-Z]/) {\n \
    \           lc $_;\n        } else {\n            $_;\n        }\n    } @chars;\n\
    \    return join('', @flipped);\n}", "    my $flipped_string = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped_string .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n     \
    \       $flipped_string .= lc($char);\n        } else {\n            $flipped_string\
    \ .= $char;\n        }\n    }\n    return $flipped_string;\n}", "    my $result\
    \ = '';\n    for my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n \
    \           $result .= uc $c;\n        } elsif ($c =~ /[A-Z]/) {\n           \
    \ $result .= lc $c;\n        } else {\n            $result .= $c;\n        }\n\
    \    }\n    return $result;\n}", "    my $result = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n    \
    \    } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }", "    my($result) = '';\n    foreach my $char (split(//, $string)) {\n    \
    \    if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n        } else {\n\
    \            $result .= $char;\n        }\n    }\n    return $result;\n}", " \
    \   my $flipped = \"\";\n    for (my $i = 0; $i < length($string); $i++) {\n \
    \       my $char = substr($string, $i, 1);\n        if ($char eq uc($char)) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ uc($char);\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $result = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $result .= uc $char;\n        }\n        elsif\
    \ ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\n        else\
    \ {\n            $result .= $char;\n        }\n    }\n    return $result;\n}",
  "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my @chars = split\
    \ //, $string;\n    my @flipped;\n    foreach my $char (@chars) {\n        if\
    \ ($char =~ /[a-z]/) {\n            push @flipped, uc $char;\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n        } else {\n\
    \            push @flipped, $char;\n        }\n    }\n    return join '', @flipped;\n\
    }", "    my $flipped = \"\";\n    for my $char (split //, $string) {\n       \
    \ if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n\
    \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", " \
    \   my $flipped = \"\";\n    for (my $i = 0; $i < length($string); $i++) {\n \
    \       my $char = substr($string, $i, 1);\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\
    \";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    my($i);\n    my($result) = \"\";\n    for($i =\
    \ 0; $i < length($string); $i++) {\n        my($ch) = substr($string, $i, 1);\n\
    \        if($ch =~ /[a-z]/) {\n            $result .= uc($ch);\n        }\n  \
    \      elsif($ch =~ /[A-Z]/) {\n            $result .= lc($ch);\n        }\n \
    \       else {\n            $result .= $ch;\n        }\n    }\n    return $result;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    my($flipped) = \"\";\n    for my $char (split //, $string) {\n      \
    \  if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n        }\n  \
    \      elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n      \
    \  }\n        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split(//, $string))\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n   \
    \     } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n     \
    \   } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    return join(\"\", map { $_ =~ /[a-z]/ ? uc($_) : lc($_) } split(//, $string));\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped_string\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped_string .= uc($char);\n        } elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped_string .= lc($char);\n        } else {\n           \
    \ $flipped_string .= $char;\n        }\n    }\n    return $flipped_string;\n}",
  "    my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
    \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~\
    \ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my($result) = '';\n   \
    \ for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n      \
    \      $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n \
    \           $result .= lc $char;\n        }\n        else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}", "    my $flipped = \"\"\
    ;\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        }\n        else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    my($flipped)\
    \ = '';\n    for my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        $flipped .= uc($char) if $char =~ /[a-z]/;\n        $flipped\
    \ .= lc($char) if $char =~ /[A-Z]/;\n    }\n    return $flipped;\n}", "    my\
    \ $flipped = '';\n    for my $char (split //, $string) {\n        if ($char =~\
    \ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        } else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my @chars = split\
    \ //, $string;\n    my @flipped;\n    for my $char (@chars) {\n        if ($char\
    \ =~ /[a-z]/) {\n            push @flipped, uc $char;\n        }\n        elsif\
    \ ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n        }\n    \
    \    else {\n            push @flipped, $char;\n        }\n    }\n    return join\
    \ '', @flipped;\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    my $new_string = \"\";\n    for my $char (split //, $string) {\n    \
    \    if ($char =~ /[a-z]/) {\n            $new_string .= uc($char);\n        }\
    \ elsif ($char =~ /[A-Z]/) {\n            $new_string .= lc($char);\n        }\
    \ else {\n            $new_string .= $char;\n        }\n    }\n    return $new_string;\n\
    }", "    my($flipped) = \"\";\n    for my $char (split //, $string) {\n      \
    \  if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n        }\n  \
    \      elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n      \
    \  }\n        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}",
  "    my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
    \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~\
    \ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my @chars = split //, $string;\n\
    \    my @flipped = map {\n        if ($_ =~ /[a-z]/) {\n            uc($_);\n\
    \        } elsif ($_ =~ /[A-Z]/) {\n            lc($_);\n        } else {\n  \
    \          $_;\n        }\n    } @chars;\n    return join '', @flipped;\n}", " \
    \   $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped =\
    \ \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        }\n        else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped_string\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped_string .= uc($char);\n        }\n        elsif ($char\
    \ =~ /[A-Z]/) {\n            $flipped_string .= lc($char);\n        }\n      \
    \  else {\n            $flipped_string .= $char;\n        }\n    }\n    return\
    \ $flipped_string;\n}", "    return $string if $string eq \"\";\n    my $first\
    \ = substr($string, 0, 1);\n    my $rest = substr($string, 1);\n    if ($first\
    \ =~ /[a-z]/) {\n        return uc($first) . flip_case($rest);\n    } elsif ($first\
    \ =~ /[A-Z]/) {\n        return lc($first) . flip_case($rest);\n    } else {\n\
    \        return $first . flip_case($rest);\n    }\n}", "    my $flipped = \"\"\
    ;\n    for my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        } else {\n            $flipped .= $char;\n        }\n\
    \    }\n    return $flipped;\n}", "    my $flipped_string = \"\";\n    for my\
    \ $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped_string\
    \ .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped_string\
    \ .= lc($char);\n        } else {\n            $flipped_string .= $char;\n   \
    \     }\n    }\n    return $flipped_string;\n}", "    my $flipped = \"\";\n  \
    \  for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n     \
    \       $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $result = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n     \
    \       $result .= lc $char;\n        } else {\n            $result .= $char;\n\
    \        }\n    }\n    return $result;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        } else {\n            $flipped .= $char;\n        }\n\
    \    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped_string = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped_string .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped_string .=\
    \ lc $char;\n        }\n        else {\n            $flipped_string .= $char;\n\
    \        }\n    }\n    return $flipped_string;\n}", "    my $flipped = \"\";\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n      \
    \      $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped_string = \"\";\n\
    \    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped_string .= uc($char);\n        } elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped_string .= lc($char);\n        } else {\n           \
    \ $flipped_string .= $char;\n        }\n    }\n    return $flipped_string;\n}",
  "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped =\
    \ \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    my $flipped_string = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped_string\
    \ .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped_string\
    \ .= lc($char);\n        }\n        else {\n            $flipped_string .= $char;\n\
    \        }\n    }\n    return $flipped_string;\n}", "    my $flipped = \"\";\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n      \
    \      $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my($flipped) = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc($char);\n        }\n        elsif ($char =~ /[A-Z]/) {\n   \
    \         $flipped .= lc($char);\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n      \
    \      $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    return $string ^ \"\\x20\";\n\
    }", "    my @chars = split //, $string;\n    my @flipped;\n    foreach my $char\
    \ (@chars) {\n        if ($char =~ /[a-z]/) {\n            push @flipped, uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            push @flipped, lc\
    \ $char;\n        }\n        else {\n            push @flipped, $char;\n     \
    \   }\n    }\n    return join '', @flipped;\n}", "    my $flipped_string = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $flipped_string .= uc($char);\n        }\n        elsif ($char =~\
    \ /[A-Z]/) {\n            $flipped_string .= lc($char);\n        }\n        else\
    \ {\n            $flipped_string .= $char;\n        }\n    }\n    return $flipped_string;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        } else {\n            $flipped .= $char;\n        }\n\
    \    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n       \
    \ } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n\
    \    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n   \
    \         $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped_string\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped_string .= uc($char);\n        } elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped_string .= lc($char);\n        } else {\n           \
    \ $flipped_string .= $char;\n        }\n    }\n    return $flipped_string;\n}",
  "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped =\
    \ \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my $flipped = '';\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n   \
    \     } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my @chars\
    \ = split(//, $string);\n    my @flipped;\n    foreach my $char (@chars) {\n \
    \       if ($char =~ /[a-z]/) {\n            push(@flipped, uc($char));\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            push(@flipped, lc($char));\n  \
    \      } else {\n            push(@flipped, $char);\n        }\n    }\n    return\
    \ join('', @flipped);\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    my @chars = split //, $string;\n    my @flipped = map {\n        if ($_\
    \ =~ /[a-z]/) {\n            uc $_;\n        } elsif ($_ =~ /[A-Z]/) {\n     \
    \       lc $_;\n        } else {\n            $_;\n        }\n    } @chars;\n\
    \    return join '', @flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return\
    \ $string;\n}", "    my $flipped_string = \"\";\n    foreach my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped_string .=\
    \ uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped_string\
    \ .= lc($char);\n        } else {\n            $flipped_string .= $char;\n   \
    \     }\n    }\n    return $flipped_string;\n}", "    my $flipped = \"\";\n  \
    \  foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $result = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $result .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $result\
    \ .= lc $char;\n        } else {\n            $result .= $char;\n        }\n \
    \   }\n    return $result;\n}", "    my $result = \"\";\n    for my $c (split\
    \ //, $string) {\n        if ($c =~ /[a-z]/) {\n            $result .= uc $c;\n\
    \        } elsif ($c =~ /[A-Z]/) {\n            $result .= lc $c;\n        } else\
    \ {\n            $result .= $c;\n        }\n    }\n    return $result;\n}", " \
    \   $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped =\
    \ \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $result = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $result .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n     \
    \       $result .= lc $char;\n        }\n        else {\n            $result .=\
    \ $char;\n        }\n    }\n    return $result;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my $flipped = '';\n    foreach my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my($result) = \"\";\n    foreach my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $result .= uc($char);\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            $result .= lc($char);\n       \
    \ } else {\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }", "    my $flipped_string = \"\";\n    for my $char (split //, $string) {\n\
    \        if ($char =~ /[a-z]/) {\n            $flipped_string .= uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped_string .= lc($char);\n\
    \        } else {\n            $flipped_string .= $char;\n        }\n    }\n \
    \   return $flipped_string;\n}", "    my $flipped = '';\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        }\n        else {\n            $flipped .= $char;\n  \
    \      }\n    }\n    return $flipped;\n}", "    my $flipped_string = '';\n   \
    \ foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n  \
    \          $flipped_string .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped_string .= lc $char;\n        }\n        else {\n   \
    \         $flipped_string .= $char;\n        }\n    }\n    return $flipped_string;\n\
    }", "    my $flipped = \"\";\n    for my $char (split //, $string) {\n       \
    \ if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n    \
    \    elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n\
    \        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = \"\";\n    for (my $i = 0; $i < length($string);\
    \ $i++) {\n        my $char = substr($string, $i, 1);\n        if (is_upper($char))\
    \ {\n            $flipped .= lc($char);\n        } else {\n            $flipped\
    \ .= uc($char);\n        }\n    }\n    return $flipped;\n}", "    my $flipped\
    \ = '';\n    for my $c (split //, $string) {\n        if ($c =~ /[a-z]/) {\n \
    \           $flipped .= uc $c;\n        }\n        elsif ($c =~ /[A-Z]/) {\n \
    \           $flipped .= lc $c;\n        }\n        else {\n            $flipped\
    \ .= $c;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\"\
    ;\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n \
    \           $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        } else {\n            $flipped .= $char;\n        }\n\
    \    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n       \
    \ } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = \"\";\n    for my $char (split //, $string) {\n       \
    \ if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n\
    \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", " \
    \   my $flipped_string = \"\";\n    for my $char (split //, $string) {\n     \
    \   if ($char =~ /[a-z]/) {\n            $flipped_string .= uc($char);\n     \
    \   } elsif ($char =~ /[A-Z]/) {\n            $flipped_string .= lc($char);\n\
    \        } else {\n            $flipped_string .= $char;\n        }\n    }\n \
    \   return $flipped_string;\n}", "    my $flipped = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc\
    \ $char;\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = \"\";\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n       \
    \ } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    return join('', map {\n        if ( $_ =~ /[a-z]/ ) {\n            uc($_);\n\
    \        }\n        elsif ( $_ =~ /[A-Z]/ ) {\n            lc($_);\n        }\n\
    \        else {\n            $_;\n        }\n    } split(//, $string));\n}", " \
    \   my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
    \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~\
    \ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped = '';\n   \
    \ for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n      \
    \      $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\
    \";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n   \
    \         $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = '';\n    for my\
    \ $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped\
    \ .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped\
    \ .= lc $char;\n        }\n        else {\n            $flipped .= $char;\n  \
    \      }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    return $string if $string !~ /[a-zA-Z]/;\n    my\
    \ $flipped = '';\n    for my $char (split //, $string) {\n        if ($char =~\
    \ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n        elsif ($char\
    \ =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n        else {\n\
    \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", " \
    \   my $flipped = \"\";\n    for my $char (split //, $string) {\n        if ($char\
    \ =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif ($char =~\
    \ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped\
    \ = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my @chars = split //,\
    \ $string;\n    my @flipped;\n    foreach my $char (@chars) {\n        if ($char\
    \ =~ /[a-z]/) {\n            push @flipped, uc $char;\n        }\n        elsif\
    \ ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n        }\n    \
    \    else {\n            push @flipped, $char;\n        }\n    }\n    return join\
    \ '', @flipped;\n}", "    my($flipped) = \"\";\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n   \
    \     } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n     \
    \   } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc $char;\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my @chars = split(//, $string);\n    foreach my\
    \ $char (@chars) {\n        if ($char =~ /[a-z]/) {\n            $char = uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $char = lc($char);\n      \
    \  }\n    }\n    return join('', @chars);\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my @chars\
    \ = split(//, $string);\n    my @flipped = map {\n        if ($_ =~ /[a-z]/) {\n\
    \            uc($_);\n        } elsif ($_ =~ /[A-Z]/) {\n            lc($_);\n\
    \        } else {\n            $_;\n        }\n    } @chars;\n    return join(\"\
    \", @flipped);\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n       \
    \ } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = \"\";\n    for my $char (split //, $string) {\n       \
    \ if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        } else {\n\
    \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", " \
    \   my @chars = split //, $string;\n    my @flipped;\n    foreach my $char (@chars)\
    \ {\n        if ($char =~ /[a-z]/) {\n            push @flipped, uc $char;\n \
    \       } elsif ($char =~ /[A-Z]/) {\n            push @flipped, lc $char;\n \
    \       } else {\n            push @flipped, $char;\n        }\n    }\n    return\
    \ join '', @flipped;\n}", "    my $flipped = \"\";\n    foreach my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n  \
    \      } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    my($flipped) = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n  \
    \      } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped_string\
    \ = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped_string .= uc $char;\n        }\n        elsif ($char\
    \ =~ /[A-Z]/) {\n            $flipped_string .= lc $char;\n        }\n       \
    \ else {\n            $flipped_string .= $char;\n        }\n    }\n    return\
    \ $flipped_string;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    my @chars = split(//, $string);\n    my @flipped;\n\
    \    foreach my $char (@chars) {\n        if ($char =~ /[a-z]/) {\n          \
    \  push(@flipped, uc($char));\n        } elsif ($char =~ /[A-Z]/) {\n        \
    \    push(@flipped, lc($char));\n        } else {\n            push(@flipped,\
    \ $char);\n        }\n    }\n    return join('', @flipped);\n}", "    my $flipped\
    \ = \"\";\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        }\n        else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped\
    \ = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    my $flipped_string\
    \ = '';\n    for my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped_string .= uc $char;\n        }\n        elsif ($char\
    \ =~ /[A-Z]/) {\n            $flipped_string .= lc $char;\n        }\n       \
    \ else {\n            $flipped_string .= $char;\n        }\n    }\n    return\
    \ $flipped_string;\n}", "    my $result = \"\";\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $result .= uc $char;\n     \
    \   } elsif ($char =~ /[A-Z]/) {\n            $result .= lc $char;\n        }\
    \ else {\n            $result .= $char;\n        }\n    }\n    return $result;\n\
    }", "    my $flipped = '';\n    for my $char (split //, $string) {\n        if\
    \ ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n       \
    \ elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n        }\n \
    \       else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    my $flipped = '';\n    for (my $i = 0; $i < length($string); $i++) {\n\
    \        my $char = substr($string, $i, 1);\n        if ($char =~ /[a-z]/) {\n\
    \            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n  \
    \          $flipped .= lc($char);\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    my $flipped = \"\";\n    for\
    \ my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n          \
    \  $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/) {\n    \
    \        $flipped .= lc $char;\n        }\n        else {\n            $flipped\
    \ .= $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my $flipped = \"\";\n    foreach my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n  \
    \      } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    my $flipped = '';\n    for my $char (split //, $string)\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n    \
    \    }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    my $flipped_string = \"\";\n    for my $char (split\
    \ //, $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped_string\
    \ .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n            $flipped_string\
    \ .= lc($char);\n        } else {\n            $flipped_string .= $char;\n   \
    \     }\n    }\n    return $flipped_string;\n}", "    my $result = \"\";\n   \
    \ foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n  \
    \          $result .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n     \
    \       $result .= lc($char);\n        } else {\n            $result .= $char;\n\
    \        }\n    }\n    return $result;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_43_pairs_sum_to_zero
language: pl
prompt: "# pairs_sum_to_zero takes an array of integers as an input.\n# it returns\
  \ 1 if there are two distinct elements in the array that\n# sum to zero, and ''\
  \ otherwise.\n# >>> pairs_sum_to_zero([1, 3, 5, 0])\n# \"\"\n# >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n# \"\"\n# >>> pairs_sum_to_zero([1, 2, 3, 7])\n# \"\"\n# >>> pairs_sum_to_zero([2,\
  \ 4, -5, 3, 5, 7])\n# 1\n# >>> pairs_sum_to_zero([1])\n# \"\"\nsub pairs_sum_to_zero\
  \ {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pairs_sum_to_zero;\n\
  \        if(eq_deeply($candidate->([1, 3, 5, 0]),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 3, -2,\
  \ 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([1, 2, 3, 7]),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, -5, 3, 5,\
  \ 7]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 3, 2, 30]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([-3, 9, -1, 3, 2, 31]),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 4, 2, 30]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([-3, 9, -1, 4, 2, 31]),\"\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my %hash;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $hash{$l->[$i]} = 1;\n    }\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $k = -$l->[$i];\n        if (exists($hash{$k}))\
    \ {\n            return 1;\n        }\n    }\n    return \"\";\n}", "    my $i;\n\
    \    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = @$l;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1\
    \ = 0;\n    my $m = 0;\n    my $n1 = 0;\n    my $o = 0;\n    my $p = 0;\n    my\
    \ $q = 0;\n    my $r = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n\
    \    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1\
    \ = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n \
    \   my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2\
    \ = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m1 = 0;\n \
    \   my $n2 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1\
    \ = 0;\n    my $s2 = 0;\n    my $t2 = 0;\n    my $u2 = 0;\n    my $", "    my\
    \ $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my %hash;\n    foreach my $i (@$l) {\n      \
    \  if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    my $found = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1;\
    \ $j < $n; $j++) {\n            if($l->[$i] + $l->[$j] == 0) {\n             \
    \   $found = 1;\n                last;\n            }\n        }\n    }\n    return\
    \ $found;\n}", "    my @a = @$l;\n    my %h;\n    foreach my $i (@a) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n\
    \    my $k;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %hash;\n    foreach my $i\
    \ (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n\
    \        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my @a = @$l;\n  \
    \  my %h;\n    for my $i (@a) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my(%h);\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n\
    \    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ \"\";\n}", "    my $r = '';\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$l);\n\
    \    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                $r = 1;\n          \
    \      last;\n            }\n            $j = $j + 1;\n        }\n        $i =\
    \ $i + 1;\n    }\n    return $r;\n}", "    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n \
    \       for ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @a = @$l;\n    my $n = @a;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j] == 0) {\n      \
    \          $found = 1;\n            }\n        }\n    }\n    return $found;\n}",
  "    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n\
    \    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                $flag = 1;\n   \
    \             last;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    if ($flag == 1) {\n        return 1;\n    } else {\n        return\
    \ \"\";\n    }\n}", "    my $r = \"\";\n    my %h;\n    foreach my $i (@$l) {\n\
    \        if (exists $h{-$i}) {\n            $r = 1;\n            last;\n     \
    \   }\n        $h{$i} = 1;\n    }\n    return $r;\n}", "    my @list = @$l;\n\
    \    my %hash;\n    foreach my $i (@list) {\n        if (exists $hash{-$i}) {\n\
    \            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\
    \";\n}", "    my @list = @$l;\n    my $len = scalar @list;\n    my $i;\n    my\
    \ $j;\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len;\
    \ $j++) {\n            if ($list[$i] + $list[$j] == 0) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return \"\";\n}", "    my @a = @$l;\n\
    \    my $n = scalar(@a);\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $c = 0;\n    for ($i = 0;\
    \ $i < scalar(@$l); $i++) {\n        for ($j = $i + 1; $j < scalar(@$l); $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $c = 1;\n  \
    \          }\n        }\n    }\n    return $c;\n}", "    my $r = \"\";\n    my\
    \ $i;\n    my $j;\n    for ($i = 0; $i < @$l; $i++) {\n        for ($j = $i +\
    \ 1; $j < @$l; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n        \
    \        $r = 1;\n            }\n        }\n    }\n    return $r;\n}", "    my\
    \ %hash;\n    foreach my $e (@$l) {\n        if (exists $hash{-$e}) {\n      \
    \      return 1;\n        }\n        $hash{$e} = 1;\n    }\n    return \"\";\n\
    }", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my $result = \"\";\n\
    \    my $i;\n    my $j;\n    for ($i = 0; $i < @$l; $i++) {\n        for ($j =\
    \ $i + 1; $j < @$l; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n   \
    \             $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n  \
    \          return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n\
    }", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm\
    \ = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n \
    \   my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv\
    \ = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n \
    \   my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my\
    \ $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii\
    \ = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n\
    \    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my\
    \ $rrr = 0;\n    my $sss = 0;\n    my $ttt", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n    for my $i (@$l) {\n\
    \        if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n\
    \        if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my %hash = ();\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n  \
    \  foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n\
    \        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $len = scalar(@$l);\n    my $found = 0;\n    while ($i\
    \ < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n                last;\n\
    \            }\n            $j++;\n        }\n        if ($found) {\n        \
    \    last;\n        }\n        $i++;\n    }\n    if ($found) {\n        return\
    \ 1;\n    } else {\n        return \"\";\n    }\n}", "    my $i;\n    my $j;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n  \
    \          return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my $r = \"\";\n    my %h;\n    foreach my $i\
    \ (@$l) {\n        if (exists $h{-$i}) {\n            $r = 1;\n            last;\n\
    \        }\n        $h{$i} = 1;\n    }\n    return $r;\n}", "    my(%h);\n   \
    \ foreach my $x (@$l) {\n        if (exists($h{-$x})) {\n            return 1;\n\
    \        }\n        $h{$x} = 1;\n    }\n    return \"\";\n}", "    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my\
    \ $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @l = @$l;\n    my %h;\n    for my $i (@l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my $result = '';\n    my %hash = ();\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            $result = 1;\n   \
    \         last;\n        }\n        $hash{$i} = 1;\n    }\n    return $result;\n\
    }", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n\
    \    my $r = '';\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n            \
    \    $r = 1;\n            }\n        }\n    }\n    return $r;\n}", "    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my $found\
    \ = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++)\
    \ {\n            if($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n\
    \                last;\n            }\n        }\n        if($found) {\n     \
    \       last;\n        }\n    }\n    if($found) {\n        return 1;\n    } else\
    \ {\n        return \"\";\n    }\n}", "    my $i = 0;\n    my $j = 0;\n    my\
    \ $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return \"\";\n}", "    my(%h);\n    foreach my $i (@$l) {\n\
    \        if (defined($h{-$i})) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my $size = scalar(@$l);\n    my $i =\
    \ 0;\n    my $j = 0;\n    my $sum = 0;\n    for ($i = 0; $i < $size; $i++) {\n\
    \        for ($j = $i + 1; $j < $size; $j++) {\n            $sum = $l->[$i] +\
    \ $l->[$j];\n            if ($sum == 0) {\n                return 1;\n       \
    \     }\n        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i\
    \ (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n \
    \       $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %hash = ();\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n  \
    \  foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n\
    \        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{$i}) {\n            return\
    \ 1;\n        }\n        $hash{-$i} = 1;\n    }\n    return \"\";\n}", "    my\
    \ @list = @$l;\n    my %hash = ();\n    foreach my $i (@list) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return \"\";\n}", "    my @l = @$l;\n    my %h;\n    foreach my $i (@l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my $n = @a;\n\
    \    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j] == 0) {\n        \
    \        return 1;\n            }\n        }\n    }\n    return \"\";\n}", " \
    \   my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    my $k;\n \
    \   my $m;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n\
    \    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n\
    \    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my\
    \ $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n\
    \    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n\
    \    my $t;\n    my $u;\n", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $result = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    my $k;\n    my $found\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $found\
    \ = 1;\n                last;\n            }\n        }\n    }\n    return $found;\n\
    }", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my $result = \"\";\n    my $i;\n    my $j;\n\
    \    for ($i = 0; $i < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $result = 1;\n\
    \            }\n        }\n    }\n    return $result;\n}", "    my @l = @$l;\n\
    \    my %h;\n    foreach my $i (@l) {\n        if (exists $h{-$i}) {\n       \
    \     return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}",
  "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n        \
    \    return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", " \
    \   my $r = \"\";\n    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            $r = 1;\n            last;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return $r;\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $n = @$l;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @a = @$l;\n    my %h;\n    for my $i (@a) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my @l = @$l;\n    my %h;\n    foreach my $e (@l) {\n\
    \        if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n\
    \        if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my @l = @$l;\n    my %h;\n    for my\
    \ $i (@l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n\
    \        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n    foreach my\
    \ $i (@$l) {\n        if (exists $h{$i}) {\n            return 1;\n        }\n\
    \        $h{-$i} = 1;\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my\
    \ %h;\n    foreach my $i (@a) {\n        if (exists $h{$i}) {\n            return\
    \ 1;\n        }\n        $h{-$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n\
    \    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n;\n   \
    \ my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n;\n    my $o;\n    my\
    \ $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n\
    \    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my\
    \ $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my\
    \ $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n\
    \    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my\
    \ $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n   ", "    my %h;\n    foreach my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $n = scalar(@$l);\n    my $found = \"\";\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                $found = 1;\n            }\n        }\n    }\n    return\
    \ $found;\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n        }\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my %h;\n\
    \    foreach my $i (@a) {\n        if (exists $h{-$i}) {\n            return 1;\n\
    \        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $result\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $len = scalar(@$l);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                $result = 1;\n \
    \               last;\n            }\n        }\n    }\n    return $result;\n}",
  "    my @a = @$l;\n    my $n = scalar(@a);\n    my %h;\n    for (my $i = 0; $i <\
    \ $n; $i++) {\n        my $x = $a[$i];\n        if (exists($h{-$x})) {\n     \
    \       return 1;\n        }\n        $h{$x} = 1;\n    }\n    return \"\";\n}",
  "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return \"\";\n}", "    my %hash;\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n  \
    \  my $k;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my(%h);\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my $result = '';\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $len = scalar(@$l);\n    my $sum = 0;\n    my $found = 0;\n   \
    \ my $temp = 0;\n    my $temp2 = 0;\n    my $temp3 = 0;\n    my $temp4 = 0;\n\
    \    my $temp5 = 0;\n    my $temp6 = 0;\n    my $temp7 = 0;\n    my $temp8 = 0;\n\
    \    my $temp9 = 0;\n    my $temp10 = 0;\n    my $temp11 = 0;\n    my $temp12\
    \ = 0;\n    my $temp13 = 0;\n    my $temp14 = 0;\n    my $temp15 = 0;\n    my\
    \ $temp16 = 0;\n    my $temp17 = 0;\n    my $temp18 = 0;\n    my $temp19 = 0;\n\
    \    my $temp20 = 0;\n    my $temp21 = 0;\n    my $temp22 = 0;\n    my $temp23\
    \ = 0;\n    my $temp24 = 0;\n    my $temp25 = 0;\n    my $temp26 = 0;\n    my\
    \ $temp27 = 0;\n    my $temp28 = 0;\n    my $temp29 = 0;\n    my $temp30 = 0;\n\
    \    my $temp31 = 0;\n    my $temp32 = 0;\n    my $temp33 = 0;\n    my $temp34\
    \ = 0;\n    my $temp35 = 0;\n    my $temp36 = 0;\n    my $temp37 = 0;\n    my\
    \ $temp38 = 0;\n    my $temp39 = 0;\n    my $temp40 = 0;\n    my $temp41 = 0;\n\
    \    my $temp42 = 0;\n    my $temp43 = 0;\n    my $temp44 = 0;\n    my $temp45\
    \ = 0;\n    my $temp46 = 0;\n    my $temp47 = 0;\n    my $temp48 = 0;\n    my\
    \ $temp49 = 0;\n    my $temp50 = 0;\n   ", "    my $r = \"\";\n    my %h;\n  \
    \  foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            $r = 1;\n\
    \            last;\n        }\n        $h{$i} = 1;\n    }\n    return $r;\n}",
  "    my $result = \"\";\n    my %hash;\n    foreach my $i (@$l) {\n        if (exists\
    \ $hash{$i}) {\n            $result = 1;\n            last;\n        }\n     \
    \   $hash{-$i} = 1;\n    }\n    return $result;\n}", "    my $i;\n    my $j;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @list = @$l;\n    my $result = \"\";\n    my $i = 0;\n  \
    \  my $j = 0;\n    while ($i < scalar(@list)) {\n        $j = $i + 1;\n      \
    \  while ($j < scalar(@list)) {\n            if ($list[$i] + $list[$j] == 0) {\n\
    \                $result = 1;\n            }\n            $j++;\n        }\n \
    \       $i++;\n    }\n    return $result;\n}", "    my @l = @$l;\n    my %h;\n\
    \    foreach my $x (@l) {\n        if (exists $h{-$x}) {\n            return 1;\n\
    \        }\n        $h{$x} = 1;\n    }\n    return \"\";\n}", "    my $i;\n  \
    \  my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my @list = @$l;\n    my %hash;\n    foreach my $item (@list)\
    \ {\n        if (exists $hash{$item}) {\n            return 1;\n        }\n  \
    \      else {\n            $hash{-$item} = 1;\n        }\n    }\n    return \"\
    \";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{$i}) {\n\
    \            return 1;\n        }\n        $h{-$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my @list = @$l;\n    my %hash = ();\n    foreach my $i (@list)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n  \
    \  my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n    \
    \            return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my @a = @$l;\n    my $i;\n    my $j;\n    my $n = scalar(@a);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    if ($a[$i] + $a[$j] == 0) {\n                return 1;\n            }\n \
    \       }\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my $i;\n    my\
    \ $j;\n    my $n = scalar(@a);\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar(@$l);\n    my\
    \ $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm\
    \ = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n \
    \   my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv\
    \ = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n \
    \   my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my\
    \ $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii\
    \ = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n\
    \    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my\
    \ $rrr = 0;\n    my $sss = 0;\n    my $ttt", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $n\
    \ = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n            \
    \    return 1;\n            }\n        }\n    }\n    return \"\";\n}", "    my\
    \ %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n      \
    \      return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\";\n\
    }", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $n = scalar(@$l);\n    my $found = 0;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                $found = 1;\n                last;\n            }\n\
    \        }\n        if ($found) {\n            last;\n        }\n    }\n    return\
    \ $found;\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i\
    \ (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n \
    \       $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n  \
    \  my $k;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my %h;\n    foreach\
    \ my $i (@a) {\n        if (exists $h{-$i}) {\n            return 1;\n       \
    \ }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    my $len = scalar(@$l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n\
    \                last;\n            }\n        }\n    }\n    return $found;\n}",
  "    my $r = '';\n    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            $r = 1;\n            last;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return $r;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if\
    \ (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $n = scalar(@$l);\n    my $found = 0;\n    my $result = \"\";\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                $found = 1;\n      \
    \          last;\n            }\n        }\n        if ($found) {\n          \
    \  last;\n        }\n    }\n    if ($found) {\n        $result = 1;\n    }\n \
    \   return $result;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my $n = scalar(@$l);\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1\
    \ = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o = 0;\n    my $p1 = 0;\n  \
    \  my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1\
    \ = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n \
    \   my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1\
    \ = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n \
    \   my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m2\
    \ = 0;\n    my $n2 = 0;\n    my $o1 = 0;\n    my $p2 = 0;\n    my $q2 = 0;\n",
  "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n\
    \            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\
    \";\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n         \
    \   if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return \"\";\n}", "    my $r = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n        $j =\
    \ $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                $r = 1;\n                last;\n            }\n         \
    \   $j = $j + 1;\n        }\n        $i = $i + 1;\n    }\n    return $r;\n}",
  "    my $r = '';\n    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            $r = 1;\n            last;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return $r;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if\
    \ (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return \"\";\n}", "    my @list = @$l;\n    my $n = scalar(@list);\n\
    \    my $i;\n    my $j;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i\
    \ + 1; $j < $n; $j++) {\n            if($list[$i] + $list[$j] == 0) {\n      \
    \          return 1;\n            }\n        }\n    }\n    return \"\";\n}", " \
    \   my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n \
    \   my $m = {};\n    for ($i = 0; $i < $n; $i++) {\n        $m->{$l->[$i]} = 1;\n\
    \    }\n    for ($i = 0; $i < $n; $i++) {\n        if (exists($m->{-$l->[$i]}))\
    \ {\n            return 1;\n        }\n    }\n    return \"\";\n}", "    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my\
    \ $r = \"\";\n    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            $r = 1;\n            last;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return $r;\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return \"\
    \";\n}", "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    for($i = 0; $i\
    \ < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            if($l->[$i]\
    \ + $l->[$j] == 0) {\n                return 1;\n            }\n        }\n  \
    \  }\n    return \"\";\n}", "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n\
    \    my $k;\n    my $found = 0;\n    for ($i = 0; $i < $n - 1; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                $found = 1;\n                last;\n            }\n  \
    \      }\n    }\n    return $found;\n}", "    my $result = \"\";\n    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            $result\
    \ = 1;\n            last;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ $result;\n}", "    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n\
    \    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return \"\
    \";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n\
    \            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$l);\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n        \
    \    }\n        }\n    }\n    return \"\";\n}", "    my @a = @$l;\n    my %h;\n\
    \    foreach my $e (@a) {\n        if (exists $h{-$e}) {\n            return 1;\n\
    \        }\n        $h{$e} = 1;\n    }\n    return \"\";\n}", "    my %h;\n  \
    \  foreach my $i (@$l) {\n        return 1 if exists $h{-$i};\n        $h{$i}\
    \ = 1;\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n\
    \            }\n        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %hash;\n    foreach\
    \ my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n   \
    \     }\n        $hash{$i} = 1;\n    }\n    return \"\";\n}", "    my $result\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = @$l;\n\
    \    my $found = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n         \
    \       $found = 1;\n                last;\n            }\n        }\n       \
    \ if ($found) {\n            last;\n        }\n    }\n    if ($found) {\n    \
    \    $result = 1;\n    }\n    return $result;\n}", "    my $i;\n    my $j;\n \
    \   my $k;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @list = @$l;\n    my %hash = ();\n    my $i;\n    my $j;\n\
    \    my $sum;\n    my $result = \"\";\n    for($i = 0; $i < scalar(@list); $i++)\
    \ {\n        $hash{$list[$i]} = 1;\n    }\n    for($i = 0; $i < scalar(@list);\
    \ $i++) {\n        for($j = $i + 1; $j < scalar(@list); $j++) {\n            $sum\
    \ = $list[$i] + $list[$j];\n            if($sum == 0) {\n                $result\
    \ = 1;\n            }\n        }\n    }\n    return $result;\n}", "    my @a =\
    \ @$l;\n    my $n = scalar(@a);\n    my $i;\n    my $j;\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($a[$i]\
    \ + $a[$j] == 0) {\n                return 1;\n            }\n        }\n    }\n\
    \    return \"\";\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n   \
    \ for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach my\
    \ $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n\
    \        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my $n = scalar(@$l);\n\
    \    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n    \
    \            return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my %h;\n    foreach (@$l) {\n        return 1 if exists $h{-$_};\n        $h{$_}\
    \ = 1;\n    }\n    return '';\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        $hash{$i} = 1;\n    }\n    foreach my $i (@$l) {\n        if ($hash{-$i})\
    \ {\n            return 1;\n        }\n    }\n    return \"\";\n}", "    my $result\
    \ = '';\n    my $i;\n    my $j;\n    for ($i = 0; $i < scalar(@$l); $i++) {\n\
    \        for ($j = $i + 1; $j < scalar(@$l); $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                $result = 1;\n            }\n        }\n\
    \    }\n    return $result;\n}", "    my $i;\n    my $j;\n    my $k;\n    my $n\
    \ = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n            \
    \    return 1;\n            }\n        }\n    }\n    return \"\";\n}", "    my\
    \ @a = @$l;\n    my %h;\n    foreach my $x (@a) {\n        if (exists $h{-$x})\
    \ {\n            return 1;\n        }\n        $h{$x} = 1;\n    }\n    return\
    \ \"\";\n}", "    my %h;\n    for my $i (@$l) {\n        if (exists $h{-$i}) {\n\
    \            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my @l = @$l;\n    my %h;\n    for my $i (@l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return \"\";\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists\
    \ $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} = 1;\n  \
    \  }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l) {\n        if\
    \ (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n\
    \    }\n    return \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return \"\
    \";\n}", "    my @list = @$l;\n    my $ret = \"\";\n    my $i;\n    my $j;\n \
    \   for($i = 0; $i < @list; $i++) {\n        for($j = $i + 1; $j < @list; $j++)\
    \ {\n            if($list[$i] + $list[$j] == 0) {\n                $ret = 1;\n\
    \            }\n        }\n    }\n    return $ret;\n}", "    my @l = @$l;\n  \
    \  my %h;\n    foreach my $i (@l) {\n        if (exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", " \
    \   my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n       \
    \     return 1;\n        }\n        $h{$e} = 1;\n    }\n    return \"\";\n}",
  "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    for ($i =\
    \ 0; $i < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l; $j++) {\n        \
    \    if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return \"\";\n}", "    my @l = @$l;\n    my %h;\n  \
    \  foreach my $x (@l) {\n        if (exists $h{-$x}) {\n            return 1;\n\
    \        }\n        $h{$x} = 1;\n    }\n    return \"\";\n}", "    my $n = scalar(@$l);\n\
    \    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n    \
    \            return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my @a = @$l;\n    my %h;\n    foreach my $x (@a) {\n       \
    \ if (exists $h{-$x}) {\n            return 1;\n        }\n        $h{$x} = 1;\n\
    \    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $k;\n    my $n =\
    \ scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n               \
    \ return 1;\n            }\n        }\n    }\n    return \"\";\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\";\n}", "    my @l\
    \ = @$l;\n    my %h;\n    foreach my $i (@l) {\n        if (exists $h{-$i}) {\n\
    \            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n\
    \            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return \"\"\
    ;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ \"\";\n}", "    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $sum = 0;\n\
    \    my $len = scalar(@$l);\n    for ($i = 0; $i < $len; $i++) {\n        for\
    \ ($j = $i + 1; $j < $len; $j++) {\n            $sum = $l->[$i] + $l->[$j];\n\
    \            if ($sum == 0) {\n                return 1;\n            }\n    \
    \    }\n    }\n    return \"\";\n}", "    my $n = scalar(@$l);\n    my $i;\n \
    \   my $j;\n    my $k;\n    my $m;\n    my $found;\n    my $result = \"\";\n \
    \   for ($i = 0; $i < $n; $i++) {\n        $found = 0;\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($i != $j) {\n                if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                    $found = 1;\n                }\n            }\n\
    \        }\n        if ($found) {\n            $result = 1;\n        }\n    }\n\
    \    return $result;\n}", "    my @list = @$l;\n    my %hash = ();\n    foreach\
    \ my $elem (@list) {\n        if (exists $hash{-$elem}) {\n            return\
    \ 1;\n        }\n        $hash{$elem} = 1;\n    }\n    return \"\";\n}", "   \
    \ my @l = @$l;\n    my %h;\n    for my $i (@l) {\n        $h{$i} = 1;\n    }\n\
    \    for my $i (@l) {\n        if (exists $h{-$i}) {\n            return 1;\n\
    \        }\n    }\n    return \"\";\n}", "    my $i;\n    my $j;\n    my $k;\n\
    \    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n  \
    \              return 1;\n            }\n        }\n    }\n    return \"\";\n}",
  "    my $i;\n    my $j;\n    my $n = @$l;\n    for ($i = 0; $i < $n; $i++) {\n \
    \       for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j]\
    \ == 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}", "    my $result = \"\";\n    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{$i}) {\n            $result = 1;\n            last;\n\
    \        }\n        $hash{-$i} = 1;\n    }\n    return $result;\n}", "    my $i\
    \ = 0;\n    my $j = 1;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n    \
    \    while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0) {\n        \
    \        return 1;\n            }\n            $j++;\n        }\n        $i++;\n\
    \        $j = $i + 1;\n    }\n    return \"\";\n}", "    my %hash;\n    foreach\
    \ my $x (@$l) {\n        if (exists $hash{-$x}) {\n            return 1;\n   \
    \     }\n        $hash{$x} = 1;\n    }\n    return \"\";\n}", "    my $i;\n  \
    \  my $j;\n    my $n = scalar(@$l);\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            if ($l->[$i] + $l->[$j] ==\
    \ 0) {\n                return 1;\n            }\n        }\n    }\n    return\
    \ \"\";\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

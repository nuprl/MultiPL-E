name: HumanEval_94_skjkasdkd
language: pl
prompt: "# You are given an array of integers.\n# You need to find the largest prime\
  \ value and return the sum of its digits.\n# Examples:\n# >>> skjkasdkd([0, 3, 2,\
  \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3])\n# 10\n# >>>\
  \ skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1])\n# 25\n\
  # >>> skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9,\
  \ 3])\n# 13\n# >>> skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6])\n\
  # 11\n# >>> skjkasdkd([0, 81, 12, 3, 1, 21])\n# 3\n# >>> skjkasdkd([0, 8, 1, 2,\
  \ 1, 7])\n# 7\nsub skjkasdkd {\n    my($lst) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&skjkasdkd;\n\
  \        if(eq_deeply($candidate->([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
  \ 4, 32, 3, 2, 32, 324, 4, 3]),10)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 1, 8, 2, 4597, 2, 1, 3,\
  \ 40, 1, 2, 1, 2, 4, 2, 5, 1]),25)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 3, 1, 32, 5107, 34, 83278,\
  \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]),13)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->([0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6]),11)) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([0, 81, 12, 3, 1, 21]),3)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0,\
  \ 8, 1, 2, 1, 7]),7)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([8191]),19)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([8191, 123456, 127,\
  \ 7]),19)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->([127, 97, 8192]),10)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max = 0;\n    for my $i (@$lst) {\n        if ($i > $max) {\n\
    \            $max = $i;\n        }\n    }\n    my $sum = 0;\n    while ($max >\
    \ 0) {\n        $sum += $max % 10;\n        $max = int($max / 10);\n    }\n  \
    \  return $sum;\n}", "    my $max = 0;\n    for my $i (0 .. $#$lst) {\n      \
    \  my $n = $lst->[$i];\n        if ($n > $max) {\n            my $p = 1;\n   \
    \         for my $j (2 .. $n) {\n                if ($n % $j == 0) {\n       \
    \             $p = 0;\n                    last;\n                }\n        \
    \    }\n            if ($p) {\n                $max = $n;\n            }\n   \
    \     }\n    }\n    my $s = 0;\n    while ($max > 0) {\n        $s += $max % 10;\n\
    \        $max = int($max / 10);\n    }\n    return $s;\n}", "    my $max = 0;\n\
    \    for my $i (0 .. $#$lst) {\n        my $x = $lst->[$i];\n        if ($x >\
    \ $max) {\n            $max = $x;\n        }\n    }\n    my $sum = 0;\n    while\
    \ ($max > 0) {\n        $sum += $max % 10;\n        $max = int($max / 10);\n \
    \   }\n    return $sum;\n}", "    my $max = 0;\n    for my $i (0 .. $#$lst) {\n\
    \        if ($lst->[$i] > $max) {\n            $max = $lst->[$i];\n        }\n\
    \    }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max % 10;\n\
    \        $max = int($max / 10);\n    }\n    return $sum;\n}", "    my $max = 0;\n\
    \    foreach my $i (@$lst) {\n        if ($i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max\
    \ % 10;\n        $max = int($max / 10);\n    }\n    return $sum;\n}", "    my\
    \ $max = 0;\n    for my $i (0 .. $#$lst) {\n        for my $j ($i .. $#$lst) {\n\
    \            my $sum = 0;\n            for my $k ($i .. $j) {\n              \
    \  $sum += $lst->[$k];\n            }\n            if (is_prime($sum)) {\n   \
    \             $max = $sum if $sum > $max;\n            }\n        }\n    }\n \
    \   return sum(split //, $max);\n}", "    my $max = 0;\n    foreach my $i (@$lst)\
    \ {\n        if ($i > $max && is_prime($i)) {\n            $max = $i;\n      \
    \  }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max %\
    \ 10;\n        $max = int($max / 10);\n    }\n    return $sum;\n}", "    my($i,\
    \ $j, $k, $n, $m, $p, $q, $r, $s, $t, $u, $v, $w, $x, $y, $z);\n    $n = 0;\n\
    \    $m = 0;\n    for($i = 0; $i < scalar(@$lst); $i++) {\n        $p = $lst->[$i];\n\
    \        $q = 0;\n        for($j = 2; $j < $p; $j++) {\n            if($p % $j\
    \ == 0) {\n                $q = 1;\n                last;\n            }\n   \
    \     }\n        if($q == 0) {\n            if($p > $n) {\n                $n\
    \ = $p;\n            }\n        }\n    }\n    while($n > 0) {\n        $m += $n\
    \ % 10;\n        $n = int($n / 10);\n    }\n    return $m;\n}", "    my $max =\
    \ 0;\n    for my $i (@$lst) {\n        if ($i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max\
    \ % 10;\n        $max = int($max / 10);\n    }\n    return $sum;\n}", "    my\
    \ $max = 0;\n    foreach my $x (@$lst) {\n        if ($x > $max) {\n         \
    \   $max = $x;\n        }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n \
    \       $sum += $max % 10;\n        $max = int($max / 10);\n    }\n    return\
    \ $sum;\n}", "    my $max = 0;\n    for my $i (@$lst) {\n        if ($i > $max)\
    \ {\n            $max = $i;\n        }\n    }\n    my $sum = 0;\n    while ($max\
    \ > 0) {\n        $sum += $max % 10;\n        $max = int($max / 10);\n    }\n\
    \    return $sum;\n}", "    my $max = 0;\n    for my $i (@$lst) {\n        if\
    \ ($i > $max) {\n            $max = $i;\n        }\n    }\n    my $sum = 0;\n\
    \    while ($max > 0) {\n        $sum += $max % 10;\n        $max = int($max /\
    \ 10);\n    }\n    return $sum;\n}", "    my $max = 0;\n    for my $i (0 .. $#$lst)\
    \ {\n        if ($lst->[$i] > $max) {\n            $max = $lst->[$i];\n      \
    \  }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max %\
    \ 10;\n        $max = int($max / 10);\n    }\n    return $sum;\n}", "    my $max\
    \ = 0;\n    foreach my $n (@$lst) {\n        if ($n > $max && is_prime($n)) {\n\
    \            $max = $n;\n        }\n    }\n    return sum_digits($max);\n}", " \
    \   my $max = 0;\n    for my $i (@$lst) {\n        if ($i > $max) {\n        \
    \    $max = $i;\n        }\n    }\n    my $sum = 0;\n    while ($max > 0) {\n\
    \        $sum += $max % 10;\n        $max = int($max / 10);\n    }\n    return\
    \ $sum;\n}", "    my $max = 0;\n    for my $x (@$lst) {\n        if ($x > $max)\
    \ {\n            $max = $x;\n        }\n    }\n    my $sum = 0;\n    while ($max\
    \ > 0) {\n        $sum += $max % 10;\n        $max = int($max / 10);\n    }\n\
    \    return $sum;\n}", "    my $max = 0;\n    for my $i (@$lst) {\n        if\
    \ ($i > $max) {\n            $max = $i;\n        }\n    }\n    my $sum = 0;\n\
    \    while ($max > 0) {\n        $sum += $max % 10;\n        $max = int($max /\
    \ 10);\n    }\n    return $sum;\n}", "    my $max = 0;\n    for my $i (0 .. $#$lst)\
    \ {\n        my $x = $lst->[$i];\n        my $is_prime = 1;\n        for my $j\
    \ (2 .. int(sqrt($x))) {\n            if ($x % $j == 0) {\n                $is_prime\
    \ = 0;\n                last;\n            }\n        }\n        if ($is_prime\
    \ && $x > $max) {\n            $max = $x;\n        }\n    }\n    my $sum = 0;\n\
    \    while ($max > 0) {\n        $sum += $max % 10;\n        $max = int($max /\
    \ 10);\n    }\n    return $sum;\n}", "    my $max = 0;\n    for my $i (@$lst)\
    \ {\n        if ($i > $max && is_prime($i)) {\n            $max = $i;\n      \
    \  }\n    }\n    return sum_digits($max);\n}", "    my $max = 0;\n    for my $i\
    \ (@$lst) {\n        if ($i > $max) {\n            $max = $i;\n        }\n   \
    \ }\n    my $sum = 0;\n    while ($max > 0) {\n        $sum += $max % 10;\n  \
    \      $max = int($max / 10);\n    }\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

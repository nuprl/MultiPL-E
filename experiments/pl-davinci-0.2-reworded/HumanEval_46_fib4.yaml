name: HumanEval_46_fib4
language: pl
prompt: "# The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n# fib4(0) -> 0\n# fib4(1) -> 0\n# fib4(2) -> 2\n#\
  \ fib4(3) -> 0\n# fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n# Please\
  \ write a function to efficiently compute the n-th element of the fib4 number sequence.\
  \  Do not use recursion.\n# >>> fib4(5)\n# 4\n# >>> fib4(6)\n# 8\n# >>> fib4(7)\n\
  # 14\nsub fib4 {\n    my($n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib4;\n \
  \       if(eq_deeply($candidate->(5),4)) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->(8),28)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),104))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),386))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n\
    \        $fib4[$i % 4] = $fib4[($i - 1) % 4] + $fib4[($i - 2) % 4] + $fib4[($i\
    \ - 3) % 4] + $fib4[($i - 4) % 4];\n    }\n    return $fib4[$n % 4];\n}", "  \
    \  my($fib4_0, $fib4_1, $fib4_2, $fib4_3, $fib4_n) = (0, 0, 2, 0, 0);\n    for\
    \ (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1 + $fib4_2\
    \ + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n       \
    \ $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n\
    }", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3\
    \ = 0;\n    my $fib4_n = 0;\n    if ($n == 0) {\n        return $fib4_0;\n   \
    \ }\n    if ($n == 1) {\n        return $fib4_1;\n    }\n    if ($n == 2) {\n\
    \        return $fib4_2;\n    }\n    if ($n == 3) {\n        return $fib4_3;\n\
    \    }\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1\
    \ + $fib4_2 + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n\
    \        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n\
    }", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3\
    \ = 0;\n    my $fib4_n = 0;\n    if ($n == 0) {\n        return $fib4_0;\n   \
    \ }\n    if ($n == 1) {\n        return $fib4_1;\n    }\n    if ($n == 2) {\n\
    \        return $fib4_2;\n    }\n    if ($n == 3) {\n        return $fib4_3;\n\
    \    }\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1\
    \ + $fib4_2 + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n\
    \        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n\
    }", "    my @fibs = (0, 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n   \
    \     $fibs[$i % 4] = $fibs[($i - 1) % 4] + $fibs[($i - 2) % 4] + $fibs[($i -\
    \ 3) % 4] + $fibs[($i - 4) % 4];\n    }\n    return $fibs[$n % 4];\n}", "    my\
    \ @fib4 = (0, 0, 2, 0);\n    for (4..$n) {\n        push @fib4, $fib4[-1] + $fib4[-2]\
    \ + $fib4[-3] + $fib4[-4];\n    }\n    return $fib4[$n];\n}", "    my $fib4_0\
    \ = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3 = 0;\n    my\
    \ $fib4_n = 0;\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0\
    \ + $fib4_1 + $fib4_2 + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1\
    \ = $fib4_2;\n        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n\
    \    return $fib4_n;\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my $i = 4; $i\
    \ <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    my $fib4_0 = 0;\n   \
    \ my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3 = 0;\n    my $fib4_n =\
    \ 0;\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1\
    \ + $fib4_2 + $fib4_3;\n        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n\
    \        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n\
    }", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3\
    \ = 0;\n    my $fib4_4 = 0;\n    for(my $i = 4; $i <= $n; $i++) {\n        $fib4_4\
    \ = $fib4_3 + $fib4_2 + $fib4_1 + $fib4_0;\n        $fib4_0 = $fib4_1;\n     \
    \   $fib4_1 = $fib4_2;\n        $fib4_2 = $fib4_3;\n        $fib4_3 = $fib4_4;\n\
    \    }\n    return $fib4_4;\n}", "    my $fib4_0 = 0;\n    my $fib4_1 = 0;\n \
    \   my $fib4_2 = 2;\n    my $fib4_3 = 0;\n    my $fib4_n = 0;\n    for (my $i\
    \ = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1 + $fib4_2 + $fib4_3;\n\
    \        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n        $fib4_2 = $fib4_3;\n\
    \        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my @fib = (0,\
    \ 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib[$i % 4] = $fib[($i\
    \ - 1) % 4] + $fib[($i - 2) % 4] + $fib[($i - 3) % 4] + $fib[($i - 4) % 4];\n\
    \    }\n    return $fib[$n % 4];\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my\
    \ $i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    my $fib4_0 = 0;\n   \
    \ my $fib4_1 = 0;\n    my $fib4_2 = 2;\n    my $fib4_3 = 0;\n    my $fib4_n =\
    \ 0;\n    if ($n == 0) {\n        return $fib4_0;\n    }\n    if ($n == 1) {\n\
    \        return $fib4_1;\n    }\n    if ($n == 2) {\n        return $fib4_2;\n\
    \    }\n    if ($n == 3) {\n        return $fib4_3;\n    }\n    for (my $i = 4;\
    \ $i <= $n; $i++) {\n        $fib4_n = $fib4_0 + $fib4_1 + $fib4_2 + $fib4_3;\n\
    \        $fib4_0 = $fib4_1;\n        $fib4_1 = $fib4_2;\n        $fib4_2 = $fib4_3;\n\
    \        $fib4_3 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my @fib = (0,\
    \ 0, 2, 0);\n    for (my $i = 4; $i <= $n; $i++) {\n        $fib[$i % 4] = $fib[($i\
    \ - 1) % 4] + $fib[($i - 2) % 4] + $fib[($i - 3) % 4] + $fib[($i - 4) % 4];\n\
    \    }\n    return $fib[$n % 4];\n}", "    my($fib4_n_minus_1, $fib4_n_minus_2,\
    \ $fib4_n_minus_3, $fib4_n_minus_4, $fib4_n);\n    $fib4_n_minus_1 = 0;\n    $fib4_n_minus_2\
    \ = 0;\n    $fib4_n_minus_3 = 2;\n    $fib4_n_minus_4 = 0;\n    $fib4_n = 0;\n\
    \    for(my $i = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_n_minus_1 + $fib4_n_minus_2\
    \ + $fib4_n_minus_3 + $fib4_n_minus_4;\n        $fib4_n_minus_4 = $fib4_n_minus_3;\n\
    \        $fib4_n_minus_3 = $fib4_n_minus_2;\n        $fib4_n_minus_2 = $fib4_n_minus_1;\n\
    \        $fib4_n_minus_1 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my($fib4_n_minus_1,\
    \ $fib4_n_minus_2, $fib4_n_minus_3, $fib4_n_minus_4) = (0, 0, 2, 0);\n    my($fib4_n);\n\
    \    for (my($i) = 4; $i <= $n; $i++) {\n        $fib4_n = $fib4_n_minus_1 + $fib4_n_minus_2\
    \ + $fib4_n_minus_3 + $fib4_n_minus_4;\n        $fib4_n_minus_4 = $fib4_n_minus_3;\n\
    \        $fib4_n_minus_3 = $fib4_n_minus_2;\n        $fib4_n_minus_2 = $fib4_n_minus_1;\n\
    \        $fib4_n_minus_1 = $fib4_n;\n    }\n    return $fib4_n;\n}", "    my($fib4_prev_prev_prev,\
    \ $fib4_prev_prev, $fib4_prev, $fib4_curr) = (0, 0, 0, 2);\n    for(my $i = 3;\
    \ $i <= $n; $i++) {\n        $fib4_curr = $fib4_prev_prev_prev + $fib4_prev_prev\
    \ + $fib4_prev + $fib4_curr;\n        $fib4_prev_prev_prev = $fib4_prev_prev;\n\
    \        $fib4_prev_prev = $fib4_prev;\n        $fib4_prev = $fib4_curr;\n   \
    \ }\n    return $fib4_curr;\n}", "    my @fib4 = (0, 0, 2, 0);\n    for (my $i\
    \ = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i-1] + $fib4[$i-2] + $fib4[$i-3]\
    \ + $fib4[$i-4];\n    }\n    return $fib4[$n];\n}", "    return 0 if $n < 2;\n\
    \    return 2 if $n == 2;\n    my @fibs = (0, 0, 2, 0);\n    for (my $i = 3; $i\
    \ < $n; $i++) {\n        $fibs[$i % 4] = $fibs[($i - 1) % 4] + $fibs[($i - 2)\
    \ % 4] + $fibs[($i - 3) % 4] + $fibs[($i - 4) % 4];\n    }\n    return $fibs[($n\
    \ - 1) % 4];\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

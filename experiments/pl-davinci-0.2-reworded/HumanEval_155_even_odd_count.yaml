name: HumanEval_155_even_odd_count
language: pl
prompt: "# Given an integer. return an array that has the number of even and odd digits\
  \ respectively.\n# Example:\n# >>> even_odd_count(-12)\n# [1, 1]\n# >>> even_odd_count(123)\n\
  # [1, 2]\nsub even_odd_count {\n    my($num) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&even_odd_count;\n\
  \        if(eq_deeply($candidate->(7),[0, 1])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(-78),[1, 1])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3452),[2,\
  \ 2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(346211),[3,\
  \ 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-345821),[3,\
  \ 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-2),[1,\
  \ 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-45347),[2,\
  \ 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(0),[1,\
  \ 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @digits = split //, $num;\n    my $even = 0;\n    my $odd =\
    \ 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n    }\n \
    \   return [$even, $odd];\n}", "    my @result = (0, 0);\n    while ($num) {\n\
    \        if ($num % 2 == 0) {\n            $result[0]++;\n        } else {\n \
    \           $result[1]++;\n        }\n        $num = int($num / 10);\n    }\n\
    \    return @result;\n}", "    my @digits = split //, $num;\n    my $even = 0;\n\
    \    my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my @digits = split(//, $num);\n  \
    \  my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    return [$even_count, $odd_count];\n\
    }", "    my @digits = split(//, abs($num));\n    my $even = 0;\n    my $odd =\
    \ 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n    }\n \
    \   return [$even, $odd];\n}", "    my @digits = split(//, $num);\n    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    for my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits\
    \ = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}",
  "    my @result = (0, 0);\n    while ($num) {\n        my $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $result[0]++;\n        } else {\n\
    \            $result[1]++;\n        }\n        $num /= 10;\n    }\n    return\
    \ @result;\n}", "    my @digits = split //, $num;\n    my $even = 0;\n    my $odd\
    \ = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return [$even, $odd];\n}", "    my @digits = split(//, $num);\n    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return [$even, $odd];\n}", "    my @digits = split(//, $num);\n\
    \    my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n    \
    \    if ($digit % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my @digits\
    \ = split(//, $num);\n    my $even_count = 0;\n    my $odd_count = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my @digits = split(//, $num);\n    my $even = 0;\n  \
    \  my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my @digits = split //, $num;\n   \
    \ my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n       \
    \ if ($digit % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my @digits =\
    \ split(//, abs($num));\n    my $even_count = 0;\n    my $odd_count = 0;\n   \
    \ foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    my @digits\
    \ = split(//, $num);\n    foreach my $digit (@digits) {\n        if ($digit %\
    \ 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits\
    \ = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n \
    \   foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ [$even, $odd];\n}", "    my @digits = split(//, $num);\n    my $even = 0;\n\
    \    my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my @digits = split //, $num;\n   \
    \ my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n       \
    \ if ($digit % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my @digits =\
    \ split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    for my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my\
    \ @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    for my\
    \ $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n \
    \       } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my $even_count = 0;\n    my $odd_count = 0;\n    my @digits = split(//,\
    \ $num);\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n\
    \            $even_count++;\n        } else {\n            $odd_count++;\n   \
    \     }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split(//,\
    \ $num);\n    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n  \
    \      } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my @digits = split //, $num;\n    my $even = 0;\n   \
    \ my $odd = 0;\n    for my $digit (@digits) {\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return [$even, $odd];\n}", "    my @digits = split //, $num;\n    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    for my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits\
    \ = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split(//, $num);\n    my $even_count = 0;\n    my $odd_count =\
    \ 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n    \
    \        $even_count++;\n        } else {\n            $odd_count++;\n       \
    \ }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split(//,\
    \ $num);\n    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n  \
    \      } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my @digits = split //, $num;\n    my $even = 0;\n   \
    \ my $odd = 0;\n    for my $digit (@digits) {\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return [$even, $odd];\n}", "    my @digits = split(//, $num);\n    my $even\
    \ = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return [$even, $odd];\n}", "    my @digits = split //, $num;\n\
    \    my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n    \
    \    if ($digit % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my @result\
    \ = (0, 0);\n    while ($num) {\n        my $digit = $num % 10;\n        if ($digit\
    \ % 2 == 0) {\n            $result[0]++;\n        } else {\n            $result[1]++;\n\
    \        }\n        $num = int($num / 10);\n    }\n    return @result;\n}", " \
    \   my @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my $even_count = 0;\n    my $odd_count = 0;\n    while ($num != 0) {\n\
    \        my $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n        $num = int($num\
    \ / 10);\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits =\
    \ split //, $num;\n    my $even_count = 0;\n    my $odd_count = 0;\n    for my\
    \ $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my $even = 0;\n    my $odd = 0;\n    while ($num > 0)\
    \ {\n        my $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = int($num / 10);\n    }\n    return [$even, $odd];\n}", "    my @array = (0,\
    \ 0);\n    while($num != 0) {\n        my $digit = $num % 10;\n        if($digit\
    \ % 2 == 0) {\n            $array[0]++;\n        } else {\n            $array[1]++;\n\
    \        }\n        $num = int($num / 10);\n    }\n    return @array;\n}", " \
    \   my @digits = split(//, abs($num));\n    my $even = 0;\n    my $odd = 0;\n\
    \    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n         \
    \   $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ [$even, $odd];\n}", "    my $even = 0;\n    my $odd = 0;\n    my @ret = ();\n\
    \    while($num != 0) {\n        my $digit = $num % 10;\n        if($digit % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n        $num = int($num / 10);\n    }\n    push(@ret, $even);\n    push(@ret,\
    \ $odd);\n    return @ret;\n}", "    my @digits = split //, abs($num);\n    my\
    \ $even_count = 0;\n    my $odd_count = 0;\n    foreach my $digit (@digits) {\n\
    \        if ($digit % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    return [$even_count, $odd_count];\n\
    }", "    my $even = 0;\n    my $odd = 0;\n    while ($num) {\n        if ($num\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $num = int($num / 10);\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @even_odd_count = (0, 0);\n    while ($num != 0) {\n        my $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even_odd_count[0]++;\n\
    \        } else {\n            $even_odd_count[1]++;\n        }\n        $num\
    \ = int($num / 10);\n    }\n    return @even_odd_count;\n}", "    my @digits =\
    \ split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split //, $num;\n    my $even_count = 0;\n    my $odd_count =\
    \ 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n    \
    \        $even_count++;\n        } else {\n            $odd_count++;\n       \
    \ }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split(//,\
    \ abs($num));\n    my @counts = (0, 0);\n    foreach my $digit (@digits) {\n \
    \       if ($digit % 2 == 0) {\n            $counts[0]++;\n        } else {\n\
    \            $counts[1]++;\n        }\n    }\n    return @counts;\n}", "    my\
    \ @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split //, $num;\n    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n  \
    \          $even_count++;\n        } else {\n            $odd_count++;\n     \
    \   }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split(//,\
    \ $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my\
    \ @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split(//, abs($num));\n    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    for my $digit (@digits) {\n        if ($digit % 2 == 0) {\n      \
    \      $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split //,\
    \ $num;\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my\
    \ @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n\
    \    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n         \
    \   $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ [$even, $odd];\n}", "    my @digits = split //, $num;\n    my $even = 0;\n \
    \   my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my @digits = split //, $num;\n   \
    \ my $even = 0;\n    my $odd = 0;\n    foreach my $digit (@digits) {\n       \
    \ if ($digit % 2 == 0) {\n            $even++;\n        } else {\n           \
    \ $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my @digits =\
    \ split(//, $num);\n    my $even_count = 0;\n    my $odd_count = 0;\n    for my\
    \ $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my @digits = split //, $num;\n    my $even = 0;\n   \
    \ my $odd = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my @digits = split(//, abs($num));\n\
    \    my $even = 0;\n    my $odd = 0;\n    for my $digit (@digits) {\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n    }\n    return [$even, $odd];\n}", "    my @result = (0, 0);\n\
    \    while ($num) {\n        if ($num % 2 == 0) {\n            $result[0]++;\n\
    \        } else {\n            $result[1]++;\n        }\n        $num = int($num\
    \ / 10);\n    }\n    return @result;\n}", "    my @digits = split(//, $num);\n\
    \    my @result = (0, 0);\n    foreach my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $result[0]++;\n        } else {\n            $result[1]++;\n\
    \        }\n    }\n    return @result;\n}", "    my @digits = split //, $num;\n\
    \    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even_count++;\n        } else\
    \ {\n            $odd_count++;\n        }\n    }\n    return [$even_count, $odd_count];\n\
    }", "    my @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n \
    \   foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    return\
    \ [$even, $odd];\n}", "    my @digits = split //, $num;\n    my $even = 0;\n \
    \   my $odd = 0;\n    for my $digit (@digits) {\n        if ($digit % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    return [$even, $odd];\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    while ($num > 0) {\n        my $digit = $num % 10;\n        if ($digit %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n        $num = int($num / 10);\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split //, $num;\n    my @result = (0, 0);\n    for my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $result[0]++;\n        } else\
    \ {\n            $result[1]++;\n        }\n    }\n    return @result;\n}", " \
    \   my @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n    for\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split //, $num;\n    my $even = 0;\n    my $odd = 0;\n \
    \   for my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }", "    my @digits = split //, $num;\n    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    foreach my $digit (@digits) {\n        if ($digit % 2 == 0) {\n  \
    \          $even_count++;\n        } else {\n            $odd_count++;\n     \
    \   }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits = split\
    \ //, abs($num);\n    my $even = 0;\n    my $odd = 0;\n    for my $digit (@digits)\
    \ {\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return [$even, $odd];\n}", "    my\
    \ @digits = split //, $num;\n    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    for my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return [$even_count,\
    \ $odd_count];\n}", "    my @digits = split(//, $num);\n    my $even_count = 0;\n\
    \    my $odd_count = 0;\n    foreach my $digit (@digits) {\n        if ($digit\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return [$even_count, $odd_count];\n}", "    my @digits\
    \ = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach my $digit\
    \ (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}",
  "    my @digits = split(//, $num);\n    my $even = 0;\n    my $odd = 0;\n    foreach\
    \ my $digit (@digits) {\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

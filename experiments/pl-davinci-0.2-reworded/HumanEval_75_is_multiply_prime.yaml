name: HumanEval_75_is_multiply_prime
language: pl
prompt: "# Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n# and false otherwise.\n# Knowing that (a) is less then 100.\
  \ \n# Example:\n# >>> is_multiply_prime(30)\n# 1\n# 30 = 2 * 3 * 5\nsub is_multiply_prime\
  \ {\n    my($a) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_multiply_prime;\n\
  \        if(eq_deeply($candidate->(5),\"\")) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(30),1)) {\n      \
  \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(125),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(105),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(126),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(729),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(891),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1001),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my $result = 0;\n\
    \    while($i <= $a) {\n        while($j <= $a) {\n            while($k <= $a)\
    \ {\n                if($i * $j * $k == $a) {\n                    $result = 1;\n\
    \                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}", "    my $result = 0;\n\
    \    my @primes = get_prime_numbers(100);\n    foreach my $p1 (@primes) {\n  \
    \      foreach my $p2 (@primes) {\n            foreach my $p3 (@primes) {\n  \
    \              if ($p1 * $p2 * $p3 == $a) {\n                    $result = 1;\n\
    \                    last;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}", "    my $is_prime = 0;\n    my $i = 2;\n    my $j =\
    \ 2;\n    my $k = 2;\n    my $is_multiply_prime = 0;\n    while ($i <= $a) {\n\
    \        $is_prime = is_prime($i);\n        if ($is_prime == 1) {\n          \
    \  while ($j <= $a) {\n                $is_prime = is_prime($j);\n           \
    \     if ($is_prime == 1) {\n                    while ($k <= $a) {\n        \
    \                $is_prime = is_prime($k);\n                        if ($is_prime\
    \ == 1) {\n                            if ($i * $j * $k == $a) {\n           \
    \                     $is_multiply_prime = 1;\n                              \
    \  print \"$i * $j * $k = $a\\n\";\n                            }\n          \
    \              }\n                        $k++;\n                    }\n     \
    \           }\n                $j++;\n            }\n        }\n        $i++;\n\
    \    }\n    return $is_multiply_prime;\n}", "    my $i = 2;\n    my $j = 2;\n\
    \    my $k = 2;\n    while ($i * $j * $k != $a) {\n        if ($i * $j * $k >\
    \ $a) {\n            $i = 2;\n            $j = 2;\n            $k++;\n       \
    \ } elsif ($i * $j > $a) {\n            $i = 2;\n            $j++;\n        }\
    \ else {\n            $i++;\n        }\n    }\n    return 1;\n}", "    my $i =\
    \ 2;\n    my $j = 2;\n    my $k = 2;\n    my $flag = 0;\n    while ($i <= $a)\
    \ {\n        while ($j <= $a) {\n            while ($k <= $a) {\n            \
    \    if ($i * $j * $k == $a) {\n                    $flag = 1;\n             \
    \       last;\n                }\n                $k++;\n            }\n     \
    \       $j++;\n        }\n        $i++;\n    }\n    return $flag;\n}", "    my\
    \ $i = 2;\n    my $result = 0;\n    my $is_prime = 0;\n    my $is_multiply_prime\
    \ = 0;\n    my $count = 0;\n    while ($i < $a) {\n        $is_prime = is_prime($i);\n\
    \        if ($is_prime == 1) {\n            $result = $a % $i;\n            if\
    \ ($result == 0) {\n                $count++;\n            }\n        }\n    \
    \    $i++;\n    }\n    if ($count == 3) {\n        $is_multiply_prime = 1;\n \
    \   }\n    return $is_multiply_prime;\n}", "    my $i = 2;\n    my $flag = 0;\n\
    \    while ($i < $a) {\n        if ($a % $i == 0) {\n            if (is_prime($i))\
    \ {\n                $flag++;\n            }\n        }\n        $i++;\n    }\n\
    \    if ($flag == 3) {\n        return 1;\n    }\n    else {\n        return 0;\n\
    \    }\n}", "    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    my $result =\
    \ 0;\n    while ($i <= $a) {\n        while ($j <= $a) {\n            while ($k\
    \ <= $a) {\n                if ($i * $j * $k == $a) {\n                    $result\
    \ = 1;\n                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}", "    my $i = 2;\n \
    \   my $j = 2;\n    my $k = 2;\n    my $result = 0;\n    while ($i <= $a) {\n\
    \        while ($j <= $a) {\n            while ($k <= $a) {\n                if\
    \ ($i * $j * $k == $a) {\n                    $result = 1;\n                }\n\
    \                $k++;\n            }\n            $j++;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $is_prime = 0;\n    my $i = 2;\n    my\
    \ $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n        while ($j < $a) {\n\
    \            while ($k < $a) {\n                if ($i * $j * $k == $a) {\n  \
    \                  $is_prime = 1;\n                }\n                $k++;\n\
    \            }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ $is_prime;\n}", "    my $i = 2;\n    my @primes = ();\n    while ($i * $i <=\
    \ $a) {\n        if ($a % $i == 0) {\n            push @primes, $i;\n        \
    \    $a /= $i;\n        } else {\n            $i++;\n        }\n    }\n    push\
    \ @primes, $a;\n    return scalar @primes == 3;\n}", "    my $i = 2;\n    my $j\
    \ = 2;\n    my $k = 2;\n    my $flag = 0;\n    while ($i <= $a) {\n        while\
    \ ($j <= $a) {\n            while ($k <= $a) {\n                if ($i * $j *\
    \ $k == $a) {\n                    $flag = 1;\n                    last;\n   \
    \             }\n                $k++;\n            }\n            $j++;\n   \
    \     }\n        $i++;\n    }\n    return $flag;\n}", "    my $i = 2;\n    my\
    \ $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n        while ($j < $a) {\n\
    \            while ($k < $a) {\n                if ($i * $j * $k == $a) {\n  \
    \                  return 1;\n                }\n                $k++;\n     \
    \       }\n            $j++;\n        }\n        $i++;\n    }\n    return 0;\n\
    }", "    my $is_prime = 0;\n    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n \
    \   for ($i = 2; $i <= $a; $i++) {\n        if ($a % $i == 0) {\n            for\
    \ ($j = 2; $j <= $a; $j++) {\n                if ($a % $j == 0) {\n          \
    \          for ($k = 2; $k <= $a; $k++) {\n                        if ($a % $k\
    \ == 0) {\n                            if ($i * $j * $k == $a) {\n           \
    \                     $is_prime = 1;\n                            }\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return $is_prime;\n}", "    my $i;\n    my $j;\n    my\
    \ $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n\
    \    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my\
    \ $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n\
    \    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n\
    \    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n\
    \    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n\
    \    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n\
    \    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n\
    \    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n\
    \    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n\
    \    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n\
    \    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n\
    \    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n\
    \    my $cm;\n    my $cn;", "    my $is_prime = 1;\n    my $i = 2;\n    my $j\
    \ = 2;\n    my $k = 2;\n    my $is_multiply_prime = 0;\n    while ($i <= $a) {\n\
    \        while ($j <= $a) {\n            while ($k <= $a) {\n                if\
    \ ($i * $j * $k == $a) {\n                    $is_multiply_prime = 1;\n      \
    \          }\n                $k++;\n            }\n            $j++;\n      \
    \  }\n        $i++;\n    }\n    return $is_multiply_prime;\n}", "    my $is_multiply_prime\
    \ = 0;\n    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    for ($i = 2; $i <\
    \ $a; $i++) {\n        for ($j = 2; $j < $a; $j++) {\n            for ($k = 2;\
    \ $k < $a; $k++) {\n                if ($i * $j * $k == $a) {\n              \
    \      $is_multiply_prime = 1;\n                }\n            }\n        }\n\
    \    }\n    return $is_multiply_prime;\n}", "    my $i = 2;\n    my $j = 2;\n\
    \    my $k = 2;\n    my $result = 0;\n    while ($i < $a) {\n        while ($j\
    \ < $a) {\n            while ($k < $a) {\n                if ($i * $j * $k ==\
    \ $a) {\n                    $result = 1;\n                    last;\n       \
    \         }\n                $k++;\n            }\n            $j++;\n       \
    \ }\n        $i++;\n    }\n    return $result;\n}", "    my $is_multiply_prime\
    \ = 0;\n    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    while ($i <= $a) {\n\
    \        while ($j <= $a) {\n            while ($k <= $a) {\n                if\
    \ ($i * $j * $k == $a) {\n                    $is_multiply_prime = 1;\n      \
    \          }\n                $k++;\n            }\n            $j++;\n      \
    \  }\n        $i++;\n    }\n    return $is_multiply_prime;\n}", "    my $is_multiply_prime\
    \ = 0;\n    my $i = 2;\n    my $j = 2;\n    my $k = 2;\n    while ($i < $a) {\n\
    \        while ($j < $a) {\n            while ($k < $a) {\n                if\
    \ ($i * $j * $k == $a) {\n                    $is_multiply_prime = 1;\n      \
    \          }\n                $k++;\n            }\n            $j++;\n      \
    \  }\n        $i++;\n    }\n    return $is_multiply_prime;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_134_check_if_last_char_is_a_letter
language: pl
prompt: "# Create a function that returns 1 if the last character\n# of a given string\
  \ is an alphabetical character and is not\n# a part of a word, and '' otherwise.\n\
  # Note: \"word\" is a group of characters separated by space.\n# Examples:\n# >>>\
  \ check_if_last_char_is_a_letter(\"apple pie\")\n# \"\"\n# >>> check_if_last_char_is_a_letter(\"\
  apple pi e\")\n# 1\n# >>> check_if_last_char_is_a_letter(\"apple pi e \")\n# \"\"\
  \n# >>> check_if_last_char_is_a_letter(\"\")\n# \"\"\nsub check_if_last_char_is_a_letter\
  \ {\n    my($txt) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_if_last_char_is_a_letter;\n\
  \        if(eq_deeply($candidate->(\"apple\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"apple pi e\"),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eeeee\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"A\"),1)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"Pumpkin pie \"),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Pumpkin pie 1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"eeeee e \"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  apple pie\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"apple pi e \"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $last_char = substr($txt, -1);\n    if ($last_char =~ /\\w/\
    \ && $last_char !~ /\\s/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/ ) {\n\
    \        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $result = '';\n    if (length($txt) >\
    \ 0) {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $txt_without_last_char = substr($txt, 0, -1);\n          \
    \  if ($txt_without_last_char =~ /\\s$/) {\n                $result = 1;\n   \
    \         }\n        }\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $ret = '';\n\
    \    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", " \
    \   my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n\
    \    return $result;\n}", "    my $ret = '';\n    if($txt =~ /\\w\\s*$/) {\n \
    \       $ret = 1;\n    }\n    return $ret;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    # your code goes here\n\
    \    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    else {\n        return '';\n    }\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    my $last_char_is_a_letter = $last_char =~ /[a-zA-Z]/;\n\
    \    my $last_char_is_a_part_of_a_word = $txt =~ /[a-zA-Z] $/;\n    if ($last_char_is_a_letter\
    \ && !$last_char_is_a_part_of_a_word) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    return '' if $txt eq '';\n\
    \    my @words = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n    return\
    \ '' if $last_word eq '';\n    my $last_char = substr($last_word, -1);\n    return\
    \ '' if $last_char eq '';\n    return 1 if $last_char =~ /[a-zA-Z]/;\n    return\
    \ '';\n}", "    my $result = '';\n    if (length($txt) > 0) {\n        my $last_char\
    \ = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            my\
    \ $prev_char = substr($txt, -2, 1);\n            if ($prev_char !~ /[a-zA-Z]/)\
    \ {\n                $result = 1;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n\
    }", "    my $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/ ) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $last_char = substr($txt, -1);\n    my $result = '';\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    # Write your\
    \ code here\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /[a-zA-Z]\\w+/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my($last_char)\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    if ($txt =~ /\\w\\s$/)\
    \ {\n        return '';\n    }\n    else {\n        return 1;\n    }\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $ret = \"\";\n    my\
    \ $len = length($txt);\n    if ($len > 0) {\n        my $last = substr($txt, $len\
    \ - 1, 1);\n        if ($last =~ /[a-zA-Z]/) {\n            $ret = 1;\n      \
    \  }\n    }\n    return $ret;\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $ret = '';\n    if\
    \ ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/ ) {\n    \
    \    my $last_word = (split /\\s+/, $txt)[-1];\n        if ( $last_word =~ /$last_char$/\
    \ ) {\n            return '';\n        }\n        else {\n            return 1;\n\
    \        }\n    }\n    else {\n        return '';\n    }\n}", "    my $result\
    \ = \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $result =\
    \ '';\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = $last_char\
    \ =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word = $txt =~ /[a-zA-Z]\\\
    s$/;\n    if ($last_char_is_a_letter && !$last_char_is_a_part_of_a_word) {\n \
    \       return 1;\n    }\n    return '';\n}", "    my $result = '';\n    if (length($txt)\
    \ > 0) {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~\
    \ /[a-zA-Z]/) {\n            my $last_word = (split(/\\s+/, $txt))[-1];\n    \
    \        if ($last_word ne $last_char) {\n                $result = 1;\n     \
    \       }\n        }\n    }\n    return $result;\n}", "    if ($txt =~ /\\w\\\
    s$/) {\n        return \"\";\n    }\n    else {\n        return 1;\n    }\n}",
  "    my $ret = '';\n    if (length($txt) > 0) {\n        my $last_char = substr($txt,\
    \ length($txt) - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n           \
    \ $ret = 1;\n        }\n    }\n    return $ret;\n}", "    if (length($txt) ==\
    \ 0) {\n        return \"\";\n    }\n    my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n  \
    \  return \"\";\n}", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n    }\n\
    \    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $ret = '';\n    if ($txt =~ /\\w$/) {\n        $ret = 1;\n\
    \    }\n    return $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr $txt, -1;\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $ret = '';\n\
    \    if ($txt =~ /\\S$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/ ) {\n\
    \        if ( $txt =~ /\\s$last_char\\s/ ) {\n            return '';\n       \
    \ }\n        else {\n            return 1;\n        }\n    }\n    else {\n   \
    \     return '';\n    }\n}", "    my $last_char = substr($txt, -1);\n    if (\
    \ $last_char =~ /[a-zA-Z]/ ) {\n        return 1;\n    }\n    return '';\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    if($last_char =~ /\\w/){\n\
    \        return \"\";\n    }\n    else{\n        return 1;\n    }\n}", "    my\
    \ $ret = '';\n    if ($txt =~ /\\w\\s$/) {\n        $ret = 1;\n    }\n    return\
    \ $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $result = '';\n   \
    \ if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    my $last_char_is_a_letter = ($last_char =~ /[a-zA-Z]/);\n    my $last_char_is_a_part_of_a_word\
    \ = ($txt =~ /\\s$last_char\\s/);\n    return ($last_char_is_a_letter && !$last_char_is_a_part_of_a_word)\
    \ ? 1 : '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return '';\n}", "    my $result = \"\";\n    if (length($txt) > 0)\
    \ {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $last_char_index = length($txt) - 1;\n            if ($last_char_index\
    \ == 0) {\n                $result = 1;\n            }\n            else {\n \
    \               my $prev_char = substr($txt, -2, 1);\n                if ($prev_char\
    \ !~ /[a-zA-Z]/) {\n                    $result = 1;\n                }\n    \
    \        }\n        }\n    }\n    return $result;\n}", "    my $ret = '';\n  \
    \  if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $result = '';\n   \
    \ if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $result = '';\n    if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n\
    \    }\n    return $result;\n}", "    my $len = length($txt);\n    my $last =\
    \ substr($txt, $len - 1, 1);\n    if ($last =~ /[a-zA-Z]/ && $last !~ /\\w/) {\n\
    \        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter\
    \ = $last_char =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word = $txt =~\
    \ /\\w\\s$/;\n    return $last_char_is_a_letter && !$last_char_is_a_part_of_a_word;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $result = \"\";\n \
    \   if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $result =\
    \ '';\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $result = \"\";\n    if (length($txt) > 0) {\n\
    \        my $last_char = substr($txt, length($txt) - 1, 1);\n        if ($last_char\
    \ =~ /[a-zA-Z]/) {\n            my $before_last_char = substr($txt, length($txt)\
    \ - 2, 1);\n            if ($before_last_char !~ /[a-zA-Z]/) {\n             \
    \   $result = 1;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n \
    \       return 1;\n    }\n    return '';\n}", "    my $result = '';\n    if ($txt\
    \ =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    return '' if $txt eq '';\n    my @words\
    \ = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n    my $last_char =\
    \ substr($last_word, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $result = '';\n    if ($txt =~ /\\w\\\
    s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $result = '';\n   \
    \ if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my $ret = '';\n\
    \    my $len = length($txt);\n    if ($len > 0) {\n        my $last_char = substr($txt,\
    \ $len - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            if ($len\
    \ == 1) {\n                $ret = 1;\n            } else {\n                my\
    \ $prev_char = substr($txt, $len - 2, 1);\n                if ($prev_char !~ /[a-zA-Z]/)\
    \ {\n                    $ret = 1;\n                }\n            }\n       \
    \ }\n    }\n    return $ret;\n}", "    my $last_char = substr($txt, -1);\n   \
    \ if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $ret = '';\n    if ($txt =~ /\\w\\s*$/) {\n        $ret = 1;\n    }\n \
    \   return $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        my $last_char_index = length($txt) - 1;\n        my\
    \ $next_to_last_char = substr($txt, -2, 1);\n        if ($next_to_last_char =~\
    \ /[a-zA-Z]/) {\n            return '';\n        }\n        else {\n         \
    \   return 1;\n        }\n    }\n    else {\n        return '';\n    }\n}", " \
    \   my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n\
    \    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $len = length($txt);\n    my $last_char = substr($txt, $len\
    \ - 1, 1);\n    my $second_last_char = substr($txt, $len - 2, 1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $second_last_char =~ /\\s/) {\n        return 1;\n    }\n \
    \   return '';\n}", "    if ($txt =~ /\\w\\s$/) {\n        return \"\";\n    }\n\
    \    else {\n        return 1;\n    }\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return '';\n}", "    my $result = '';\n    if (length($txt) > 0) {\n\
    \        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $last_word = (split(/\\s+/, $txt))[-1];\n            if ($last_word\
    \ eq $last_char) {\n                $result = '';\n            } else {\n    \
    \            $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /\\w/) {\n \
    \       return '';\n    }\n    else {\n        return 1;\n    }\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $result = '';\n   \
    \ if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $ret = '';\n    if ($txt =~ /\\w\\s*$/) {\n        $ret = 1;\n    }\n  \
    \  return $ret;\n}", "    my $result = \"\";\n    if (length($txt) > 0) {\n  \
    \      my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $last_char_index = length($txt) - 1;\n            my $last_char_is_a_part_of_a_word\
    \ = 0;\n            for (my $i = $last_char_index - 1; $i >= 0; $i--) {\n    \
    \            my $char = substr($txt, $i, 1);\n                if ($char =~ /[a-zA-Z]/)\
    \ {\n                    $last_char_is_a_part_of_a_word = 1;\n               \
    \     last;\n                }\n                if ($char =~ /\\s/) {\n      \
    \              last;\n                }\n            }\n            if ($last_char_is_a_part_of_a_word\
    \ == 0) {\n                $result = 1;\n            }\n        }\n    }\n   \
    \ return $result;\n}", "    # your code goes here\n    if ($txt =~ /\\w\\s$/)\
    \ {\n        return \"\";\n    }\n    elsif ($txt =~ /\\w$/) {\n        return\
    \ 1;\n    }\n    else {\n        return \"\";\n    }\n}", "    my $ret = '';\n\
    \    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n \
    \       if ($txt =~ /\\s$last_char\\s/) {\n            return \"\";\n        }\n\
    \        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ( $last_char =~ /[a-zA-Z]/ ) {\n        return 1;\n    } else {\n\
    \        return '';\n    }\n}", "    my $last_char = substr($txt, -1);\n    my\
    \ $last_char_is_letter = $last_char =~ /[a-zA-Z]/;\n    my $last_char_is_space\
    \ = $last_char =~ /\\s/;\n    my $last_char_is_part_of_word = $last_char_is_letter\
    \ && !$last_char_is_space;\n    return $last_char_is_part_of_word ? \"\" : 1;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/\
    \ ) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n  \
    \      $result = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    my $result = \"\";\n    if ($txt =~\
    \ /\\w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    if ($txt =~ /\\w\\s$/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /\\w/ && $last_char !~ /\\s/) {\n        return 1;\n    }\n \
    \   return '';\n}", "    my $ret = '';\n    my $len = length($txt);\n    if ($len\
    \ > 0) {\n        my $last_char = substr($txt, $len - 1, 1);\n        if ($last_char\
    \ =~ /[a-zA-Z]/) {\n            $ret = 1;\n        }\n    }\n    return $ret;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $result = '';\n    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /\\w/ && $last_char !~\
    \ /\\s/) {\n        return 1;\n    }\n    return '';\n}", "    my $last_char =\
    \ substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $ret = '';\n    if ($txt =~ /\\w$/) {\n     \
    \   $ret = 1;\n    }\n    return $ret;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /\\w/ && $last_char !~ /\\s/) {\n        return 1;\n    }\n    return '';\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n      \
    \  return 1;\n    }\n    return \"\";\n}", "    my $result = '';\n    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    return \"\" if\
    \ $txt eq \"\";\n    my @words = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n\
    \    my $last_char = substr($last_word, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    return $last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/ ? 1 : '';\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n      \
    \  return 1;\n    }\n    return \"\";\n}", "    my $ret = '';\n    if ($txt =~\
    \ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", "    my $result =\
    \ \"\";\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n \
    \   }\n    return $result;\n}", "    my $result = '';\n    if ($txt =~ /\\w$/)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    my $ret = '';\n\
    \    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", "    if ($txt =~\
    \ /\\w$/) {\n        return \"\";\n    }\n    else {\n        return 1;\n    }\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return '';\n}", "    my @words = split(/\\\
    s+/, $txt);\n    my $last_word = $words[-1];\n    my $last_char = substr($last_word,\
    \ -1);\n    my $result = '';\n    if ($last_char =~ /[a-zA-Z]/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $result = \"\";\n    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    # Write your code here\n    my @words\
    \ = split(/ /, $txt);\n    my $last_word = $words[-1];\n    my $last_char = substr($last_word,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /[a-zA-Z]\\w+/){\n \
    \       return 1;\n    }\n    else{\n        return \"\";\n    }\n}", "    my\
    \ $ret = '';\n    if ($txt =~ /\\w\\s$/) {\n        $ret = 1;\n    }\n    return\
    \ $ret;\n}", "    my $last_char = substr $txt, -1;\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my $ret = \"\";\n    if ($txt =~ /[a-zA-Z]$/) {\n        $ret = 1;\n    }\n\
    \    return $ret;\n}", "    my $result = '';\n    if ($txt =~ /\\w$/) {\n    \
    \    $result = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    if ($txt =~ /\\w\\s*$/) {\n        return\
    \ \"\";\n    } else {\n        return 1;\n    }\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $ret = '';\n    if ($txt =~ /\\w$/) {\n\
    \        $ret = 1;\n    }\n    return $ret;\n}", "    my $result = '';\n    if\
    \ (length($txt) > 0) {\n        my $last_char = substr($txt, length($txt) - 1,\
    \ 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            my $last_word = substr($txt,\
    \ rindex($txt, ' ') + 1);\n            if ($last_word =~ /^[a-zA-Z]+$/) {\n  \
    \              $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"\";\n    if ($txt =~ /\\s\\w$/) {\n        $result = 1;\n\
    \    }\n    return $result;\n}", "    if ($txt =~ /\\w\\s$/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /\\w/ && $last_char !~ /\\s/) {\n        return 1;\n    }\n \
    \   return '';\n}", "    my $result = \"\";\n    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        $result = 1;\n    }\n   \
    \ return $result;\n}", "    if (length($txt) == 0) {\n        return \"\";\n \
    \   }\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n    }\n    return\
    \ '';\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return '';\n}", " \
    \   my @words = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n    my\
    \ $last_char = substr($last_word, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n\
    \        return 1;\n    }\n    return '';\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return '';\n}", "    my $result = '';\n    if (length($txt) >\
    \ 0) {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $last_char_index = length($txt) - 1;\n            my $last_char_is_a_part_of_a_word\
    \ = 0;\n            if ($last_char_index > 0) {\n                my $prev_char\
    \ = substr($txt, -2, 1);\n                if ($prev_char =~ /[a-zA-Z]/) {\n  \
    \                  $last_char_is_a_part_of_a_word = 1;\n                }\n  \
    \          }\n            if ($last_char_is_a_part_of_a_word == 0) {\n       \
    \         $result = 1;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $result = '';\n    if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n\
    \    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return '';\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_134_check_if_last_char_is_a_letter
language: pl
prompt: "# Create a function that returns 1 if the last character\n# of a given string\
  \ is an alphabetical character and is not\n# a part of a word, and  otherwise.\n\
  # Note: \"word\" is a group of characters separated by space.\n# Examples:\n# >>>\
  \ check_if_last_char_is_a_letter(\"apple pie\")\n# \"\"\n# >>> check_if_last_char_is_a_letter(\"\
  apple pi e\")\n# 1\n# >>> check_if_last_char_is_a_letter(\"apple pi e \")\n# \"\"\
  \n# >>> check_if_last_char_is_a_letter(\"\")\n# \"\"\nsub check_if_last_char_is_a_letter\
  \ {\n    my($txt) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_if_last_char_is_a_letter;\n\
  \        if(eq_deeply($candidate->(\"apple\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"apple pi e\"),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eeeee\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"A\"),1)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(\"Pumpkin pie \"),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Pumpkin pie 1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"eeeee e \"),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  apple pie\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"apple pi e \"),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $last_char = substr($txt, -1);\n    if ( $last_char =~ /[a-zA-Z]/\
    \ ) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    w$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    if (length($txt) > 0) {\n        my $last_char = substr($txt, -1);\n\
    \        if ($last_char =~ /[a-zA-Z]/) {\n            my $last_word = get_last_word($txt);\n\
    \            if (length($last_word) == 1) {\n                $result = 1;\n  \
    \          }\n        }\n    }\n    return $result;\n}", "    my $result = \"\"\
    ;\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    my $result = \"\";\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\
    \";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   my $result = \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $result = \"\";\n    if ($txt =~ /\\w\\s$/) {\n      \
    \  $result = 1;\n    }\n    return $result;\n}", "    my $result = \"\";\n   \
    \ if (length($txt) > 0) {\n        my $last_char = substr($txt, length($txt) -\
    \ 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            $result = 1;\n\
    \        }\n    }\n    return $result;\n}", "    if ($txt =~ /\\w\\s$/) {\n  \
    \      return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /[a-zA-Z]\\\
    s*$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    return $txt\
    \ =~ /\\w\\s$/ ? 1 : \"\";\n}", "    my $result = \"\";\n    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    my $last_char_is_a_letter = $last_char =~ /[a-zA-Z]/;\n    my $last_char_is_not_a_part_of_a_word\
    \ = $txt =~ /[a-zA-Z]\\s$/;\n    my $result = $last_char_is_a_letter && $last_char_is_not_a_part_of_a_word;\n\
    \    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /\\w/ && $last_char !~ /\\s/) {\n\
    \        return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n   \
    \ if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $ret = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $ret = 1;\n    }\n \
    \   return $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $ret = \"\";\n  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        $ret = 1;\n    }\n    return $ret;\n}", "    my $result\
    \ = \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    my $last_char_is_a_letter = $last_char =~ /[a-zA-Z]/;\n\
    \    my $last_char_is_a_word = $last_char =~ /\\w/;\n    if ($last_char_is_a_letter\
    \ && !$last_char_is_a_word) {\n        return 1;\n    }\n    return \"\";\n}",
  "    my $last = substr($txt, -1);\n    if ($last =~ /\\w/) {\n        return \"\"\
    ;\n    }\n    else {\n        return 1;\n    }\n}", "    if ($txt =~ /\\w\\s$/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n\
    \    if ($txt =~ /\\s[a-zA-Z]$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = 0;\n\
    \    if ($last_char =~ /[a-zA-Z]/) {\n        $last_char_is_a_letter = 1;\n  \
    \  }\n    return $last_char_is_a_letter;\n}", "    my $result = \"\";\n    if\
    \ (length($txt) > 0) {\n        my $last_char = substr($txt, -1);\n        if\
    \ ($last_char =~ /[a-zA-Z]/) {\n            my $last_word = substr($txt, rindex($txt,\
    \ \" \") + 1);\n            if ($last_word =~ /[a-zA-Z]/) {\n                $result\
    \ = 1;\n            }\n        }\n    }\n    return $result;\n}", "    return\
    \ \"\" if $txt eq \"\";\n    my @words = split / /, $txt;\n    my $last_word =\
    \ $words[-1];\n    my $last_char = substr($last_word, -1);\n    return \"\" if\
    \ $last_char =~ /\\W/;\n    return 1;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $result\
    \ = \"\";\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $result = \"\";\n    if ($txt =~ /[a-zA-Z]$/) {\n    \
    \    $result = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\"\
    ;\n}", "    my $result = \"\";\n    if (length($txt) > 0) {\n        my $last_char\
    \ = substr($txt, length($txt) - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $prev_char = substr($txt, length($txt) - 2, 1);\n        \
    \    if ($prev_char =~ /\\s/) {\n                $result = 1;\n            }\n\
    \        }\n    }\n    return $result;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    w$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    if ($txt =~ /\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\\
    w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\s+\\w+\\", "    my $last = substr($txt,\
    \ -1);\n    return $last =~ /[a-zA-Z]/ && $last !~ /\\w/ ? 1 : \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n  \
    \      return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    } else {\n        return\
    \ \"\";\n    }\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter\
    \ = 0;\n    if ($last_char =~ /[a-zA-Z]/) {\n        $last_char_is_a_letter =\
    \ 1;\n    }\n    return $last_char_is_a_letter;\n}", "    my $result = \"\";\n\
    \    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\
    \";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /\\w/) {\n        return \"\";\n    }\n    else\
    \ {\n        return 1;\n    }\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    } else {\n        return\
    \ \"\";\n    }\n}", "    my $last_char = substr($txt, -1);\n    return $last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/ ? 1 : \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    my $result = \"\";\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /\\w/) {\n        return \"\";\n\
    \    }\n    return 1;\n}", "    my $last_char = substr($txt, -1);\n    if ( $last_char\
    \ =~ /[a-zA-Z]/ ) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    s+[a-zA-Z]$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n      \
    \  return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt\
    \ =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[A-Za-z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $result\
    \ = \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = $last_char\
    \ =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word = $txt =~ /\\w$/;\n  \
    \  return $last_char_is_a_letter && !$last_char_is_a_part_of_a_word;\n}", "  \
    \  my $result = \"\";\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n\
    \    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /\\\
    w/) {\n        return \"\";\n    } else {\n        return 1;\n    }\n}", "   \
    \ my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $ret =\
    \ \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        $ret = 1;\n    }\n    return $ret;\n}", " \
    \   my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n \
    \       return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if\
    \ (length($txt) > 0) {\n        my $last_char = substr($txt, -1);\n        if\
    \ ($last_char =~ /[a-zA-Z]/) {\n            my $last_word = substr($txt, rindex($txt,\
    \ \" \") + 1);\n            if ($last_word =~ /$last_char$/) {\n             \
    \   $result = \"\";\n            } else {\n                $result = 1;\n    \
    \        }\n        }\n    }\n    return $result;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ( $last_char =~ /[a-zA-Z]/ ) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = $last_char\
    \ =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word = $txt =~ /\\w$/;\n  \
    \  if ($last_char_is_a_letter && !$last_char_is_a_part_of_a_word) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if (length($txt)\
    \ > 0) {\n        my $last_char = substr($txt, length($txt) - 1, 1);\n       \
    \ if ($last_char =~ /[a-zA-Z]/) {\n            if ($txt =~ /\\s$last_char\\s/)\
    \ {\n                $result = 1;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = \"\";\n    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    my $ret = \"\";\n    my $len = length($txt);\n\
    \    if($len > 0) {\n        my $last_char = substr($txt, $len - 1, 1);\n    \
    \    if($last_char =~ /[a-zA-Z]/) {\n            my $last_word = substr($txt,\
    \ $len - 2, 2);\n            if($last_word =~ /\\s[a-zA-Z]/) {\n             \
    \   $ret = 1;\n            }\n        }\n    }\n    return $ret;\n}", "    my\
    \ $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n      \
    \  return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ( $last_char =~ /[a-zA-Z]/ ) {\n        return 1;\n    }\n    return \"\
    \";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $ret = \"\";\n  \
    \  my $len = length($txt);\n    if ($len > 0) {\n        my $last_char = substr($txt,\
    \ $len - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            my $prev_char\
    \ = substr($txt, $len - 2, 1);\n            if ($prev_char =~ /\\s/) {\n     \
    \           $ret = 1;\n            }\n        }\n    }\n    return $ret;\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n  \
    \      return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char =~ /\\s/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\"\
    ;\n}", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter =\
    \ 0;\n    if ($last_char =~ /[a-zA-Z]/) {\n        $last_char_is_a_letter = 1;\n\
    \    }\n    return $last_char_is_a_letter;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\\
    w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   my $result = \"\";\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n\
    \    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\w$/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $ret = \"\";\n    my $len = length($txt);\n\
    \    if ($len > 0) {\n        my $last_char = substr($txt, $len - 1, 1);\n   \
    \     if ($last_char =~ /[a-zA-Z]/) {\n            $ret = 1;\n        }\n    }\n\
    \    return $ret;\n}", "    my $result = \"\";\n    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $result = \"\";\n    if ($txt\
    \ =~ /\\s[a-zA-Z]$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\w\\\
    s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    if (length($txt) > 0) {\n        my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            my $last_char_index\
    \ = length($txt) - 1;\n            my $previous_char_index = $last_char_index\
    \ - 1;\n            my $previous_char = substr($txt, $previous_char_index, 1);\n\
    \            if ($previous_char !~ /[a-zA-Z]/) {\n                $result = 1;\n\
    \            }\n        }\n    }\n    return $result;\n}", "    my $result = \"\
    \";\n    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $ret = \"\";\n    if ($txt =~ /\\w$/) {\n\
    \        $ret = 1;\n    }\n    return $ret;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    my $last_char_is_a_letter = $last_char =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word\
    \ = $txt =~ /\\s$last_char\\s/;\n    my $result = \"\";\n    if ($last_char_is_a_letter\
    \ && !$last_char_is_a_part_of_a_word) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\
    \";\n}", "    my $ret = \"\";\n    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $ret = 1;\n    }\n    return\
    \ $ret;\n}", "    my $result = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $result = \"\";\n    if (length($txt) >\
    \ 0) {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my @words = split(/\\s+/, $txt);\n            my $last_word =\
    \ $words[-1];\n            if ($last_word !~ /$last_char$/) {\n              \
    \  $result = 1;\n            }\n        }\n    }\n    return $result;\n}", " \
    \   my $ret = \"\";\n    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n   \
    \ return $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    } else {\n        return \"\";\n  \
    \  }\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   return \"\" if $txt eq \"\";\n    my $last_char = substr($txt, -1);\n    return\
    \ \"\" if $last_char =~ /\\s/;\n    return 1;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    return $last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/ ? 1 : \"\"\
    ;\n}", "    my $last_char = substr($txt, -1);\n    my $last_char_is_letter = 0;\n\
    \    if ($last_char =~ /[a-zA-Z]/) {\n        $last_char_is_letter = 1;\n    }\n\
    \    return $last_char_is_letter;\n}", "    my $last_char = substr($txt, -1);\n\
    \    my $is_letter = $last_char =~ /[a-zA-Z]/;\n    my $is_space = $last_char\
    \ =~ /\\s/;\n    if ($is_letter && $is_space) {\n        return 1;\n    }\n  \
    \  return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   my $result = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n \
    \   }\n    return $result;\n}", "    my $ret = \"\";\n    if ($txt =~ /\\w$/)\
    \ {\n        $ret = 1;\n    }\n    return $ret;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $ret = \"\";\n    if (length($txt) > 0)\
    \ {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~ /[a-zA-Z]/)\
    \ {\n            my $last_word = substr($txt, rindex($txt, \" \") + 1);\n    \
    \        if ($last_word =~ /^[a-zA-Z]+$/) {\n                $ret = 1;\n     \
    \       }\n        }\n    }\n    return $ret;\n}", "    my $result = \"\";\n \
    \   if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $len = length($txt);\n    my $last_char = substr($txt, $len - 1, 1);\n \
    \   if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /[a-zA-Z]$/)\
    \ {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result = \"\
    \";\n    if (length($txt) > 0) {\n        my $last_char = substr($txt, length($txt)\
    \ - 1, 1);\n        if ($last_char =~ /[a-zA-Z]/) {\n            my $last_word\
    \ = substr($txt, rindex($txt, \" \") + 1);\n            if ($last_word =~ /[a-zA-Z]/)\
    \ {\n                $result = \"\";\n            } else {\n                $result\
    \ = 1;\n            }\n        }\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n\
    \    if (length($txt) > 0) {\n        my $last_char = substr($txt, -1);\n    \
    \    if ($last_char =~ /[a-zA-Z]/) {\n            my $last_word = get_last_word($txt);\n\
    \            if ($last_word ne $last_char) {\n                $result = 1;\n \
    \           }\n        }\n    }\n    return $result;\n}", "    my $last_char =\
    \ substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/ and $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $result = \"\";\n    if ($txt =~ /\\w\\\
    s$/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $result = \"\";\n    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/) {\n        $result = 1;\n    }\n    return\
    \ $result;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /\\w/ && $last_char !~ /\\s/) {\n        return 1;\n    }\n    return \"\";\n\
    }", "    if ($txt =~ /\\w$/) {\n        return \"\";\n    } else {\n        return\
    \ 1;\n    }\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~\
    \ /\\w/ && $last_char !~ /\\s/) {\n        return 1;\n    }\n    return \"\";\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $ret =\
    \ \"\";\n    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return $ret;\n\
    }", "    my $result = \"\";\n    if ($txt =~ /\\s*\\w+\\s*$/) {\n        $result\
    \ = 1;\n    }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $ret = \"\";\n    if ($txt =~ /\\w$/) {\n        $ret = 1;\n\
    \    }\n    return $ret;\n}", "    my $last_char = substr($txt, -1);\n    if (\
    \ $last_char =~ /[a-zA-Z]/ ) {\n        my $prev_char = substr($txt, -2, 1);\n\
    \        if ( $prev_char =~ /\\s/ ) {\n            return 1;\n        }\n    }\n\
    \    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $ret = \"\";\n    my $len = length($txt);\n    if ($len >\
    \ 0) {\n        my $last_char = substr($txt, $len - 1, 1);\n        if ($last_char\
    \ =~ /[a-zA-Z]/) {\n            my $prev_char = substr($txt, $len - 2, 1);\n \
    \           if ($prev_char =~ /\\s/) {\n                $ret = 1;\n          \
    \  }\n        }\n    }\n    return $ret;\n}", "    my $result = \"\";\n    if\
    \ ($txt =~ /\\w\\s$/) {\n        $result = 1;\n    }\n    return $result;\n}",
  "    my $ret = \"\";\n    if ($txt =~ /\\w$/) {\n        $ret = 1;\n    }\n    return\
    \ $ret;\n}", "    my $last_char = substr($txt, -1);\n    my $result = \"\";\n\
    \    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        $result =\
    \ 1;\n    }\n    return $result;\n}", "    return \"\" if $txt eq \"\";\n    my\
    \ @words = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n    return \"\
    \" if $last_word =~ /[^a-zA-Z]$/;\n    return 1;\n}", "    my $result = \"\";\n\
    \    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = 0;\n   \
    \ if ($last_char =~ /[a-zA-Z]/) {\n        $last_char_is_a_letter = 1;\n    }\n\
    \    return $last_char_is_a_letter;\n}", "    my $last_char = substr($txt, -1);\n\
    \    my $last_char_is_a_letter = 0;\n    if ($last_char =~ /[a-zA-Z]/) {\n   \
    \     $last_char_is_a_letter = 1;\n    }\n    return $last_char_is_a_letter;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /\\w/) {\n \
    \       return \"\";\n    }\n    else {\n        return 1;\n    }\n}", "    my\
    \ $last_char = substr($txt, -1);\n    my $last_char_is_a_letter = ($last_char\
    \ =~ /[a-zA-Z]/);\n    my $last_char_is_a_part_of_a_word = ($txt =~ /[a-zA-Z]\\\
    s$/);\n    return ($last_char_is_a_letter && !$last_char_is_a_part_of_a_word);\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my @words = split(/\\s+/, $txt);\n    my $last_word = $words[-1];\n    my $last_char\
    \ = substr($last_word, -1);\n    if ($last_char =~ /[a-zA-Z]/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n\
    \    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $ret\
    \ = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $ret = 1;\n    }\n    return\
    \ $ret;\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/\
    \ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", " \
    \   my $result = \"\";\n    if ($txt =~ /\\w\\s*$/) {\n        $result = 1;\n\
    \    }\n    return $result;\n}", "    my $result = \"\";\n    if (length($txt)\
    \ > 0) {\n        my $last_char = substr($txt, -1);\n        if ($last_char =~\
    \ /[a-zA-Z]/) {\n            my $last_word = substr($txt, rindex($txt, \" \")\
    \ + 1);\n            if (length($last_word) == 1) {\n                $result =\
    \ 1;\n            }\n        }\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  return $last_char =~ /[a-zA-Z]/ ? 1 : \"\";\n}", "    my $result = \"\";\n\
    \    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        $result = 1;\n    }\n    return $result;\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /\\w/ && $last_char !~ /\\s/) {\n\
    \        return 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $ret = \"\";\n    if ($txt =~ /\\w$/)\
    \ {\n        $ret = 1;\n    }\n    return $ret;\n}", "    my $last_char = substr($txt,\
    \ -1);\n    if ($last_char =~ /[a-zA-Z]/ and $last_char !~ /\\w/) {\n        return\
    \ 1;\n    }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n  \
    \  my $last_char_is_a_letter = 0;\n    if ($last_char =~ /[a-zA-Z]/) {\n     \
    \   $last_char_is_a_letter = 1;\n    }\n    return $last_char_is_a_letter;\n}",
  "    my $result = \"\";\n    if ($txt =~ /\\w\\s$/) {\n        $result = 1;\n  \
    \  }\n    return $result;\n}", "    my $last_char = substr($txt, -1);\n    if\
    \ ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n   \
    \ }\n    return \"\";\n}", "    my $last_char = substr($txt, -1);\n    if ($last_char\
    \ =~ /[a-zA-Z]/ && $last_char !~ /\\w/) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "    my $last_char = substr($txt, -1);\n    my $last_char_is_a_letter\
    \ = $last_char =~ /[a-zA-Z]/;\n    my $last_char_is_a_part_of_a_word = $txt =~\
    \ /\\s$last_char/;\n    return $last_char_is_a_letter && !$last_char_is_a_part_of_a_word;\n\
    }", "    if ($txt =~ /\\w\\s$/) {\n        return 1;\n    }\n    return \"\";\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ and\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /\\w/ && $last_char\
    \ !~ /\\s/) {\n        return 1;\n    }\n    return \"\";\n}", "    my $last_char\
    \ = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char !~ /\\w/)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "    my $result = \"\";\n\
    \    if ($txt =~ /\\w$/) {\n        $result = 1;\n    }\n    return $result;\n\
    }", "    my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ &&\
    \ $last_char !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}", "  \
    \  my $last_char = substr($txt, -1);\n    if ($last_char =~ /[a-zA-Z]/ && $last_char\
    \ !~ /\\w/) {\n        return 1;\n    }\n    return \"\";\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

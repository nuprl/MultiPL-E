name: HumanEval_90_next_smallest
language: pl
prompt: "# You are given an array of integers.\n# Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n# Return undef if there is\
  \ no such element.\n# >>> next_smallest([1, 2, 3, 4, 5])\n# 2\n# >>> next_smallest([5,\
  \ 1, 4, 3, 2])\n# 2\n# >>> next_smallest([])\n# undef\n# >>> next_smallest([1, 1])\n\
  # undef\nsub next_smallest {\n    my($lst) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&next_smallest;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),2)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5, 1, 4,\
  \ 3, 2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1]),undef)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 1, 1, 1, 0]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, 1]),undef)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([-35, 34, 12, -45]),-35))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $smallest = $lst->[0];\n    my $second_smallest = undef;\n    foreach my\
    \ $i (@$lst) {\n        if ($i < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $i;\n        } elsif ($i < $second_smallest\
    \ || !defined($second_smallest)) {\n            $second_smallest = $i;\n     \
    \   }\n    }\n    return $second_smallest;\n}", "    my $min = undef;\n    my\
    \ $next_min = undef;\n    for my $e (@$lst) {\n        if (!defined($min) || $e\
    \ < $min) {\n            $next_min = $min;\n            $min = $e;\n        }\
    \ elsif (!defined($next_min) || $e < $next_min) {\n            $next_min = $e;\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (not defined $next_min or $lst->[$i] < $next_min) {\n            $next_min =\
    \ $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        my $el = $lst->[$i];\n\
    \        if ($el < $min) {\n            $next_min = $min;\n            $min =\
    \ $el;\n        } elsif (not defined $next_min or $el < $next_min) {\n       \
    \     $next_min = $el;\n        }\n    }\n    return $next_min;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        my\
    \ $e = $lst->[$i];\n        if ($e < $min) {\n            $min2 = $min;\n    \
    \        $min = $e;\n        } elsif ($e < $min2 || !defined $min2) {\n      \
    \      $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if (!defined($min)\
    \ || $i < $min) {\n            $min2 = $min;\n            $min = $i;\n       \
    \ } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n       \
    \ }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (not defined $min2\
    \ or $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    foreach\
    \ my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n            $min2\
    \ = $min;\n            $min = $e;\n        } elsif (!defined($min2) || $e < $min2)\
    \ {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n        if(!defined($min)\
    \ || $i < $min) {\n            $next_min = $min;\n            $min = $i;\n   \
    \     } elsif(!defined($next_min) || $i < $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        } elsif (defined($min2)\
    \ && $i < $min2) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        my $x = $lst->[$i];\n        if ($x < $min) {\n            $min2\
    \ = $min;\n            $min = $x;\n        } elsif (!defined($min2) || $x < $min2)\
    \ {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = undef;\n    my $min2 = undef;\n    for my $i (@$lst) {\n        if (!defined($min)\
    \ || $i < $min) {\n            $min2 = $min;\n            $min = $i;\n       \
    \ } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n       \
    \ }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n\
    \    foreach my $x (@$lst) {\n        if(!defined($min) || $x < $min) {\n    \
    \        $min2 = $min;\n            $min = $x;\n        } elsif(!defined($min2)\
    \ || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        }\n        elsif (not defined $min2 or $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $min2 = undef;\n    foreach my $x (@$lst) {\n    \
    \    if (!defined($min) || $x < $min) {\n            $min2 = $min;\n         \
    \   $min = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n          \
    \  $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for (my $i = 1; $i < scalar(@$lst); $i++) {\n        if ($lst->[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n     \
    \   } elsif ($lst->[$i] < $min2 || !defined($min2)) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif (!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $smallest = undef;\n    my $next_smallest = undef;\n    foreach my $elem\
    \ (@$lst) {\n        if (!defined($smallest) || $elem < $smallest) {\n       \
    \     $next_smallest = $smallest;\n            $smallest = $elem;\n        } elsif\
    \ (!defined($next_smallest) || $elem < $next_smallest) {\n            $next_smallest\
    \ = $elem;\n        }\n    }\n    return $next_smallest;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    foreach my $x (@$lst) {\n        if (!defined($min)\
    \ || $x < $min) {\n            $next_min = $min;\n            $min = $x;\n   \
    \     } elsif (!defined($next_min) || $x < $next_min) {\n            $next_min\
    \ = $x;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif (!defined($next_min) || $lst->[$i] < $next_min) {\n          \
    \  $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "   \
    \ my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $next_min = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined $next_min)\
    \ {\n            $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $smallest = undef;\n    my $next_smallest = undef;\n    foreach my\
    \ $elem (@$lst) {\n        if (!defined($smallest) || $elem < $smallest) {\n \
    \           $next_smallest = $smallest;\n            $smallest = $elem;\n    \
    \    } elsif (!defined($next_smallest) || $elem < $next_smallest) {\n        \
    \    $next_smallest = $elem;\n        }\n    }\n    return $next_smallest;\n}",
  "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif (!defined($next_min) || $lst->[$i] <\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for\
    \ my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val < $min)\
    \ {\n            $next_min = $min;\n            $min = $val;\n        } elsif\
    \ ($val < $next_min || !defined $next_min) {\n            $next_min = $val;\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    for my $i (@$lst) {\n        if (not defined $min or $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif (not\
    \ defined $next_min or $i < $next_min) {\n            $next_min = $i;\n      \
    \  }\n    }\n    return $next_min;\n}", "    my $smallest = $lst->[0];\n    my\
    \ $next_smallest = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $smallest) {\n            $next_smallest = $smallest;\n            $smallest\
    \ = $lst->[$i];\n        } elsif (!defined($next_smallest) || $lst->[$i] < $next_smallest)\
    \ {\n            $next_smallest = $lst->[$i];\n        }\n    }\n    return $next_smallest;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $i (@$lst) {\n        if(!defined($min) || $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif(!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $next = undef;\n    for my $x\
    \ (@$lst) {\n        if (!defined($min) || $x < $min) {\n            $next = $min;\n\
    \            $min = $x;\n        } elsif (!defined($next) || $x < $next) {\n \
    \           $next = $x;\n        }\n    }\n    return $next;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n     \
    \   if ($lst->[$i] < $min) {\n            $next_min = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min) {\n            $next_min\
    \ = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    foreach my $x (@$lst) {\n        if(!defined($min)\
    \ || $x < $min) {\n            $min2 = $min;\n            $min = $x;\n       \
    \ } elsif(!defined($min2) || $x < $min2) {\n            $min2 = $x;\n        }\n\
    \    }\n    return $min2;\n}", "    my $min = undef;\n    my $nmin = undef;\n\
    \    foreach my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n   \
    \         $nmin = $min;\n            $min = $e;\n        } elsif (!defined($nmin)\
    \ || $e < $nmin) {\n            $nmin = $e;\n        }\n    }\n    return $nmin;\n\
    }", "    my $min = $lst->[0];\n    my $nmin = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $nmin = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $nmin || !defined $nmin) {\n\
    \            $nmin = $lst->[$i];\n        }\n    }\n    return $nmin;\n}", " \
    \   my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min\
    \ || !defined $next_min) {\n            $next_min = $lst->[$i];\n        }\n \
    \   }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2\
    \ || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n  \
    \  return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (not defined $min2 or $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n\
    \        if(!defined($min) || $i < $min) {\n            $next_min = $min;\n  \
    \          $min = $i;\n        } elsif(!defined($next_min) || $i < $next_min)\
    \ {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $sec = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $sec = $min;\n            $min =\
    \ $lst->[$i];\n        } elsif ($lst->[$i] < $sec || !defined $sec) {\n      \
    \      $sec = $lst->[$i];\n        }\n    }\n    return $sec;\n}", "    my $min\
    \ = min($lst);\n    my $min2 = undef;\n    for my $i (@$lst) {\n        if ($i\
    \ != $min) {\n            if (!defined($min2) || $i < $min2) {\n             \
    \   $min2 = $i;\n            }\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i]\
    \ < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n \
    \   }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val\
    \ < $min) {\n            $next_min = $min;\n            $min = $val;\n       \
    \ } elsif ($val < $next_min || !defined $next_min) {\n            $next_min =\
    \ $val;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    for my $i (@$lst) {\n        if (!defined($min) ||\
    \ $i < $min) {\n            $min2 = $min;\n            $min = $i;\n        } elsif\
    \ (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2\
    \ || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n  \
    \  return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        my $e = $lst->[$i];\n        if ($e < $min) {\n            $min2\
    \ = $min;\n            $min = $e;\n        } elsif (!defined($min2) || $e < $min2)\
    \ {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 =\
    \ $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        }\n    \
    \    elsif ($lst->[$i] < $next_min || !defined $next_min) {\n            $next_min\
    \ = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        } elsif ($i < $min2\
    \ || !defined($min2)) {\n            $min2 = $i;\n        }\n    }\n    return\
    \ $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my\
    \ $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val < $min) {\n\
    \            $next_min = $min;\n            $min = $val;\n        } elsif (!defined($next_min)\
    \ || $val < $next_min) {\n            $next_min = $val;\n        }\n    }\n  \
    \  return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n \
    \   for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach\
    \ my $i (@$lst) {\n        if ($i < $min) {\n            $min2 = $min;\n     \
    \       $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n      \
    \      $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    for my $i (@$lst) {\n        if (not defined $min or $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif (not\
    \ defined $next_min or $i < $next_min) {\n            $next_min = $i;\n      \
    \  }\n    }\n    return $next_min;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    for my $i (@$lst) {\n        if(!defined($min) || $i < $min) {\n\
    \            $next_min = $min;\n            $min = $i;\n        } elsif(!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = min(@$lst);\n    my $min2 = undef;\n    for my $i (@$lst) {\n   \
    \     if ($i > $min) {\n            if (!defined($min2) || $i < $min2) {\n   \
    \             $min2 = $i;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $next_min = undef;\n    foreach my $e (@$lst) {\n\
    \        if (!defined($min) || $e < $min) {\n            $next_min = $min;\n \
    \           $min = $e;\n        } elsif (!defined($next_min) || $e < $next_min)\
    \ {\n            $next_min = $e;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = undef;\n    my $min2 = undef;\n    for my $i (@$lst) {\n        if\
    \ (not defined $min) {\n            $min = $i;\n        } elsif (not defined $min2)\
    \ {\n            if ($i < $min) {\n                $min2 = $min;\n           \
    \     $min = $i;\n            } else {\n                $min2 = $i;\n        \
    \    }\n        } else {\n            if ($i < $min) {\n                $min2\
    \ = $min;\n                $min = $i;\n            } elsif ($i < $min2) {\n  \
    \              $min2 = $i;\n            }\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n\
    \        if (!defined($min) || $e < $min) {\n            $min2 = $min;\n     \
    \       $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n      \
    \      $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        my $e = $lst->[$i];\n\
    \        if ($e < $min) {\n            $min2 = $min;\n            $min = $e;\n\
    \        } elsif (!defined($min2) || $e < $min2) {\n            $min2 = $e;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        }\n        elsif\
    \ (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $e (@$lst) {\n        if (!defined($min) || $e < $min)\
    \ {\n            $next_min = $min;\n            $min = $e;\n        } elsif (!defined($next_min)\
    \ || $e < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($next_min)\
    \ || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n        }\n\
    \    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif (not defined $min2 or $i < $min2) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        my $e = $lst->[$i];\n       \
    \ if ($e < $min) {\n            $min2 = $min;\n            $min = $e;\n      \
    \  } elsif ($e < $min2 || !defined $min2) {\n            $min2 = $e;\n       \
    \ }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n\
    \    for my $i (@$lst) {\n        if (not defined $min) {\n            $min =\
    \ $i;\n        } elsif (not defined $min2) {\n            if ($i < $min) {\n \
    \               $min2 = $min;\n                $min = $i;\n            } elsif\
    \ ($i > $min) {\n                $min2 = $i;\n            }\n        } else {\n\
    \            if ($i < $min) {\n                $min2 = $min;\n               \
    \ $min = $i;\n            } elsif ($i > $min and $i < $min2) {\n             \
    \   $min2 = $i;\n            }\n        }\n    }\n    return $min2;\n}", "   \
    \ my @lst = @$lst;\n    my $min = $lst[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#lst) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst[$i];\n        } elsif ($lst[$i] < $min2 || !defined($min2))\
    \ {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $sec\
    \ = undef;\n    for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n     \
    \   if ($val < $min) {\n            $sec = $min;\n            $min = $val;\n \
    \       } elsif ($val > $min && (!defined($sec) || $val < $sec)) {\n         \
    \   $sec = $val;\n        }\n    }\n    return $sec;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif ($lst->[$i] < $next_min || !defined $next_min) {\n           \
    \ $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        }\n        elsif (!defined($min2) || $lst->[$i] < $min2) {\n        \
    \    $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $nmin = undef;\n    foreach my $i (@$lst) {\n        if\
    \ ($i < $min) {\n            $nmin = $min;\n            $min = $i;\n        }\
    \ elsif ($i > $min && (!defined($nmin) || $i < $nmin)) {\n            $nmin =\
    \ $i;\n        }\n    }\n    return $nmin;\n}", "    my $min = $lst->[0];\n  \
    \  my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif (!defined($next_min) || $lst->[$i] < $next_min) {\n          \
    \  $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n  \
    \          $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        }\n        elsif ($lst->[$i] < $min2 || !defined $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n  \
    \          $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = undef;\n    my $sec_min = undef;\n    foreach my $i (@$lst) {\n  \
    \      if (!defined($min) || $i < $min) {\n            $sec_min = $min;\n    \
    \        $min = $i;\n        } elsif (!defined($sec_min) || $i < $sec_min) {\n\
    \            $sec_min = $i;\n        }\n    }\n    return $sec_min;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n    \
    \    if (!defined($min) || $i < $min) {\n            $next_min = $min;\n     \
    \       $min = $i;\n        } elsif (!defined($next_min) || $i < $next_min) {\n\
    \            $next_min = $i;\n        }\n    }\n    return $next_min;\n}", " \
    \   my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        my $v = $lst->[$i];\n        if ($v < $min) {\n            $min2 = $min;\n\
    \            $min = $v;\n        } elsif (!defined($min2) || $v < $min2) {\n \
    \           $min2 = $v;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if\
    \ ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n        }\n\
    \        elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n  \
    \      }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    foreach my $i (@$lst) {\n        if ($i < $min) {\n            $next_min\
    \ = $min;\n            $min = $i;\n        } elsif ($i < $next_min || !defined($next_min))\
    \ {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        }\n        elsif (!defined($next_min) || $lst->[$i]\
    \ < $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $min2 = undef;\n    for my $i\
    \ (@$lst) {\n        if (!defined($min) || $i < $min) {\n            $min2 = $min;\n\
    \            $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n \
    \           $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = undef;\n    my $next_min = undef;\n    for my $item (@$lst) {\n        if\
    \ (defined $min) {\n            if ($item < $min) {\n                $next_min\
    \ = $min;\n                $min = $item;\n            } elsif (!defined $next_min\
    \ || $item < $next_min) {\n                $next_min = $item;\n            }\n\
    \        } else {\n            $min = $item;\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n\
    \        if (!defined($min) || $i < $min) {\n            $min2 = $min;\n     \
    \       $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n      \
    \      $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif ($i\
    \ < $next_min || !defined($next_min)) {\n            $next_min = $i;\n       \
    \ }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n          \
    \  $next_min = $min;\n            $min = $i;\n        } elsif ($i < $next_min)\
    \ {\n            $next_min = $i;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        my $x = $lst->[$i];\n        if ($x < $min) {\n            $min2 = $min;\n\
    \            $min = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n \
    \           $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if\
    \ ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    for my $x (@$lst) {\n        if (!defined($min) || $x < $min)\
    \ {\n            $min2 = $min;\n            $min = $x;\n        } elsif (!defined($min2)\
    \ || $x < $min2) {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst)\
    \ {\n        if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n\
    \        } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i]\
    \ < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n        }\n \
    \   }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    foreach my $i (@$lst) {\n        if ($i < $min) {\n            $min2 = $min;\n\
    \            $min = $i;\n        } elsif ($i > $min and (!defined($min2) or $i\
    \ < $min2)) {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n \
    \           $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "  \
    \  my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        my $e = $lst->[$i];\n        if ($e < $min) {\n            $min2 = $min;\n\
    \            $min = $e;\n        } elsif ($e < $min2 || !defined $min2) {\n  \
    \          $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    foreach my $i (@$lst) {\n     \
    \   if ($i < $min) {\n            $next_min = $min;\n            $min = $i;\n\
    \        }\n        elsif ($i < $next_min || !defined($next_min)) {\n        \
    \    $next_min = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if\
    \ ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (not defined $min2 or $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = undef;\n    my $next = undef;\n    foreach\
    \ my $x (@$lst) {\n        if (!defined($min) || $x < $min) {\n            $next\
    \ = $min;\n            $min = $x;\n        } elsif (!defined($next) || $x < $next)\
    \ {\n            $next = $x;\n        }\n    }\n    return $next;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    my $e = $lst->[$i];\n        if ($e < $min) {\n            $min2 = $min;\n\
    \            $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n \
    \           $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = min($lst);\n    my $min2 = undef;\n    for my $x (@$lst) {\n        if ($x\
    \ > $min) {\n            if (!defined($min2) || $x < $min2) {\n              \
    \  $min2 = $x;\n            }\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (not defined $min2 or $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = min($lst);\n    my $min2\
    \ = undef;\n    for my $i (@$lst) {\n        if ($i > $min) {\n            if\
    \ (!defined($min2) || $i < $min2) {\n                $min2 = $i;\n           \
    \ }\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $min2\
    \ = undef;\n    foreach my $x (@$lst) {\n        if (defined($min)) {\n      \
    \      if ($x < $min) {\n                $min2 = $min;\n                $min =\
    \ $x;\n            } elsif ($x < $min2 || !defined($min2)) {\n               \
    \ $min2 = $x;\n            }\n        } else {\n            $min = $x;\n     \
    \   }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 =\
    \ undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n    \
    \        $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $next = undef;\n   \
    \ for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next\
    \ || !defined $next) {\n            $next = $lst->[$i];\n        }\n    }\n  \
    \  return $next;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for\
    \ my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined\
    \ $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    foreach my $x (@$lst) {\n\
    \        if (!defined($min) || $x < $min) {\n            $min2 = $min;\n     \
    \       $min = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n      \
    \      $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       } elsif ($lst->[$i] < $next_min || !defined $next_min) {\n           \
    \ $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = undef;\n    my $sec = undef;\n    for my $i (@$lst) {\n        if (not\
    \ defined $min or $i < $min) {\n            $sec = $min;\n            $min = $i;\n\
    \        } elsif (not defined $sec or $i < $sec) {\n            $sec = $i;\n \
    \       }\n    }\n    return $sec;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    for my $i (@$lst) {\n        if (!defined($min) || $i < $min)\
    \ {\n            $next_min = $min;\n            $min = $i;\n        } elsif (!defined($next_min)\
    \ || $i < $next_min) {\n            $next_min = $i;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for(my\
    \ $i = 1; $i < @$lst; $i++) {\n        if($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        }\n        elsif(!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    for\
    \ my $i (@$lst) {\n        if (!defined($min) || $i < $min) {\n            $min2\
    \ = $min;\n            $min = $i;\n        } elsif (!defined($min2) || $i < $min2)\
    \ {\n            $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    foreach my $x (@$lst) {\n        if (!defined($min)\
    \ || $x < $min) {\n            $min2 = $min;\n            $min = $x;\n       \
    \ } elsif (!defined($min2) || $x < $min2) {\n            $min2 = $x;\n       \
    \ }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min = undef;\n\
    \    foreach my $e (@$lst) {\n        if (!defined($min) || $e < $min) {\n   \
    \         $next_min = $min;\n            $min = $e;\n        } elsif (!defined($next_min)\
    \ || $e < $next_min) {\n            $next_min = $e;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = undef;\n    my $min2 = undef;\n    foreach my\
    \ $x (@$lst) {\n        if (!defined($min) || $x < $min) {\n            $min2\
    \ = $min;\n            $min = $x;\n        } elsif (!defined($min2) || $x < $min2)\
    \ {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n    \
    \    if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n   \
    \     } elsif (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n   \
    \     }\n    }\n    return $min2;\n}", "    my($min, $second_min) = (undef, undef);\n\
    \    for my $i (@$lst) {\n        if(!defined($min) || $i < $min) {\n        \
    \    $second_min = $min;\n            $min = $i;\n        } elsif(!defined($second_min)\
    \ || $i < $second_min) {\n            $second_min = $i;\n        }\n    }\n  \
    \  return $second_min;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n        if ($val\
    \ < $min) {\n            $next_min = $min;\n            $min = $val;\n       \
    \ } elsif (!defined($next_min) || $val < $next_min) {\n            $next_min =\
    \ $val;\n        }\n    }\n    return $next_min;\n}", "    my $min = undef;\n\
    \    my $next_min = undef;\n    foreach my $e (@$lst) {\n        if (!defined($min)\
    \ || $e < $min) {\n            $next_min = $min;\n            $min = $e;\n   \
    \     } elsif (!defined($next_min) || $e < $next_min) {\n            $next_min\
    \ = $e;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        my $v = $lst->[$i];\n\
    \        if ($v < $min) {\n            $min2 = $min;\n            $min = $v;\n\
    \        } elsif (!defined($min2) || $v < $min2) {\n            $min2 = $v;\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min\
    \ || !defined $next_min) {\n            $next_min = $lst->[$i];\n        }\n \
    \   }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $next_min || !defined $next_min) {\n            $next_min = $lst->[$i];\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = undef;\n    my $next_min\
    \ = undef;\n    foreach my $x (@$lst) {\n        if (!defined($min) || $x < $min)\
    \ {\n            $next_min = $min;\n            $min = $x;\n        } elsif (!defined($next_min)\
    \ || $x < $next_min) {\n            $next_min = $x;\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        }\n        elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = undef;\n    my $min2 = undef;\n    foreach my $x (@$lst) {\n\
    \        if (defined($min)) {\n            if ($x < $min) {\n                $min2\
    \ = $min;\n                $min = $x;\n            } elsif (!defined($min2) ||\
    \ $x < $min2) {\n                $min2 = $x;\n            }\n        } else {\n\
    \            $min = $x;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n     \
    \   my $e = $lst->[$i];\n        if ($e < $min) {\n            $next_min = $min;\n\
    \            $min = $e;\n        } elsif ($e < $next_min || !defined $next_min)\
    \ {\n            $next_min = $e;\n        }\n    }\n    return $next_min;\n}",
  "    my $min = undef;\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n    \
    \    if (!defined($min) || $e < $min) {\n            $min2 = $min;\n         \
    \   $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n          \
    \  $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $next_min = $min;\n            $min = $lst->[$i];\n \
    \       }\n        elsif (!defined($next_min) || $lst->[$i] < $next_min) {\n \
    \           $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $nmin = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $nmin = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $nmin || !defined $nmin) {\n\
    \            $nmin = $lst->[$i];\n        }\n    }\n    return $nmin;\n}", " \
    \   my $min = undef;\n    my $min2 = undef;\n    foreach my $e (@$lst) {\n   \
    \     if (!defined($min) || $e < $min) {\n            $min2 = $min;\n        \
    \    $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n         \
    \   $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $next_min = undef;\n    for my $i (1..$#$lst) {\n        my $val = $lst->[$i];\n\
    \        if ($val < $min) {\n            $next_min = $min;\n            $min =\
    \ $val;\n        } elsif (not defined $next_min or $val < $next_min) {\n     \
    \       $next_min = $val;\n        }\n    }\n    return $next_min;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n    \
    \    my $x = $lst->[$i];\n        if ($x < $min) {\n            $min2 = $min;\n\
    \            $min = $x;\n        } elsif (!defined($min2) || $x < $min2) {\n \
    \           $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if\
    \ ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2\
    \ = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min2 = $min;\n            $min = $i;\n        } elsif ($i < $min2\
    \ || !defined($min2)) {\n            $min2 = $i;\n        }\n    }\n    return\
    \ $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i\
    \ (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        my $x = $lst->[$i];\n        if ($x < $min) {\n            $min2\
    \ = $min;\n            $min = $x;\n        } elsif (!defined($min2) || $x < $min2)\
    \ {\n            $min2 = $x;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $next_min = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined $next_min)\
    \ {\n            $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n\
    \            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", " \
    \   my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $next_min = $min;\n       \
    \     $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined\
    \ $next_min) {\n            $next_min = $lst->[$i];\n        }\n    }\n    return\
    \ $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n\
    \            $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i]\
    \ < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $min = undef;\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n    \
    \    if (!defined($min) || $i < $min) {\n            $min2 = $min;\n         \
    \   $min = $i;\n        } elsif (!defined($min2) || $i < $min2) {\n          \
    \  $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min = undef;\n\
    \    my $min2 = undef;\n    for my $i (@$lst) {\n        if (!defined($min) ||\
    \ $i < $min) {\n            $min2 = $min;\n            $min = $i;\n        } elsif\
    \ (!defined($min2) || $i < $min2) {\n            $min2 = $i;\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ foreach my $i (@$lst) {\n        if ($i < $min) {\n            $min2 = $min;\n\
    \            $min = $i;\n        } elsif ($i < $min2 || !defined($min2)) {\n \
    \           $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = undef;\n    my $next_min = undef;\n    for my $i (@$lst) {\n        if (!defined($min)\
    \ || $i < $min) {\n            $next_min = $min;\n            $min = $i;\n   \
    \     } elsif (!defined($next_min) || $i < $next_min) {\n            $next_min\
    \ = $i;\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        my $x = $lst->[$i];\n\
    \        if ($x < $min) {\n            $min2 = $min;\n            $min = $x;\n\
    \        } elsif (!defined($min2) || $x < $min2) {\n            $min2 = $x;\n\
    \        }\n    }\n    return $min2;\n}", "    my @lst = @$lst;\n    my $min =\
    \ $lst[0];\n    my $min2 = undef;\n    for my $i (1..$#lst) {\n        if ($lst[$i]\
    \ < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n       \
    \ } elsif (!defined($min2) || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $min2 = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2)\
    \ || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n\
    \    return $min2;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n   \
    \ for my $i (1..$#$lst) {\n        my $e = $lst->[$i];\n        if ($e < $min)\
    \ {\n            $min2 = $min;\n            $min = $e;\n        } elsif (!defined($min2)\
    \ || $e < $min2) {\n            $min2 = $e;\n        }\n    }\n    return $min2;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        my $v = $lst->[$i];\n        if ($v < $min) {\n            $min2\
    \ = $min;\n            $min = $v;\n        } elsif (!defined($min2) || $v < $min2)\
    \ {\n            $min2 = $v;\n        }\n    }\n    return $min2;\n}", "    my\
    \ $min = $lst->[0];\n    my $min2 = undef;\n    foreach my $i (@$lst) {\n    \
    \    if ($i < $min) {\n            $min2 = $min;\n            $min = $i;\n   \
    \     } elsif ($i < $min2 || !defined($min2)) {\n            $min2 = $i;\n   \
    \     }\n    }\n    return $min2;\n}", "    my $min = min($lst);\n    my $min2\
    \ = undef;\n    for my $x (@$lst) {\n        if ($x != $min) {\n            if\
    \ (!defined($min2) || $x < $min2) {\n                $min2 = $x;\n           \
    \ }\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst->[$i];\n        }\n  \
    \      elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        }\n    \
    \    elsif (not defined $next_min or $lst->[$i] < $next_min) {\n            $next_min\
    \ = $lst->[$i];\n        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n\
    \    my $second_min = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i]\
    \ < $min) {\n            $second_min = $min;\n            $min = $lst->[$i];\n\
    \        } elsif ($lst->[$i] < $second_min || !defined $second_min) {\n      \
    \      $second_min = $lst->[$i];\n        }\n    }\n    return $second_min;\n}",
  "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min\
    \ = $lst->[$i];\n        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n  \
    \          $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}", "   \
    \ my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n \
    \       my $e = $lst->[$i];\n        if ($e < $min) {\n            $min2 = $min;\n\
    \            $min = $e;\n        } elsif (!defined($min2) || $e < $min2) {\n \
    \           $min2 = $e;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $next_min = undef;\n    foreach my $i (@$lst) {\n     \
    \   if ($i < $min) {\n            $next_min = $min;\n            $min = $i;\n\
    \        } elsif ($i > $min && (!defined($next_min) || $i < $next_min)) {\n  \
    \          $next_min = $i;\n        }\n    }\n    return $next_min;\n}", "   \
    \ my $min = $lst->[0];\n    my $next_min = undef;\n    for my $i (1..$#$lst) {\n\
    \        if ($lst->[$i] < $min) {\n            $next_min = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min || !defined $next_min)\
    \ {\n            $next_min = $lst->[$i];\n        }\n    }\n    return $next_min;\n\
    }", "    my $min = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst)\
    \ {\n        if ($lst->[$i] < $min) {\n            $min2 = $min;\n           \
    \ $min = $lst->[$i];\n        } elsif (!defined($min2) || $lst->[$i] < $min2)\
    \ {\n            $min2 = $lst->[$i];\n        }\n    }\n    return $min2;\n}",
  "    my $smallest = undef;\n    my $next_smallest = undef;\n    foreach my $x (@$lst)\
    \ {\n        if (!defined($smallest) || $x < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $x;\n        } elsif (!defined($next_smallest)\
    \ || $x < $next_smallest) {\n            $next_smallest = $x;\n        }\n   \
    \ }\n    return $next_smallest;\n}", "    my $smallest = undef;\n    my $second_smallest\
    \ = undef;\n    foreach my $elem (@$lst) {\n        if (!defined($smallest) ||\
    \ $elem < $smallest) {\n            $second_smallest = $smallest;\n          \
    \  $smallest = $elem;\n        } elsif (!defined($second_smallest) || $elem <\
    \ $second_smallest) {\n            $second_smallest = $elem;\n        }\n    }\n\
    \    return $second_smallest;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $min2\
    \ = $min;\n            $min = $lst->[$i];\n        } elsif (!defined($min2) ||\
    \ $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n        }\n    }\n \
    \   return $min2;\n}", "    my $min = undef;\n    my $min2 = undef;\n    foreach\
    \ my $item (@$lst) {\n        if (!defined($min) || $item < $min) {\n        \
    \    $min2 = $min;\n            $min = $item;\n        } elsif (!defined($min2)\
    \ || $item < $min2) {\n            $min2 = $item;\n        }\n    }\n    return\
    \ $min2;\n}", "    my $min = $lst->[0];\n    my $next_min = undef;\n    for my\
    \ $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n            $next_min =\
    \ $min;\n            $min = $lst->[$i];\n        } elsif ($lst->[$i] < $next_min\
    \ || !defined $next_min) {\n            $next_min = $lst->[$i];\n        }\n \
    \   }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my $min2 = undef;\n\
    \    foreach my $i (@$lst) {\n        if ($i < $min) {\n            $min2 = $min;\n\
    \            $min = $i;\n        } elsif ($i < $min2 || !defined($min2)) {\n \
    \           $min2 = $i;\n        }\n    }\n    return $min2;\n}", "    my $min\
    \ = $lst->[0];\n    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if\
    \ ($lst->[$i] < $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n\
    \        } elsif ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 =\
    \ $lst->[$i];\n        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n\
    \    my $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] <\
    \ $min) {\n            $min2 = $min;\n            $min = $lst->[$i];\n       \
    \ } elsif (!defined($min2) || $lst->[$i] < $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}", "    my $min = $lst->[0];\n    my $next_min\
    \ = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min) {\n  \
    \          $next_min = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ (!defined($next_min) || $lst->[$i] < $next_min) {\n            $next_min = $lst->[$i];\n\
    \        }\n    }\n    return $next_min;\n}", "    my $min = $lst->[0];\n    my\
    \ $min2 = undef;\n    for my $i (1..$#$lst) {\n        if ($lst->[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst->[$i];\n        } elsif\
    \ ($lst->[$i] < $min2 || !defined $min2) {\n            $min2 = $lst->[$i];\n\
    \        }\n    }\n    return $min2;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

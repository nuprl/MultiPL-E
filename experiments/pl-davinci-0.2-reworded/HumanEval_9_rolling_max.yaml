name: HumanEval_9_rolling_max
language: pl
prompt: "# From a given array of integers, generate an array of rolling maximum element\
  \ found until given moment\n# in the sequence.\n# >>> rolling_max([1, 2, 3, 2, 3,\
  \ 4, 2])\n# [1, 2, 3, 3, 3, 4, 4]\nsub rolling_max {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rolling_max;\n\
  \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4]),[1, 2,\
  \ 3, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
  \ 3, 2, 1]),[4, 4, 4, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max = $numbers->[0];\n    my @maxes = ($max);\n    for my $i\
    \ (1 .. $#$numbers) {\n        my $number = $numbers->[$i];\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        push @maxes, $max;\n\
    \    }\n    return \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = -1;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @maxes = ();\n    my $max = 0;\n    for my $number (@$numbers) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my $max = 0;\n \
    \   my @result;\n    for my $number (@$numbers) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        push @result, $max;\n   \
    \ }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my $max = 0;\n    my\
    \ @maxes = ();\n    for my $number (@$numbers) {\n        $max = $number if $number\
    \ > $max;\n        push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my\
    \ $max = $numbers->[0];\n    my @result = ($max);\n    for my $i (1 .. $#$numbers)\
    \ {\n        my $num = $numbers->[$i];\n        if ($num > $max) {\n         \
    \   $max = $num;\n        }\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n    my @result\
    \ = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @maxes = (shift @$numbers);\n    for my $number (@$numbers)\
    \ {\n        push @maxes, max($number, $maxes[-1]);\n    }\n    return \\@maxes;\n\
    }", "    my @result;\n    my $max = $numbers->[0];\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes = ();\n\
    \    my $max = undef;\n    for my $number (@$numbers) {\n        if(!defined($max)\
    \ || $number > $max) {\n            $max = $number;\n        }\n        push @maxes,\
    \ $max;\n    }\n    return \\@maxes;\n}", "    my $max = $numbers->[0];\n    my\
    \ @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes = ();\n\
    \    my $max = 0;\n    foreach my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @maxes, $max;\n    }\n    return \\@maxes;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my @maxes = ();\n    my $max = 0;\n    foreach my $number (@$numbers) {\n\
    \        if ($number > $max) {\n            $max = $number;\n        }\n     \
    \   push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n  \
    \  my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes\
    \ = ();\n    my $max = 0;\n    for my $n (@$numbers) {\n        $max = $n if $n\
    \ > $max;\n        push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my\
    \ @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n    for my\
    \ $i (1 .. $#$numbers) {\n        if ($numbers->[$i] > $max) {\n            $max\
    \ = $numbers->[$i];\n        }\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @maxes = ();\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @maxes, $max;\n \
    \   }\n    return \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my $max = 0;\n    my\
    \ @result;\n    for my $number (@$numbers) {\n        if ($number > $max) {\n\
    \            $max = $number;\n        }\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        if ($numbers->[$i] > $max) {\n            $max = $numbers->[$i];\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my @result;\n    my $max = 0;\n    foreach my $number (@$numbers) {\n    \
    \    $max = $number if $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my @result;\n    my $max = -1;\n    foreach my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes = ();\n   \
    \ my $max = 0;\n    for my $number (@$numbers) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        push @maxes, $max;\n    }\n\
    \    return \\@maxes;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n    for\
    \ my $i (1 .. $#$numbers) {\n        if ($numbers->[$i] > $max) {\n          \
    \  $max = $numbers->[$i];\n        }\n        push @result, $max;\n    }\n   \
    \ return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = -1;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @maxes = ();\n    my $max = undef;\n    for\
    \ my $n (@$numbers) {\n        if (!defined($max) || $n > $max) {\n          \
    \  $max = $n;\n        }\n        push @maxes, $max;\n    }\n    return \\@maxes;\n\
    }", "    my @maxes = ();\n    my $max = undef;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if !defined($max) || $number > $max;\n        push\
    \ @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n    my $max\
    \ = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number >\
    \ $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "    my\
    \ @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n    for my\
    \ $i (1 .. $#$numbers) {\n        if ($numbers->[$i] > $max) {\n            $max\
    \ = $numbers->[$i];\n        }\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n    push @result,\
    \ $max;\n    for my $i (1 .. $#$numbers) {\n        if ($numbers->[$i] > $max)\
    \ {\n            $max = $numbers->[$i];\n        }\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n   \
    \ my @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my $max = 0;\n    my @maxes = ();\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @maxes, $max;\n \
    \   }\n    return \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max\
    \ = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number >\
    \ $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "    my\
    \ @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n        $max =\
    \ $number if $number > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n\
    \    my @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = max($max,\
    \ $numbers->[$i]);\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n   \
    \ my @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = max($max,\
    \ $numbers->[$i]);\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = undef;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if !defined($max) || $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my $max =\
    \ 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @max_so_far = ();\n    my $max = undef;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if !defined($max) || $number > $max;\n        push\
    \ @max_so_far, $max;\n    }\n    return \\@max_so_far;\n}", "    my $max = 0;\n\
    \    my @result;\n    for my $n (@$numbers) {\n        $max = $n if $n > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = -1;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n   \
    \ my @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = max($max,\
    \ $numbers->[$i]);\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = -1;\n    for my $number (@$numbers) {\n  \
    \      $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my @maxes = (shift @$numbers);\n    for my $number (@$numbers) {\n       \
    \ push @maxes, $number > $maxes[-1] ? $number : $maxes[-1];\n    }\n    return\
    \ \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n   \
    \ my @maxes = ($max);\n    for my $i (1 .. $#$numbers) {\n        my $number =\
    \ $numbers->[$i];\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        push @maxes, $max;\n    }\n    return \\@maxes;\n}", "   \
    \ my @maxes = ();\n    my $max = 0;\n    for my $number (@$numbers) {\n      \
    \  $max = $number if $number > $max;\n        push @maxes, $max;\n    }\n    return\
    \ \\@maxes;\n}", "    my $max = 0;\n    my @result;\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       push @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes\
    \ = ();\n    my $max = undef;\n    for my $number (@$numbers) {\n        if (!defined($max)\
    \ || $number > $max) {\n            $max = $number;\n        }\n        push @maxes,\
    \ $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    foreach\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        if ($numbers->[$i] > $max) {\n            $max = $numbers->[$i];\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my @result;\n    my $max = 0;\n    foreach my $number (@$numbers) {\n    \
    \    $max = $number if $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = -1;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my $max =\
    \ 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = -1;\n    for my $n (@$numbers) {\n        $max = $n if $n > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $n (@$numbers) {\n        $max = $n if $n > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my $max =\
    \ $numbers->[0];\n    my @maxes = ($max);\n    for my $i (1 .. $#$numbers) {\n\
    \        $max = max($max, $numbers->[$i]);\n        push @maxes, $max;\n    }\n\
    \    return \\@maxes;\n}", "    my $max = 0;\n    my @result;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    foreach my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my $max =\
    \ 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @maxes = (shift @$numbers);\n    for my $number (@$numbers) {\n  \
    \      push @maxes, max($number, $maxes[-1]);\n    }\n    return \\@maxes;\n}",
  "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n  \
    \  for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = -1;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = -1;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = 0;\n    foreach my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = undef;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if !defined($max) || $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n\
    \    push @result, $max;\n    for my $i (1 .. $#$numbers) {\n        $max = max($max,\
    \ $numbers->[$i]);\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     if ($number > $max) {\n            $max = $number;\n        }\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max\
    \ = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number >\
    \ $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "    my\
    \ @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n    for my\
    \ $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = $numbers->[0];\n    for my $number (@$numbers) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $i (0 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i] >\
    \ $max;\n        $result[$i] = $max;\n    }\n    return \\@result;\n}", "    my\
    \ $max = $numbers->[0];\n    my @result = ($max);\n    for my $i (1 .. $#$numbers)\
    \ {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    foreach my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max\
    \ = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number >\
    \ $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "    my\
    \ $max = $numbers->[0];\n    my @maxes = ($max);\n    for my $i (1 .. $#$numbers)\
    \ {\n        my $number = $numbers->[$i];\n        if ($number > $max) {\n   \
    \         $max = $number;\n        }\n        push @maxes, $max;\n    }\n    return\
    \ \\@maxes;\n}", "    my @maxes = (shift @$numbers);\n    for my $number (@$numbers)\
    \ {\n        push @maxes, $number > $maxes[-1] ? $number : $maxes[-1];\n    }\n\
    \    return \\@maxes;\n}", "    my @result;\n    my $max = $numbers->[0];\n  \
    \  for my $i (0 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        $result[$i] = $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n    for\
    \ my $i (1 .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n     \
    \   push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        if ($numbers->[$i] > $max) {\n            $max = $numbers->[$i];\n\
    \        }\n        push @result, $max;\n    }\n    return \\@result;\n}", " \
    \   my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n\
    \    push @result, $max;\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers)\
    \ {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = undef;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if !defined($max) || $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my @maxes = ();\n    my $max = undef;\n    for\
    \ my $number (@$numbers) {\n        if (!defined($max) || $number > $max) {\n\
    \            $max = $number;\n        }\n        push @maxes, $max;\n    }\n \
    \   return \\@maxes;\n}", "    my $max = $numbers->[0];\n    my @maxes = ($max);\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n\
    \        push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = undef;\n\
    \    for my $number (@$numbers) {\n        if (!defined($max) || $number > $max)\
    \ {\n            $max = $number;\n        }\n        push @result, $max;\n   \
    \ }\n    return \\@result;\n}", "    my @maxes = ();\n    my $max = 0;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n   \
    \ my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if $number\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n  \
    \  for my $i (1 .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @maxes\
    \ = ();\n    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if $number > $max;\n        push @maxes, $max;\n    }\n    return \\@maxes;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my @result;\n    my $max = undef;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if !defined($max) || $number >\
    \ $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "    my\
    \ @maxes = ();\n    my $max = 0;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @maxes, $max;\n    }\n    return\
    \ \\@maxes;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n   \
    \ for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n    push @result,\
    \ $max;\n    for my $i (1 .. $#$numbers) {\n        if ($numbers->[$i] > $max)\
    \ {\n            $max = $numbers->[$i];\n        }\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = $numbers->[0];\n    my @result\
    \ = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = $numbers->[0];\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n\
    \    for my $i (0 .. $#$numbers) {\n        if ($numbers->[$i] > $max) {\n   \
    \         $max = $numbers->[$i];\n        }\n        $result[$i] = $max;\n   \
    \ }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @rolling_max = ();\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @rolling_max, $max;\n    }\n    return \\@rolling_max;\n\
    }", "    my @result;\n    my $max = $numbers->[0];\n    push @result, $max;\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my @result;\n    my $max = undef;\n    for my $number (@$numbers) {\n     \
    \   $max = $number if !defined($max) || $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my $max =\
    \ $numbers->[0];\n    my @maxes = ($max);\n    for my $i (1 .. $#$numbers) {\n\
    \        my $number = $numbers->[$i];\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        push @maxes, $max;\n    }\n    return\
    \ \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = undef;\n    for my $number (@$numbers) {\n        $max = $number\
    \ if !defined($max) || $number > $max;\n        push @result, $max;\n    }\n \
    \   return \\@result;\n}", "    my @maxes = ();\n    my $max = undef;\n    foreach\
    \ my $number (@$numbers) {\n        $max = $number if !defined($max) || $number\
    \ > $max;\n        push @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my\
    \ $max = $numbers->[0];\n    my @result = ($max);\n    for my $i (1 .. $#$numbers)\
    \ {\n        $max = $numbers->[$i] if $numbers->[$i] > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = undef;\n\
    \    for my $number (@$numbers) {\n        $max = $number if !defined($max) ||\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @max_so_far = ();\n    my $max = undef;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if !defined($max) || $number > $max;\n        push\
    \ @max_so_far, $max;\n    }\n    return \\@max_so_far;\n}", "    my @maxes = ();\n\
    \    my $max = undef;\n    for my $number (@$numbers) {\n        if (!defined($max)\
    \ || $number > $max) {\n            $max = $number;\n        }\n        push @maxes,\
    \ $max;\n    }\n    return \\@maxes;\n}", "    my @result;\n    my $max = -1;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = -1;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers) {\n   \
    \     $max = $number if $number > $max;\n        push @result, $max;\n    }\n\
    \    return \\@result;\n}", "    my $max = $numbers->[0];\n    my @result = ($max);\n\
    \    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i] if $numbers->[$i]\
    \ > $max;\n        push @result, $max;\n    }\n    return \\@result;\n}", "  \
    \  my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = 0;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my @result;\n    my $max = $numbers->[0];\n\
    \    push @result, $max;\n    for my $i (1 .. $#$numbers) {\n        $max = max($max,\
    \ $numbers->[$i]);\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = $numbers->[0];\n    my @result = ($max);\n    for my $i (1\
    \ .. $#$numbers) {\n        $max = max($max, $numbers->[$i]);\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max = 0;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @result;\n    for my $number (@$numbers) {\n   \
    \     if ($number > $max) {\n            $max = $number;\n        }\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max\
    \ = $numbers->[0];\n    push @result, $max;\n    for my $i (1 .. $#$numbers) {\n\
    \        if ($numbers->[$i] > $max) {\n            $max = $numbers->[$i];\n  \
    \      }\n        push @result, $max;\n    }\n    return \\@result;\n}", "   \
    \ my @result;\n    my $max = -1;\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}", "    my @result;\n    my $max = -1;\n    for my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @result, $max;\n\
    \    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n    for\
    \ my $number (@$numbers) {\n        $max = $number if $number > $max;\n      \
    \  push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n \
    \   my $max = 0;\n    for my $number (@$numbers) {\n        $max = $number if\
    \ $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my $max = 0;\n    my @maxes = ();\n    foreach my $number (@$numbers)\
    \ {\n        $max = $number if $number > $max;\n        push @maxes, $max;\n \
    \   }\n    return \\@maxes;\n}", "    my @result;\n    my $max = 0;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n    my $max\
    \ = undef;\n    for my $number (@$numbers) {\n        $max = $number if !defined($max)\
    \ || $number > $max;\n        push @result, $max;\n    }\n    return \\@result;\n\
    }", "    my @maxes = ();\n    my $max = 0;\n    for my $number (@$numbers) {\n\
    \        $max = $number if $number > $max;\n        push @maxes, $max;\n    }\n\
    \    return \\@maxes;\n}", "    my @maxes = ();\n    my $max = 0;\n    for my\
    \ $number (@$numbers) {\n        $max = $number if $number > $max;\n        push\
    \ @maxes, $max;\n    }\n    return \\@maxes;\n}", "    my $max = $numbers->[0];\n\
    \    my @result = ($max);\n    for my $i (1 .. $#$numbers) {\n        $max = $numbers->[$i]\
    \ if $numbers->[$i] > $max;\n        push @result, $max;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my $max = $numbers->[0];\n    for my $number\
    \ (@$numbers) {\n        $max = $number if $number > $max;\n        push @result,\
    \ $max;\n    }\n    return \\@result;\n}", "    my $max = 0;\n    my @result;\n\
    \    for my $number (@$numbers) {\n        $max = $number if $number > $max;\n\
    \        push @result, $max;\n    }\n    return \\@result;\n}", "    my @result;\n\
    \    my $max = $numbers->[0];\n    for my $number (@$numbers) {\n        $max\
    \ = $number if $number > $max;\n        push @result, $max;\n    }\n    return\
    \ \\@result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

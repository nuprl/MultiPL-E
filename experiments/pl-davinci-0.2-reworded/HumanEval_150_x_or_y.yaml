name: HumanEval_150_x_or_y
language: pl
prompt: "# A simple program which should return the value of x if n is \n# a prime\
  \ number and should return the value of y otherwise.\n# Examples:\n# >>> x_or_y(7,\
  \ 34, 12)\n# 34\n# >>> x_or_y(15, 8, 5)\n# 5\nsub x_or_y {\n    my($n, $x, $y) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&x_or_y;\n\
  \        if(eq_deeply($candidate->(7, 34, 12),34)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(15, 8, 5),5)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3,\
  \ 33, 5212),33)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(1259, 3, 52),3)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(7919, -1, 12),-1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3609,\
  \ 1245, 583),583)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(91, 56, 129),129)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(6, 34, 1234),1234))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1,\
  \ 2, 0),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(2, 2, 0),2)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = $y;\n    if (is_prime($n)) {\n        $result = $x;\n\
    \    }\n    return $result;\n}", "    my $is_prime = 1;\n    for (my $i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            $is_prime = 0;\n   \
    \         last;\n        }\n    }\n    if ($is_prime) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    # TODO: implement this function\n\
    }", "    if (is_prime($n)) {\n        return $x;\n    } else {\n        return\
    \ $y;\n    }\n}", "    # TODO: implement this function\n    return $x;\n}", " \
    \   my $is_prime = 1;\n    for (my $i = 2; $i < $n; $i++) {\n        if ($n %\
    \ $i == 0) {\n            $is_prime = 0;\n            last;\n        }\n    }\n\
    \    return $is_prime ? $x : $y;\n}", "    if (is_prime($n)) {\n        return\
    \ $x;\n    } else {\n        return $y;\n    }\n}", "    # your code here\n}",
  "    # your code goes here\n}", "    # TODO: implement this function\n    return\
    \ $x;\n}", "    # TODO: implement this function\n    return $x;\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    return $x if is_prime($n);\n \
    \   return $y;\n}", "    # your code here\n    my $i = 2;\n    my $flag = 0;\n\
    \    while ($i < $n) {\n        if ($n % $i == 0) {\n            $flag = 1;\n\
    \            last;\n        }\n        $i++;\n    }\n    if ($flag == 1) {\n \
    \       return $y;\n    } else {\n        return $x;\n    }\n}", "    return $x\
    \ if is_prime($n);\n    return $y;\n}", "    my $is_prime = 1;\n    for(my $i\
    \ = 2; $i < $n; $i++) {\n        if($n % $i == 0) {\n            $is_prime = 0;\n\
    \            last;\n        }\n    }\n    if($is_prime) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    # your code here\n}", "   \
    \ my $result = $y;\n    if (is_prime($n)) {\n        $result = $x;\n    }\n  \
    \  return $result;\n}", "    my $result = $y;\n    if (is_prime($n)) {\n     \
    \   $result = $x;\n    }\n    return $result;\n}", "    # Your code goes here\n\
    \    if (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}", "    return $x if is_prime($n);\n    return $y;\n}", "    # your code\
    \ here\n    if ($n == 2) {\n        return $x;\n    }\n    elsif ($n % 2 == 0)\
    \ {\n        return $y;\n    }\n    else {\n        for (my $i = 3; $i <= sqrt($n);\
    \ $i += 2) {\n            if ($n % $i == 0) {\n                return $y;\n  \
    \          }\n        }\n        return $x;\n    }\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    my $result = 0;\n    if (is_prime($n))\
    \ {\n        $result = $x;\n    } else {\n        $result = $y;\n    }\n    return\
    \ $result;\n}", "    # your code here\n    if ($n % 2 == 0) {\n        return\
    \ $y;\n    }\n    else {\n        return $x;\n    }\n}", "    # your code here\n\
    \    if (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}", "    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}", "    return $x if is_prime($n);\n    return $y;\n}",
  "    # Your code goes here\n    if (is_prime($n)) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}", "    if (is_prime($n)) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    if (is_prime($n)) {\n     \
    \   return $x;\n    } else {\n        return $y;\n    }\n}", "    # Your code\
    \ here\n}", "    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}", "    my $is_prime = 1;\n    for (my $i = 2; $i < $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            $is_prime = 0;\n         \
    \   last;\n        }\n    }\n    if ($is_prime) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}", "    if (is_prime($n)) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    return $x if is_prime($n);\n\
    \    return $y;\n}", "    if (is_prime($n)) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}", "    if (is_prime($n)) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    my $result = $y;\n    if (is_prime($n))\
    \ {\n        $result = $x;\n    }\n    return $result;\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    # TODO: implement this function\n    return $x;\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    if (is_prime($n)) {\n        return\
    \ $x;\n    } else {\n        return $y;\n    }\n}", "    # your code here\n}",
  "    my $result = $y;\n    if (is_prime($n)) {\n        $result = $x;\n    }\n \
    \   return $result;\n}", "    my $result = $y;\n    if (is_prime($n)) {\n    \
    \    $result = $x;\n    }\n    return $result;\n}", "    my $result = $y;\n  \
    \  if (is_prime($n)) {\n        $result = $x;\n    }\n    return $result;\n}",
  "    return $x if is_prime($n);\n    return $y;\n}", "    return $y if $n == 1;\n\
    \    return $x if $n == 2;\n    for (my $i = 2; $i < $n; $i++) {\n        return\
    \ $y if $n % $i == 0;\n    }\n    return $x;\n}", "    my $is_prime = 1;\n   \
    \ for (my $i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $is_prime\
    \ = 0;\n            last;\n        }\n    }\n    if ($is_prime) {\n        return\
    \ $x;\n    } else {\n        return $y;\n    }\n}", "    return $x if is_prime($n);\n\
    \    return $y;\n}", "    my $is_prime = 1;\n    for (my $i = 2; $i < $n; $i++)\
    \ {\n        if ($n % $i == 0) {\n            $is_prime = 0;\n            last;\n\
    \        }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n  \
    \      return $y;\n    }\n}", "    if (is_prime($n)) {\n        return $x;\n \
    \   } else {\n        return $y;\n    }\n}", "    # your code here\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    my $result = 0;\n    # Your code goes here\n    return $result;\n\
    }", "    # Your code goes here\n    if (is_prime($n)) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    my $is_prime = 1;\n    for\
    \ (my $i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            $is_prime\
    \ = 0;\n            last;\n        }\n    }\n    if ($is_prime) {\n        return\
    \ $x;\n    } else {\n        return $y;\n    }\n}", "    my $is_prime = 0;\n \
    \   for (my $i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n          \
    \  $is_prime = 1;\n            last;\n        }\n    }\n    if ($is_prime == 0)\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    my $result = $y;\n    if (is_prime($n)) {\n        $result = $x;\n\
    \    }\n    return $result;\n}", "    return $x if is_prime($n);\n    return $y;\n\
    }", "    return $x if is_prime($n);\n    return $y;\n}", "    my $result = $y;\n\
    \    if (is_prime($n)) {\n        $result = $x;\n    }\n    return $result;\n}",
  "    if (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}", "    my $result = 0;\n    if (is_prime($n)) {\n        $result = $x;\n\
    \    } else {\n        $result = $y;\n    }\n    return $result;\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    # your code here\n    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    # your code here\n}", "    # TODO:\
    \ implement this function\n    return $y;\n}", "    my $result = $y;\n    if (is_prime($n))\
    \ {\n        $result = $x;\n    }\n    return $result;\n}", "    # your code here\n\
    \    if (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}", "    my $is_prime = 0;\n    for (my $i = 2; $i < $n; $i++) {\n   \
    \     if ($n % $i == 0) {\n            $is_prime = 1;\n            last;\n   \
    \     }\n    }\n    if ($is_prime == 0) {\n        return $x;\n    } else {\n\
    \        return $y;\n    }\n}", "    if (is_prime($n)) {\n        return $x;\n\
    \    } else {\n        return $y;\n    }\n}", "    return $x if is_prime($n);\n\
    \    return $y;\n}", "    return $x if is_prime($n);\n    return $y;\n}", "  \
    \  return $x if is_prime($n);\n    return $y;\n}", "    my $is_prime = 1;\n  \
    \  for (my $i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n           \
    \ $is_prime = 0;\n            last;\n        }\n    }\n    return $is_prime ?\
    \ $x : $y;\n}", "    # your code goes here\n}", "    if (is_prime($n)) {\n   \
    \     return $x;\n    } else {\n        return $y;\n    }\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    # your code here\n    my $result = 0;\n    if ($n == 2) {\n    \
    \    $result = $x;\n    }\n    else {\n        for (my $i = 2; $i < $n; $i++)\
    \ {\n            if ($n % $i == 0) {\n                $result = $y;\n        \
    \        last;\n            }\n            else {\n                $result = $x;\n\
    \            }\n        }\n    }\n    return $result;\n}", "    return $x if is_prime($n);\n\
    \    return $y;\n}", "    if (is_prime($n)) {\n        return $x;\n    } else\
    \ {\n        return $y;\n    }\n}", "    # your code here\n}", "    # Write your\
    \ code here\n    if ($n == 2) {\n        return $x;\n    }\n    for (my $i = 2;\
    \ $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n    \
    \    }\n    }\n    return $x;\n}", "    my $result = 0;\n    # TODO: Write code\
    \ here\n    return $result;\n}", "    if ($n == 2) {\n        return $x;\n   \
    \ }\n    elsif ($n % 2 == 0) {\n        return $y;\n    }\n    else {\n      \
    \  for (my $i = 3; $i < $n; $i += 2) {\n            if ($n % $i == 0) {\n    \
    \            return $y;\n            }\n        }\n        return $x;\n    }\n\
    }", "    return $x if is_prime($n);\n    return $y;\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    # TODO: implement this function\n    return $y;\n}", "    return\
    \ $x if is_prime($n);\n    return $y;\n}", "    my $result = $y;\n    if (is_prime($n))\
    \ {\n        $result = $x;\n    }\n    return $result;\n}", "    if (is_prime($n))\
    \ {\n        return $x;\n    } else {\n        return $y;\n    }\n}", "    if\
    \ (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n   \
    \ }\n}", "    # your code here\n    return $x if is_prime($n);\n    return $y;\n\
    }", "    return $x if is_prime($n);\n    return $y;\n}", "    # your code here\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_78_hex_key
language: pl
prompt: "# You have been tasked to write a function that receives \n# a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n# digits that are primes\
  \ (prime number, or a prime, is a natural number \n# greater than 1 that is not\
  \ a product of two smaller natural numbers).\n# Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n# Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n# So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n# B (=decimal 11), D (=decimal 13).\n# Note: you may assume the input is\
  \ always correct or empty string, \n# and symbols A,B,C,D,E,F are always uppercase.\n\
  # Examples:\n# >>> hex_key(\"AB\")\n# 1\n# >>> hex_key(\"1077E\")\n# 2\n# >>> hex_key(\"\
  ABED1A33\")\n# 4\n# >>> hex_key(\"123456789ABCDEF0\")\n# 6\n# >>> hex_key(\"2020\"\
  )\n# 2\nsub hex_key {\n    my($num) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&hex_key;\n\
  \        if(eq_deeply($candidate->(\"AB\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1077E\"),2)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  ABED1A33\"),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"2020\"),2)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"123456789ABCDEF0\"\
  ),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  112233445566778899AABBCCDDEEFF00\"),12)) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits\
    \ = split //, $num;\n    foreach my $digit (@digits) {\n        $count++ if grep\
    \ { $_ eq $digit } @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @hex_primes = qw(2 3 5 7 B D);\n    my @hex_digits = split(//, $num);\n\
    \    foreach my $digit (@hex_digits) {\n        if (grep {$_ eq $digit} @hex_primes)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @num = split //, $num;\n\
    \    foreach my $n (@num) {\n        if (grep {$_ eq $n} @primes) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my %primes = (\n        2 => 1,\n        3 => 1,\n        5 => 1,\n     \
    \   7 => 1,\n        11 => 1,\n        13 => 1,\n    );\n    my @nums = split(//,\
    \ $num);\n    foreach my $n (@nums) {\n        if ($n =~ /[A-F]/) {\n        \
    \    $n = ord($n) - ord('A') + 10;\n        }\n        if (exists $primes{$n})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @hex_digits = split(//, $num);\n    foreach my $digit (@hex_digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my @hex_primes = qw(2\
    \ 3 5 7 B D);\n    for my $digit (split //, $num) {\n        $count++ if grep\
    \ {$digit eq $_} @hex_primes;\n    }\n    return $count;\n}", "    my $count =\
    \ 0;\n    my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n \
    \       if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11,\
    \ 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits = split //,\
    \ $num;\n    foreach my $digit (@digits) {\n        if (exists $primes{$digit})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        foreach my $prime (@primes) {\n  \
    \          if ($digit eq $prime) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my @hex = split //, $num;\n    foreach my $h (@hex)\
    \ {\n        if (grep {$_ eq $h} @primes) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    foreach my $h (@hex) {\n        if ($h =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums)\
    \ {\n        if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5,\
    \ 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @hex = split\
    \ //, $num;\n    for my $hex (@hex) {\n        $count++ if $primes{$hex};\n  \
    \  }\n    return $count;\n}", "    my @primes = (2, 3, 5, 7, 11, 13);\n    my\
    \ @digits = split //, $num;\n    my $count = 0;\n    for my $digit (@digits) {\n\
    \        for my $prime (@primes) {\n            if ($digit eq $prime) {\n    \
    \            $count++;\n            }\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split //,\
    \ $num;\n    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @digits = split(//, $num);\n    foreach my $digit (@digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    foreach my $digit (split //, $num) {\n        $count++ if grep\
    \ {$_ eq $digit} @primes;\n    }\n    return $count;\n}", "    my @primes = qw(2\
    \ 3 5 7 B D);\n    my @digits = split //, $num;\n    my $count = 0;\n    for my\
    \ $digit (@digits) {\n        $count++ if grep { $_ eq $digit } @primes;\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    foreach my $hex (@hex) {\n        if ($hex =~ /[2357BD]/) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n\
    \    my @digits = split //, $num;\n    for my $digit (@digits) {\n        if ($primes{$digit})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my @digits\
    \ = split //, $num;\n    my $count = 0;\n    foreach my $digit (@digits) {\n \
    \       if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @hex = split //, $num;\n    foreach my $hex (@hex) {\n        if (grep\
    \ {$_ eq $hex} @primes) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my @hex = split(//, $num);\n    my $count = 0;\n    for my\
    \ $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2\
    \ 3 5 7 B D);\n    my @digits = split(//, $num);\n    foreach my $digit (@digits)\
    \ {\n        if (grep {$_ eq $digit} @primes) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2,\
    \ 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits\
    \ = split //, $num;\n    for my $digit (@digits) {\n        $count++ if $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @digits = split(//, $num);\n    foreach my $digit (@digits)\
    \ {\n        if (grep {$_ eq $digit} @primes) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}", "    my $count = 0;\n    my %primes = (\n\
    \        2 => 1,\n        3 => 1,\n        5 => 1,\n        7 => 1,\n        11\
    \ => 1,\n        13 => 1,\n    );\n    my @digits = split(//, $num);\n    foreach\
    \ my $digit (@digits) {\n        if ($primes{$digit}) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @num =\
    \ split //, $num;\n    foreach my $n (@num) {\n        if ($n =~ /[2357BD]/) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my %primes = map { $_ => 1 } @primes;\n\
    \    for my $c (split //, $num) {\n        $count++ if exists $primes{$c};\n \
    \   }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count\
    \ = 0;\n    foreach my $digit (split //, $num) {\n        if (grep {$_ eq $digit}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex = (\n \
    \       '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n \
    \       '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n \
    \       '8' => 8,\n        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n\
    \        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15,\n\
    \    );\n    for my $i (0 .. length($num) - 1) {\n        my $digit = substr($num,\
    \ $i, 1);\n        if (grep {$_ == $hex{$digit}} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @hex =\
    \ split(//, $num);\n    foreach my $h (@hex) {\n        if ($h =~ /[2357BD]/)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex_digits = (\n\
    \        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n\
    \        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n\
    \        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n\
    \        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15,\n\
    \    );\n    my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n\
    \        if (grep {$_ == $hex_digits{$digit}} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split(//, $num);\n    my $count = 0;\n    for my $digit (@digits)\
    \ {\n        $count++ if grep {$_ eq $digit} @primes;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex = split('', $num);\n    foreach my $hex (@hex)\
    \ {\n        if ($hex eq '2' || $hex eq '3' || $hex eq '5' || $hex eq '7' || $hex\
    \ eq 'B' || $hex eq 'D') {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my @digits = split //, $num;\n    my $count = 0;\n    for\
    \ my $digit (@digits) {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @digits\
    \ = split(//, $num);\n    foreach my $digit (@digits) {\n        if ($digit =~\
    \ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my %primes = (\n        '2' => 1,\n        '3' =>\
    \ 1,\n        '5' => 1,\n        '7' => 1,\n        'B' => 1,\n        'D' =>\
    \ 1,\n    );\n    for my $char (split //, $num) {\n        $count++ if $primes{$char};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @nums = split(//,\
    \ $num);\n    my %primes = (\n        '2' => 1,\n        '3' => 1,\n        '5'\
    \ => 1,\n        '7' => 1,\n        'B' => 1,\n        'D' => 1,\n    );\n   \
    \ for my $n (@nums) {\n        $count++ if exists $primes{$n};\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n \
    \   my %hex = (\n        0 => 0,\n        1 => 1,\n        2 => 2,\n        3\
    \ => 3,\n        4 => 4,\n        5 => 5,\n        6 => 6,\n        7 => 7,\n\
    \        8 => 8,\n        9 => 9,\n        A => 10,\n        B => 11,\n      \
    \  C => 12,\n        D => 13,\n        E => 14,\n        F => 15,\n    );\n  \
    \  my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n        if\
    \ (grep {$_ == $hex{$digit}} @primes) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count\
    \ = 0;\n    foreach my $digit (split(//, $num)) {\n        $count++ if grep {$_\
    \ eq $digit} @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n  \
    \  my @hex = split //, $num;\n    foreach my $hex (@hex) {\n        if ($hex eq\
    \ \"2\" || $hex eq \"3\" || $hex eq \"5\" || $hex eq \"7\" || $hex eq \"B\" ||\
    \ $hex eq \"D\") {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//,\
    \ $num);\n    foreach my $digit (@digits) {\n        if (grep(/^$digit$/, @primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split //, $num;\n\
    \    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        foreach my $prime (@primes) {\n  \
    \          if ($digit eq $prime) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits\
    \ = split //, $num;\n    for my $digit (@digits) {\n        if ($primes{$digit})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @nums = split //, $num;\n    foreach my $n (@nums) {\n \
    \       if ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n\
    \    my %primes = map { $_ => 1 } @primes;\n    my @digits = split(//, $num);\n\
    \    foreach my $digit (@digits) {\n        if (exists $primes{$digit}) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @nums = split //, $num;\n    foreach my $n (@nums) {\n        if\
    \ ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex =\
    \ (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my @hex_primes\
    \ = ('2', '3', '5', '7', 'B', 'D');\n    my @num = split(//, $num);\n    for my\
    \ $i (0..$#num) {\n        for my $j (0..$#hex_primes) {\n            if ($num[$i]\
    \ eq $hex_primes[$j]) {\n                $count++;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count\
    \ = 0;\n    for my $p (@primes) {\n        $count += $num =~ s/$p//g;\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my %primes = (\n        '2'\
    \ => 1,\n        '3' => 1,\n        '5' => 1,\n        '7' => 1,\n        'B'\
    \ => 1,\n        'D' => 1,\n    );\n    for my $char (split //, $num) {\n    \
    \    $count++ if exists $primes{$char};\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my @hex_primes = (2, 3, 5,\
    \ 7, 11, 13);\n    my %hex_map = map { $hex[$_] => $hex_primes[$_] } 0..$#hex;\n\
    \    my @digits = split //, $num;\n    for my $digit (@digits) {\n        if (exists\
    \ $hex_map{$digit}) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex_primes = qw(2 3 5 7 B D);\n    my %hex_primes\
    \ = map { $_ => 1 } @hex_primes;\n    for my $digit (split //, $num) {\n     \
    \   $count++ if $hex_primes{$digit};\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my %primes = (2,3,5,7,11,13);\n    foreach my $i (split //, $num)\
    \ {\n        if (exists $primes{hex($i)}) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my %primes = map { $_ => 1 } @primes;\n    for my $char (split\
    \ //, $num) {\n        $count++ if $primes{$char};\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @nums = split\
    \ //, $num;\n    foreach my $n (@nums) {\n        if (grep {$_ eq $n} @primes)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n\
    \        if ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split //, $num;\n    foreach my $digit (@digits) {\n       \
    \ if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n        if (grep\
    \ {$_ eq $n} @primes) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my %primes = (\n        2 => 1,\n        3 => 1,\n\
    \        5 => 1,\n        7 => 1,\n        11 => 1,\n        13 => 1,\n    );\n\
    \    my @digits = split //, $num;\n    for my $digit (@digits) {\n        if ($primes{hex($digit)})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @hex_primes = (2, 3, 5, 7, 11, 13);\n    my @hex_nums =\
    \ split(//, $num);\n    foreach my $hex_num (@hex_nums) {\n        if (grep {$_\
    \ eq $hex_num} @hex_primes) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n    foreach\
    \ my $h (@hex) {\n        if ($h =~ /[2357BD]/) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @digits =\
    \ split(//, $num);\n    foreach my $digit (@digits) {\n        if ($digit =~ /[2357BD]/)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @nums = split(//, $num);\n    for my $n (@nums) {\n    \
    \    if ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n \
    \   my @hex = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my\
    \ @hex_primes = (10, 11, 12, 13, 14, 15);\n    my @hex_digits = split(//, $num);\n\
    \    for my $digit (@hex_digits) {\n        for my $hex (@hex) {\n           \
    \ if ($digit eq $hex) {\n                for my $prime (@primes) {\n         \
    \           if ($hex eq $prime) {\n                        $count++;\n       \
    \             }\n                }\n            }\n        }\n        for my $hex_prime\
    \ (@hex_primes) {\n            if ($digit eq $hex_prime) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 'A', 'B', 'C', 'D', 'E', 'F');\n    my %hex = map { $hex[$_] => $_ } 0..$#hex;\n\
    \    my @digits = split //, $num;\n    for my $digit (@digits) {\n        $count++\
    \ if grep { $hex{$digit} == $_ } @primes;\n    }\n    return $count;\n}", "  \
    \  my $count = 0;\n    my @nums = split //, $num;\n    foreach my $n (@nums) {\n\
    \        if ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    my %primes = (\n        '2' =>\
    \ 1,\n        '3' => 1,\n        '5' => 1,\n        '7' => 1,\n        'B' =>\
    \ 1,\n        'D' => 1,\n    );\n    foreach my $digit (split(//, $num)) {\n \
    \       $count++ if exists $primes{$digit};\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    for my $i (0..length($num)-1)\
    \ {\n        $count++ if grep {$num->[$i] eq $_} @primes;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @nums = split(//,\
    \ $num);\n    foreach my $n (@nums) {\n        if (grep(/^$n$/, @primes)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my $count = 0;\n    foreach my $digit (split(//,\
    \ $num)) {\n        foreach my $prime (@primes) {\n            if ($digit eq $prime)\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @digits = split(//, $num);\n    my @primes = (2,\
    \ 3, 5, 7, 11, 13);\n    foreach my $digit (@digits) {\n        if (grep {$_ eq\
    \ $digit} @primes) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex =\
    \ (\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n\
    \        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n\
    \        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n\
    \        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15,\n\
    \    );\n    for my $digit (split //, $num) {\n        if (grep {$_ == $hex{$digit}}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my %hex_to_dec = map {\
    \ $hex[$_] => $_ } 0 .. $#hex;\n    my @digits = split //, $num;\n    for my $digit\
    \ (@digits) {\n        if (grep { $hex_to_dec{$digit} == $_ } @primes) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @digits = split(//, $num);\n    for my $digit (@digits) {\n   \
    \     if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n      \
    \  if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11,\
    \ 13);\n    my %primes = map { $_ => 1 } @primes;\n    for my $char (split //,\
    \ $num) {\n        $count++ if exists $primes{hex($char)};\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my\
    \ @digits = split(//, $num);\n    foreach my $digit (@digits) {\n        foreach\
    \ my $prime (@primes) {\n            if ($digit eq $prime) {\n               \
    \ $count++;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes = map {\
    \ $_ => 1 } @primes;\n    my @digits = split //, $num;\n    for my $digit (@digits)\
    \ {\n        $count++ if exists $primes{$digit};\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my %primes = map { $_\
    \ => 1 } @primes;\n    for my $digit (split //, $num) {\n        $count++ if $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n    \
    \    if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n      \
    \  if (grep(/^$digit$/, @primes)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @hex_primes = qw(2 3 5 7\
    \ B D);\n    my @num_arr = split(//, $num);\n    foreach my $digit (@num_arr)\
    \ {\n        if (grep {$_ eq $digit} @hex_primes) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my %hex = (\n        0 => 0,\n        1 => 1,\n\
    \        2 => 2,\n        3 => 3,\n        4 => 4,\n        5 => 5,\n        6\
    \ => 6,\n        7 => 7,\n        8 => 8,\n        9 => 9,\n        A => 10,\n\
    \        B => 11,\n        C => 12,\n        D => 13,\n        E => 14,\n    \
    \    F => 15,\n    );\n    my @digits = split(//, $num);\n    foreach my $digit\
    \ (@digits) {\n        if (grep {$_ == $hex{$digit}} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my @hex = split //, $num;\n  \
    \  my $count = 0;\n    foreach my $hex (@hex) {\n        if ($hex =~ /[2357BD]/)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex_primes = map\
    \ { $_ => 1 } @primes;\n    for my $digit (split //, $num) {\n        $count++\
    \ if exists $hex_primes{$digit};\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @num = split(//, $num);\n  \
    \  foreach my $i (@num) {\n        if (grep {$_ eq $i} @primes) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @primes = qw(2 3 5 7 B D);\n    my @digits = split //, $num;\n    foreach\
    \ my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my @primes = (2,\
    \ 3, 5, 7, 11, 13);\n    my $count = 0;\n    my @digits = split(//, $num);\n \
    \   foreach my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1\
    \ } @primes;\n    my @digits = split //, $num;\n    for my $digit (@digits) {\n\
    \        if (exists $primes{$digit}) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count\
    \ = 0;\n    foreach my $digit (split //, $num) {\n        $count++ if grep {$_\
    \ eq $digit} @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n  \
    \  my @hex = split(//, $num);\n    foreach my $hex (@hex) {\n        if ($hex\
    \ =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes\
    \ = map { $_ => 1 } @primes;\n    my @digits = split //, $num;\n    for my $digit\
    \ (@digits) {\n        if ($primes{$digit}) {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2\
    \ 3 5 7 B D);\n    my @num = split(//, $num);\n    foreach my $n (@num) {\n  \
    \      foreach my $p (@primes) {\n            if ($n eq $p) {\n              \
    \  $count++;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex_map = (\n \
    \       '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n \
    \       '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n \
    \       '8' => 8,\n        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n\
    \        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15,\n\
    \    );\n    foreach my $digit (split //, $num) {\n        if (grep {$_ == $hex_map{$digit}}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @hex = split(//,$num);\n    foreach my $hex (@hex) {\n\
    \        if ($hex =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11,\
    \ 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits = split //,\
    \ $num;\n    foreach my $digit (@digits) {\n        $count++ if exists $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5,\
    \ 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits = split\
    \ //, $num;\n    for my $digit (@digits) {\n        if (exists $primes{$digit})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @digits = split(//, $num);\n    foreach my $digit (@digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my @nums = split(//, $num);\n\
    \    foreach my $n (@nums) {\n        if ($n =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my %primes = map { $_ => 1 } @primes;\n    for my $digit\
    \ (split //, $num) {\n        $count++ if $primes{$digit};\n    }\n    return\
    \ $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count = 0;\n    foreach\
    \ my $digit (split //, $num) {\n        $count++ if grep {$_ eq $digit} @primes;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my %primes = map { $_ => 1 } @primes;\n    for my $digit (split\
    \ //, $num) {\n        $count++ if $primes{$digit};\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @hex = split(//,\
    \ $num);\n    foreach my $h (@hex) {\n        foreach my $p (@primes) {\n    \
    \        if ($h eq $p) {\n                $count++;\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my @primes = (2, 3, 5, 7, 11, 13);\n    my\
    \ $count = 0;\n    foreach my $digit (split //, $num) {\n        if (grep {$_\
    \ eq $digit} @primes) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split\
    \ //, $num;\n    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my %primes = map { $_\
    \ => 1 } @primes;\n    for my $digit (split //, $num) {\n        $count++ if $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @hex = split(//, $num);\n    foreach my $hex (@hex) {\n    \
    \    if (grep {$_ eq $hex} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split //, $num;\n    foreach my $digit (@digits) {\n       \
    \ if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    for my $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my @digits = split //, $num;\n\
    \    my $count = 0;\n    for my $d (@digits) {\n        if ($d =~ /[2357BD]/)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ @digits = split //, $num;\n    my $count = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my %primes = (\n     \
    \   '2' => 1,\n        '3' => 1,\n        '5' => 1,\n        '7' => 1,\n     \
    \   'B' => 1,\n        'D' => 1,\n    );\n    for my $c (split //, $num) {\n \
    \       $count++ if $primes{$c};\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @num = split(//, $num);\n  \
    \  foreach my $digit (@num) {\n        if (grep {$_ eq $digit} @primes) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @primes = qw(2 3 5 7 B D);\n    foreach my $digit (split //, $num)\
    \ {\n        $count++ if grep {$_ eq $digit} @primes;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %hex =\
    \ (0 => 0, 1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 =>\
    \ 9, A => 10, B => 11, C => 12, D => 13, E => 14, F => 15);\n    my @num = split\
    \ //, $num;\n    foreach my $digit (@num) {\n        if (grep {$_ == $hex{$digit}}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my @digits = split //, $num;\n    my $count = 0;\n    foreach my $digit (@digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n    \
    \    if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my $count = 0;\n\
    \    foreach my $digit (split //, $num) {\n        $count++ if grep {$_ eq $digit}\
    \ @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n    my @hex_primes\
    \ = qw(2 3 5 7 B D);\n    my %hex_primes = map { $_ => 1 } @hex_primes;\n    for\
    \ my $char (split //, $num) {\n        $count++ if exists $hex_primes{$char};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5,\
    \ 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits = split\
    \ //, $num;\n    for my $digit (@digits) {\n        $count++ if $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @hex = split(//,$num);\n\
    \    foreach my $hex (@hex) {\n        if ($hex eq '2' || $hex eq '3' || $hex\
    \ eq '5' || $hex eq '7' || $hex eq 'B' || $hex eq 'D') {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @hex =\
    \ split //, $num;\n    foreach my $hex (@hex) {\n        if ($hex =~ /[2357BD]/)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my %primes = (\n        2 => 1,\n        3 => 1,\n        5\
    \ => 1,\n        7 => 1,\n        11 => 1,\n        13 => 1,\n    );\n    my @digits\
    \ = split(//, $num);\n    foreach my $digit (@digits) {\n        if ($primes{hex($digit)})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @hex = split(//, $num);\n    my @primes = (2, 3, 5, 7, 11,\
    \ 13);\n    foreach my $hex (@hex) {\n        foreach my $prime (@primes) {\n\
    \            if ($hex eq $prime) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @digits\
    \ = split //, $num;\n    foreach my $digit (@digits) {\n        if ($digit =~\
    \ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes\
    \ = map { $_ => 1 } @primes;\n    my @digits = split //, $num;\n    foreach my\
    \ $digit (@digits) {\n        if (exists $primes{$digit}) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @hex_primes\
    \ = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums)\
    \ {\n        if (grep {$_ eq $n} @hex_primes) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2,\
    \ 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @hex =\
    \ split //, $num;\n    for my $hex (@hex) {\n        if (exists $primes{$hex})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    foreach my $digit (split(//,\
    \ $num)) {\n        $count++ if grep {$_ eq $digit} @primes;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my %primes = (\n        '2' => 1,\n  \
    \      '3' => 1,\n        '5' => 1,\n        '7' => 1,\n        'B' => 1,\n  \
    \      'D' => 1,\n    );\n    for my $c (split //, $num) {\n        $count++ if\
    \ $primes{$c};\n    }\n    return $count;\n}", "    my @primes = (2, 3, 5, 7,\
    \ 11, 13);\n    my @digits = split //, $num;\n    my $count = 0;\n    foreach\
    \ my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my @hex = split(//,\
    \ $num);\n    my $count = 0;\n    foreach my $hex (@hex) {\n        if ($hex =~\
    \ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex_digits = split(//, $num);\n    foreach my\
    \ $digit (@hex_digits) {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n    foreach my $digit\
    \ (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B',\
    \ 'C', 'D', 'E', 'F');\n    my %hex = map { $hex[$_] => $_ } 0..$#hex;\n    my\
    \ @digits = split //, $num;\n    foreach my $digit (@digits) {\n        if (grep\
    \ { $_ == $hex{$digit} } @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split //, $num;\n    for my $digit (@digits) {\n        for\
    \ my $prime (@primes) {\n            if ($digit eq $prime) {\n               \
    \ $count++;\n            }\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my %hex = map { $hex[$_]\
    \ => $_ } 0 .. $#hex;\n    my @digits = split //, $num;\n    foreach my $digit\
    \ (@digits) {\n        my $dec = $hex{$digit};\n        if (grep { $dec == $_\
    \ } @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my @primes = (2, 3, 5, 7, 11, 13);\n    my $count = 0;\n    for my $digit (split\
    \ //, $num) {\n        for my $prime (@primes) {\n            if ($digit eq $prime\
    \ || $digit eq uc(sprintf(\"%x\", $prime))) {\n                $count++;\n   \
    \         }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my @primes = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach\
    \ my $n (@nums) {\n        if (grep {$_ eq $n} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15);\n    my @hex_primes = (2, 3, 5, 7, 11, 13);\n    my %hex_primes\
    \ = map { $_ => 1 } @hex_primes;\n    my %hex = map { $_ => 1 } @hex;\n    my\
    \ @num = split //, $num;\n    foreach my $i (@num) {\n        if (exists $hex_primes{$i})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my %primes = map {\
    \ $_ => 1 } @primes;\n    for my $char (split //, $num) {\n        $count++ if\
    \ $primes{hex($char)};\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my @primes = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach\
    \ my $n (@nums) {\n        if (grep {$_ eq $n} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n    for my $digit (@digits)\
    \ {\n        for my $prime (@primes) {\n            if ($digit eq $prime) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex =\
    \ (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my %hex = map {\
    \ $hex[$_] => $_ } 0 .. $#hex;\n    my @digits = split //, $num;\n    for my $digit\
    \ (@digits) {\n        if (exists $hex{$digit}) {\n            $count++ if grep\
    \ { $hex{$digit} == $_ } @primes;\n        }\n    }\n    return $count;\n}", " \
    \   my @primes = qw(2 3 5 7 B D);\n    my $count = 0;\n    foreach my $digit (split\
    \ //, $num) {\n        $count++ if grep {$_ eq $digit} @primes;\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @hex = split //, $num;\n    foreach\
    \ my $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}", "    my $count = 0;\n    my %primes =\
    \ (\n        '2' => 1,\n        '3' => 1,\n        '5' => 1,\n        '7' => 1,\n\
    \        'B' => 1,\n        'D' => 1,\n    );\n    for my $c (split //, $num)\
    \ {\n        if (exists $primes{$c}) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my @num =\
    \ split(//, $num);\n    my $count = 0;\n    for my $i (@num) {\n        for my\
    \ $j (@primes) {\n            if ($i eq $j) {\n                $count++;\n   \
    \         }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my %primes = (\n        2 => 1,\n        3 => 1,\n        5 => 1,\n      \
    \  7 => 1,\n        11 => 1,\n        13 => 1,\n    );\n    my @digits = split\
    \ //, $num;\n    foreach my $digit (@digits) {\n        if ($primes{hex($digit)})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @hex = split //, $num;\n    foreach my $hex (@hex) {\n \
    \       if ($hex =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11,\
    \ 13);\n    my @digits = split(//, $num);\n    foreach my $d (@digits) {\n   \
    \     if (grep {$_ eq $d} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    for my $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my %primes\
    \ = (\n        '2' => 1,\n        '3' => 1,\n        '5' => 1,\n        '7' =>\
    \ 1,\n        'B' => 1,\n        'D' => 1,\n    );\n    for my $digit (split //,\
    \ $num) {\n        $count++ if exists $primes{$digit};\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @nums = split //, $num;\n    foreach my $n (@nums)\
    \ {\n        if ($n =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    foreach my $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums)\
    \ {\n        if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    foreach my $digit (@hex) {\n        if ($digit =~ /[2357BD]/) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n    foreach\
    \ my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @primes = qw(2 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach\
    \ my $n (@nums) {\n        if (grep {$_ eq $n} @primes) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my %hex = (\n        '0' => 0,\n        '1' =>\
    \ 1,\n        '2' => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' =>\
    \ 5,\n        '6' => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' =>\
    \ 9,\n        'A' => 10,\n        'B' => 11,\n        'C' => 12,\n        'D'\
    \ => 13,\n        'E' => 14,\n        'F' => 15,\n    );\n    for my $i (0 ..\
    \ length($num) - 1) {\n        my $digit = substr($num, $i, 1);\n        if (grep\
    \ {$_ == $hex{$digit}} @primes) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n\
    \    foreach my $hex (@hex) {\n        if ($hex =~ /[2357BD]/) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my @nums = split(//, $num);\n    foreach my $n (@nums) {\n        if ($n =~\
    \ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @digits = split\
    \ //, $num;\n    foreach my $digit (@digits) {\n        if (grep {$_ eq $digit}\
    \ @primes) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    my %hex = map { $hex[$_]\
    \ => $_ } 0 .. $#hex;\n    my %primes = map { $primes[$_] => $_ } 0 .. $#primes;\n\
    \    my @num = split //, $num;\n    foreach my $n (@num) {\n        if (exists\
    \ $primes{$hex{$n}}) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw/2 3 5 7 B D/;\n    my @digits = split\
    \ //, $num;\n    foreach my $digit (@digits) {\n        $count++ if grep {$_ eq\
    \ $digit} @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n    my\
    \ @primes = qw(2 3 5 7 B D);\n    my @num = split(//, $num);\n    foreach my $n\
    \ (@num) {\n        foreach my $p (@primes) {\n            if($n eq $p) {\n  \
    \              $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @nums = split\
    \ //, $num;\n    foreach my $n (@nums) {\n        $count++ if grep {$_ eq $n}\
    \ @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes\
    \ = (2, 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits\
    \ = split //, $num;\n    for my $digit (@digits) {\n        if ($primes{$digit})\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n    my @nums = split //, $num;\n\
    \    foreach my $n (@nums) {\n        if (grep {$_ eq $n} @primes) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @hex = (0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F');\n    my @primes\
    \ = (2,3,5,7,11,13);\n    my %hex_primes = map { $hex[$_] => $primes[$_] } 0..$#hex;\n\
    \    for my $char (split //, $num) {\n        $count++ if $hex_primes{$char};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @digits = split //, $num;\n    foreach my $digit (@digits) {\n\
    \        if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    return 0 if $num eq '';\n    my @digits =\
    \ split(//, $num);\n    my $count = 0;\n    for my $d (@digits) {\n        if\
    \ ($d =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex = split //, $num;\n    for my $h (@hex) {\n\
    \        if ($h =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n  \
    \  return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split(//, $num);\n    foreach my $digit (@digits) {\n      \
    \  if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my @primes = qw(2 3 5 7 B D);\n    my @digits =\
    \ split //, $num;\n    my $count = 0;\n    for my $digit (@digits) {\n       \
    \ $count++ if grep {$_ eq $digit} @primes;\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    my @hex_digits = split //, $num;\n    for my $digit (@hex_digits)\
    \ {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @num = split(//, $num);\n    foreach my $n (@num) {\n      \
    \  if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    my @digits = split //, $num;\n    foreach my $digit (@digits) {\n       \
    \ if (grep {$_ eq $digit} @primes) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7 B D);\n\
    \    foreach my $digit (split //, $num) {\n        $count++ if grep {$_ eq $digit}\
    \ @primes;\n    }\n    return $count;\n}", "    my $count = 0;\n    my %primes\
    \ = (\n        '2' => 1,\n        '3' => 1,\n        '5' => 1,\n        '7' =>\
    \ 1,\n        'B' => 1,\n        'D' => 1,\n    );\n    for my $c (split //, $num)\
    \ {\n        $count++ if $primes{$c};\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex = (0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F');\n    my %hex_map = map {\
    \ $hex[$_] => $_ } 0..$#hex;\n    my @digits = split //, $num;\n    for my $digit\
    \ (@digits) {\n        if (grep { $hex_map{$digit} == $_ } @primes) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @primes = qw(2 3 5 7 B D);\n    my @digits = split(//, $num);\n    foreach\
    \ my $digit (@digits) {\n        if (grep {$_ eq $digit} @primes) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n        if ($n\
    \ =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @primes = (2, 3, 5, 7, 11, 13);\n    my @hex =\
    \ (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F');\n    my %hex =\
    \ map { $hex[$_] => $_ } 0..$#hex;\n    my @digits = split //, $num;\n    foreach\
    \ my $digit (@digits) {\n        if (grep { $_ == $hex{$digit} } @primes) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    my $count\
    \ = 0;\n    my @hex = split //, $num;\n    foreach my $hex (@hex) {\n        if\
    \ ($hex =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    my @hex = split(//, $num);\n    for my\
    \ $i (@hex) {\n        if ($i =~ /[2357BD]/) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2,\
    \ 3, 5, 7, 11, 13);\n    my %primes = map { $_ => 1 } @primes;\n    my @digits\
    \ = split //, $num;\n    for my $digit (@digits) {\n        $count++ if $primes{$digit};\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5\
    \ 7 B D);\n    my @num = split(//, $num);\n    foreach my $n (@num) {\n      \
    \  foreach my $p (@primes) {\n            if ($n eq $p) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @nums = split //, $num;\n    foreach my $n (@nums) {\n        if ($n =~\
    \ /[2|3|5|7|B|D]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex = split(//, $num);\n    foreach my $hex (@hex)\
    \ {\n        if ($hex =~ /[2357BD]/) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    my @primes = (2, 3, 5, 7,\
    \ 11, 13);\n    my @digits = split(//, $num);\n    foreach my $digit (@digits)\
    \ {\n        if (grep {$_ eq $digit} @primes) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2\
    \ 3 5 7 B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n\
    \        if (grep {$_ eq $n} @primes) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}", "    my $count = 0;\n    my @primes = qw(2 3 5 7\
    \ B D);\n    my @nums = split(//, $num);\n    foreach my $n (@nums) {\n      \
    \  foreach my $p (@primes) {\n            if ($n eq $p) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my @hex = split(//, $num);\n    foreach my $digit (@hex) {\n        if ($digit\
    \ =~ /[2357BD]/) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my @hex_digits = split //, $num;\n    foreach my\
    \ $digit (@hex_digits) {\n        if ($digit =~ /[2357BD]/) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

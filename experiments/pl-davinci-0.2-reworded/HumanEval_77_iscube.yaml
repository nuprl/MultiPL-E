name: HumanEval_77_iscube
language: pl
prompt: "# Write a function that takes an integer a and returns 1 \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\n# >>> iscube(1)\n# 1\n# >>> iscube(2)\n# \"\"\n# >>> iscube(-1)\n\
  # 1\n# >>> iscube(64)\n# 1\n# >>> iscube(0)\n# 1\n# >>> iscube(180)\n# \"\"\nsub\
  \ iscube {\n    my($a) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&iscube;\n\
  \        if(eq_deeply($candidate->(1),1)) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->(2),\"\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(-1),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(64),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(180),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1000),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(0),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1729),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $b = int(sqrt($a));\n    return $b * $b * $b == $a;\n}", " \
    \   my $b = int(abs($a) ** (1/3));\n    return $a == $b * $b * $b ? 1 : \"\";\n\
    }", "    my $b = int(sqrt($a));\n    return $b * $b * $b == $a;\n}", "    my $b\
    \ = int(cbrt($a));\n    return $b * $b * $b == $a;\n}", "    my $b = int(sqrt($a));\n\
    \    return $b * $b * $b == $a;\n}", "    my $x = int(cbrt($a));\n    return $x*$x*$x\
    \ == $a;\n}", "    my $b = int(sqrt($a));\n    return $b * $b * $b == $a;\n}",
  "    my $b = int(sqrt($a));\n    return $b * $b * $b == $a;\n}", "    my $b = int(sqrt($a));\n\
    \    if ($b * $b * $b == $a) {\n        return 1;\n    } else {\n        return\
    \ \"\";\n    }\n}", "    if ($a < 0) {\n        $a = -$a;\n    }\n    my $x =\
    \ int(exp(log($a)/3));\n    return $x * $x * $x == $a;\n}", "    my $x = int(sqrt($a));\n\
    \    return $x * $x * $x == $a;\n}", "    my($i);\n    for ($i = 0; $i * $i *\
    \ $i <= $a; $i++) {\n        if ($i * $i * $i == $a) {\n            return 1;\n\
    \        }\n    }\n    return \"\";\n}", "    my $b = int(sqrt($a));\n    return\
    \ $b * $b * $b == $a;\n}", "    my $b = int(abs($a) ** (1/3));\n    return $a\
    \ == $b * $b * $b;\n}", "    my $b = int(abs($a) ** (1/3));\n    return $a ==\
    \ $b * $b * $b;\n}", "    my $b = int(sqrt($a));\n    return $b * $b * $b == $a;\n\
    }", "    my $b = int(cbrt($a));\n    return $b*$b*$b == $a;\n}", "    my $b =\
    \ int(cbrt($a));\n    return $b * $b * $b == $a;\n}", "    my $b = int(abs($a)\
    \ ** (1/3));\n    return $a == $b ** 3;\n}", "    my $b = int(sqrt($a));\n   \
    \ return $b * $b * $b == $a;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

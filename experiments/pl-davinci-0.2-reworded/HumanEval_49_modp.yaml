name: HumanEval_49_modp
language: pl
prompt: "# Return 2^n modulo p (be aware of numerics).\n# >>> modp(3, 5)\n# 3\n# >>>\
  \ modp(1101, 101)\n# 2\n# >>> modp(0, 101)\n# 1\n# >>> modp(3, 11)\n# 8\n# >>> modp(100,\
  \ 101)\n# 1\nsub modp {\n    my($n, $p) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&modp;\n \
  \       if(eq_deeply($candidate->(3, 5),3)) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(1101, 101),2)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(0,\
  \ 101),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(3, 11),8)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->(100, 101),1)) {\n      \
  \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30,\
  \ 5),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(31,\
  \ 5),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $r = 1;\n    while ($n > 0) {\n        $r = ($r * 2) % $p if\
    \ $n % 2;\n        $n = int($n / 2);\n    }\n    return $r;\n}", "    my $r =\
    \ 1;\n    while ($n > 0) {\n        $r = ($r * 2) % $p if $n % 2;\n        $n\
    \ = int($n / 2);\n    }\n    return $r;\n}", "    my $r = 1;\n    while ($n >\
    \ 0) {\n        $r = ($r * 2) % $p if $n % 2;\n        $n = int($n / 2);\n   \
    \ }\n    return $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n        $r = ($r\
    \ * 2) % $p if $n % 2;\n        $n = int($n / 2);\n    }\n    return $r;\n}",
  "    return 1 if $n == 0;\n    my $m = modp($n >> 1, $p);\n    $m *= $m;\n    $m\
    \ %= $p;\n    $m *= 2 if $n & 1;\n    $m %= $p;\n    return $m;\n}", "    return\
    \ 1 if $n == 0;\n    my $r = modp($n >> 1, $p);\n    $r = ($r * $r) % $p;\n  \
    \  $r = ($r * $n) % $p if $n & 1;\n    return $r;\n}", "    my $r = 1;\n    my\
    \ $b = 2;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $r =\
    \ ($r * $b) % $p;\n        }\n        $n = int($n / 2);\n        $b = ($b * $b)\
    \ % $p;\n    }\n    return $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n  \
    \      $r = ($r * 2) % $p if $n % 2;\n        $n = int($n / 2);\n    }\n    return\
    \ $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n\
    \            $r = ($r * $n) % $p;\n        }\n        $n = int($n / 2);\n    }\n\
    \    return $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n        if ($n % 2\
    \ == 1) {\n            $r = ($r * $p) % MOD;\n        }\n        $p = ($p * $p)\
    \ % MOD;\n        $n /= 2;\n    }\n    return $r;\n}", "    return 1 if $n ==\
    \ 0;\n    my $x = modp($n >> 1, $p);\n    $x = ($x * $x) % $p;\n    $x = ($x *\
    \ 2) % $p if $n & 1;\n    return $x;\n}", "    my $r = 1;\n    while ($n > 0)\
    \ {\n        if ($n % 2 == 1) {\n            $r = ($r * $n) % $p;\n        }\n\
    \        $n = int($n / 2);\n    }\n    return $r;\n}", "    return 1 if $n ==\
    \ 0;\n    my $q = modp($n >> 1, $p);\n    $q = ($q * $q) % $p;\n    $q = ($q *\
    \ $n) % $p if $n & 1;\n    return $q;\n}", "    my $r = 1;\n    while ($n > 0)\
    \ {\n        $r = ($r * 2) % $p if $n % 2;\n        $n = int($n / 2);\n    }\n\
    \    return $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n        $r = ($r *\
    \ 2) % $p if $n % 2;\n        $n = int($n / 2);\n    }\n    return $r;\n}", " \
    \   my $r = 1;\n    while ($n > 0) {\n        $r = ($r * 2) % $p if $n % 2;\n\
    \        $n = int($n / 2);\n    }\n    return $r;\n}", "    my $r = 1;\n    while\
    \ ($n > 0) {\n        $r = ($r * 2) % $p if $n % 2;\n        $n = int($n / 2);\n\
    \    }\n    return $r;\n}", "    my $r = 1;\n    while ($n > 0) {\n        $r\
    \ = ($r * 2) % $p if $n % 2;\n        $n = int($n / 2);\n    }\n    return $r;\n\
    }", "    my $r = 1;\n    my $b = 2;\n    while ($n > 0) {\n        if ($n % 2\
    \ == 1) {\n            $r = ($r * $b) % $p;\n        }\n        $n = int($n /\
    \ 2);\n        $b = ($b * $b) % $p;\n    }\n    return $r;\n}", "    my($r) =\
    \ 1;\n    while ($n > 0) {\n\t$r = ($r * 2) % $p if ($n & 1);\n\t$n >>= 1;\n \
    \   }\n    return $r;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_118_get_closest_vowel
language: pl
prompt: "# You are given a word. Your task is to find the closest vowel that stands\
  \ between \n# two consonants from the right side of the word (case sensitive).\n\
  # Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
  # find any vowel met the above condition. \n# You may assume that the given string\
  \ contains English letter only.\n# Example:\n# >>> get_closest_vowel(\"yogurt\"\
  )\n# \"u\"\n# >>> get_closest_vowel(\"FULL\")\n# \"U\"\n# >>> get_closest_vowel(\"\
  quick\")\n# \"\"\n# >>> get_closest_vowel(\"ab\")\n# \"\"\nsub get_closest_vowel\
  \ {\n    my($word) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_closest_vowel;\n\
  \        if(eq_deeply($candidate->(\"yogurt\"),\"u\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"full\"\
  ),\"u\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  easy\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"eAsy\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ali\"),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  bad\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"most\"),\"o\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ab\"),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  ba\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->(\"quick\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"anime\"),\"i\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  Asia\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"Above\"),\"o\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @consonants = ('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    my $vowel = '';\n    my $consonant = '';\n    my $result\
    \ = '';\n    my $distance = 0;\n    my $min_distance = 0;\n    my $i = 0;\n  \
    \  my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $e = 0;\n    my $i = 0;\n\
    \    my $o = 0;\n    my $u = 0;\n    my $length = length($word);\n    my $substring\
    \ = '';\n    my $substring_length = 0;\n    my $substring_index = 0;\n    my $substring_index_2\
    \ = 0;\n    my $substring_index_3 = 0;\n    my $substring_index_4 = 0;\n    my\
    \ $substring_index_5 = 0;\n    my $substring_index_6 = 0;\n    my $substring_index_7\
    \ = 0;\n    my $substring_index_8 = 0;\n    my $substring_index_9 = 0;\n    my\
    \ $substring_index_10 = 0;\n    my $substring_index_11 = 0;\n    my $substring_index_12\
    \ = 0;\n    my $", "    my $vowels = \"aeiouAEIOU\";\n    my $consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $vowel_pos = -1;\n    my\
    \ $consonant_pos = -1;\n    for (my $i = length($word) - 1; $i >= 0; $i--) {\n\
    \        my $char = substr($word, $i, 1);\n        if (index($vowels, $char) !=\
    \ -1) {\n            $vowel_pos = $i;\n        }\n        if (index($consonants,\
    \ $char) != -1) {\n            $consonant_pos = $i;\n            last;\n     \
    \   }\n    }\n    if ($vowel_pos != -1 && $consonant_pos != -1 && $vowel_pos >\
    \ $consonant_pos) {\n        return substr($word, $vowel_pos, 1);\n    }\n   \
    \ return \"\";\n}", "    my $vowels = \"aeiouAEIOU\";\n    my $consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $closest_vowel = \"\";\n\
    \    my $closest_vowel_index = -1;\n    my $closest_consonant_index = -1;\n  \
    \  my $closest_consonant_index_2 = -1;\n    my $i = 0;\n    while ($i < length($word))\
    \ {\n        if (index($vowels, substr($word, $i, 1)) != -1) {\n            if\
    \ ($closest_consonant_index != -1 && $closest_consonant_index_2 != -1) {\n   \
    \             if ($i - $closest_consonant_index < $closest_consonant_index_2 -\
    \ $i) {\n                    $closest_vowel = substr($word, $i, 1);\n        \
    \            $closest_vowel_index = $i;\n                }\n            }\n  \
    \      }\n        elsif (index($consonants, substr($word, $i, 1)) != -1) {\n \
    \           if ($closest_consonant_index == -1) {\n                $closest_consonant_index\
    \ = $i;\n            }\n            else {\n                $closest_consonant_index_2\
    \ = $i;\n            }\n        }\n        $i++;\n    }\n    return $closest_vowel;\n\
    }", "    my $vowels = \"aeiou\";\n    my $consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    my $vowel_index = -1;\n    my $consonant_index = -1;\n    my $closest_vowel\
    \ = \"\";\n    my $closest_distance = 0;\n    my $distance = 0;\n    my $i = 0;\n\
    \    for ($i = length($word) - 1; $i >= 0; $i--) {\n        my $char = substr($word,\
    \ $i, 1);\n        if (index($vowels, $char) >= 0) {\n            $vowel_index\
    \ = $i;\n            if ($consonant_index >= 0) {\n                $distance =\
    \ $vowel_index - $consonant_index;\n                if ($closest_distance == 0\
    \ || $distance < $closest_distance) {\n                    $closest_distance =\
    \ $distance;\n                    $closest_vowel = $char;\n                }\n\
    \            }\n        }\n        elsif (index($consonants, $char) >= 0) {\n\
    \            $consonant_index = $i;\n        }\n    }\n    return $closest_vowel;\n\
    }", "    my $vowels = \"aeiouAEIOU\";\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $closest_vowel = \"\";\n    my $closest_vowel_index = -1;\n    my $closest_consonant_index\
    \ = -1;\n    my $closest_consonant_index_2 = -1;\n    for (my $i = 0; $i < length($word);\
    \ $i++) {\n        my $char = substr($word, $i, 1);\n        if (index($vowels,\
    \ $char) != -1) {\n            if ($closest_consonant_index != -1 && $closest_consonant_index_2\
    \ != -1) {\n                if ($i - $closest_consonant_index < $closest_consonant_index_2\
    \ - $i) {\n                    $closest_vowel = $char;\n                    $closest_vowel_index\
    \ = $i;\n                }\n            }\n        }\n        if (index($consonants,\
    \ $char) != -1) {\n            if ($closest_consonant_index == -1) {\n       \
    \         $closest_consonant_index = $i;\n            }\n            else {\n\
    \                $closest_consonant_index_2 = $i;\n            }\n        }\n\
    \    }\n    return $closest_vowel;\n}", "    my $vowels = 'aeiouAEIOU';\n    my\
    \ $consonants = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ';\n    my $i = length($word)\
    \ - 1;\n    while ($i >= 0) {\n        if (index($consonants, substr($word, $i,\
    \ 1)) >= 0) {\n            if ($i > 0 && index($vowels, substr($word, $i - 1,\
    \ 1)) >= 0) {\n                return substr($word, $i - 1, 1);\n            }\n\
    \            if ($i < length($word) - 1 && index($vowels, substr($word, $i + 1,\
    \ 1)) >= 0) {\n                return substr($word, $i + 1, 1);\n            }\n\
    \        }\n        $i--;\n    }\n    return '';\n}", "    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my\
    \ $result = \"\";\n    my $last_consonant = \"\";\n    my $last_vowel = \"\";\n\
    \    my $last_char = \"\";\n    my $current_char = \"\";\n    my $i = 0;\n   \
    \ my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n\
    \    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n\
    \    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n\
    \    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n\
    \    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n\
    \    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n    my $length = length($word);\n\
    \    for($i = $length - 1; $i >= 0; $i--) {\n        $current_char = substr($word,\
    \ $i, 1);\n        if(index($vow", "    my @vowels = ('a', 'e', 'i', 'o', 'u');\n\
    \    my @consonants = ('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    my $closest_vowel =\
    \ '';\n    my $closest_distance = 0;\n    my $distance = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $e = 0;\n    my $i = 0;\n\
    \    my $o = 0;\n    my $u = 0;\n    my $length = length($word);\n    for ($i\
    \ = 0; $i < $length; $i++) {\n        if ($word[$i] == 'b') {\n            $b\
    \ = 1;\n        }\n        if ($word[$i] == 'c') {\n            $c = 1;\n    \
    \    }\n        if ($word[$i] == 'd') {\n            $d = 1;\n        }\n    \
    \    if ($word[$i] == 'f') {\n            $f = 1;\n        }\n        if ($word[$i]\
    \ == 'g') {\n            $g = 1;\n        }\n        if ($word[$i] == 'h') {\n\
    \            $h = 1;\n        }\n        if ($word[$i] == 'j') {\n           \
    \ $j = 1;\n        }\n        if ($", "    my $vowels = \"aeiouAEIOU\";\n    my\
    \ $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $result\
    \ = \"\";\n    my $last_consonant = \"\";\n    my $last_vowel = \"\";\n    my\
    \ $i = length($word) - 1;\n    while ($i >= 0) {\n        my $char = substr($word,\
    \ $i, 1);\n        if (index($vowels, $char) >= 0) {\n            $last_vowel\
    \ = $char;\n        } elsif (index($consonants, $char) >= 0) {\n            $last_consonant\
    \ = $char;\n            last;\n        }\n        $i--;\n    }\n    if ($last_consonant\
    \ ne \"\" && $last_vowel ne \"\") {\n        $result = $last_vowel;\n    }\n \
    \   return $result;\n}", "    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my\
    \ @consonants = ('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    my @word = split(//, $word);\n\
    \    my $vowel = '';\n    my $consonant = '';\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $e = 0;\n    my $i = 0;\n    my $o = 0;\n\
    \    my $u = 0;\n    my $vowel_index = 0;\n    my $consonant_index = 0;\n    my\
    \ $vowel_distance = 0;\n    my $consonant_distance = 0;\n    my $vowel_distance_min\
    \ = 0;\n    my $consonant_distance_min = 0;\n    my $vowel_distance_min_index\
    \ = 0;\n    my $consonant_distance_min_index = 0;\n    my $vowel_distance_min_index_min\
    \ = 0;\n    my $consonant_distance_min_index_min = 0;\n    my $vowel_distance_min_index_min_index\
    \ = 0;\n    my $consonant_distance_min_index_min_index = 0;\n    my $vowel_distance_min_index_min_index",
  "    my $vowels = \"aeiouAEIOU\";\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowel_pos = -1;\n    my $consonant_pos = -1;\n    my $i = length($word)\
    \ - 1;\n    while ($i >= 0) {\n        my $char = substr($word, $i, 1);\n    \
    \    if (index($vowels, $char) >= 0) {\n            $vowel_pos = $i;\n       \
    \ }\n        if (index($consonants, $char) >= 0) {\n            $consonant_pos\
    \ = $i;\n            last;\n        }\n        $i--;\n    }\n    if ($vowel_pos\
    \ > $consonant_pos) {\n        return substr($word, $vowel_pos, 1);\n    }\n \
    \   return \"\";\n}", "    my $vowels = \"aeiouAEIOU\";\n    my $consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $vowel_index = -1;\n\
    \    my $consonant_index = -1;\n    my $i = length($word) - 1;\n    while ($i\
    \ >= 0) {\n        my $char = substr($word, $i, 1);\n        if (index($vowels,\
    \ $char) != -1) {\n            $vowel_index = $i;\n        }\n        if (index($consonants,\
    \ $char) != -1) {\n            $consonant_index = $i;\n            last;\n   \
    \     }\n        $i--;\n    }\n    if ($vowel_index != -1 && $consonant_index\
    \ != -1 && $vowel_index > $consonant_index) {\n        return substr($word, $vowel_index,\
    \ 1);\n    }\n    return \"\";\n}", "    my $vowels = \"aeiouAEIOU\";\n    my\
    \ $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $vowel_index\
    \ = -1;\n    my $consonant_index = -1;\n    for (my $i = length($word) - 1; $i\
    \ >= 0; $i--) {\n        if (index($consonants, substr($word, $i, 1)) != -1) {\n\
    \            $consonant_index = $i;\n            last;\n        }\n    }\n   \
    \ for (my $i = $consonant_index - 1; $i >= 0; $i--) {\n        if (index($vowels,\
    \ substr($word, $i, 1)) != -1) {\n            $vowel_index = $i;\n           \
    \ last;\n        }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1)\
    \ {\n        return \"\";\n    }\n    return substr($word, $vowel_index, 1);\n\
    }", "    my @vowels = (\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    my @consonants = (\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\", \"B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"\
    J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"\
    W\", \"X\", \"Y\", \"Z\");\n    my @word = split(\"\", $word);\n    my $last_consonant\
    \ = \"\";\n    my $last_vowel = \"\";\n    my $closest_vowel = \"\";\n    my $closest_distance\
    \ = 0;\n    my $current_distance = 0;\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $", "    my $vowels = \"aeiouAEIOU\";\n    my $consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my $vowel = \"\";\n \
    \   my $consonant = \"\";\n    my $result = \"\";\n    my $i = length($word) -\
    \ 1;\n    while ($i >= 0) {\n        $vowel = substr($word, $i, 1);\n        if\
    \ (index($vowels, $vowel) != -1) {\n            $result = $vowel;\n          \
    \  last;\n        }\n        $i--;\n    }\n    $i = length($word) - 1;\n    while\
    \ ($i >= 0) {\n        $consonant = substr($word, $i, 1);\n        if (index($consonants,\
    \ $consonant) != -1) {\n            $result = \"\";\n            last;\n     \
    \   }\n        $i--;\n    }\n    return $result;\n}", "    my @vowels = (\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    my $vowel;\n\
    \    my $i = length($word) - 1;\n    my $j = $i - 1;\n    while ($i >= 0) {\n\
    \        if (grep { $_ eq substr($word, $i, 1) } @vowels) {\n            $vowel\
    \ = substr($word, $i, 1);\n            last;\n        }\n        $i--;\n    }\n\
    \    while ($j >= 0) {\n        if (grep { $_ eq substr($word, $j, 1) } @vowels)\
    \ {\n            last;\n        }\n        $j--;\n    }\n    if ($j == -1) {\n\
    \        return \"\";\n    }\n    return $vowel;\n}", "    my $vowels = \"aeiou\"\
    ;\n    my $result = \"\";\n    my $index = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my", "    my $vowels = \"\
    aeiouAEIOU\";\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $result = \"\";\n    my $i = length($word) - 1;\n    while ($i > 0)\
    \ {\n        my $char = substr($word, $i, 1);\n        if (index($vowels, $char)\
    \ != -1) {\n            $result = $char;\n            last;\n        }\n     \
    \   $i--;\n    }\n    if ($result ne \"\") {\n        my $char = substr($word,\
    \ $i - 1, 1);\n        if (index($consonants, $char) == -1) {\n            $result\
    \ = \"\";\n        }\n    }\n    return $result;\n}", "    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    my\
    \ $closest_vowel = \"\";\n    my $closest_distance = length($word);\n    my $distance\
    \ = 0;\n    my $vowel_index = -1;\n    my $consonant_index = -1;\n    my $i =\
    \ 0;\n    while ($i < length($word)) {\n        if (index($vowels, substr($word,\
    \ $i, 1)) != -1) {\n            $vowel_index = $i;\n            $distance = $vowel_index\
    \ - $consonant_index;\n            if ($distance < $closest_distance && $distance\
    \ > 1) {\n                $closest_distance = $distance;\n                $closest_vowel\
    \ = substr($word, $vowel_index, 1);\n            }\n        }\n        elsif (index($consonants,\
    \ substr($word, $i, 1)) != -1) {\n            $consonant_index = $i;\n       \
    \ }\n        $i++;\n    }\n    return $closest_vowel;\n}", "    my $vowels = \"\
    aeiouAEIOU\";\n    my $consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $result = \"\";\n    my $last_consonant = \"\";\n    my $last_vowel\
    \ = \"\";\n    my $i = length($word) - 1;\n    while ($i >= 0) {\n        my $char\
    \ = substr($word, $i, 1);\n        if (index($vowels, $char) >= 0) {\n       \
    \     $last_vowel = $char;\n        }\n        if (index($consonants, $char) >=\
    \ 0) {\n            $last_consonant = $char;\n            if ($last_vowel ne \"\
    \") {\n                $result = $last_vowel;\n                last;\n       \
    \     }\n        }\n        $i--;\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

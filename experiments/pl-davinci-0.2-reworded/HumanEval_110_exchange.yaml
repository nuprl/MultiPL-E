name: HumanEval_110_exchange
language: pl
prompt: "# In this problem, you will implement a function that takes two arrays of\
  \ numbers,\n# and determines whether it is possible to perform an exchange of elements\n\
  # between them to make lst1 an array of only even numbers.\n# There is no limit\
  \ on the number of exchanged elements between lst1 and lst2.\n# If it is possible\
  \ to exchange elements between the lst1 and lst2 to make\n# all the elements of\
  \ lst1 to be even, return \"YES\".\n# Otherwise, return \"NO\".\n# For example:\n\
  # >>> exchange([1, 2, 3, 4], [1, 2, 3, 4])\n# \"YES\"\n# >>> exchange([1, 2, 3,\
  \ 4], [1, 5, 3, 4])\n# \"NO\"\n# It is assumed that the input arrays will be non-empty.\n\
  sub exchange {\n    my($lst1, $lst2) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&exchange;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4], [1, 2, 3, 4]),\"YES\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4], [1, 5, 3, 4]),\"NO\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4], [2, 1, 4, 3]),\"\
  YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 7, 3], [2, 6, 4]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([5, 7, 3], [2, 6, 3]),\"NO\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 6, 1, 8, 9], [3, 5, 5, 1, 1, 1]),\"NO\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([100, 200], [200,\
  \ 200]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd =\
    \ 0;\n    my $lst2_odd = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0)\
    \ {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n \
    \       }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n     \
    \       $lst2_even++;\n        } else {\n            $lst2_odd++;\n        }\n\
    \    }\n    if ($lst1_even == 0) {\n        return \"NO\";\n    }\n    if ($lst1_odd\
    \ == 0) {\n        return \"YES\";\n    }\n    if ($lst1_even == $lst2_odd) {\n\
    \        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $lst1_odd = grep\
    \ { $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep {\
    \ $_ % 2 } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return\
    \ $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", "    my $even = 0;\n    my\
    \ $odd = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    for\
    \ my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 == 0 and\
    \ $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $count = 0;\n    foreach my $i (@$lst1) {\n        if ($i\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    my $count2 = 0;\n\
    \    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $count2++;\n\
    \        }\n    }\n    if ($count == $count2) {\n        return \"YES\";\n   \
    \ } else {\n        return \"NO\";\n    }\n}", "    my $num_odd = 0;\n    my $num_even\
    \ = 0;\n    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n           \
    \ $num_even++;\n        } else {\n            $num_odd++;\n        }\n    }\n\
    \    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $num_even++;\n\
    \        } else {\n            $num_odd++;\n        }\n    }\n    if ($num_even\
    \ > $num_odd) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $i = 0;\n    my $j = 0;\n    my $lst1_len = scalar @$lst1;\n\
    \    my $lst2_len = scalar @$lst2;\n    while ($i < $lst1_len && $j < $lst2_len)\
    \ {\n        if ($lst1->[$i] % 2 == 0) {\n            $i++;\n        } elsif ($lst2->[$j]\
    \ % 2 == 0) {\n            $lst1->[$i] = $lst2->[$j];\n            $i++;\n   \
    \         $j++;\n        } else {\n            $j++;\n        }\n    }\n    if\
    \ ($i == $lst1_len) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}", "    my $count = 0;\n    for my $i (0..$#$lst1) {\n        if\
    \ ($lst1->[$i] % 2 == 1) {\n            for my $j (0..$#$lst2) {\n           \
    \     if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n\
    \                    $lst2->[$j] = 1;\n                    $count++;\n       \
    \             last;\n                }\n            }\n        }\n    }\n    if\
    \ ($count == 0) {\n        return \"NO\";\n    } else {\n        return \"YES\"\
    ;\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    foreach my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n\
    \        $lst1_odd++ if $lst1->[$i] % 2;\n        $lst2_even++ if $lst2->[$i]\
    \ % 2 == 0;\n    }\n    return \"YES\" if $lst1_odd == $lst2_even;\n    return\
    \ \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd = 1;\n       \
    \ }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n\
    \            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd && $lst2_even)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $flag = 0;\n    foreach my $i (0..$#{$lst1}) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            foreach my $j (0..$#{$lst2}) {\n                if\
    \ ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n \
    \                   $lst2->[$j] = $lst1->[$i];\n                    $flag = 1;\n\
    \                    last;\n                }\n            }\n        }\n    \
    \    if ($flag == 0) {\n            return \"NO\";\n        }\n    }\n    return\
    \ \"YES\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i\
    \ (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd =\
    \ 1;\n        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd\
    \ && $lst2_even) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd <= $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n\
    \        if ($i % 2 == 0) {\n            $even++;\n        } else {\n        \
    \    $odd++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else {\n   \
    \     return \"NO\";\n    }\n}", "    my $count = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 1) {\n            for my $j (0..$#$lst2) {\n\
    \                if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i]\
    \ = $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n           \
    \         $count++;\n                    last;\n                }\n          \
    \  }\n        }\n    }\n    if ($count == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }\n}", "    my $result = \"NO\";\n    my\
    \ $i = 0;\n    while ($i < scalar(@$lst1)) {\n        if ($lst1->[$i] % 2 == 1)\
    \ {\n            my $j = 0;\n            while ($j < scalar(@$lst2)) {\n     \
    \           if ($lst2->[$j] % 2 == 0) {\n                    my $tmp = $lst1->[$i];\n\
    \                    $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j]\
    \ = $tmp;\n                    $result = \"YES\";\n                    last;\n\
    \                }\n                $j++;\n            }\n        }\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $exchange = 0;\n    my $i = 0;\n    while\
    \ ($i < scalar(@$lst1)) {\n        if ($lst1->[$i] % 2 != 0) {\n            my\
    \ $j = 0;\n            while ($j < scalar(@$lst2)) {\n                if ($lst2->[$j]\
    \ % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n              \
    \      $lst2->[$j] = $lst1->[$i];\n                    $exchange = 1;\n      \
    \              last;\n                }\n                $j++;\n            }\n\
    \        }\n        $i++;\n    }\n    if ($exchange == 1) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $count = 0;\n\
    \    my $count2 = 0;\n    for my $i (0..$#{$lst1}) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $count++;\n        }\n    }\n    for my $i (0..$#{$lst2})\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $count2++;\n        }\n\
    \    }\n    if ($count == $#{$lst1} + 1) {\n        return \"YES\";\n    }\n \
    \   elsif ($count2 == $#{$lst2} + 1) {\n        return \"YES\";\n    }\n    else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count\
    \ = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    for my $i\
    \ (@$lst2) {\n        if ($i % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count >\
    \ $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    foreach my $elem\
    \ (@$lst1) {\n        $lst1_odd++ if $elem % 2;\n    }\n    foreach my $elem (@$lst2)\
    \ {\n        $lst2_even++ if $elem % 2 == 0;\n    }\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my\
    \ $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n  \
    \  for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n           \
    \ $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $lst2_even++;\n        }\n    }\n    if ($lst1_odd\
    \ == $lst2_even) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n    for\
    \ my $i (@$lst1) {\n        if ($i % 2 == 1) {\n            $lst1_odd_count++;\n\
    \        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 1) {\n    \
    \        $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count == $lst2_odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $len1 = @$lst1;\n    my $len2 = @$lst2;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $count = 0;\n    while ($i < $len1) {\n        if ($lst1->[$i] % 2 ==\
    \ 0) {\n            $i++;\n        } else {\n            $j = 0;\n           \
    \ while ($j < $len2) {\n                if ($lst2->[$j] % 2 == 0) {\n        \
    \            $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n\
    \                    $count++;\n                    last;\n                }\n\
    \                $j++;\n            }\n            $i++;\n        }\n    }\n \
    \   if ($count == $len1) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n \
    \   my $lst1_even_count = 0;\n    my $lst2_even_count = 0;\n    foreach my $num\
    \ (@$lst1) {\n        if ($num % 2 == 0) {\n            $lst1_even_count++;\n\
    \        } else {\n            $lst1_odd_count++;\n        }\n    }\n    foreach\
    \ my $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $lst2_even_count++;\n\
    \        } else {\n            $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count\
    \ == $lst2_even_count) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $exchange = 0;\n    for (my $i = 0; $i < @$lst1;\
    \ $i++) {\n        if ($lst1->[$i] % 2 == 1) {\n            for (my $j = 0; $j\
    \ < @$lst2; $j++) {\n                if ($lst2->[$j] % 2 == 0) {\n           \
    \         $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n\
    \                    $exchange = 1;\n                    last;\n             \
    \   }\n            }\n        }\n        if ($exchange == 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}", "    my $even = 0;\n   \
    \ my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    for\
    \ my $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 ==\
    \ 0) {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $lst2_even++;\n        } else {\n            $lst2_odd++;\n\
    \        }\n    }\n    if ($lst1_even + $lst2_odd == $#$lst1 + 1) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $result =\
    \ \"NO\";\n    my $odds = 0;\n    my $evens = 0;\n    foreach my $num (@$lst1)\
    \ {\n        if ($num % 2 == 0) {\n            $evens++;\n        } else {\n \
    \           $odds++;\n        }\n    }\n    foreach my $num (@$lst2) {\n     \
    \   if ($num % 2 == 0) {\n            $evens++;\n        } else {\n          \
    \  $odds++;\n        }\n    }\n    if ($evens > $odds) {\n        $result = \"\
    YES\";\n    }\n    return $result;\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count\
    \ = 0;\n    my $lst1_even_count = 0;\n    my $lst2_even_count = 0;\n    foreach\
    \ my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $lst1_even_count++;\n\
    \        } else {\n            $lst1_odd_count++;\n        }\n    }\n    foreach\
    \ my $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $lst2_even_count++;\n\
    \        } else {\n            $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count\
    \ == $lst2_even_count) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for\
    \ my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2) {\n            $lst1_odd++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if (!($lst2->[$i] % 2))\
    \ {\n            $lst2_even++;\n        }\n    }\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $odd1 = 0;\n    my $odd2 = 0;\n    for my $i\
    \ (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            $odd1++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 1) {\n            $odd2++;\n        }\n    }\n    if ($odd1 == $odd2) {\n  \
    \      return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "   \
    \ my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n \
    \       $lst1_odd++ if $lst1->[$i] % 2;\n        $lst2_even++ if !($lst2->[$i]\
    \ % 2);\n    }\n    return $lst1_odd <= $lst2_even ? \"YES\" : \"NO\";\n}", " \
    \   my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n    foreach my $num\
    \ (@$lst1) {\n        $lst1_odd_count++ if $num % 2;\n    }\n    foreach my $num\
    \ (@$lst2) {\n        $lst2_odd_count++ if $num % 2;\n    }\n    return $lst1_odd_count\
    \ == $lst2_odd_count ? \"YES\" : \"NO\";\n}", "    my $odds = 0;\n    for my $i\
    \ (@$lst1) {\n        $odds++ if $i % 2;\n    }\n    for my $i (@$lst2) {\n  \
    \      $odds-- if $i % 2;\n    }\n    return $odds == 0 ? \"YES\" : \"NO\";\n}",
  "    my $even_count = 0;\n    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n\
    \        if ($num % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    if ($even_count > $odd_count)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $exchange = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    my $lst1_even\
    \ = 0;\n    my $lst2_even = 0;\n    for my $i (0 .. $#{$lst1}) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n\
    \        }\n    }\n    for my $i (0 .. $#{$lst2}) {\n        if ($lst2->[$i] %\
    \ 2 == 0) {\n            $lst2_even++;\n        } else {\n            $lst2_odd++;\n\
    \        }\n    }\n    if ($lst1_odd == $lst2_even) {\n        $exchange = 1;\n\
    \    }\n    if ($lst1_even == $lst2_odd) {\n        $exchange = 1;\n    }\n  \
    \  if ($exchange) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    my $lst1_odd\
    \ = 0;\n    my $lst2_odd = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $lst1_even++;\n        } else {\n            $lst1_odd++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $lst2_even++;\n        } else {\n            $lst2_odd++;\n\
    \        }\n    }\n    if ($lst1_even == $lst1_odd && $lst2_even == $lst2_odd)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n \
    \       if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd = 1;\n        }\n \
    \   }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n   \
    \         $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd && $lst2_even)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}",
  "    my $odd_count = 0;\n    my $even_count = 0;\n    for my $i (@$lst1) {\n   \
    \     if ($i % 2 == 0) {\n            $even_count++;\n        } else {\n     \
    \       $odd_count++;\n        }\n    }\n    for my $i (@$lst2) {\n        if\
    \ ($i % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    if ($even_count >= $odd_count) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n \
    \   my $lst2_even = 0;\n    my $lst1_even = 0;\n    my $lst2_odd = 0;\n    for\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n  \
    \      } else {\n            $lst1_odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $lst2_even++;\n        } else {\n\
    \            $lst2_odd++;\n        }\n    }\n    if ($lst1_even >= $lst2_odd)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "    my $odd_count\
    \ = 0;\n    my $even_count = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return $even_count > $odd_count ? \"YES\" : \"NO\";\n}",
  "    my $i = 0;\n    my $j = 0;\n    my $lst1_len = scalar @$lst1;\n    my $lst2_len\
    \ = scalar @$lst2;\n    while ($i < $lst1_len) {\n        if ($$lst1[$i] % 2 ==\
    \ 0) {\n            $i++;\n        } else {\n            while ($j < $lst2_len)\
    \ {\n                if ($$lst2[$j] % 2 == 0) {\n                    $$lst1[$i]\
    \ = $$lst2[$j];\n                    $$lst2[$j] = 0;\n                    $i++;\n\
    \                    $j++;\n                    last;\n                }\n   \
    \             $j++;\n            }\n            if ($j == $lst2_len) {\n     \
    \           return \"NO\";\n            }\n        }\n    }\n    return \"YES\"\
    ;\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        $lst1_odd++ if $lst1->[$i] % 2;\n        $lst2_even++ if !($lst2->[$i]\
    \ % 2);\n    }\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", " \
    \   my $odd_count = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            $odd_count++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 1) {\n            $odd_count--;\n        }\n\
    \    }\n    return $odd_count == 0 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    foreach my $i (@$lst1) {\n        if ($i %\
    \ 2 == 1) {\n            $lst1_odd = 1;\n        }\n    }\n    foreach my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n\
    \    if ($lst1_odd && $lst2_even) {\n        return \"YES\";\n    } else {\n \
    \       return \"NO\";\n    }\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count\
    \ = 0;\n    my $lst1_even_count = 0;\n    my $lst2_even_count = 0;\n    for my\
    \ $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even_count++;\n\
    \        } else {\n            $lst1_odd_count++;\n        }\n    }\n    for my\
    \ $i (@$lst2) {\n        if ($i % 2 == 0) {\n            $lst2_even_count++;\n\
    \        } else {\n            $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count\
    \ == $lst2_even_count) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for\
    \ my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $lst2_even++;\n        }\n    }\n    return ($lst1_even +\
    \ $lst2_even >= @$lst1) ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = 0;\n    my\
    \ $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 ==\
    \ 1) {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\n\
    \    }\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $even\
    \ = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i\
    \ < scalar(@$lst1); $i++) {\n        if ($lst1->[$i] % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n    }\n    for ($j\
    \ = 0; $j < scalar(@$lst2); $j++) {\n        if ($lst2->[$j] % 2 == 0) {\n   \
    \         $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    if ($even >= scalar(@$lst1)) {\n        return \"YES\";\n    } else {\n \
    \       return \"NO\";\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even =\
    \ 0;\n    for my $i (@$lst1) {\n        $lst1_odd++ if $i % 2;\n    }\n    for\
    \ my $i (@$lst2) {\n        $lst2_even++ if $i % 2 == 0;\n    }\n    return $lst1_odd\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    my $lst1_odd = 0;\n    my $lst2_odd = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even++;\n        }\
    \ else {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\
    \ else {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_even == $#$lst1\
    \ + 1) {\n        return \"YES\";\n    } elsif ($lst2_even == $#$lst2 + 1) {\n\
    \        return \"YES\";\n    } elsif ($lst1_even + $lst2_odd == $#$lst1 + 1)\
    \ {\n        return \"YES\";\n    } elsif ($lst2_even + $lst1_odd == $#$lst2 +\
    \ 1) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n\
    }", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n    for my $i (0\
    \ .. $#$lst1) {\n        $lst1_odd_count++ if $lst1->[$i] % 2;\n        $lst2_odd_count++\
    \ if $lst2->[$i] % 2;\n    }\n    return $lst1_odd_count % 2 == $lst2_odd_count\
    \ % 2 ? \"YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n \
    \   my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even\
    \ ? \"YES\" : \"NO\";\n}", "    my $len1 = scalar @$lst1;\n    my $len2 = scalar\
    \ @$lst2;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    while ($i <\
    \ $len1) {\n        if ($lst1->[$i] % 2 == 0) {\n            $i++;\n        }\n\
    \        else {\n            $j = 0;\n            while ($j < $len2) {\n     \
    \           if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n\
    \                    $lst2->[$j] = $lst1->[$i];\n                    $count++;\n\
    \                    last;\n                }\n                $j++;\n       \
    \     }\n            $i++;\n        }\n    }\n    if ($count == 0) {\n       \
    \ return \"NO\";\n    }\n    else {\n        return \"YES\";\n    }\n}", "   \
    \ my $odd_count = 0;\n    my $even_count = 0;\n    my $odd_index = 0;\n    my\
    \ $even_index = 0;\n    my $i = 0;\n    my $j = 0;\n    my $temp = 0;\n    my\
    \ $temp_index = 0;\n    my $temp_count = 0;\n    my $temp_lst = [];\n    my $temp_lst_index\
    \ = [];\n    my $temp_lst_count = [];\n    my $temp_lst_index_count = [];\n  \
    \  my $result = \"NO\";\n    my $lst1_length = scalar(@$lst1);\n    my $lst2_length\
    \ = scalar(@$lst2);\n    for ($i = 0; $i < $lst1_length; $i++) {\n        if ($lst1->[$i]\
    \ % 2 == 0) {\n            $even_count++;\n            $even_index = $i;\n   \
    \     } else {\n            $odd_count++;\n            $odd_index = $i;\n    \
    \    }\n    }\n    if ($even_count == $lst1_length) {\n        $result = \"YES\"\
    ;\n    } else {\n        if ($odd_count == $lst1_length) {\n            for ($i\
    \ = 0; $i < $lst2_length; $i++) {\n                if ($lst2->[$i] % 2 == 0) {\n\
    \                    $even_count++;\n                    $even_index = $i;\n \
    \               } else {\n                    $odd_count++;\n                \
    \    $odd_index = $i;\n                }\n            }\n            if ($even_count\
    \ == $lst2_length) {\n                $result = \"YES\";\n            } else {\n\
    \                if ($odd_count == $lst2_length) {\n                    $result\
    \ = \"NO\";\n                } else {\n                    for ($i = 0; $i < $lst1_length;\
    \ $i++) {\n                        if ($lst1->[$i] % 2 == 0) {\n             \
    \               $temp_lst->[$i] = $lst1->[", "    my $lst1_odd = grep { $_ % 2\
    \ } @$lst1;\n    my $lst2_even = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd\
    \ == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd_count = 0;\n    my\
    \ $lst2_odd_count = 0;\n    my $lst1_even_count = 0;\n    my $lst2_even_count\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 0) {\n  \
    \          $lst1_even_count++;\n        } else {\n            $lst1_odd_count++;\n\
    \        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 ==\
    \ 0) {\n            $lst2_even_count++;\n        } else {\n            $lst2_odd_count++;\n\
    \        }\n    }\n    if ($lst1_odd_count == $lst2_even_count) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    foreach my $num (@$lst1) {\n        $lst1_odd++\
    \ if $num % 2;\n    }\n    foreach my $num (@$lst2) {\n        $lst2_even++ if\
    \ !($num % 2);\n    }\n    return \"YES\" if $lst1_odd == $lst2_even;\n    return\
    \ \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd++;\n        }\n\
    \    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n  \
    \          $lst2_even++;\n        }\n    }\n    if ($lst1_odd == $lst2_even) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $odds = 0;\n    my $evens = 0;\n    for my $i (0..$#$lst1) {\n        if\
    \ ($lst1->[$i] % 2 == 0) {\n            $evens++;\n        } else {\n        \
    \    $odds++;\n        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    return $odds % 2 == 0 ? \"YES\" : \"NO\";\n}", "    my\
    \ $lst1_odd = 0;\n    my $lst2_even = 0;\n    foreach my $num (@$lst1) {\n   \
    \     $lst1_odd++ if $num % 2;\n    }\n    foreach my $num (@$lst2) {\n      \
    \  $lst2_even++ if !($num % 2);\n    }\n    return $lst1_odd == $lst2_even ? \"\
    YES\" : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $lst1_odd = grep { $_ % 2 == 1 } @$lst1;\n    my $lst2_even\
    \ = grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\"\
    \ : \"NO\";\n}", "    my $odd_count = 0;\n    foreach my $num (@$lst1) {\n   \
    \     if ($num % 2 == 1) {\n            $odd_count++;\n        }\n    }\n    foreach\
    \ my $num (@$lst2) {\n        if ($num % 2 == 1) {\n            $odd_count--;\n\
    \        }\n    }\n    return $odd_count == 0 ? \"YES\" : \"NO\";\n}", "    my\
    \ $result = \"NO\";\n    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n\
    \    for my $i (0 .. $#{$lst1}) {\n        if ($lst1->[$i] % 2 == 1) {\n     \
    \       $lst1_odd_count++;\n        }\n    }\n    for my $i (0 .. $#{$lst2}) {\n\
    \        if ($lst2->[$i] % 2 == 1) {\n            $lst2_odd_count++;\n       \
    \ }\n    }\n    if ($lst1_odd_count == $lst2_odd_count) {\n        $result = \"\
    YES\";\n    }\n    return $result;\n}", "    my $lst1_odd = 0;\n    my $lst2_even\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n  \
    \          $lst1_odd = 1;\n        }\n    }\n    for my $i (0..$#$lst2) {\n  \
    \      if ($lst2->[$i] % 2 == 0) {\n            $lst2_even = 1;\n        }\n \
    \   }\n    return $lst1_odd && $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    foreach my $num (@$lst1) {\n        if ($num\
    \ % 2 == 1) {\n            $lst1_odd = 1;\n        }\n    }\n    foreach my $num\
    \ (@$lst2) {\n        if ($num % 2 == 0) {\n            $lst2_even = 1;\n    \
    \    }\n    }\n    if ($lst1_odd && $lst2_even) {\n        return \"YES\";\n \
    \   } else {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd\
    \ = 0;\n    for my $i (0..$#{$lst1}) {\n        if ($lst1->[$i] % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    for my $i (0..$#{$lst2}) {\n        if ($lst2->[$i] % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "    my $result = \"NO\";\n    my $odd_count\
    \ = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 != 0) {\n       \
    \     $odd_count++;\n        }\n    }\n    foreach my $num (@$lst2) {\n      \
    \  if ($num % 2 != 0) {\n            $odd_count--;\n        }\n    }\n    if ($odd_count\
    \ == 0) {\n        $result = \"YES\";\n    }\n    return $result;\n}", "    my\
    \ $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n     \
    \   if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd = 1;\n        }\n    }\n\
    \    for my $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n         \
    \   $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd && $lst2_even) {\n  \
    \      return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "   \
    \ my $exchange = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2\
    \ == 1) {\n            for my $j (0..$#$lst2) {\n                if ($lst2->[$j]\
    \ % 2 == 0) {\n                    $lst1->[$i] = $lst2->[$j];\n              \
    \      $lst2->[$j] = $lst1->[$i];\n                    $exchange = 1;\n      \
    \              last;\n                }\n            }\n        }\n        if\
    \ ($exchange == 0) {\n            return \"NO\";\n        }\n    }\n    return\
    \ \"YES\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i\
    \ (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n            $lst1_odd =\
    \ 1;\n        }\n    }\n    for my $i (0..$#$lst2) {\n        if ($lst2->[$i]\
    \ % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n    if ($lst1_odd\
    \ && $lst2_even) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $count = 0;\n    foreach my $i (0..$#{$lst1}) {\n      \
    \  if ($lst1->[$i] % 2 == 1) {\n            foreach my $j (0..$#{$lst2}) {\n \
    \               if ($lst2->[$j] % 2 == 0) {\n                    $lst1->[$i] =\
    \ $lst2->[$j];\n                    $lst2->[$j] = $lst1->[$i];\n             \
    \       $count++;\n                    last;\n                }\n            }\n\
    \        }\n    }\n    if ($count == 0) {\n        return \"NO\";\n    } else\
    \ {\n        return \"YES\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n\
    \        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", " \
    \   my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n    }\n  \
    \  if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $even = 0;\n    my $odd = 0;\n\
    \    for my $i (@$lst1) {\n        $even++ if $i % 2 == 0;\n        $odd++ if\
    \ $i % 2 == 1;\n    }\n    for my $i (@$lst2) {\n        $even++ if $i % 2 ==\
    \ 0;\n        $odd++ if $i % 2 == 1;\n    }\n    return \"YES\" if $even % 2 ==\
    \ 0;\n    return \"NO\";\n}", "    my $count = 0;\n    my $count2 = 0;\n    foreach\
    \ my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $count++;\n      \
    \  }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n      \
    \      $count2++;\n        }\n    }\n    if ($count == @$lst1) {\n        return\
    \ \"YES\";\n    }\n    elsif ($count2 == @$lst2) {\n        return \"YES\";\n\
    \    }\n    else {\n        return \"NO\";\n    }\n}", "    my $lst1_even = 0;\n\
    \    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_even++ if\
    \ $lst1->[$i] % 2 == 0;\n    }\n    for my $i (0..$#$lst2) {\n        $lst2_even++\
    \ if $lst2->[$i] % 2 == 0;\n    }\n    return $lst1_even == $#$lst1 || $lst2_even\
    \ == $#$lst2 ? 'YES' : 'NO';\n}", "    my $count = 0;\n    my $count2 = 0;\n \
    \   foreach my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $count++;\n\
    \        }\n    }\n    foreach my $i (@$lst2) {\n        if ($i % 2 == 0) {\n\
    \            $count2++;\n        }\n    }\n    if ($count == scalar(@$lst1) ||\
    \ $count2 == scalar(@$lst2)) {\n        return \"YES\";\n    }\n    else {\n \
    \       return \"NO\";\n    }\n}", "    my $odd_count = 0;\n    my $even_count\
    \ = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    for my $i\
    \ (@$lst2) {\n        if ($i % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count >\
    \ $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = grep { $_ % 2 } @$lst1;\n    my $lst2_even =\
    \ grep { $_ % 2 == 0 } @$lst2;\n    return $lst1_odd == $lst2_even ? \"YES\" :\
    \ \"NO\";\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n    for my $i\
    \ (@$lst1) {\n        if ($i % 2 == 0) {\n            $even_count++;\n       \
    \ } else {\n            $odd_count++;\n        }\n    }\n    for my $i (@$lst2)\
    \ {\n        if ($i % 2 == 0) {\n            $even_count++;\n        } else {\n\
    \            $odd_count++;\n        }\n    }\n    return $even_count > $odd_count\
    \ ? \"YES\" : \"NO\";\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count\
    \ = 0;\n    for my $i (0 .. $#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n\
    \            $lst1_odd_count++;\n        }\n    }\n    for my $i (0 .. $#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 1) {\n            $lst2_odd_count++;\n   \
    \     }\n    }\n    if ($lst1_odd_count == $lst2_odd_count) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_odd++\
    \ if $lst1->[$i] % 2;\n        $lst2_even++ if $lst2->[$i] % 2 == 0;\n    }\n\
    \    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}", "    my $lst1_odd\
    \ = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i]\
    \ % 2 == 1) {\n            $lst1_odd++;\n        }\n    }\n    for my $i (0..$#$lst2)\
    \ {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even++;\n        }\n\
    \    }\n    if ($lst1_odd == $lst2_even) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count\
    \ = 0;\n    for my $i (0 .. $#$lst1) {\n        $lst1_odd_count++ if $lst1->[$i]\
    \ % 2;\n    }\n    for my $i (0 .. $#$lst2) {\n        $lst2_odd_count++ if $lst2->[$i]\
    \ % 2;\n    }\n    return \"YES\" if $lst1_odd_count == $lst2_odd_count;\n   \
    \ return \"NO\";\n}", "    my $result = \"NO\";\n    my $lst1_odd = 0;\n    my\
    \ $lst2_odd = 0;\n    my $lst1_even = 0;\n    my $lst2_even = 0;\n    for my $i\
    \ (@$lst1) {\n        if ($i % 2 == 0) {\n            $lst1_even++;\n        }\
    \ else {\n            $lst1_odd++;\n        }\n    }\n    for my $i (@$lst2) {\n\
    \        if ($i % 2 == 0) {\n            $lst2_even++;\n        } else {\n   \
    \         $lst2_odd++;\n        }\n    }\n    if ($lst1_odd == $lst2_even) {\n\
    \        $result = \"YES\";\n    }\n    return $result;\n}", "    my $lst1_odd_count\
    \ = 0;\n    my $lst2_odd_count = 0;\n    foreach my $num (@$lst1) {\n        if\
    \ ($num % 2 == 1) {\n            $lst1_odd_count++;\n        }\n    }\n    foreach\
    \ my $num (@$lst2) {\n        if ($num % 2 == 1) {\n            $lst2_odd_count++;\n\
    \        }\n    }\n    if ($lst1_odd_count == $lst2_odd_count) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}", "    my $even_count\
    \ = 0;\n    my $odd_count = 0;\n    for my $i (@$lst1) {\n        if ($i % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n    \
    \        $even_count++;\n        } else {\n            $odd_count++;\n       \
    \ }\n    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n   \
    \ } else {\n        return \"NO\";\n    }\n}", "    my $result = \"NO\";\n   \
    \ my $odd_count = 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 ==\
    \ 1) {\n            $odd_count++;\n        }\n    }\n    if ($odd_count == 0)\
    \ {\n        $result = \"YES\";\n    } else {\n        my $even_count = 0;\n \
    \       foreach my $num (@$lst2) {\n            if ($num % 2 == 0) {\n       \
    \         $even_count++;\n            }\n        }\n        if ($even_count >=\
    \ $odd_count) {\n            $result = \"YES\";\n        }\n    }\n    return\
    \ $result;\n}", "    my $count = 0;\n    my $count2 = 0;\n    for my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $count++;\n        }\n    }\n   \
    \ for my $j (@$lst2) {\n        if ($j % 2 == 0) {\n            $count2++;\n \
    \       }\n    }\n    if ($count == @$lst1 || $count2 == @$lst2) {\n        return\
    \ \"YES\";\n    }\n    else {\n        return \"NO\";\n    }\n}", "    my $count\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        if ($lst1->[$i] % 2 == 1) {\n  \
    \          for my $j (0..$#$lst2) {\n                if ($lst2->[$j] % 2 == 0)\
    \ {\n                    $lst1->[$i] = $lst2->[$j];\n                    $lst2->[$j]\
    \ = $lst1->[$i];\n                    $count++;\n                    last;\n \
    \               }\n            }\n        }\n    }\n    return $count > 0 ? \"\
    YES\" : \"NO\";\n}", "    my $odds = 0;\n    my $evens = 0;\n    for my $i (@$lst1)\
    \ {\n        if ($i % 2 == 0) {\n            $evens++;\n        } else {\n   \
    \         $odds++;\n        }\n    }\n    for my $i (@$lst2) {\n        if ($i\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    if ($odds % 2 == 0) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}", "    my $lst1_even = 0;\n    my $lst2_even\
    \ = 0;\n    for my $i (0..$#$lst1) {\n        $lst1_even++ if $lst1->[$i] % 2\
    \ == 0;\n    }\n    for my $i (0..$#$lst2) {\n        $lst2_even++ if $lst2->[$i]\
    \ % 2 == 0;\n    }\n    return \"YES\" if $lst1_even + $lst2_even == @$lst1 +\
    \ @$lst2;\n    return \"NO\";\n}", "    my $lst1_odd = 0;\n    my $lst2_even =\
    \ 0;\n    foreach my $num (@$lst1) {\n        if ($num % 2 == 1) {\n         \
    \   $lst1_odd = 1;\n        }\n    }\n    foreach my $num (@$lst2) {\n       \
    \ if ($num % 2 == 0) {\n            $lst2_even = 1;\n        }\n    }\n    if\
    \ ($lst1_odd && $lst2_even) {\n        return \"YES\";\n    } else {\n       \
    \ return \"NO\";\n    }\n}", "    my $even_count = 0;\n    my $odd_count = 0;\n\
    \    foreach my $num (@$lst1) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    foreach my\
    \ $num (@$lst2) {\n        if ($num % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    if ($even_count\
    \ > $odd_count) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}", "    my $lst1_odd = 0;\n    my $lst2_even = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        $lst1_odd++ if $lst1->[$i] % 2;\n        $lst2_even++ if $lst2->[$i]\
    \ % 2 == 0;\n    }\n    return $lst1_odd == $lst2_even ? \"YES\" : \"NO\";\n}",
  "    my $even = 0;\n    my $odd = 0;\n    for my $i (@$lst1) {\n        if ($i %\
    \ 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n   \
    \     }\n    }\n    for my $i (@$lst2) {\n        if ($i % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    if\
    \ ($even % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}", "    my $lst1_odd_count = 0;\n    my $lst2_odd_count = 0;\n\
    \    my $lst1_even_count = 0;\n    my $lst2_even_count = 0;\n    for my $i (0..$#$lst1)\
    \ {\n        if ($lst1->[$i] % 2 == 0) {\n            $lst1_even_count++;\n  \
    \      } else {\n            $lst1_odd_count++;\n        }\n    }\n    for my\
    \ $i (0..$#$lst2) {\n        if ($lst2->[$i] % 2 == 0) {\n            $lst2_even_count++;\n\
    \        } else {\n            $lst2_odd_count++;\n        }\n    }\n    if ($lst1_odd_count\
    \ == $lst2_even_count) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_141_file_name_check
language: pl
prompt: "# Create a function which takes a string representing a file's name, and\
  \ returns\n# 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  # A file's name is considered to be valid if and only if all the following conditions\
  \ \n# are met:\n# - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n# - The file's name contains exactly one dot '.'\n# - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n# the latin\
  \ alphapet ('a'-'z' and 'A'-'Z').\n# - The substring after the dot should be one\
  \ of these: ['txt', 'exe', 'dll']\n# Examples:\n# >>> file_name_check(\"example.txt\"\
  )\n# \"Yes\"\n# >>> file_name_check(\"1example.dll\")\n# \"No\"\nsub file_name_check\
  \ {\n    my($file_name) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&file_name_check;\n\
  \        if(eq_deeply($candidate->(\"example.txt\"),\"Yes\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1example.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"s1sdf3.asd\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"K.dll\"),\"Yes\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  MY16FILE3.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"His12FILE94.exe\"),\"No\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _Y.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"?aREYA.exe\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"/this_is_valid.dll\"\
  ),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(\"this_is_valid.wow\"),\"No\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"this_is_valid.txt\"\
  ),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"this_is_valid.txtexe\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  #this2_i4s_5valid.ten\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"@this1_is6_valid.exe\"),\"\
  No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  this_is_12valid.6exe4.txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"all.exe.txt\"),\"No\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_No.exe\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(\"Is3youfault.txt\"),\"Yes\")) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  no_one#knows.dll\"),\"Yes\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"1I563_Yes3.exe\"),\"No\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  I563_Yes3.txtt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"final..txt\"),\"No\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  final132\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"_f4indsartal132.\"),\"No\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  .txt\"),\"No\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\"s.\"),\"No\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_first_char_valid = 0;\n    my $substring_before_dot_first_char\
    \ = \"\";\n    my $substring_before_dot_first_char_ascii = 0;\n    my $substring_before_dot_first_char_ascii_lower\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper = 0;\n    my $substring_before_dot_first_char_ascii_lower_valid\
    \ = 0;\n    my $substring_before_dot_first_char_ascii_upper_valid = 0;\n    my\
    \ $substring_before_dot_first_char_ascii_valid = 0;\n    my $substring_before_dot_first_char_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_after_dot_valid_txt = 0;\n    my $substring_after_dot_valid_exe\
    \ = 0;\n    my $substring_after_dot_valid_dll = 0;\n    my $substring_after_dot_valid_txt_exe_dll\
    \ = 0;\n    my $substring_after_dot_valid_txt_exe_dll_valid = 0;\n    my $substring_after_dot_valid_txt_exe_dll_valid_txt\
    \ = 0;\n    my $substring_after_dot_valid_txt_exe_dll_valid_exe = 0;\n    my $substring_after_dot_valid_txt_exe_dll_valid_dll\
    \ = 0;\n    my $substring_after_dot_valid_txt_exe_dll_valid_txt_exe", "    my\
    \ $result = \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index\
    \ = 0;\n    my $extension = \"\";\n    my $substring = \"\";\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $valid_extensions = [\"\
    txt\", \"exe\", \"dll\"];\n    my $valid_extensions_count = scalar @$valid_extensions;\n\
    \    my $valid_extensions_index = 0;\n    my $valid_extensions_flag = 0;\n   \
    \ my $valid_extensions_flag_count = 0;\n    my $valid_extensions_flag_count_max\
    \ = 0;\n    my $valid_extensions_flag_count_max_index = 0;\n    my $valid_extensions_flag_count_max_index_value\
    \ = \"\";\n    my $valid_extensions_flag_count_max_index_value_length = 0;\n \
    \   my $valid_extensions_flag_count_max_index_value_length_max = 0;\n    my $valid_extensions_flag_count_max_index_value_length_max_index\
    \ = 0;\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value\
    \ = \"\";\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value_length\
    \ = 0;\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value_length_max\
    \ = 0;\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value_length_max_index\
    \ = 0;\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value_length_max_index_value\
    \ = \"\";\n    my $valid_extensions_flag_count_max_index_value_length_max_index_value_length_max_index_value_length\
    \ = 0;\n    my $valid_extensions_flag_count_max_", "    my $valid = 0;\n    my\
    \ $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $extension\
    \ = \"\";\n    my $file_name_without_extension = \"\";\n    my $first_char = \"\
    \";\n    my $i = 0;\n    my $len = 0;\n    my $valid_extensions = [\"txt\", \"\
    exe\", \"dll\"];\n    my $valid_extensions_len = 0;\n    my $valid_extensions_index\
    \ = 0;\n    my $valid_extensions_element = \"\";\n    my $valid_extensions_element_len\
    \ = 0;\n    my $valid_extensions_element_index = 0;\n    my $valid_extensions_element_char\
    \ = \"\";\n    my $valid_extensions_element_char_code = 0;\n    my $valid_extensions_element_char_code_is_valid\
    \ = 0;\n    my $file_name_char = \"\";\n    my $file_name_char_code = 0;\n   \
    \ my $file_name_char_code_is_valid = 0;\n    my $file_name_char_code_is_digit\
    \ = 0;\n    my $file_name_char_code_is_dot = 0;\n    my $file_name_char_code_is_letter\
    \ = 0;\n    my $file_name_char_code_is_lower_case_letter = 0;\n    my $file_name_char_code_is_upper_case_letter\
    \ = 0;\n    my $file_name_char_code_is_valid_extension_char = 0;\n    my $file_name_char_code_is_valid_file_name_char\
    \ = 0;\n    my $file_name_char_code_is_valid_file_name_char_without_extension\
    \ = 0;\n    my $file_name_char_code_is_valid_file_name_char_with_extension = 0;\n\
    \    my $file_name_char_code_is_valid_file_name_char_with_extension_without_dot\
    \ = 0;\n    my $file", "    my $result = \"Yes\";\n    my $count = 0;\n    my\
    \ $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot = \"\"\
    ;\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid = 0;\n\
    \    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid = 0;\n    my $substring_before_dot_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid = 0;\n    my\
    \ $substring_before_dot_valid_count_valid_count_valid_count = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count\
    \ = 0;\n    my $substring_before_dot_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count_valid_count_valid\
    \ = 0", "    my $result = \"No\";\n    my $dot_count = 0;\n    my $digit_count\
    \ = 0;\n    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\
    \";\n    my $substring_before_dot_valid = 0;\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_after_dot_valid_list = [\"txt\", \"exe\", \"dll\"];\n\
    \    my $substring_before_dot_valid_list = [\"a\"..\"z\", \"A\"..\"Z\"];\n   \
    \ my $substring_before_dot_valid_list_length = scalar @$substring_before_dot_valid_list;\n\
    \    my $substring_after_dot_valid_list_length = scalar @$substring_after_dot_valid_list;\n\
    \    my $substring_before_dot_valid_list_index = 0;\n    my $substring_after_dot_valid_list_index\
    \ = 0;\n    my $substring_before_dot_valid_list_element = \"\";\n    my $substring_after_dot_valid_list_element\
    \ = \"\";\n    my $substring_before_dot_valid_list_element_length = 0;\n    my\
    \ $substring_after_dot_valid_list_element_length = 0;\n    my $substring_before_dot_valid_list_element_index\
    \ = 0;\n    my $substring_after_dot_valid_list_element_index = 0;\n    my $substring_before_dot_valid_list_element_character\
    \ = \"\";\n    my $substring_after_dot_valid_list_element_character = \"\";\n\
    \    my $file_name_length = length $file_name;\n    my $file_name_index = 0;\n\
    \    my $file_name_character = \"\";\n    my $file_name_character_ord = 0;\n \
    \   my $file_name_character_ord_digit_min = ord(\"0\");\n    my $file_name_character_ord_digit_max\
    \ = ord(\"9\");\n    my $file_name_character_ord_", "    my $result = \"No\";\n\
    \    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n    my $substring_before_dot\
    \ = \"\";\n    my $substring_after_dot = \"\";\n    my $substring_after_dot_valid\
    \ = 0;\n    my $substring_before_dot_valid = 0;\n    my $substring_before_dot_start_with_letter\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid = 0;\n    my $substring_before_dot_length\
    \ = 0;\n    my $substring_before_dot_length_valid = 0;\n    my $substring_after_dot_length\
    \ = 0;\n    my $substring_after_dot_length_valid = 0;\n    my $substring_before_dot_has_digit\
    \ = 0;\n    my $substring_before_dot_has_digit_valid = 0;\n    my $substring_after_dot_has_digit\
    \ = 0;\n    my $substring_after_dot_has_digit_valid = 0;\n    my $substring_before_dot_has_letter\
    \ = 0;\n    my $substring_before_dot_has_letter_valid = 0;\n    my $substring_after_dot_has_letter\
    \ = 0;\n    my $substring_after_dot_has_letter_valid = 0;\n    my $substring_before_dot_has_uppercase_letter\
    \ = 0;\n    my $substring_before_dot_has_uppercase_letter_valid = 0;\n    my $substring_after_dot_has_uppercase_letter\
    \ = 0;\n    my $substring_after_dot_has_uppercase_letter_valid = 0;\n    my $substring_before_dot_has_lowercase_letter\
    \ = 0;\n    my $substring_before_dot_has_lowercase_letter_valid = 0;\n    my $substring_after_dot_has_lowercase_letter\
    \ = 0;\n    my $substring_after_dot_has_lowercase_letter_valid = 0", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $extension = \"\";\n    my $substring = \"\";\n    my $substring_count\
    \ = 0;\n    my $substring_index = 0;\n    my $substring_valid = 0;\n    my $extension_valid\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $A = 0;\n\
    \    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n    my $E = 0;\n    my $F = 0;\n\
    \    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n    my $J = 0;\n    my $K = 0;\n\
    \    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n    my $O = 0;\n    my $P = 0;\n\
    \    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n    my $T = 0;\n    my $U = 0;\n\
    \    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n    my $Y = 0;\n    my $Z = 0;\n\
    \    my $zero = 0;\n    my $one = 0;\n    my $two = 0;\n    my $three = 0;\n \
    \   my $four = 0;\n    my $five = 0;\n    my $six = 0;\n    my $seven", "    my\
    \ $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]\\w*\\.\\w+$/) {\n      \
    \  my $before_dot = $`;\n        my $after_dot = $';\n        if ($before_dot\
    \ =~ /\\d/ && $before_dot =~ /\\d{4}/) {\n            $result = \"No\";\n    \
    \    }\n        elsif ($after_dot =~ /txt|exe|dll/) {\n            $result = \"\
    Yes\";\n        }\n    }\n    return $result;\n}", "    my $result = \"Yes\";\n\
    \    my $count = 0;\n    my $dot_count = 0;\n    my $extension = \"\";\n    my\
    \ $file_name_no_extension = \"\";\n    my $first_char = \"\";\n    my $last_char\
    \ = \"\";\n    my $extension_valid = 0;\n    my $extension_list = [\"txt\", \"\
    exe\", \"dll\"];\n    my $char = \"\";\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $A = 0;\n    my $B = 0;\n    my $C = 0;\n    my $D = 0;\n\
    \    my $E = 0;\n    my $F = 0;\n    my $G = 0;\n    my $H = 0;\n    my $I = 0;\n\
    \    my $J = 0;\n    my $K = 0;\n    my $L = 0;\n    my $M = 0;\n    my $N = 0;\n\
    \    my $O = 0;\n    my $P = 0;\n    my $Q = 0;\n    my $R = 0;\n    my $S = 0;\n\
    \    my $T = 0;\n    my $U = 0;\n    my $V = 0;\n    my $W = 0;\n    my $X = 0;\n\
    \    my $Y = 0;\n    my $Z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my", "    my $result = \"\
    No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n   \
    \     $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"\
    No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n   \
    \     $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result = \"\
    Yes\";\n    my $count = 0;\n    my $count_dot = 0;\n    my $count_digit = 0;\n\
    \    my $count_letter = 0;\n    my $count_substring = 0;\n    my $substring =\
    \ \"\";\n    my $substring_after_dot = \"\";\n    my $substring_before_dot = \"\
    \";\n    my $substring_after_dot_check = 0;\n    my $substring_before_dot_check\
    \ = 0;\n    my $substring_before_dot_check_letter = 0;\n    my $substring_after_dot_check_letter\
    \ = 0;\n    my $substring_before_dot_check_digit = 0;\n    my $substring_after_dot_check_digit\
    \ = 0;\n    my $substring_before_dot_check_dot = 0;\n    my $substring_after_dot_check_dot\
    \ = 0;\n    my $substring_before_dot_check_empty = 0;\n    my $substring_after_dot_check_empty\
    \ = 0;\n    my $substring_before_dot_check_txt = 0;\n    my $substring_after_dot_check_txt\
    \ = 0;\n    my $substring_before_dot_check_exe = 0;\n    my $substring_after_dot_check_exe\
    \ = 0;\n    my $substring_before_dot_check_dll = 0;\n    my $substring_after_dot_check_dll\
    \ = 0;\n    my $substring_before_dot_check_txt_exe_dll = 0;\n    my $substring_after_dot_check_txt_exe_dll\
    \ = 0;\n    my $substring_before_dot_check_txt_exe_dll_count = 0;\n    my $substring_after_dot_check_txt_exe_dll_count\
    \ = 0;\n    my $substring_before_dot_check_txt_exe_dll_count_check = 0;\n    my\
    \ $substring_after_dot_check_txt_exe_dll_count_check = 0;\n    my $substring_before_dot_check_",
  "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z]+\\d{0,3}\\.\\w{3}$/)\
    \ {\n        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result\
    \ = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\.(txt|exe|dll)$/) {\n\
    \        $result = \"Yes\";\n    }\n    return $result;\n}", "    my $result =\
    \ \"No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n\
    \    my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n \
    \   my $substring_after_dot_valid = 0;\n    my $substring_before_dot_valid = 0;\n\
    \    my $substring_before_dot_start_with_letter = 0;\n    my $substring_before_dot_start_with_letter_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index = 0;\n    my\
    \ $substring_before_dot_start_with_letter_valid_index_valid = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index_valid\
    \ = 0;\n    my $substring_before_dot_start_with_letter_valid_index_valid_index_valid_index_valid_index_valid_index_valid_index\
    \ = 0;\n    my $substring_before_dot_start_with_letter", "    my $result = \"\
    No\";\n    my $count = 0;\n    my $dot_count = 0;\n    my $dot_index = 0;\n  \
    \  my $substring_before_dot = \"\";\n    my $substring_after_dot = \"\";\n   \
    \ my $substring_before_dot_is_valid = 0;\n    my $substring_after_dot_is_valid\
    \ = 0;\n    my $substring_before_dot_is_empty = 1;\n    my $substring_after_dot_is_empty\
    \ = 1;\n    my $substring_before_dot_starts_with_letter = 0;\n    my $substring_after_dot_starts_with_letter\
    \ = 0;\n    my $substring_after_dot_is_txt = 0;\n    my $substring_after_dot_is_exe\
    \ = 0;\n    my $substring_after_dot_is_dll = 0;\n    my $length = length($file_name);\n\
    \    my $i = 0;\n    while ($i < $length) {\n        my $char = substr($file_name,\
    \ $i, 1);\n        if ($char eq \".\") {\n            $dot_count++;\n        \
    \    $dot_index = $i;\n        }\n        if ($char =~ /[0-9]/) {\n          \
    \  $count++;\n        }\n        $i++;\n    }\n    if ($dot_count == 1 && $count\
    \ <= 3) {\n        $substring_before_dot = substr($file_name, 0, $dot_index);\n\
    \        $substring_after_dot = substr($file_name, $dot_index + 1);\n        $substring_before_dot_is_empty\
    \ = 0 if (length($substring_before_dot) > 0);\n        $substring_after_dot_is_empty\
    \ = 0 if (length($substring_after_dot) > 0);\n        $substring_before_dot_starts_with_letter\
    \ = 1 if ($substring_before_dot =~ /^[a-zA-Z]/);\n        $substring_after_dot_starts_with_letter\
    \ = 1 if ($substring_", "    my $result = \"No\";\n    if ($file_name =~ /^[a-zA-Z][a-zA-Z0-9]*\\\
    .(txt|exe|dll)$/) {\n        $result = \"Yes\";\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

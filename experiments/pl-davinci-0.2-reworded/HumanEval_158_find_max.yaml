name: HumanEval_158_find_max
language: pl
prompt: "# Write a function that accepts an array of strings.\n# The array contains\
  \ different words. Return the word with maximum number\n# of unique characters.\
  \ If multiple strings have maximum number of unique\n# characters, return the one\
  \ which comes first in lexicographical order.\n# >>> find_max([\"name\", \"of\"\
  , \"string\"])\n# \"string\"\n# >>> find_max([\"name\", \"enam\", \"game\"])\n#\
  \ \"enam\"\n# >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n# \"aaaaaaa\"\nsub find_max\
  \ {\n    my($words) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_max;\n\
  \        if(eq_deeply($candidate->([\"name\", \"of\", \"string\"]),\"string\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  name\", \"enam\", \"game\"]),\"enam\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([\"aaaaaaa\", \"bb\", \"\
  cc\"]),\"aaaaaaa\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([\"abc\", \"cba\"]),\"abc\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"this\", \"game\", \"of\", \"footbott\"]),\"footbott\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  we\", \"are\", \"gonna\", \"rock\"]),\"gonna\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"we\", \"are\"\
  , \"a\", \"mad\", \"nation\"]),\"nation\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([\"this\", \"is\",\
  \ \"a\", \"prrk\"]),\"this\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([\"b\"]),\"b\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"play\", \"play\"]),\"play\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max_word = $words->[0];\n    my $max_unique = 0;\n    for my\
    \ $word (@$words) {\n        my $unique = 0;\n        my %seen;\n        for my\
    \ $char (split(//, $word)) {\n            $unique++ unless $seen{$char}++;\n \
    \       }\n        if ($unique > $max_unique) {\n            $max_unique = $unique;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_unique = unique_chars($max_word);\n  \
    \  for my $word (@$words) {\n        my $unique = unique_chars($word);\n     \
    \   if ($unique > $max_unique) {\n            $max_unique = $unique;\n       \
    \     $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my %chars = ();\n        foreach my $char (split(//, $word)) {\n    \
    \        $chars{$char} = 1;\n        }\n        my $count = scalar(keys %chars);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = \"\";\n    foreach my $word (@$words) {\n    \
    \    my $count = 0;\n        my %seen;\n        foreach my $char (split //, $word)\
    \ {\n            $count++ unless $seen{$char}++;\n        }\n        if ($count\
    \ > $max) {\n            $max = $count;\n            $max_word = $word;\n    \
    \    }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n \
    \   my $max_count = count_unique_chars($max_word);\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word =\
    \ \"\";\n    foreach my $word (@$words) {\n        my %seen;\n        my $count\
    \ = 0;\n        foreach my $char (split(//, $word)) {\n            if (!$seen{$char})\
    \ {\n                $count++;\n                $seen{$char} = 1;\n          \
    \  }\n        }\n        if ($count > $max) {\n            $max = $count;\n  \
    \          $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = $words->[0];\n    my $max_count = 0;\n    for my $word (@$words) {\n     \
    \   my $count = count_unique_chars($word);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my %seen;\n        my $count = 0;\n\
    \        for my $c (split //, $word) {\n            $count++ if !$seen{$c}++;\n\
    \        }\n        if ($count > $max_count) {\n            $max_count = $count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n  \
    \      my %chars;\n        for my $char (split //, $word) {\n            $chars{$char}\
    \ = 1;\n        }\n        my $count = scalar keys %chars;\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = count_unique($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique($word);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = \"\";\n    foreach my $word (@$words) {\n    \
    \    my $count = count_unique_chars($word);\n        if ($count > $max) {\n  \
    \          $max = $count;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_unique\
    \ = 0;\n    foreach my $word (@$words) {\n        my $unique = unique_chars($word);\n\
    \        if ($unique > $max_unique) {\n            $max_unique = $unique;\n  \
    \          $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word\
    \ (@$words) {\n        my $count = count_unique_chars($word);\n        if ($count\
    \ > $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count =\
    \ count_unique_chars($word);\n        if ($count > $max_count) {\n           \
    \ $max_count = $count;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count =\
    \ count_unique_chars($max_word);\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_unique\
    \ = 0;\n    foreach my $word (@$words) {\n        my $unique = 0;\n        my\
    \ %seen;\n        foreach my $c (split //, $word) {\n            if (!$seen{$c})\
    \ {\n                $unique++;\n                $seen{$c} = 1;\n            }\n\
    \        }\n        if ($unique > $max_unique) {\n            $max_unique = $unique;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word =\
    \ \"\";\n    foreach my $word (@$words) {\n        my %chars = ();\n        foreach\
    \ my $char (split //, $word) {\n            $chars{$char} = 1;\n        }\n  \
    \      my $count = scalar keys %chars;\n        if ($count > $max) {\n       \
    \     $max = $count;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n    foreach\
    \ my $word (@$words) {\n        my %chars = ();\n        foreach my $char (split(//,\
    \ $word)) {\n            $chars{$char} = 1;\n        }\n        my $count = scalar(keys\
    \ %chars);\n        if ($count > $max_count) {\n            $max_count = $count;\n\
    \            $max_word = $word;\n        } elsif ($count == $max_count) {\n  \
    \          if ($word lt $max_word) {\n                $max_word = $word;\n   \
    \         }\n        }\n    }\n    return $max_word;\n}", "    my $max_word =\
    \ \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my\
    \ $count = count_unique_chars($word);\n        if ($count > $max_count) {\n  \
    \          $max_count = $count;\n            $max_word = $word;\n        }\n \
    \   }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n  \
    \      my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my %chars;\n        for my $char\
    \ (split //, $word) {\n            $chars{$char} = 1;\n        }\n        my $count\
    \ = scalar keys %chars;\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }", "    my $max = 0;\n    my $max_word = \"\";\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max)\
    \ {\n            $max = $count;\n            $max_word = $word;\n        }\n \
    \   }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word = \"\";\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my($max_word, $max_count)\
    \ = (\"\", 0);\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n       \
    \ my $count = count_unique($word);\n        if ($count > $max_count) {\n     \
    \       $max = $word;\n            $max_count = $count;\n        }\n    }\n  \
    \  return $max;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n    foreach\
    \ my $word (@$words) {\n        my $count = count_unique_chars($word);\n     \
    \   if ($count > $max_count) {\n            $max_count = $count;\n           \
    \ $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = $words->[0];\n    my $max_unique = 0;\n    foreach my $word (@$words) {\n\
    \        my %seen;\n        my $unique = 0;\n        foreach my $char (split //,\
    \ $word) {\n            if (!$seen{$char}) {\n                $unique++;\n   \
    \             $seen{$char} = 1;\n            }\n        }\n        if ($unique\
    \ > $max_unique) {\n            $max_unique = $unique;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = '';\n\
    \    my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_unique_chars = 0;\n    foreach my $word (@$words)\
    \ {\n        my $unique_chars = 0;\n        my %seen = ();\n        foreach my\
    \ $char (split //, $word) {\n            if (!$seen{$char}) {\n              \
    \  $unique_chars++;\n                $seen{$char} = 1;\n            }\n      \
    \  }\n        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_unique = 0;\n\
    \    for my $word (@$words) {\n        my $unique = 0;\n        my %seen;\n  \
    \      for my $char (split //, $word) {\n            $unique++ unless $seen{$char}++;\n\
    \        }\n        if ($unique > $max_unique) {\n            $max_unique = $unique;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max_word = '';\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = $words->[0];\n    my $max_unique\
    \ = uniq_chars($max);\n    for my $word (@$words) {\n        my $unique = uniq_chars($word);\n\
    \        if ($unique > $max_unique) {\n            $max = $word;\n           \
    \ $max_unique = $unique;\n        }\n    }\n    return $max;\n}", "    my $max\
    \ = $words->[0];\n    for my $word (@$words) {\n        if (length(uniq($word))\
    \ > length(uniq($max))) {\n            $max = $word;\n        }\n    }\n    return\
    \ $max;\n}", "    my $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = count_unique_chars($max_word);\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max = 0;\n    my $max_word = '';\n    foreach\
    \ my $word (@$words) {\n        my $count = count_unique_chars($word);\n     \
    \   if ($count > $max) {\n            $max = $count;\n            $max_word =\
    \ $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = '';\n\
    \    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count =\
    \ count_unique_chars($word);\n        if ($count > $max_count) {\n           \
    \ $max_count = $count;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n \
    \   for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = \"\";\n    for my $word (@$words) {\n        my\
    \ $uniq = uniq_chars($word);\n        if ($uniq > $max) {\n            $max =\
    \ $uniq;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }", "    my $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my\
    \ $max_word = \"\";\n    foreach my $word (@$words) {\n        my $count = 0;\n\
    \        my %seen;\n        foreach my $char (split //, $word) {\n           \
    \ $count++ unless $seen{$char}++;\n        }\n        if ($count > $max) {\n \
    \           $max = $count;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count\
    \ ||\n            ($count == $max_count && $word lt $max_word)) {\n          \
    \  $max_word = $word;\n            $max_count = $count;\n        }\n    }\n  \
    \  return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_len = 0;\n    for my $word (@$words) {\n    \
    \    my $len = length(uniq_chars($word));\n        if ($len > $max_len) {\n  \
    \          $max_len = $len;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my %chars;\n     \
    \   for my $char (split //, $word) {\n            $chars{$char} = 1;\n       \
    \ }\n        my $count = scalar keys %chars;\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my %chars = ();\n        foreach\
    \ my $char (split //, $word) {\n            $chars{$char} = 1;\n        }\n  \
    \      my $count = scalar keys %chars;\n        if ($count > $max_count) {\n \
    \           $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = '';\n    foreach my $word (@$words) {\n      \
    \  my $count = count_unique_characters($word);\n        if ($count > $max) {\n\
    \            $max = $count;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my %chars = ();\n        foreach my\
    \ $char (split(//, $word)) {\n            $chars{$char} = 1;\n        }\n    \
    \    my $count = scalar(keys %chars);\n        if ($count > $max_count) {\n  \
    \          $max_count = $count;\n            $max_word = $word;\n        }\n \
    \   }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n  \
    \      my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word =\
    \ \"\";\n    foreach my $word (@$words) {\n        my $uniq = uniq_chars($word);\n\
    \        if (scalar(@$uniq) > $max) {\n            $max = scalar(@$uniq);\n  \
    \          $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = \"\";\n    my $max_unique_chars = 0;\n    for my $word (@$words)\
    \ {\n        my %seen;\n        my $unique_chars = 0;\n        for my $char (split\
    \ //, $word) {\n            if (!$seen{$char}) {\n                $unique_chars++;\n\
    \                $seen{$char} = 1;\n            }\n        }\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_unique_chars = $unique_chars;\n   \
    \         $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = \"\";\n    foreach my $word (@$words) {\n    \
    \    my $count = count_unique_chars($word);\n        if ($count > $max) {\n  \
    \          $max = $count;\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n   \
    \ for my $word (@$words) {\n        my $count = count_unique($word);\n       \
    \ if ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my %chars = ();\n        foreach my\
    \ $char (split(//, $word)) {\n            $chars{$char} = 1;\n        }\n    \
    \    my $count = scalar(keys %chars);\n        if ($count > $max_count) {\n  \
    \          $max_count = $count;\n            $max_word = $word;\n        }\n \
    \   }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my %seen;\n        my $count = 0;\n\
    \        for my $c (split //, $word) {\n            if (!$seen{$c}) {\n      \
    \          $count++;\n                $seen{$c} = 1;\n            }\n        }\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = $words->[0];\n    my $max_count = count_unique($max);\n    for my $word\
    \ (@$words) {\n        my $count = count_unique($word);\n        if ($count >\
    \ $max_count) {\n            $max = $word;\n            $max_count = $count;\n\
    \        }\n    }\n    return $max;\n}", "    my $max = 0;\n    my $max_word =\
    \ '';\n    foreach my $word (@$words) {\n        my $unique_chars = unique_chars($word);\n\
    \        if ($unique_chars > $max) {\n            $max = $unique_chars;\n    \
    \        $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "  \
    \  my $max_word = $words->[0];\n    my $max_count = 0;\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count\
    \ || ($count == $max_count && $word lt $max_word)) {\n            $max_word =\
    \ $word;\n            $max_count = $count;\n        }\n    }\n    return $max_word;\n\
    }", "    my $max_word = $words->[0];\n    my $max_unique = 0;\n    foreach my\
    \ $word (@$words) {\n        my $unique = count_unique($word);\n        if ($unique\
    \ > $max_unique) {\n            $max_unique = $unique;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max = 0;\n \
    \   my $max_word = '';\n    for my $word (@$words) {\n        my $unique = count_unique($word);\n\
    \        if ($unique > $max) {\n            $max = $unique;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my %chars\
    \ = ();\n        foreach my $char (split //, $word) {\n            $chars{$char}\
    \ = 1;\n        }\n        my $count = scalar keys %chars;\n        if ($count\
    \ > $max_count || ($count == $max_count && $word lt $max_word)) {\n          \
    \  $max_word = $word;\n            $max_count = $count;\n        }\n    }\n  \
    \  return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word =\
    \ \"\";\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my %seen\
    \ = ();\n        my $count = 0;\n        foreach my $char (split //, $word) {\n\
    \            if (!$seen{$char}) {\n                $count++;\n               \
    \ $seen{$char} = 1;\n            }\n        }\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = $words->[0];\n    my $max_len = length($max);\n    my $max_uniq = length(join(\"\
    \", uniq(split(\"\", $max))));\n    foreach my $word (@$words) {\n        my $len\
    \ = length($word);\n        my $uniq = length(join(\"\", uniq(split(\"\", $word))));\n\
    \        if ($uniq > $max_uniq) {\n            $max = $word;\n            $max_len\
    \ = $len;\n            $max_uniq = $uniq;\n        } elsif ($uniq == $max_uniq)\
    \ {\n            if ($len < $max_len) {\n                $max = $word;\n     \
    \           $max_len = $len;\n                $max_uniq = $uniq;\n           \
    \ }\n        }\n    }\n    return $max;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = count_unique_chars($max_word);\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_unique = 0;\n    for my $word (@$words) {\n        my $unique = unique_chars($word);\n\
    \        if ($unique > $max_unique) {\n            $max_unique = $unique;\n  \
    \          $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = $words->[0];\n    my $max_unique = 0;\n    for my $word (@$words) {\n    \
    \    my %seen;\n        my $unique = 0;\n        for my $c (split //, $word) {\n\
    \            $unique++ if !$seen{$c}++;\n        }\n        if ($unique > $max_unique)\
    \ {\n            $max_unique = $unique;\n            $max_word = $word;\n    \
    \    }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n \
    \   my $max_unique = 0;\n    for my $word (@$words) {\n        my $unique = unique_chars($word);\n\
    \        if ($unique > $max_unique) {\n            $max_unique = $unique;\n  \
    \          $max_word = $word;\n        }\n    }\n    return $max_word;\n}", " \
    \   my $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_unique_chars = 0;\n    foreach my $word (@$words)\
    \ {\n        my $unique_chars = 0;\n        my %seen = ();\n        foreach my\
    \ $char (split //, $word) {\n            $seen{$char}++;\n        }\n        $unique_chars\
    \ = scalar keys %seen;\n        if ($unique_chars > $max_unique_chars) {\n   \
    \         $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word\
    \ = \"\";\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_unique = scalar(unique_chars($max_word));\n    for my $word (@$words)\
    \ {\n        my $unique = scalar(unique_chars($word));\n        if ($unique >\
    \ $max_unique) {\n            $max_unique = $unique;\n            $max_word =\
    \ $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\"\
    ;\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if($count > $max_count) {\n            $max_count = $count;\n       \
    \     $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my %seen;\n        foreach my $char (split //, $word) {\n           \
    \ $seen{$char} = 1;\n        }\n        my $count = scalar keys %seen;\n     \
    \   if ($count > $max_count) {\n            $max_count = $count;\n           \
    \ $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_unique\
    \ = 0;\n    for my $word (@$words) {\n        my $unique = 0;\n        my %seen;\n\
    \        for my $char (split //, $word) {\n            $unique++ unless $seen{$char}++;\n\
    \        }\n        if ($unique > $max_unique) {\n            $max_unique = $unique;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}",
  "    my $max = 0;\n    my $max_word = \"\";\n    foreach my $word (@$words) {\n\
    \        my $unique_chars = get_unique_chars($word);\n        if (scalar @$unique_chars\
    \ > $max) {\n            $max = scalar @$unique_chars;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_unique = 0;\n    for my $word (@$words)\
    \ {\n        my $unique = 0;\n        my %seen;\n        for my $char (split //,\
    \ $word) {\n            $unique++ unless $seen{$char}++;\n        }\n        if\
    \ ($unique > $max_unique) {\n            $max_unique = $unique;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max = 0;\n \
    \   my $max_word = \"\";\n    foreach my $word (@$words) {\n        my $unique_chars\
    \ = unique_chars($word);\n        if ($unique_chars > $max) {\n            $max\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n    foreach\
    \ my $word (@$words) {\n        my $count = count_unique_chars($word);\n     \
    \   if ($count > $max_count) {\n            $max_count = $count;\n           \
    \ $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word\
    \ = \"\";\n    my $max_count = 0;\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_chars\
    \ = 0;\n    for my $word (@$words) {\n        my %chars;\n        for my $char\
    \ (split //, $word) {\n            $chars{$char} = 1;\n        }\n        my $num_chars\
    \ = scalar keys %chars;\n        if ($num_chars > $max_chars) {\n            $max_chars\
    \ = $num_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_uniq = uniq_chars($max_word);\n    for\
    \ my $word (@$words) {\n        my $uniq = uniq_chars($word);\n        if ($uniq\
    \ > $max_uniq) {\n            $max_uniq = $uniq;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my\
    \ $max_count = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = '';\n    foreach my $word (@$words) {\n      \
    \  my %chars = ();\n        foreach my $char (split //, $word) {\n           \
    \ $chars{$char} = 1;\n        }\n        my $count = scalar keys %chars;\n   \
    \     if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_uniq = uniq_chars($max_word);\n    for\
    \ my $word (@$words) {\n        my $uniq = uniq_chars($word);\n        if ($uniq\
    \ > $max_uniq) {\n            $max_uniq = $uniq;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word\
    \ = '';\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count =\
    \ count_unique_chars($word);\n        if ($count > $max_count) {\n           \
    \ $max_count = $count;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}", "    my $max = $words->[0];\n    my $max_count = count_unique_chars($max);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}", "    my $max_word = \"\"\
    ;\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my %count;\n\
    \        foreach my $char (split //, $word) {\n            $count{$char}++;\n\
    \        }\n        my $count = scalar keys %count;\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_unique_chars\
    \ = 0;\n    foreach my $word (@$words) {\n        my $unique_chars = get_unique_chars($word);\n\
    \        if (scalar(@$unique_chars) > $max_unique_chars) {\n            $max_unique_chars\
    \ = scalar(@$unique_chars);\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count = 0;\n\
    \    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n   \
    \ for my $word (@$words) {\n        my $count = count_unique($word);\n       \
    \ if ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = '';\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = unique_count($max_word);\n   \
    \ for my $word (@$words) {\n        my $count = unique_count($word);\n       \
    \ if ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my %chars = ();\n        foreach my $char (split(//, $word)) {\n    \
    \        $chars{$char} = 1;\n        }\n        my $count = scalar(keys %chars);\n\
    \        if ($count > $max_count ||\n            ($count == $max_count && $word\
    \ lt $max_word)) {\n            $max_word = $word;\n            $max_count = $count;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n   \
    \ for my $word (@$words) {\n        my $count = count_unique($word);\n       \
    \ if ($count > $max_count || ($count == $max_count && $word lt $max_word)) {\n\
    \            $max_word = $word;\n            $max_count = $count;\n        }\n\
    \    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = count_unique_chars($max_word);\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = '';\n    my $max_count = 0;\n \
    \   foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = $words->[0];\n    my $max_count\
    \ = count_unique($max);\n    for my $word (@$words) {\n        my $count = count_unique($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my %chars = ();\n        foreach my $char (split //, $word) {\n     \
    \       $chars{$char} = 1;\n        }\n        my $count = scalar keys %chars;\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my %chars = ();\n        foreach my $char (split(//, $word)) {\n    \
    \        $chars{$char} = 1;\n        }\n        my $count = scalar(keys %chars);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max = 0;\n    my $max_word = '';\n    foreach my $word (@$words) {\n      \
    \  my $count = count_unique_chars($word);\n        if ($count > $max) {\n    \
    \        $max = $count;\n            $max_word = $word;\n        }\n    }\n  \
    \  return $max_word;\n}", "    my $max = 0;\n    my $max_word = '';\n    foreach\
    \ my $word (@$words) {\n        my $count = count_unique_chars($word);\n     \
    \   if ($count > $max) {\n            $max = $count;\n            $max_word =\
    \ $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = count_unique_chars($max_word);\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = 0;\n    for my $word (@$words)\
    \ {\n        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $max_word =\
    \ \"\";\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max) {\n            $max = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = \"\
    \";\n    my $max_unique = 0;\n    for my $word (@$words) {\n        my %seen;\n\
    \        for my $char (split //, $word) {\n            $seen{$char} = 1;\n   \
    \     }\n        my $unique = scalar keys %seen;\n        if ($unique > $max_unique)\
    \ {\n            $max_unique = $unique;\n            $max_word = $word;\n    \
    \    }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my %chars;\n        for my $char\
    \ (split //, $word) {\n            $chars{$char} = 1;\n        }\n        my $count\
    \ = scalar keys %chars;\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }", "    my $max = $words->[0];\n    my $max_count = count_unique_chars($max);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max = $word;\n            $max_count\
    \ = $count;\n        }\n    }\n    return $max;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count =\
    \ count_unique_chars($word);\n        if ($count > $max_count) {\n           \
    \ $max_count = $count;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count =\
    \ 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = \"\";\n    my $max_count\
    \ = 0;\n    foreach my $word (@$words) {\n        my %chars = ();\n        foreach\
    \ my $char (split //, $word) {\n            $chars{$char} = 1;\n        }\n  \
    \      my $count = scalar keys %chars;\n        if ($count > $max_count) {\n \
    \           $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = 0;\n    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_count = 0;\n    foreach my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = count_unique_chars($max_word);\n    for my $word (@$words) {\n\
    \        my $count = count_unique_chars($word);\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \  }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n   \
    \ my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique($max_word);\n   \
    \ for my $word (@$words) {\n        my $count = count_unique($word);\n       \
    \ if ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_word = $words->[0];\n\
    \    my $max_count = 0;\n    foreach my $word (@$words) {\n        my $count =\
    \ count_unique_chars($word);\n        if ($count > $max_count) {\n           \
    \ $max_count = $count;\n            $max_word = $word;\n        }\n    }\n   \
    \ return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count =\
    \ count_unique_chars($max_word);\n    for my $word (@$words) {\n        my $count\
    \ = count_unique_chars($word);\n        if ($count > $max_count) {\n         \
    \   $max_count = $count;\n            $max_word = $word;\n        }\n    }\n \
    \   return $max_word;\n}", "    my $max_word = $words->[0];\n    my $max_count\
    \ = unique_chars($max_word);\n    for my $word (@$words) {\n        my $count\
    \ = unique_chars($word);\n        if ($count > $max_count) {\n            $max_count\
    \ = $count;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n\
    }", "    my $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_count = count_unique_chars($max_word);\n\
    \    for my $word (@$words) {\n        my $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = $words->[0];\n    my $max_unique = unique_chars($max_word);\n  \
    \  for my $word (@$words) {\n        my $unique = unique_chars($word);\n     \
    \   if ($unique > $max_unique) {\n            $max_unique = $unique;\n       \
    \     $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my\
    \ $max_word = \"\";\n    my $max_unique_chars = 0;\n    foreach my $word (@$words)\
    \ {\n        my $unique_chars = 0;\n        my %seen;\n        foreach my $char\
    \ (split //, $word) {\n            $unique_chars++ unless $seen{$char}++;\n  \
    \      }\n        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

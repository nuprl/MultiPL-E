name: HumanEval_66_digitSum
language: pl
prompt: "# Task\n# Write a function that takes a string as input and returns the sum\
  \ of the upper characters only'\n# ASCII codes.\n# Examples:\n# >>> digitSum(\"\"\
  )\n# 0\n# >>> digitSum(\"abAB\")\n# 131\n# >>> digitSum(\"abcCd\")\n# 67\n# >>>\
  \ digitSum(\"helloE\")\n# 69\n# >>> digitSum(\"woArBld\")\n# 131\n# >>> digitSum(\"\
  aAaaaXa\")\n# 153\nsub digitSum {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digitSum;\n\
  \        if(eq_deeply($candidate->(\"\"),0)) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(\"abAB\"),131)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcCd\"),67)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(\"helloE\"),69)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"woArBld\"),131))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  aAaaaXa\"),153)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(\" How are yOu?\"),151)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"You arE\
  \ Very Smart\"),327)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n}\n\ntesthumaneval();"
completions: ["    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n\
    \        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split(//, $s)) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[[:upper:]]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $c (split //,\
    \ $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    foreach my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s)\
    \ {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my $c\
    \ = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $c (split //, $s)\
    \ {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    foreach my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    my @chars = split //, $s;\n\
    \    foreach my $char (@chars) {\n        if ($char =~ /[A-Z]/) {\n          \
    \  $sum += ord($char);\n        }\n    }\n    return $sum;\n}", "    my $sum =\
    \ 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s)\
    \ {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n\
    \        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    foreach my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    foreach my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n\
    \    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s)\
    \ {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        if ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n    \
    \    }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //,\
    \ $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}",
  "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n\
    \        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for (my $i\
    \ = 0; $i < length($s); $i++) {\n        my $c = substr($s, $i, 1);\n        if\
    \ ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n        }\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    foreach my $c (split //, $s)\
    \ {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", " \
    \   my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n        my\
    \ $c = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/) {\n            $sum += ord($c);\n\
    \        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n\
    \        my $c = substr($s, $i, 1);\n        if ($c =~ /[A-Z]/) {\n          \
    \  $sum += ord($c);\n        }\n    }\n    return $sum;\n}", "    my $sum = 0;\n\
    \    for my $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n \
    \   }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n\
    \        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "   \
    \ my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c) if $c\
    \ =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my $c (split\
    \ //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n\
    }", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum += ord($c)\
    \ if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}", "    my $sum = 0;\n    for my\
    \ $c (split //, $s) {\n        $sum += ord($c) if $c =~ /[A-Z]/;\n    }\n    return\
    \ $sum;\n}", "    my $sum = 0;\n    for my $c (split //, $s) {\n        $sum +=\
    \ ord($c) if $c =~ /[A-Z]/;\n    }\n    return $sum;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

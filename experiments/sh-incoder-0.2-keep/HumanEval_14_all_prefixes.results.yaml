language: sh
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=${#string}\n    for (( i=1; i<=$length; i++\
    \ )); do\n        prefix=${string:$i:1}\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[@]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=\"$1\"\n\
    \    local length=\"${#string}\"\n    local i\n    for (( i=1; i<=$length; i++\
    \ )); do\n        prefixes=(\"${prefixes[@]}\" \"$string$i\")\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local lenlen\n    local lenlenlen\n    local lenlenlenlen\n\
    \    local lenlenlenlenlen\n    local lenlenlenlenlenlen\n    local lenlenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local j\n    local len\n    local len2\n    local len3\n    local len4\n\
    \    local len5\n    local len6\n    local len7\n    local len8\n    local len9\n\
    \    local len10\n    local len11\n    local len12\n    local len13\n    local\
    \ len14\n    local len15\n    local len16\n    local len17\n    local len18\n\
    \    local len19\n    local len20\n    local len21\n    local len22\n    local\
    \ len23\n    local len24\n    local len25\n    local len26\n    local len27\n\
    \    local len28\n    local len29\n    local len30\n    local len31\n    local\
    \ len32\n    local len33\n    local len34\n    local len35\n    local len36\n\
    \    local len37\n    local len38\n    local len39\n    local len40\n    local\
    \ len41\n    local len42\n    local len43\n    local len44\n    local len45\n\
    \    local len46\n    local len47\n    local len48\n    local len49\n    local\
    \ len50\n    local len51\n    local len52\n    local len53\n    local len54\n\
    \    local len55\n    local len56\n    local len57\n    local len58\n    local\
    \ len59\n    local len60\n    local len61\n    local len62\n    local len63\n\
    \    local len64\n    local len65\n    local len66\n    local len67\n    local\
    \ len68\n    local len69\n    local len70\n    local len71\n    local len72\n\
    \    local len73\n    local len74\n    local len75\n    local len76\n    local\
    \ len77\n    local len78\n    local len79\n    local len80\n    local len81\n\
    \    local len82\n    local len83\n    local len84\n    local len85\n    local\
    \ len86\n    local len87\n    local len88\n    local len89\n    local len90\n\
    \    local len91\n    local len92\n    local len93\n    local len94\n    local\
    \ len95\n    local len96\n    local len97\n    local len98\n    local len99\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local prefix\n    local i\n    local len\n    len=${#string}\n    for ((i=1;\
    \ i<=$len; i++)); do\n        prefix=$(echo $string | cut -d'/' -f$i)\n      \
    \  prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen=${#1}\n    for (( i=1; i<=${maxlen}; i++\
    \ )); do\n        prefix=\"${1}$i\"\n        len=${#prefix}\n        if [[ ${len}\
    \ -gt ${maxlen} ]]; then\n            prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n        elif [[ ${len} == ${maxlen} ]]; then\n            prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n        fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n    done\n    prefixes=(\"${prefixes[@]}\")\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqa64ycbi.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=$1\n  local\
    \ prefix\n  while [[ $string ]]; do\n    prefix=\"${string%%/*}\"\n    prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    string=\"${string#\"$prefix\"}\"\n  done\n\
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1:$i:1}\"\n       \
    \ prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    for (( i=1; i<=$1; i++ )); do\n        prefix=${prefix}${1}\n\
    \        for (( j=0; j<$i; j++ )); do\n            prefixes=(\"${prefixes[@]}\"\
    \ ${prefix})\n            prefix=''\n        done\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpwh4r1orl.sh: line 14: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local lenlen\n\
    \    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n    local maxlenlenlenlen\n\
    \    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    len=${#1}\n    for ((i=1; i<=$len; i++)); do\n       \
    \ prefix=${1:0:i}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=${1:$i:1}\n     \
    \   prefixes[${#prefixes[*]}]=$prefix\n    done\n    echo ${prefixes[*]}\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=\"$1\"\n\
    \    local prefix\n    local i\n    for (( i=1; i<${#string}; i++ )); do\n   \
    \     prefix=\"${string:$i:1}\"\n        if [[ ${prefix} == [[:alpha:]] ]]; then\n\
    \            prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        fi\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local len2\n \
    \   local len3\n    local len4\n    local len5\n    local len6\n    local len7\n\
    \    local len8\n    local len9\n    local len10\n    local len11\n    local len12\n\
    \    local len13\n    local len14\n    local len15\n    local len16\n    local\
    \ len17\n    local len18\n    local len19\n    local len20\n    local len21\n\
    \    local len22\n    local len23\n    local len24\n    local len25\n    local\
    \ len26\n    local len27\n    local len28\n    local len29\n    local len30\n\
    \    local len31\n    local len32\n    local len33\n    local len34\n    local\
    \ len35\n    local len36\n    local len37\n    local len38\n    local len39\n\
    \    local len40\n    local len41\n    local len42\n    local len43\n    local\
    \ len44\n    local len45\n    local len46\n    local len47\n    local len48\n\
    \    local len49\n    local len50\n    local len51\n    local len52\n    local\
    \ len53\n    local len54\n    local len55\n    local len56\n    local len57\n\
    \    local len58\n    local len59\n    local len60\n    local len61\n    local\
    \ len62\n    local len63\n    local len64\n    local len65\n    local len66\n\
    \    local len67\n    local len68\n    local len69\n    local len70\n    local\
    \ len71\n    local len72\n    local len73\n    local len74\n    local len75\n\
    \    local len76\n    local len77\n    local len78\n    local len79\n    local\
    \ len80\n    local len81\n    local len82\n    local len83\n    local len84\n\
    \    local len85\n    local len86\n    local len87\n    local len88\n    local\
    \ len89\n    local len90\n    local len91\n    local len92\n    local len93\n\
    \    local len94\n    local len95\n    local len96\n    local len97\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=0\n    while [[ $string ]]; do\n        length=$(expr\
    \ length \"$string\")\n        prefix=${string#*}\n        prefixes[${#prefixes[*]}]=$prefix\n\
    \        string=${string%$prefix}\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local len2\n    local len3\n    local len4\n    local\
    \ len5\n    local len6\n    local len7\n    local len8\n    local len9\n    local\
    \ len10\n    local len11\n    local len12\n    local len13\n    local len14\n\
    \    local len15\n    local len16\n    local len17\n    local len18\n    local\
    \ len19\n    local len20\n    local len21\n    local len22\n    local len23\n\
    \    local len24\n    local len25\n    local len26\n    local len27\n    local\
    \ len28\n    local len29\n    local len30\n    local len31\n    local len32\n\
    \    local len33\n    local len34\n    local len35\n    local len36\n    local\
    \ len37\n    local len38\n    local len39\n    local len40\n    local len41\n\
    \    local len42\n    local len43\n    local len44\n    local len45\n    local\
    \ len46\n    local len47\n    local len48\n    local len49\n    local len50\n\
    \    local len51\n    local len52\n    local len53\n    local len54\n    local\
    \ len55\n    local len56\n    local len57\n    local len58\n    local len59\n\
    \    local len60\n    local len61\n    local len62\n    local len63\n    local\
    \ len64\n    local len65\n    local len66\n    local len67\n    local len68\n\
    \    local len69\n    local len70\n    local len71\n    local len72\n    local\
    \ len73\n    local len74\n    local len75\n    local len76\n    local len77\n\
    \    local len78\n    local len79\n    local len80\n    local len81\n    local\
    \ len82\n    local len83\n    local len84\n    local len85\n    local len86\n\
    \    local len87\n    local len88\n    local len89\n    local len90\n    local\
    \ len91\n    local len92\n    local len93\n    local len94\n    local len95\n\
    \    local len96\n    local len97\n    local len98\n    local len99\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes[${#prefixes[@]}]=$prefix\n    done\n    prefixes=(\"${prefixes[@]}\"\
    )\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp6wntx1sa.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=${1:$i:1}\n   \
    \     prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=len; i++)); do\n        prefix+=\"\
    ${1:$i:1}\"\n        prefixes+=(\"${prefix}\")\n    done\n    echo \"${prefixes[*]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    for ((i=1; i<=$1; i++)); do\n        prefix=\"${prefix}${1:$i}\"\
    \n        for ((j=$i; j>0; j--)); do\n            prefix=\"${prefix}${1:$j}\"\n\
    \        done\n        prefixes[${#prefixes[@]}]=$prefix\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvymdhpv6.sh: line 14: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=${#string}\n    for (( i=1; i<=$length; i++\
    \ )); do\n        prefix=${string#*}\n        prefixes=(\"${prefixes[@]}\" \"\
    $prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local length=0\n    while [[ $1 ]]; do\n        length=${#1}\n\
    \        if [[ $length -lt $length ]]; then\n            prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n            prefix=$1\n        else\n            suffix=${1}\n\
    \            prefixes=(\"${prefixes[@]}\" \"$prefix\" \"${suffix}\")\n       \
    \     break\n        fi\n        shift\n    done\n    echo \"${prefixes[@]}\"\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i=0\n    while [ $i -lt ${#string} ]; do\n      \
    \  prefix=${string#*$prefix}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n        i=$((i+1))\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len\n    local s\n    for (( i=1; i<=$1; i++ )); do\n   \
    \     s=$i\n        len=${#s}\n        for (( j=0; j<$len; j++ )); do\n      \
    \      prefix=\"${prefix}${s:$j:1}\"\n        done\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgg86ephs.sh: line 16: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local prefixlen\n    local prefixlen2\n    local prefixlen3\n\
    \    local prefixlen4\n    local prefixlen5\n    local prefixlen6\n    local prefixlen7\n\
    \    local prefixlen8\n    local prefixlen9\n    local prefixlen10\n    local\
    \ prefixlen11\n    local prefixlen12\n    local prefixlen13\n    local prefixlen14\n\
    \    local prefixlen15\n    local prefixlen16\n    local prefixlen17\n    local\
    \ prefixlen18\n    local prefixlen19\n    local prefixlen20\n    local prefixlen21\n\
    \    local prefixlen22\n    local prefixlen23\n    local prefixlen24\n    local\
    \ prefixlen25\n    local prefixlen26\n    local prefixlen27\n    local prefixlen28\n\
    \    local prefixlen29\n    local prefixlen30\n    local prefixlen31\n    local\
    \ prefixlen32\n    local prefixlen33\n    local prefixlen34\n    local prefixlen35\n\
    \    local prefixlen36\n    local prefixlen37\n    local prefixlen38\n    local\
    \ prefixlen39\n    local prefixlen40\n    local prefixlen41\n    local prefixlen42\n\
    \    local prefixlen43\n    local prefixlen44\n    local prefixlen45\n    local\
    \ prefixlen46\n    local prefixlen47\n    local prefixlen48\n    local prefixlen49\n\
    \    local prefixlen50\n    local prefixlen51\n    local prefixlen52\n    local\
    \ prefixlen53\n    local prefixlen54\n    local prefixlen55\n    local prefixlen56\n\
    \    local prefixlen57\n    local prefixlen58\n    local prefixlen59\n    local\
    \ prefixlen60\n    local prefixlen61\n    local prefixlen62\n    local prefixlen63\n\
    \    local prefixlen64\n    local prefixlen65\n    local prefixlen66\n    local\
    \ prefixlen67\n    local prefixlen68\n    local prefixlen69\n    local prefixlen70\n\
    \    local prefixlen71\n    local prefixlen72\n    local prefixlen73\n    local\
    \ prefixlen74\n    local prefixlen75\n    local prefixlen76\n    local prefixlen77\n\
    \    local prefixlen78\n    local prefixlen79\n    local prefixlen80\n    local\
    \ prefixlen81\n    local prefixlen82\n    local \n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=${1:$i:1}\n\
    \        suffix=${1:$((i+1)):1}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    \ \"${prefix}\" \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen=${1:-${#1}}\n    for (( i=1; i<=${#1}; i++\
    \ )); do\n        prefix=\"${1:$i:1}\"\n        len=${#prefix}\n        if ((\
    \ len > maxlen )) ; then\n            prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n            maxlen=${len}\n        fi\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix+=$i\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi8e4nwe9.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=$len; i++)); do\n        prefix=${1:0:i}\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix+=$prefix\n\
    \        suffix+=$suffix\n    done\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"\
    $prefix\")\n    prefixes+=(\"$suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$prefix\")\n    prefixes+=\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzrssioh6.sh: line 12: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len=${#1}\n    for ((i=0; i<len; i++)); do\n        prefix=\"${1:$i:1}\"\
    \n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[*]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: -1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ input=$1\n  local i=${#input}\n  while [ $i -gt 0 ]; do\n    prefix=${input:0:i}\n\
    \    prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    input=${input:i-1}\n    i=${#input}\n\
    \  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660026664
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local str=$1\n    len=${#str}\n    for ((i=1; i<=$len;\
    \ i++)); do\n        prefix=\"${str:$i:1}\"\n        if [[ -z ${prefixes[*]} ]];\
    \ then\n            prefixes[${#prefixes[@]}]=$prefix\n        else\n        \
    \    prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        fi\n    done\n    echo\
    \ \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str=\"$1\"\n  len=\"${#str}\"\n  for (( i=1; i<=len; i++\
    \ )); do\n    prefix=\"${str:$i:1}\"\n    prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n  done\n  echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local len=${#1}\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${1:$i:1}\n        suffix=${1:$((i+1)):1}\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\" \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp92vnldby.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len\n    local len2\n    local len3\n    local len4\n   \
    \ local len5\n    local len6\n    local len7\n    local len8\n    local len9\n\
    \    local len10\n    local len11\n    local len12\n    local len13\n    local\
    \ len14\n    local len15\n    local len16\n    local len17\n    local len18\n\
    \    local len19\n    local len20\n    local len21\n    local len22\n    local\
    \ len23\n    local len24\n    local len25\n    local len26\n    local len27\n\
    \    local len28\n    local len29\n    local len30\n    local len31\n    local\
    \ len32\n    local len33\n    local len34\n    local len35\n    local len36\n\
    \    local len37\n    local len38\n    local len39\n    local len40\n    local\
    \ len41\n    local len42\n    local len43\n    local len44\n    local len45\n\
    \    local len46\n    local len47\n    local len48\n    local len49\n    local\
    \ len50\n    local len51\n    local len52\n    local len53\n    local len54\n\
    \    local len55\n    local len56\n    local len57\n    local len58\n    local\
    \ len59\n    local len60\n    local len61\n    local len62\n    local len63\n\
    \    local len64\n    local len65\n    local len66\n    local len67\n    local\
    \ len68\n    local len69\n    local len70\n    local len71\n    local len72\n\
    \    local len73\n    local len74\n    local len75\n    local len76\n    local\
    \ len77\n    local len78\n    local len79\n    local len80\n    local len81\n\
    \    local len82\n    local len83\n    local len84\n    local len85\n    local\
    \ len86\n    local len87\n    local len88\n    local len89\n    local len90\n\
    \    local len91\n    local len92\n    local len93\n    local len94\n    local\
    \ len95\n    local len96\n    local len97\n    local len98\n    local len99\n\
    \    local \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ string=$1\n  while [[ $string ]]; do\n    prefix+=${string#*}\n    prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    string=${string%?}\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: -1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=0\n    while [[ $string ]]; do\n        length=$((length+1))\n\
    \        prefix=$1\n        prefixes[$length]=$prefix\n        shift\n    done\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$((length-1))\n    prefix=$1\n    prefixes[$length]=$prefix\n    shift\n\
    \    length=$\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660026664
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    while [[ $string ]]; do\n        prefix=${string#*}\n \
    \       prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        string=${string%\"\
    $prefix\"}\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=$2\n    local prefix\n    local i\n    for (( i=1; i<=$length;\
    \ i++ )); do\n        prefix=\"${string::$i}\"\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7il9inen.sh: line 13: ((: i<=: syntax error: operand expected (error
    token is "<=")

    /tmp/tmp7il9inen.sh: line 13: ((: i<=: syntax error: operand expected (error token
    is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"${prefix}\")\n    done\n    prefixes+=(\"${prefix}\")\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm8tmusy9.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local len2\n \
    \   local len3\n    local len4\n    local len5\n    local len6\n    local len7\n\
    \    local len8\n    local len9\n    local len10\n    local len11\n    local len12\n\
    \    local len13\n    local len14\n    local len15\n    local len16\n    local\
    \ len17\n    local len18\n    local len19\n    local len20\n    local len21\n\
    \    local len22\n    local len23\n    local len24\n    local len25\n    local\
    \ len26\n    local len27\n    local len28\n    local len29\n    local len30\n\
    \    local len31\n    local len32\n    local len33\n    local len34\n    local\
    \ len35\n    local len36\n    local len37\n    local len38\n    local len39\n\
    \    local len40\n    local len41\n    local len42\n    local len43\n    local\
    \ len44\n    local len45\n    local len46\n    local len47\n    local len48\n\
    \    local len49\n    local len50\n    local len51\n    local len52\n    local\
    \ len53\n    local len54\n    local len55\n    local len56\n    local len57\n\
    \    local len58\n    local len59\n    local len60\n    local len61\n    local\
    \ len62\n    local len63\n    local len64\n    local len65\n    local len66\n\
    \    local len67\n    local len68\n    local len69\n    local len70\n    local\
    \ len71\n    local len72\n    local len73\n    local len74\n    local len75\n\
    \    local len76\n    local len77\n    local len78\n    local len79\n    local\
    \ len80\n    local len81\n    local len82\n    local len83\n    local len84\n\
    \    local len85\n    local len86\n    local len87\n    local len88\n    local\
    \ len89\n    local len90\n    local len91\n    local len92\n    local len93\n\
    \    local len94\n    local len95\n    local len96\n    local len97\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local prefixlen\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local suffix\n\
    \    local suffixlen\n    local suffixlens\n    local suffixlen\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n\
    \    local suffixlenmaxs\n    local suffixlenmax\n    local suffixlenmaxs\n  \
    \  local suffixlenmax\n    local suffixlenmaxs\n    local suffixlenmax\n    local\
    \ suffixlenmaxs\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local count=0\n    while [[ $string\
    \ ]]; do\n        ((count++))\n        suffix=\"${string#*$prefix}\"\n       \
    \ prefix=\"${string#$suffix}\"\n        prefixes+=(\"$prefix\")\n        string=\"\
    ${string%$suffix}\"\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix+=$i\n        prefixes+=(\
    \ \"$prefix\" )\n    done\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\"\
    \ )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n\
    \    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=(\
    \ \"$prefix\" )\n    prefixes+=( \"$prefix\" )\n    prefixes+=( \"$\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpair60oxx.sh: line 77: unexpected EOF while looking for matching
    `"''

    /tmp/tmpair60oxx.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local len=${#1}\n    for (( i=0; i<len; i++\
    \ )); do\n        prefix=${1:$i:1}\n        suffix=${1:$((i+1)):1}\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\" \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen=${#1}\n    for ((i=1; i<=${maxlen}; i++));\
    \ do\n        prefix=\"${1:$i:1}\"\n        len=${#prefix}\n        if [[ ${len}\
    \ -gt 0 ]]; then\n            prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    \
    \    fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=\"$1\"\n\
    \    local length=\"${#string}\"\n    local i\n    local prefix\n    for (( i=1;\
    \ i<=$length; i++ )); do\n        prefix=\"${string:0:i}\"\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for (( i=0; i<${len}; i++ )); do\n       \
    \ prefix=${1:$i:1}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n\
    \    echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: -1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=$((${#string} - 1))\n    while [[ $string\
    \ ]]; do\n        prefix+=$string\n        prefixes+=(\"$prefix\")\n        prefix=''\n\
    \        string=${string:$((${#string} - 1))}\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=43 encoding='utf-8'>
  timestamp: 1660026664
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local length\n    local len\n    local prefixlen\n    local prefixes\n\
    \    local maxlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n    local maxlenlen\n\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=${#string}\n    local i\n    for (( i=1; i<=$length; i++ )); do\n\
    \        prefixes[${#prefixes[*]}]=$string$i\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ string=$1\n  while [[ $string ]]; do\n    prefix+=${string#*}\n    prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    string=${string%?}\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ string=\"$1\"\n    local length=\"${#string}\"\n    for (( i = 0; i < length;\
    \ i++ )); do\n        prefix=\"${string:$i:1}\"\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local lenlen\n\
    \    local lenlenlen\n    local lenlenlenlen\n    local lenlenlenlenlen\n    local\
    \ lenlenlenlenlenlen\n    local lenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=$len; i++)); do\n        prefix=\"\
    ${1}${prefix}\"\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str\n  local lenstr\n  local lenlen\n  local maxlen\n  local\
    \ maxlenstr\n  local maxlenlen\n  local maxlenmaxlen\n  local maxlenmaxlenstr\n\
    \  local maxlenmaxlenlenstr\n  local maxlenmaxlenmaxlen\n  local maxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenlenstr\n  local maxlenmaxlenmaxlenmaxlen\n  local maxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlen\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n  local\
    \ maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenstr\n\
    \  local maxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlenmaxlen\n\
    \  local maxlenmaxlenmaxlenmaxlenmax\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    for\
    \ prefix in \"${1}\"; do\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    for\
    \ prefix in \"${1}\"; do\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ string=\"$1\"\n    local length=\"${#string}\"\n    for (( prefix=0; prefix<${#prefixes[@]};\
    \ prefix++ )); do\n        prefix=\"${string::${prefix}:${length}}\"\n       \
    \ prefixes[$prefix]=\"${prefixes[$prefix]} $prefix\"\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local j\n    local len\n    local len2\n    local len3\n    local len4\n\
    \    local len5\n    local len6\n    local len7\n    local len8\n    local len9\n\
    \    local len10\n    local len11\n    local len12\n    local len13\n    local\
    \ len14\n    local len15\n    local len16\n    local len17\n    local len18\n\
    \    local len19\n    local len20\n    local len21\n    local len22\n    local\
    \ len23\n    local len24\n    local len25\n    local len26\n    local len27\n\
    \    local len28\n    local len29\n    local len30\n    local len31\n    local\
    \ len32\n    local len33\n    local len34\n    local len35\n    local len36\n\
    \    local len37\n    local len38\n    local len39\n    local len40\n    local\
    \ len41\n    local len42\n    local len43\n    local len44\n    local len45\n\
    \    local len46\n    local len47\n    local len48\n    local len49\n    local\
    \ len50\n    local len51\n    local len52\n    local len53\n    local len54\n\
    \    local len55\n    local len56\n    local len57\n    local len58\n    local\
    \ len59\n    local len60\n    local len61\n    local len62\n    local len63\n\
    \    local len64\n    local len65\n    local len66\n    local len67\n    local\
    \ len68\n    local len69\n    local len70\n    local len71\n    local len72\n\
    \    local len73\n    local len74\n    local len75\n    local len76\n    local\
    \ len77\n    local len78\n    local len79\n    local len80\n    local len81\n\
    \    local len82\n    local len83\n    local len84\n    local len85\n    local\
    \ len86\n    local len87\n    local len88\n    local len89\n    local len90\n\
    \    local len91\n    local len92\n    local len93\n    local len94\n    local\
    \ len95\n    local len96\n    local len97\n    local len98\n    local len99\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local s\n    local j\n    local len2\n    local len3\n\
    \    local len4\n    local len5\n    local len6\n    local len7\n    local len8\n\
    \    local len9\n    local len10\n    local len11\n    local len12\n    local\
    \ len13\n    local len14\n    local len15\n    local len16\n    local len17\n\
    \    local len18\n    local len19\n    local len20\n    local len21\n    local\
    \ len22\n    local len23\n    local len24\n    local len25\n    local len26\n\
    \    local len27\n    local len28\n    local len29\n    local len30\n    local\
    \ len31\n    local len32\n    local len33\n    local len34\n    local len35\n\
    \    local len36\n    local len37\n    local len38\n    local len39\n    local\
    \ len40\n    local len41\n    local len42\n    local len43\n    local len44\n\
    \    local len45\n    local len46\n    local len47\n    local len48\n    local\
    \ len49\n    local len50\n    local len51\n    local len52\n    local len53\n\
    \    local len54\n    local len55\n    local len56\n    local len57\n    local\
    \ len58\n    local len59\n    local len60\n    local len61\n    local len62\n\
    \    local len63\n    local len64\n    local len65\n    local len66\n    local\
    \ len67\n    local len68\n    local len69\n    local len70\n    local len71\n\
    \    local len72\n    local len73\n    local len74\n    local len75\n    local\
    \ len76\n    local len77\n    local len78\n    local len79\n    local len80\n\
    \    local len81\n    local len82\n    local len83\n    local len84\n    local\
    \ len85\n    local len86\n    local len87\n    local len88\n    local len89\n\
    \    local len90\n    local len91\n    local len92\n    local len93\n    local\
    \ len94\n    local len95\n    local len96\n    local len97\n    local len98\n\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=${1:$i:1}\n\
    \        if [[ -z \"$prefix\" ]]; then\n            prefix=''\n        fi\n  \
    \      suffix=${1:$((i+1)):1}\n        if [[ -z \"$suffix\" ]]; then\n       \
    \     suffix=''\n        fi\n        prefixes+=(\"$prefix$suffix\")\n    done\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local length\n    local prefixlen\n    local maxlen\n    local maxprefix\n\
    \    local maxprefixlen\n    local maxsuffixlen\n    local maxsuffix\n    local\
    \ suffix\n    local suffixlen\n    local suffixlen\n    local maxsuffixlen\n \
    \   local maxsuffix\n    local maxprefixlen\n    local maxprefix\n    local maxlen\n\
    \    local maxprefixlen\n    local maxsuffixlen\n    local maxsuffix\n    local\
    \ maxlen\n    local maxprefixlen\n    local maxprefix\n    local maxsuffixlen\n\
    \    local maxsuffix\n    local maxlen\n    local maxprefixlen\n    local maxprefix\n\
    \    local maxsuffixlen\n    local maxsuffix\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxlen\n\
    \    local maxprefixlen\n    local maxprefix\n    local maxsuffixlen\n    local\
    \ maxsuffix\n    local maxlen\n    local maxprefixlen\n    local maxprefix\n \
    \   local maxsuffixlen\n    local maxsuffix\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxlen\n\
    \    local maxprefixlen\n    local maxprefix\n    local maxsuffixlen\n    local\
    \ maxsuffix\n    local maxlen\n    local maxprefixlen\n    local maxprefix\n \
    \   local maxsuffixlen\n    local maxsuffix\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxlen\n\
    \    local maxprefixlen\n    local maxprefix\n    local maxsuffixlen\n    local\
    \ maxsuffix\n    local maxlen\n    local maxprefixlen\n    local maxprefix\n \
    \   local maxsuffixlen\n    local maxsuffix\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxlen\n\
    \    local maxprefixlen\n    local maxprefix\n    local maxsuffixlen\n    local\
    \ maxsuffix\n    local maxlen\n    local maxprefixlen\n    local maxprefix\n \
    \   local maxsuffixlen\n    local maxsuffix\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local max\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local s\n    len=${#1}\n    for ((i=1; i<=len; i++));\
    \ do\n        s=${1:$i:1}\n        prefix=${s:0:$i}\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=${prefix}\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for (( i=0; i<len; i++ )); do\n        prefix=\"\
    ${1}${prefix}\"\n        prefixes+=(\"${prefix}\")\n    done\n    echo \"${prefixes[*]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local i\n    local j\n    local len\n\
    \    local lenlen\n    local lenlenlen\n    local lenlenlenlen\n    local lenlenlenlenlen\n\
    \    local lenlenlenlenlenlen\n    local lenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len1\n    local len2\n    local\
    \ len3\n    local len4\n    local len5\n    local len6\n    local len7\n    local\
    \ len8\n    local len9\n    local len10\n    local len11\n    local len12\n  \
    \  local len13\n    local len14\n    local len15\n    local len16\n    local len17\n\
    \    local len18\n    local len19\n    local len20\n    local len21\n    local\
    \ len22\n    local len23\n    local len24\n    local len25\n    local len26\n\
    \    local len27\n    local len28\n    local len29\n    local len30\n    local\
    \ len31\n    local len32\n    local len33\n    local len34\n    local len35\n\
    \    local len36\n    local len37\n    local len38\n    local len39\n    local\
    \ len40\n    local len41\n    local len42\n    local len43\n    local len44\n\
    \    local len45\n    local len46\n    local len47\n    local len48\n    local\
    \ len49\n    local len50\n    local len51\n    local len52\n    local len53\n\
    \    local len54\n    local len55\n    local len56\n    local len57\n    local\
    \ len58\n    local len59\n    local len60\n    local len61\n    local len62\n\
    \    local len63\n    local len64\n    local len65\n    local len66\n    local\
    \ len67\n    local len68\n    local len69\n    local len70\n    local len71\n\
    \    local len72\n    local len73\n    local len74\n    local len75\n    local\
    \ len76\n    local len77\n    local len78\n    local len79\n    local len80\n\
    \    local len81\n    local len82\n    local len83\n    local len84\n    local\
    \ len85\n    local len86\n    local len87\n    local len88\n    local len89\n\
    \    local len90\n    local len91\n    local len92\n    local len93\n    local\
    \ len94\n    local len95\n    local len96\n    local len97\n    local len\n}\n\
    \ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ string=$1\n    local i\n    local len\n    len=${#string}\n    for (( i=1; i<=$len;\
    \ i++ )); do\n        prefix=${string:$i:1}\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i\n    local len=${#string}\n    for ((i=1; i<=$len;\
    \ i++)); do\n        prefix=\"${prefix}${string:$i}\"\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=${#string}\n\n    for (( i=1; i<=$length;\
    \ i++ )); do\n        prefix=\"${string#${prefix}}\"\n        prefixes[${#prefixes[@]}]=${prefix}\n\
    \    done\n\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local str=\"$1\"\n    len=\"${#str}\"\n    for ((i=1;\
    \ i<=$len; i++)); do\n        prefix=\"${str:$i:1}\"\n        if [[ ${prefix}\
    \ != \"\" ]]; then\n            prefixes=(\"${prefixes[@]}\" \"$prefix\")\n  \
    \      fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local length\n    local lengths\n    local length\n    local prefix\n\
    \    local prefixes\n    local prefix\n    local prefixes\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local prefix\n    local prefix\n\
    \    local prefix\n    local prefix\n    local prefix\n    local prefix\n    local\
    \ prefix\n    local prefix\n    local prefix\n    local \n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    len=${#1}\n    for ((i=1; i<=$len; i++)); do\n       \
    \ prefix=\"${1:0:i}\"\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n   \
    \ done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len=${#1}\n    for ((i=1;\
    \ i<len; i++)); do\n        prefix=${1:0:i}\n        suffix=${1:i}\n        for\
    \ ((j=0; j<i; j++)); do\n            prefixes[${#prefixes[@]}]=${prefix}${prefixes[${#prefixes[@]}]}${suffix}\n\
    \        done\n    done\n    prefixes[${#prefixes[@]}]=${prefix}${suffix}\n  \
    \  echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=${#string}\n    while [[ $string ]]; do\n\
    \        prefix=${string#*}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n        string=${string%$prefix}\n    done\n    echo \"${prefixes[@]}\"\n}\n\
    \ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=\"$1\"\n\
    \    local length=\"${#string}\"\n    local i\n    for (( i=1; i<=$length; i++\
    \ )); do\n        prefixes=(\"${prefixes[@]}\" \"$string${i}\")\n    done\n  \
    \  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=\"$1\"\n\
    \    local prefix\n    local i\n    for (( i=1; i<${#string}; i++ )); do\n   \
    \     prefix=\"${string:$i:1}\"\n        if [[ -z \"${prefixes[@]}\" ]]; then\n\
    \            prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        else\n       \
    \     prefixes=(\"${prefixes[@]}\" \"$prefix\" \"${prefixes[@]}\")\n        fi\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[@]}\"\
    \n        prefixes[${#prefixes[@]}]=$prefix\n    done\n    prefixes[${#prefixes[@]}]=$prefix\n\
    \    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpne6v1cmo.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[@]}]=${prefix}\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=\"$1\"\n  local\
    \ length=\"${#string}\"\n  local i\n  local prefix\n  for (( i=1; i<=$length;\
    \ i++ )); do\n    prefix=\"${string#?}\"\n    prefixes=(\"${prefixes[@]}\" \"\
    $prefix\")\n    string=\"${string%$prefix}\"\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=$1\n  local\
    \ length=${#string}\n  local i\n  for i in $(seq 0 $((length-1))); do\n    prefixes[${#prefixes[*]}]=$string$i\n\
    \  done\n  echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local len2\n \
    \   local len3\n    local len4\n    local len5\n    local len6\n    local len7\n\
    \    local len8\n    local len9\n    local len10\n    local len11\n    local len12\n\
    \    local len13\n    local len14\n    local len15\n    local len16\n    local\
    \ len17\n    local len18\n    local len19\n    local len20\n    local len21\n\
    \    local len22\n    local len23\n    local len24\n    local len25\n    local\
    \ len26\n    local len27\n    local len28\n    local len29\n    local len30\n\
    \    local len31\n    local len32\n    local len33\n    local len34\n    local\
    \ len35\n    local len36\n    local len37\n    local len38\n    local len39\n\
    \    local len40\n    local len41\n    local len42\n    local len43\n    local\
    \ len44\n    local len45\n    local len46\n    local len47\n    local len48\n\
    \    local len49\n    local len50\n    local len51\n    local len52\n    local\
    \ len53\n    local len54\n    local len55\n    local len56\n    local len57\n\
    \    local len58\n    local len59\n    local len60\n    local len61\n    local\
    \ len62\n    local len63\n    local len64\n    local len65\n    local len66\n\
    \    local len67\n    local len68\n    local len69\n    local len70\n    local\
    \ len71\n    local len72\n    local len73\n    local len74\n    local len75\n\
    \    local len76\n    local len77\n    local len78\n    local len79\n    local\
    \ len80\n    local len81\n    local len82\n    local len83\n    local len84\n\
    \    local len85\n    local len86\n    local len87\n    local len88\n    local\
    \ len89\n    local len90\n    local len91\n    local len92\n    local len93\n\
    \    local len94\n    local len95\n    local len96\n    local len97\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    echo ${prefixes[@]}\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl87ljpr4.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=${1:$i:1}\n   \
    \     prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local input=$1\n  local prefix\n\
    \  local i\n  local j\n  local len\n  local len2\n  local len3\n  local len4\n\
    \  local len5\n  local len6\n  local len7\n  local len8\n  local len9\n  local\
    \ len10\n  local len11\n  local len12\n  local len13\n  local len14\n  local len15\n\
    \  local len16\n  local len17\n  local len18\n  local len19\n  local len20\n \
    \ local len21\n  local len22\n  local len23\n  local len24\n  local len25\n  local\
    \ len26\n  local len27\n  local len28\n  local len29\n  local len30\n  local len31\n\
    \  local len32\n  local len33\n  local len34\n  local len35\n  local len36\n \
    \ local len37\n  local len38\n  local len39\n  local len40\n  local len41\n  local\
    \ len42\n  local len43\n  local len44\n  local len45\n  local len46\n  local len47\n\
    \  local len48\n  local len49\n  local len50\n  local len51\n  local len52\n \
    \ local len53\n  local len54\n  local len55\n  local len56\n  local len57\n  local\
    \ len58\n  local len59\n  local len60\n  local len61\n  local len62\n  local len63\n\
    \  local len64\n  local len65\n  local len66\n  local len67\n  local len68\n \
    \ local len69\n  local len70\n  local len71\n  local len72\n  local len73\n  local\
    \ len74\n  local len75\n  local len76\n  local len77\n  local len78\n  local len79\n\
    \  local len80\n  local len81\n  local len82\n  local len83\n  local len84\n \
    \ local len85\n  local len86\n  local len87\n  local len88\n  local len89\n  local\
    \ len90\n  local len91\n  local len92\n  local len93\n  local len94\n  local len95\n\
    \  local len96\n  local len97\n  local len\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    len=\"${#1}\"\n    for (( i = 0; i < len; i++ )); do\n\
    \        prefix=\"${1:0:i}\"\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp92vnldby.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlen2\n\
    \    local maxlenlen3\n    local maxlenlen4\n    local maxlenlen5\n    local maxlenlen6\n\
    \    local maxlenlen7\n    local maxlenlen8\n    local maxlenlen9\n    local maxlenlen10\n\
    \    local maxlenlen11\n    local maxlenlen12\n    local maxlenlen13\n    local\
    \ maxlenlen14\n    local maxlenlen15\n    local maxlenlen16\n    local maxlenlen17\n\
    \    local maxlenlen18\n    local maxlenlen19\n    local maxlenlen20\n    local\
    \ maxlenlen21\n    local maxlenlen22\n    local maxlenlen23\n    local maxlenlen24\n\
    \    local maxlenlen25\n    local maxlenlen26\n    local maxlenlen27\n    local\
    \ maxlenlen28\n    local maxlenlen29\n    local maxlenlen30\n    local maxlenlen31\n\
    \    local maxlenlen32\n    local maxlenlen33\n    local maxlenlen34\n    local\
    \ maxlenlen35\n    local maxlenlen36\n    local maxlenlen37\n    local maxlenlen38\n\
    \    local maxlenlen39\n    local maxlenlen40\n    local maxlenlen41\n    local\
    \ maxlenlen42\n    local maxlenlen43\n    local maxlenlen44\n    local maxlenlen45\n\
    \    local maxlenlen46\n    local maxlenlen47\n    local maxlenlen48\n    local\
    \ maxlenlen49\n    local maxlenlen50\n    local maxlenlen51\n    local maxlenlen52\n\
    \    local maxlenlen53\n    local maxlenlen54\n    local maxlenlen55\n    local\
    \ maxlenlen56\n    local maxlenlen57\n    local maxlenlen58\n    local maxlenlen59\n\
    \    local maxlenlen60\n    local maxlenlen61\n    local maxlenlen62\n    local\
    \ maxlenlen63\n    local maxlenlen64\n    local maxlenlen65\n    local maxlenlen66\n\
    \    local maxlenlen67\n    local maxlenlen68\n    local maxlenlen69\n    local\
    \ maxlenlen70\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    while [[ $string ]]; do\n        prefix+=$string\n    \
    \    prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        string=${string#?}\n \
    \   done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local lenlen\n    local lenlenlen\n\
    \    local lenlenlenlen\n    local lenlenlenlenlen\n    local lenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlen\n    local lenlenlenlenlenlenlenlenlen\n    local\
    \ lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local len2\n \
    \   local len3\n    local len4\n    local len5\n    local len6\n    local len7\n\
    \    local len8\n    local len9\n    local len10\n    local len11\n    local len12\n\
    \    local len13\n    local len14\n    local len15\n    local len16\n    local\
    \ len17\n    local len18\n    local len19\n    local len20\n    local len21\n\
    \    local len22\n    local len23\n    local len24\n    local len25\n    local\
    \ len26\n    local len27\n    local len28\n    local len29\n    local len30\n\
    \    local len31\n    local len32\n    local len33\n    local len34\n    local\
    \ len35\n    local len36\n    local len37\n    local len38\n    local len39\n\
    \    local len40\n    local len41\n    local len42\n    local len43\n    local\
    \ len44\n    local len45\n    local len46\n    local len47\n    local len48\n\
    \    local len49\n    local len50\n    local len51\n    local len52\n    local\
    \ len53\n    local len54\n    local len55\n    local len56\n    local len57\n\
    \    local len58\n    local len59\n    local len60\n    local len61\n    local\
    \ len62\n    local len63\n    local len64\n    local len65\n    local len66\n\
    \    local len67\n    local len68\n    local len69\n    local len70\n    local\
    \ len71\n    local len72\n    local len73\n    local len74\n    local len75\n\
    \    local len76\n    local len77\n    local len78\n    local len79\n    local\
    \ len80\n    local len81\n    local len82\n    local len83\n    local len84\n\
    \    local len85\n    local len86\n    local len87\n    local len88\n    local\
    \ len89\n    local len90\n    local len91\n    local len92\n    local len93\n\
    \    local len94\n    local len95\n    local len96\n    local len97\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen=${#1}\n    for (( i=1; i<=${maxlen}; i++\
    \ )); do\n        prefix=\"${1:0:i}\"\n        if [[ ${prefix} == \"\" ]]; then\n\
    \            prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        else\n       \
    \     len=${#prefix}\n            if (( len > maxlen )) ; then\n             \
    \   prefixes=(\"${prefixes[@]}\" \"$prefix\")\n            else\n            \
    \    prefixes=(\"${prefixes[@]}\" \"$prefix\" \"${prefix:len}\")\n           \
    \ fi\n        fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local str\n    local lenstr\n    local lenstrlen\n   \
    \ local lenstrlen2\n    local lenstrlen3\n    local lenstrlen4\n    local lenstrlen5\n\
    \    local lenstrlen6\n    local lenstrlen7\n    local lenstrlen8\n    local lenstrlen9\n\
    \    local lenstrlen10\n    local lenstrlen11\n    local lenstrlen12\n    local\
    \ lenstrlen13\n    local lenstrlen14\n    local lenstrlen15\n    local lenstrlen16\n\
    \    local lenstrlen17\n    local lenstrlen18\n    local lenstrlen19\n    local\
    \ lenstrlen20\n    local lenstrlen21\n    local lenstrlen22\n    local lenstrlen23\n\
    \    local lenstrlen24\n    local lenstrlen25\n    local lenstrlen26\n    local\
    \ lenstrlen27\n    local lenstrlen28\n    local lenstrlen29\n    local lenstrlen30\n\
    \    local lenstrlen31\n    local lenstrlen32\n    local lenstrlen33\n    local\
    \ lenstrlen34\n    local lenstrlen35\n    local lenstrlen36\n    local lenstrlen37\n\
    \    local lenstrlen38\n    local lenstrlen39\n    local lenstrlen40\n    local\
    \ lenstrlen41\n    local lenstrlen42\n    local lenstrlen43\n    local lenstrlen44\n\
    \    local lenstrlen45\n    local lenstrlen46\n    local lenstrlen47\n    local\
    \ lenstrlen48\n    local lenstrlen49\n    local lenstrlen50\n    local lenstrlen51\n\
    \    local lenstrlen52\n    local lenstrlen53\n    local lenstrlen54\n    local\
    \ lenstrlen55\n    local lenstrlen56\n    local lenstrlen57\n    local lenstrlen58\n\
    \    local lenstrlen59\n    local lenstrlen60\n    local lenstrlen61\n    local\
    \ lenstrlen62\n    local lenstrlen63\n    local lenstrlen64\n    local lenstrlen65\n\
    \    local lenstrlen66\n    local lenstrlen67\n    local lenstrlen68\n    local\
    \ lenstrlen69\n    local \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local len=${#1}\n    for ((i=0; i<len; i++));\
    \ do\n        prefix=${1:0:i}\n        suffix=${1:i+1}\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\" \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=\"${1:$i:1}\"\n     \
    \   prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i=0\n    while [ $i -lt ${#string} ]; do\n      \
    \  prefix=${string: : $i}\n        prefixes[${#prefixes[*]}]=${prefix}\n     \
    \   i=$((i+1))\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"\
    ${1}${prefix}\"\n        suffix=\"${1}${suffix}\"\n        if [[ \"${prefix}\"\
    \ == \"${suffix}\" ]]; then\n            prefixes[${#prefixes[@]}]=\"${prefix}\"\
    \n        fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=0\n    local prefix\n    while [[ $string ]]; do\n        length=$(expr\
    \ length \"$string\")\n        prefix=$(echo $string | cut -c -$length)\n    \
    \    prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        string=$(echo $string\
    \ | cut -c $length+1)\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "cut: invalid byte/character position \u2018+1\u2019\nTry 'cut --help' for\
    \ more information.\n"
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len=${#1}\n    for ((i=0; i<${#1}; i++)); do\n\
    \        prefix=${1:$i:1}\n        for ((j=0; j<${#prefix}; j++)); do\n      \
    \      prefixes[${#prefixes}]=${prefix:$j:1}\n        done\n    done\n    echo\
    \ ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for (( i=0; i<len; i++ )); do\n        prefix=\"\
    ${1:$i:1}\"\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n   \
    \ echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=$1\n  local\
    \ length=${#string}\n  local i\n  local prefix\n  for i in $(seq 0 $((length-1)));\
    \ do\n    prefix=\"${string:$i:1}\"\n    prefixes[${#prefixes[@]}]=$prefix\n \
    \ done\n  echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local i\n    local j\n    local len=${#string}\n\
    \    for (( i=0; i<len; i++ )); do\n        suffix=${string:$i:1}\n        if\
    \ [[ $suffix != $prefix ]]; then\n            prefixes=(\"${prefixes[@]}\" \"\
    $prefix\")\n            prefix=$suffix\n        fi\n    done\n    prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local prefix\n    local i\n\n    for (( i=1; i<=${#string}; i++ )); do\n   \
    \     prefix=\"${string:$i:1}\"\n        prefixes[${#prefixes[*]}]=$prefix\n \
    \   done\n\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i\n    local len\n    len=${#string}\n    for ((i=1;\
    \ i<=$len; i++)); do\n        prefix=\"${prefix}${string:$i}\"\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=len; i++)); do\n        prefix=${1:0:i}\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1:$i:1}\"\n       \
    \ prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ i\n  for i in $1; do\n    prefix+=$i\n    prefixes+=( \"$prefix\" )\n    prefix=''\n\
    \  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local len1\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n \
    \   local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=$len; i++)); do\n        prefix+=\"\
    ${1:$i:1}\"\n        prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[*]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    for ((i=0; i<${#1}; i++)); do\n        prefix=${1:$i:1}\n\
    \        for ((j=0; j<${#prefix}; j++)); do\n            prefixes[${#prefixes}]=${prefix:$j:1}\n\
    \        done\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    for (( i = 1 ; i <= ${#1} ; i++ )); do\n        prefix=\"${1:$i:1}\"\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"\
    ${prefix}${1}\"\n    done\n    prefixes=(\"${prefixes[@]}\")\n    for (( i=1;\
    \ i<=$1; i++ )); do\n        suffix=\"${1}${suffix}\"\n    done\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"\
    ${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\")\n    prefixes=(\"${prefixes[@]}\"\
    )\n\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpxz_6ie5b.sh: line 12: ((: i<=: syntax error: operand expected (error
    token is "<=")

    /tmp/tmpxz_6ie5b.sh: line 16: ((: i<=: syntax error: operand expected (error token
    is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for (( i=0; i<len; i++ )); do\n        prefix=${1:$i:1}\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ prefixlen\n    local i\n    local j\n    local len\n    local lenlen\n    local\
    \ lenlenlen\n    local lenlenlenlen\n    local lenlenlenlenlen\n    local lenlenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len=${#1}\n    for (( i=1;\
    \ i<=$len; i++ )); do\n        prefix=${1:0:i}\n        suffix=${1:i}\n      \
    \  for (( j=0; j<$len; j++ )); do\n            if [[ $j -gt $i ]]; then\n    \
    \            prefixes[${#prefixes[@]}]=\"$prefix$suffix\"\n                break\n\
    \            fi\n        done\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str\n  str=\"$1\"\n  len=\"${#str}\"\n  for ((i=1; i<=$len;\
    \ i++)); do\n    prefix=\"${str:$i:1}\"\n    prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local len2\n    local len3\n    local len4\n    local\
    \ len5\n    local len6\n    local len7\n    local len8\n    local len9\n    local\
    \ len10\n    local len11\n    local len12\n    local len13\n    local len14\n\
    \    local len15\n    local len16\n    local len17\n    local len18\n    local\
    \ len19\n    local len20\n    local len21\n    local len22\n    local len23\n\
    \    local len24\n    local len25\n    local len26\n    local len27\n    local\
    \ len28\n    local len29\n    local len30\n    local len31\n    local len32\n\
    \    local len33\n    local len34\n    local len35\n    local len36\n    local\
    \ len37\n    local len38\n    local len39\n    local len40\n    local len41\n\
    \    local len42\n    local len43\n    local len44\n    local len45\n    local\
    \ len46\n    local len47\n    local len48\n    local len49\n    local len50\n\
    \    local len51\n    local len52\n    local len53\n    local len54\n    local\
    \ len55\n    local len56\n    local len57\n    local len58\n    local len59\n\
    \    local len60\n    local len61\n    local len62\n    local len63\n    local\
    \ len64\n    local len65\n    local len66\n    local len67\n    local len68\n\
    \    local len69\n    local len70\n    local len71\n    local len72\n    local\
    \ len73\n    local len74\n    local len75\n    local len76\n    local len77\n\
    \    local len78\n    local len79\n    local len80\n    local len81\n    local\
    \ len82\n    local len83\n    local len84\n    local len85\n    local len86\n\
    \    local len87\n    local len88\n    local len89\n    local len90\n    local\
    \ len91\n    local len92\n    local len93\n    local len94\n    local len95\n\
    \    local len96\n    local len97\n    local len98\n    local len99\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ suffix=''\n  local i\n  local j\n  local len\n  local len1\n  local len2\n \
    \ local len3\n  local len4\n  local len5\n  local len6\n  local len7\n  local\
    \ len8\n  local len9\n  local len10\n  local len11\n  local len12\n  local len13\n\
    \  local len14\n  local len15\n  local len16\n  local len17\n  local len18\n \
    \ local len19\n  local len20\n  local len21\n  local len22\n  local len23\n  local\
    \ len24\n  local len25\n  local len26\n  local len27\n  local len28\n  local len29\n\
    \  local len30\n  local len31\n  local len32\n  local len33\n  local len34\n \
    \ local len35\n  local len36\n  local len37\n  local len38\n  local len39\n  local\
    \ len40\n  local len41\n  local len42\n  local len43\n  local len44\n  local len45\n\
    \  local len46\n  local len47\n  local len48\n  local len49\n  local len50\n \
    \ local len51\n  local len52\n  local len53\n  local len54\n  local len55\n  local\
    \ len56\n  local len57\n  local len58\n  local len59\n  local len60\n  local len61\n\
    \  local len62\n  local len63\n  local len64\n  local len65\n  local len66\n \
    \ local len67\n  local len68\n  local len69\n  local len70\n  local len71\n  local\
    \ len72\n  local len73\n  local len74\n  local len75\n  local len76\n  local len77\n\
    \  local len78\n  local len79\n  local len80\n  local len81\n  local len82\n \
    \ local len83\n  local len84\n  local len85\n  local len86\n  local len87\n  local\
    \ len88\n  local len89\n  local len90\n  local len91\n  local len92\n  local len93\n\
    \  local len94\n  local len95\n  local len96\n  local len\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${1:$i:1}\"\n       \
    \ prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpdexf4qxm.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=0\n    local prefix\n    while [[ $string ]]; do\n        length=$(expr\
    \ length \"$string\")\n        prefix=$(expr substr $string 0 $length)\n     \
    \   prefixes=(\"${prefixes[@]}\" \"$prefix\")\n        string=$(expr substr $string\
    \ $length)\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: missing argument after \u20186\u2019\n"
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i=0\n    while [ $i -lt ${#string} ]; do\n      \
    \  prefix=${string#*$prefix}\n        prefixes[${#prefixes[*]}]=$prefix\n    \
    \    i=$((i+1))\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n   \
    \     prefix=${string:$i:1}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str=$1\n  len=${#str}\n  for ((i=1; i<=$len; i++)); do\n\
    \    prefix=$(echo $str | cut -d'/' -f$i)\n    prefixes=(\"${prefixes[@]}\" \"\
    $prefix\")\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=len; i++)); do\n        prefix=${1:0:i}\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=${1:$i:1}\n\
    \        suffix=${1:$((i+1))}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    \ \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo ${prefixes[@]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpom7djoil.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes[${#prefixes[@]}]=$prefix\n    done\n    echo ${prefixes[@]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3kvj0t0z.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str=\"$1\"\n  len=\"${#str}\"\n  for ((i=1; i<=$len; i++));\
    \ do\n    prefix=\"${str:$i:1}\"\n    prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local string=$1\n    local length=0\n    while [[ $string ]]; do\n        length=$((length+1))\n\
    \        prefix=${string#*}\n        prefixes[$length]=$prefix\n        string=${string%$prefix}\n\
    \    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local length\n    local prefixlen\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxsuffixindex\n\
    \    local maxsuffixindex2\n    local maxsuffixindex3\n    local maxsuffixindex4\n\
    \    local maxsuffixindex5\n    local maxsuffixindex6\n    local maxsuffixindex7\n\
    \    local maxsuffixindex8\n    local maxsuffixindex9\n    local maxsuffixindex10\n\
    \    local maxsuffixindex11\n    local maxsuffixindex12\n    local maxsuffixindex13\n\
    \    local maxsuffixindex14\n    local maxsuffixindex15\n    local maxsuffixindex16\n\
    \    local maxsuffixindex17\n    local maxsuffixindex18\n    local maxsuffixindex19\n\
    \    local maxsuffixindex20\n    local maxsuffixindex21\n    local maxsuffixindex22\n\
    \    local maxsuffixindex23\n    local maxsuffixindex24\n    local maxsuffixindex25\n\
    \    local maxsuffixindex26\n    local maxsuffixindex27\n    local maxsuffixindex28\n\
    \    local maxsuffixindex29\n    local maxsuffixindex30\n    local maxsuffixindex31\n\
    \    local maxsuffixindex32\n    local maxsuffixindex33\n    local maxsuffixindex34\n\
    \    local maxsuffixindex35\n    local maxsuffixindex36\n    local maxsuffixindex37\n\
    \    local maxsuffixindex38\n    local maxsuffixindex39\n    local maxsuffixindex40\n\
    \    local maxsuffixindex41\n    local maxsuffixindex42\n    local maxsuffixindex43\n\
    \    local maxsuffixindex44\n    local maxsuffixindex45\n    local maxsuffixindex46\n\
    \    local maxsuffixindex47\n    local maxsuffixindex48\n    local maxsuffixindex49\n\
    \    local maxsuffixindex50\n    local maxsuffixindex51\n    local maxsuffixindex52\n\
    \    local maxsuffixindex53\n    local maxsuffixindex54\n    local maxsuffixindex55\n\
    \    local maxsuffixindex56\n    local maxsuffixindex57\n    local maxsuffixindex58\n\
    \    local maxsuffixindex59\n    local maxsuffixindex60\n    local maxsuffixindex61\n\
    \    local maxsuffixindex62\n    local maxsuffixindex63\n    local maxsuffixindex64\n\
    \    local maxsuffixindex65\n    local maxsuffixindex66\n\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local str\n    local lenstr\n    local lenstrlen\n   \
    \ local lenstrlen2\n    local lenstrlen3\n    local lenstrlen4\n    local lenstrlen5\n\
    \    local lenstrlen6\n    local lenstrlen7\n    local lenstrlen8\n    local lenstrlen9\n\
    \    local lenstrlen10\n    local lenstrlen11\n    local lenstrlen12\n    local\
    \ lenstrlen13\n    local lenstrlen14\n    local lenstrlen15\n    local lenstrlen16\n\
    \    local lenstrlen17\n    local lenstrlen18\n    local lenstrlen19\n    local\
    \ lenstrlen20\n    local lenstrlen21\n    local lenstrlen22\n    local lenstrlen23\n\
    \    local lenstrlen24\n    local lenstrlen25\n    local lenstrlen26\n    local\
    \ lenstrlen27\n    local lenstrlen28\n    local lenstrlen29\n    local lenstrlen30\n\
    \    local lenstrlen31\n    local lenstrlen32\n    local lenstrlen33\n    local\
    \ lenstrlen34\n    local lenstrlen35\n    local lenstrlen36\n    local lenstrlen37\n\
    \    local lenstrlen38\n    local lenstrlen39\n    local lenstrlen40\n    local\
    \ lenstrlen41\n    local lenstrlen42\n    local lenstrlen43\n    local lenstrlen44\n\
    \    local lenstrlen45\n    local lenstrlen46\n    local lenstrlen47\n    local\
    \ lenstrlen48\n    local lenstrlen49\n    local lenstrlen50\n    local lenstrlen51\n\
    \    local lenstrlen52\n    local lenstrlen53\n    local lenstrlen54\n    local\
    \ lenstrlen55\n    local lenstrlen56\n    local lenstrlen57\n    local lenstrlen58\n\
    \    local lenstrlen59\n    local lenstrlen60\n    local lenstrlen61\n    local\
    \ lenstrlen62\n    local lenstrlen63\n    local lenstrlen64\n    local lenstrlen65\n\
    \    local lenstrlen66\n    local lenstrlen67\n    local lenstrlen68\n    local\
    \ lenstrlen69\n    local \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=$1\n  local\
    \ length=0\n  local i\n  local j\n  local prefix\n  local prefixlen\n  local maxlen\n\
    \  local maxlenlen\n  local maxlenlenlen\n  local maxlenlenlenlen\n  local maxlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n  local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n  local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n  local\
    \ maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    \  local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=$prefix\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefix\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    for\
    \ prefix in \"$1\"; do\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n  \
    \  done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=${1:$i:1}\n   \
    \     prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        prefixes[${#prefixes[*]}]=\"${prefix}\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix=''\n  local\
    \ i\n  local j\n  local len\n  local len2\n  local len3\n  local len4\n  local\
    \ len5\n  local len6\n  local len7\n  local len8\n  local len9\n  local len10\n\
    \  local len11\n  local len12\n  local len13\n  local len14\n  local len15\n \
    \ local len16\n  local len17\n  local len18\n  local len19\n  local len20\n  local\
    \ len21\n  local len22\n  local len23\n  local len24\n  local len25\n  local len26\n\
    \  local len27\n  local len28\n  local len29\n  local len30\n  local len31\n \
    \ local len32\n  local len33\n  local len34\n  local len35\n  local len36\n  local\
    \ len37\n  local len38\n  local len39\n  local len40\n  local len41\n  local len42\n\
    \  local len43\n  local len44\n  local len45\n  local len46\n  local len47\n \
    \ local len48\n  local len49\n  local len50\n  local len51\n  local len52\n  local\
    \ len53\n  local len54\n  local len55\n  local len56\n  local len57\n  local len58\n\
    \  local len59\n  local len60\n  local len61\n  local len62\n  local len63\n \
    \ local len64\n  local len65\n  local len66\n  local len67\n  local len68\n  local\
    \ len69\n  local len70\n  local len71\n  local len72\n  local len73\n  local len74\n\
    \  local len75\n  local len76\n  local len77\n  local len78\n  local len79\n \
    \ local len80\n  local len81\n  local len82\n  local len83\n  local len84\n  local\
    \ len85\n  local len86\n  local len87\n  local len88\n  local len89\n  local len90\n\
    \  local len91\n  local len92\n  local len93\n  local len94\n  local len95\n \
    \ local len96\n  local len97\n  local len98\n  local len\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local i\n    local len=${#string}\n\
    \    for (( i=0; i<len; i++ )); do\n        suffix=${string:$i:1}\n        if\
    \ [[ $suffix != $prefix ]]; then\n            prefixes+=(\"$prefix\")\n      \
    \      prefix=$suffix\n        fi\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo \"${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n\n    len=${#1}\n\
    \    for (( i=0; i<${len}; i++ )); do\n        prefix=${1:0:i}\n        suffix=${1:i+1}\n\
    \        for (( j=0; j<${#prefix}; j++ )); do\n            prefixes[${j}]=${prefix:j:1}\n\
    \        done\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local length=0\n    while [[ $1 ]]; do\n        length=$((length+1))\n\
    \        suffix=\"${1%$1}\"\n        prefix=\"${1#$suffix}\"\n        prefixes+=(\"\
    $prefix\")\n        shift\n    done\n    prefixes+=(\"$prefix\")\n    prefixes+=(\"\
    $suffix\")\n    prefixes+=(\"$length\")\n    echo \"${prefixes[*]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=${1:$i:1}\n\
    \        suffix=${1:$((i+1))}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    \ \"${suffix}\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n\
    \    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    for\
    \ prefix in \"${@:2}\"; do\n        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n\
    \    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes[${#prefixes[@]}]=\"$prefix\"\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpe2e448f4.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        prefix=${1:$i:1}\n        suffix=${1:$((i+1))}\n        for (( j=0;\
    \ j<${#prefix}; j++ )); do\n            prefixes[${#prefixes}]=${prefix:$j:1}\n\
    \        done\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen=${#1}\n    for (( i=1; i<=${maxlen}; i++\
    \ )); do\n        prefix=\"${1}$i\"\n        len=${#prefix}\n        if [[ ${len}\
    \ -gt ${maxlen} ]]; then\n            prefixes=(\"${prefixes[@]}\" \"$prefix\"\
    )\n        elif [[ ${len} == ${maxlen} ]]; then\n            prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n        fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len\n    local len2\n    local len3\n    local\
    \ len4\n    local len5\n    local len6\n    local len7\n    local len8\n    local\
    \ len9\n    local len10\n    local len11\n    local len12\n    local len13\n \
    \   local len14\n    local len15\n    local len16\n    local len17\n    local\
    \ len18\n    local len19\n    local len20\n    local len21\n    local len22\n\
    \    local len23\n    local len24\n    local len25\n    local len26\n    local\
    \ len27\n    local len28\n    local len29\n    local len30\n    local len31\n\
    \    local len32\n    local len33\n    local len34\n    local len35\n    local\
    \ len36\n    local len37\n    local len38\n    local len39\n    local len40\n\
    \    local len41\n    local len42\n    local len43\n    local len44\n    local\
    \ len45\n    local len46\n    local len47\n    local len48\n    local len49\n\
    \    local len50\n    local len51\n    local len52\n    local len53\n    local\
    \ len54\n    local len55\n    local len56\n    local len57\n    local len58\n\
    \    local len59\n    local len60\n    local len61\n    local len62\n    local\
    \ len63\n    local len64\n    local len65\n    local len66\n    local len67\n\
    \    local len68\n    local len69\n    local len70\n    local len71\n    local\
    \ len72\n    local len73\n    local len74\n    local len75\n    local len76\n\
    \    local len77\n    local len78\n    local len79\n    local len80\n    local\
    \ len81\n    local len82\n    local len83\n    local len84\n    local len85\n\
    \    local len86\n    local len87\n    local len88\n    local len89\n    local\
    \ len90\n    local len91\n    local len92\n    local len93\n    local len94\n\
    \    local len95\n    local len96\n    local len97\n    local len98\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxlenlen\n    local maxlenlenlen\n\
    \    local maxlenlenlenlen\n    local maxlenlenlenlenlen\n    local maxlenlenlenlenlenlen\n\
    \    local maxlenlenlenlenlenlenlen\n    local maxlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local string=\"$1\"\n  local\
    \ length=\"${#string}\"\n  local i\n  local j\n  for (( i=1; i<=$length; i++ ));\
    \ do\n    prefixes=(\"${prefixes[@]}\" \"$string$i\")\n  done\n  echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local len\n    local lenlen\n    local lenlenlen\n\
    \    local lenlenlenlen\n    local lenlenlenlenlen\n    local lenlenlenlenlenlen\n\
    \    local lenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlenlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=0; i<${#1}; i++ )); do\n        prefix=\"${1}${prefix}\"\
    \n        if [[ \"${prefix}\" != \"\" ]]; then\n            prefixes+=(\"${prefix}\"\
    )\n        fi\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n   \
    \ all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n  \
    \  [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n  local prefixes=()\n  local prefix\n  local i\n\
    \  local len\n  local str\n  str=$1\n  len=${#str}\n  for ((i=1; i<=$len; i++));\
    \ do\n    prefix=$(echo $str | cut -d'/' -f$i)\n    prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n  done\n  echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local str=$1\n    len=${#str}\n    for ((i=1; i<=$len;\
    \ i++)); do\n        prefix=$(echo $str | cut -d'_' -f$i)\n        prefixes=(\"\
    ${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=$2\n    local i\n    local prefix\n    local prefixlen\n    local\
    \ prefixlen2\n    local prefixlen3\n    local prefixlen4\n    local prefixlen5\n\
    \    local prefixlen6\n    local prefixlen7\n    local prefixlen8\n    local prefixlen9\n\
    \    local prefixlen10\n    local prefixlen11\n    local prefixlen12\n    local\
    \ prefixlen13\n    local prefixlen14\n    local prefixlen15\n    local prefixlen16\n\
    \    local prefixlen17\n    local prefixlen18\n    local prefixlen19\n    local\
    \ prefixlen20\n    local prefixlen21\n    local prefixlen22\n    local prefixlen23\n\
    \    local prefixlen24\n    local prefixlen25\n    local prefixlen26\n    local\
    \ prefixlen27\n    local prefixlen28\n    local prefixlen29\n    local prefixlen30\n\
    \    local prefixlen31\n    local prefixlen32\n    local prefixlen33\n    local\
    \ prefixlen34\n    local prefixlen35\n    local prefixlen36\n    local prefixlen37\n\
    \    local prefixlen38\n    local prefixlen39\n    local prefixlen40\n    local\
    \ prefixlen41\n    local prefixlen42\n    local prefixlen43\n    local prefixlen44\n\
    \    local prefixlen45\n    local prefixlen46\n    local prefixlen47\n    local\
    \ prefixlen48\n    local prefixlen49\n    local prefixlen50\n    local prefixlen51\n\
    \    local prefixlen52\n    local prefixlen53\n    local prefixlen54\n    local\
    \ prefixlen55\n    local prefixlen56\n    local prefixlen57\n    local prefixlen58\n\
    \    local prefixlen59\n    local prefixlen60\n    local prefixlen61\n    local\
    \ prefixlen62\n    local prefixlen63\n    local prefixlen64\n    local prefixlen65\n\
    \    local prefixlen66\n    local prefixlen67\n    local prefixlen68\n    local\
    \ prefixlen69\n    local prefixlen70\n    local prefixlen71\n    local prefixlen72\n\
    \    local prefixlen73\n    local prefixlen74\n    local prefixlen75\n    local\
    \ prefixlen76\n    local prefixlen77\n    local prefixlen78\n    local prefixlen79\n\
    \    local prefixlen80\n    local prefixlen81\n\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${1#${prefix}}\"\
    \n        prefixes+=(\"${prefix}\")\n    done\n    echo \"${prefixes[*]}\"\n}\n\
    \ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local prefixlen\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxsuffixsuffix\n\
    \    local maxsuffixsuffixsuffix\n    local maxsuffixsuffixsuffixsuffix\n    local\
    \ maxsuffixsuffixsuffixsuffixsuffix\n    local maxsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n \
    \   local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    \    local maxsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffixsuffix\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local length\n    local prefixlen\n    local maxlen\n    local maxprefixlen\n\
    \    local maxprefix\n    local maxsuffixlen\n    local maxsuffix\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n\
    \    local maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n    local\
    \ maxsuffixlen\n    local maxsuffixlen\n    local maxsuffixlen\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$1; i++ )); do\n        prefix=\"${prefix}${prefixes[${#prefixes[@]}]}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\n\
    candidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfbcgmbch.sh: line 11: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len=${#1}\n    for ((i=0; i<len; i++)); do\n\
    \        prefix=${1:$i:1}\n        for ((j=0; j<i; j++)); do\n            prefixes[${#prefixes[*]}]=${prefix}${prefixes[${#prefixes[*]}]}\n\
    \        done\n    done\n    prefixes[${#prefixes[*]}]=${prefix}\n    echo \"\
    ${prefixes[*]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a\
    \ as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for ((i=1; i<=$#; i++))\n    do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes+=(\"$prefix\")\n    done\n    prefixes+=(\"$prefix\")\n   \
    \ echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"\
    W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local i\n    local j\n    local len\n\
    \    len=${#string}\n    for ((i=0; i<${len}; i++)); do\n        suffix=${string:$i:1}\n\
    \        prefix=${string:0:$i}\n        if [[ $prefix == $suffix ]]; then\n  \
    \          prefixes[${#prefixes[@]}]=$prefix\n        fi\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 0
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=1; i<=len; i++)); do\n        prefix=${1:0:i}\n\
    \        prefixes=(\"${prefixes[@]}\" \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\
    \n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local len=${#1}\n    for ((i=0; i<len; i++)); do\n        prefix=${1:$i:1}\n\
    \        prefixes[${#prefixes[@]}]=${prefix}\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    for (( i=1; i<=$#; i++ )); do\n        prefix=\"${prefix}${1}\"\
    \n        prefixes[${#prefixes[*]}]=\"$prefix\"\n    done\n    echo ${prefixes[*]}\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local i\n    local len=${#string}\n\
    \n    for ((i=1; i<len; i+=1)); do\n        prefix=${string#*}\n        suffix=${string%$prefix}\n\
    \        prefixes[${#prefixes[@]}]=$prefix\n        string=$suffix\n    done\n\
    \    prefixes[${#prefixes[@]}]=$string\n    echo ${prefixes[*]}\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local string=$1\n    local len=${#string}\n    local i\n\
    \n    for (( i=0; i<len; i++ )); do\n        prefix=${string: i:1}\n        suffix=${string:\
    \ i+1:1}\n        prefixes=(\"${prefixes[@]}\" \"$prefix\" \"${suffix}\")\n  \
    \  done\n\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\"\
    ) = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local i\n    local j\n    local len=${#1}\n    for (( i=0; i<len; i++ )); do\n\
    \        prefix=${1:$i:1}\n        for (( j=0; j<i; j++ )); do\n            prefixes[${#prefixes[@]}]=${prefix}${prefixes[${#prefixes[@]}]}\n\
    \        done\n    done\n    echo ${prefixes[@]}\n}\n\ncandidate() {\n    all_prefixes\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate\
    \ \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    for\
    \ prefix in \"${1}\"; do\n        prefixes+=(\"$prefix\")\n    done\n    echo\
    \ \"${prefixes[@]}\"\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\"\
    ) = \"a as asd asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local string=$1\n   \
    \ local length=0\n    local prefix=''\n    while [[ $string ]]; do\n        length=$(expr\
    \ length \"$string\")\n        prefix=${string#?}\n        prefixes[${#prefixes[@]}]=$prefix\n\
    \        string=${string%?}\n    done\n    echo ${prefixes[*]}\n}\n\ncandidate()\
    \ {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\"\
    \ ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix=''\n   \
    \ local suffix=''\n    local i\n    local j\n    local len\n    local len2\n \
    \   local len3\n    local len4\n    local len5\n    local len6\n    local len7\n\
    \    local len8\n    local len9\n    local len10\n    local len11\n    local len12\n\
    \    local len13\n    local len14\n    local len15\n    local len16\n    local\
    \ len17\n    local len18\n    local len19\n    local len20\n    local len21\n\
    \    local len22\n    local len23\n    local len24\n    local len25\n    local\
    \ len26\n    local len27\n    local len28\n    local len29\n    local len30\n\
    \    local len31\n    local len32\n    local len33\n    local len34\n    local\
    \ len35\n    local len36\n    local len37\n    local len38\n    local len39\n\
    \    local len40\n    local len41\n    local len42\n    local len43\n    local\
    \ len44\n    local len45\n    local len46\n    local len47\n    local len48\n\
    \    local len49\n    local len50\n    local len51\n    local len52\n    local\
    \ len53\n    local len54\n    local len55\n    local len56\n    local len57\n\
    \    local len58\n    local len59\n    local len60\n    local len61\n    local\
    \ len62\n    local len63\n    local len64\n    local len65\n    local len66\n\
    \    local len67\n    local len68\n    local len69\n    local len70\n    local\
    \ len71\n    local len72\n    local len73\n    local len74\n    local len75\n\
    \    local len76\n    local len77\n    local len78\n    local len79\n    local\
    \ len80\n    local len81\n    local len82\n    local len83\n    local len84\n\
    \    local len85\n    local len86\n    local len87\n    local len88\n    local\
    \ len89\n    local len90\n    local len91\n    local len92\n    local len93\n\
    \    local len94\n    local len95\n    local len96\n    local len97\n    local\
    \ len\n}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
    \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ string=\"$1\"\n    local length=\"${#string}\"\n    for (( i=1; i<=$length;\
    \ i++ )); do\n        prefix=\"${string:$i:1}\"\n        prefixes=(\"${prefixes[@]}\"\
    \ \"$prefix\")\n    done\n    echo \"${prefixes[@]}\"\n}\n\ncandidate() {\n  \
    \  all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf asdfg asdfgh\" ]]\n\
    \    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659
- exit_code: 1
  program: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of\
    \ the input string\n# >>> all_prefixes('abc')\n# ['a', 'ab', 'abc']\n#\n# $1 is\
    \ a string\nall_prefixes() {\n    local prefixes=()\n    local prefix\n    local\
    \ i\n    local len\n    local maxlen\n    local maxprefix\n    local prefixlen\n\
    \    local prefixes\n    local string\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    \    local stringlen\n    local stringlen\n    local stringlen\n    local stringlen\n\
    }\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd asdf\
    \ asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026659

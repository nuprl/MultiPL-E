name: HumanEval_104_unique_digits
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
  \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
  \ be sorted in increasing order.\n# For example:\n# >>> unique_digits([15, 33, 1422,\
  \ 1])\n# [1, 15, 33]\n# >>> unique_digits([152, 323, 1422, 10])\n# []\n#\n# $1 is\
  \ a space-separated list\nunique_digits() {\n"
tests: "}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
  \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
  \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
completions: ["    local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed\
    \ 's/\\([0-9]*\\)$/\\1/')\n    local i\n    for i in $(seq 1 $((${#x}-1)))\n \
    \   do\n        if [[ ${x:$i:1} == 0 ]]\n        then\n            echo \"$output\"\
    \n            break\n        fi\n    done", "    local x=\"$1\"\n    local output\n\
    \    output=$(echo \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local i\n    for\
    \ i in $(seq 0 $((${#x} - 1))); do\n        if [[ ${x:$i:1} == 0 ]]; then\n  \
    \          echo \"$output\"\n            break\n        fi\n    done", "    local\
    \ x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' | sort -u\
    \ | tr '\\n' ' ')\n    echo \"$output\"", "    local x=\"$1\"\n    local output\n\
    \    output=$(echo \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local i\n    for\
    \ i in $(seq 0 $((${#x} - 1))); do\n        if [[ ${x[i]} -eq 0 ]]; then\n   \
    \         x=${x::i}\n            break\n        fi\n    done\n    echo \"$x\"",
  "    local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' |\
    \ sort -n | uniq -d)\n    echo \"$output\"", "    local x=\"$1\"\n    local output\n\
    \    output=()\n    for (( i=0; i<${#x}; i++ )); do\n        local digit=\"${x:$i:1}\"\
    \n        if [[ $digit =~ ^[0-9]+$ ]]; then\n            if [[ ${#output[@]} -eq\
    \ 0 ]]; then\n                output+=(\"$digit\")\n            else\n       \
    \         if [[ ${output[${#output[@]}-1]} -eq $digit ]]; then\n             \
    \       output+=(\"$digit\")\n                else\n                    output+=(\"\
    $digit\" \"${output[${#output[@]}-1]}\")\n                fi\n            fi\n\
    \        fi\n    done\n    echo \"${output[@]}\"", "    local x=\"$1\"\n    local\
    \ output\n    output=$(echo \"$x\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n\
    \    echo \"$output\"", "    local x=\"$1\"\n    local output\n    output=$(echo\
    \ \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local i\n    for (( i=0; i<${#output};\
    \ i++ )); do\n        if [[ ${output[$i]} -eq 0 ]]; then\n            echo \"\
    $output\"\n            break\n        fi\n    done", "    local x=\"$1\"\n   \
    \ local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local\
    \ i\n    for i in $(seq 1 $((${#x}-1))); do\n        if [[ ${x:$i:1} == 0 ]];\
    \ then\n            output=$(echo \"$output\" | sed \"s/$i/0/g\")\n        fi\n\
    \    done\n    echo \"$output\"", "    local x=\"$1\"\n    local output\n    output=$(echo\
    \ \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local i\n    for i in $(seq 0 $((${#x}-1)))\n\
    \    do\n        if [[ ${x:$i:1} == 0 ]]\n        then\n            echo \"$output\"\
    \n            break\n        fi\n    done", "    local x=\"$1\"\n    local output\n\
    \    output=$(echo \"$x\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \")\n \
    \   echo \"$output\"", "    local x=\"$1\"\n    local output\n    output=()\n\
    \    for (( i=0; i<${#x}; i++ )); do\n        local digit=\"${x:$i:1}\"\n    \
    \    if [[ ${digit:0:1} = 0 ]]; then\n            output+=(\"${x:$i:1}\")\n  \
    \      fi\n    done\n    echo \"${output[@]}\"", "    local x=\"$1\"\n    local\
    \ output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\)$/\\1/')\n    local i\n\
    \    for (( i=0; i<${#output}; i++ )); do\n        if [[ ${output[$i]} -eq 0 ]];\
    \ then\n            echo \"$output[$i]\"\n        fi\n    done", "    local x=\"\
    $1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' | sort -u | tr\
    \ '\\n' ' ')\n    echo \"$output\"", "    local x=\"$1\"\n    local output\n \
    \   output=$(echo \"$x\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \")\n  \
    \  echo \"$output\"", "    local x\n    local -a arr\n    local -a result\n  \
    \  local -i i\n    local j\n    local k\n    local len\n    local digit\n    local\
    \ digit\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local\
    \ tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local\
    \ tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n\
    \    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local\
    \ tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n\
    \    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local\
    \ tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n\
    \    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local\
    \ tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n\
    \    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local\
    \ tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n\
    \    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local\
    \ tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n\
    \    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local\
    \ tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n\
    \    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local\
    \ tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n\
    \    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local\
    \ tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n\
    \    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local\
    \ tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local ", "   \
    \ local x=\"$1\"\n    local output\n    output=$(echo \"$x\" | sed 's/\\([0-9]*\\\
    )$/\\1/')\n    local i\n    for i in $(seq 0 $((${#x} - 1))); do\n        if [[\
    \ ${x:$i:1} == 0 ]]; then\n            x=${x:0:$i}\n        fi\n    done\n   \
    \ echo $x", "    local x=\"$1\"\n    local output\n    output=$(echo \"$x\" |\
    \ tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    echo \"$output\"", "    local x=\"\
    $1\"\n    local output\n    output=$(echo \"$x\" | tr ' ' '\\n' | sort -u | tr\
    \ '\\n' ' ')\n    echo \"$output\"", "    local x=\"$1\"\n    local output\n \
    \   output=$(echo \"$x\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    echo \"\
    $output\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_85_add
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${lst:$i} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq1ux1r1z.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1)))\n  do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((sum + ${lst[$i]}))\n\
    \      continue\n    fi\n    sum=$((sum + ${lst[$i]}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm3ddf846.sh: line 12: [[: 4 88: syntax error in expression (error
    token is "88")

    /tmp/tmpm3ddf846.sh: line 15: [[: 4 88: syntax error in expression (error token
    is "88")

    /tmp/tmpm3ddf846.sh: line 19: sum + 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]} -eq ${lst[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n        fi\n   \
    \ done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4niv7o7z.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst}; i++ )); do\n        if [[ ${lst:$i:1} == 0 ]]; then\n   \
    \         echo \"${lst:$i:1}\"\n        fi\n        if [[ ${lst:$i:1} == 1 ]];\
    \ then\n            sum=$((sum + ${lst:$i:1}))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$((\
    \ sum + ${lst[i]} ))\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpeb2bc7ha.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [ ${lst[$i]} -eq ${lst[$(( i +\
    \ 1 ))]} ]; then\n            sum=$(( sum + ${lst[$i]} ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_m4ybza7.sh: line 11: [: 88: binary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local \n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            (( sum+=${lst:$i:1} ))\n        fi\n        (( i+=2 ))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [[ ${lst:$i:1} == 0 ]]; then\n\
    \            (( sum += ${lst:$i:1} ))\n            (( i += 2 ))\n        else\n\
    \            (( sum += ${lst:$i:1} ))\n            (( i += 1 ))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6imb8lp6.sh: line 16: ((: sum +=   : syntax error: operand expected
    (error token is "+=   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=$2\n    local\
    \ odds=$3\n    local sum=0\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n\
    \        if [ \"${lst:$i:1}\" -eq \"2\" ]; then\n            sum=$(( $sum + ${evens:$i:1}\
    \ ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplg_pq968.sh: line 14: [:  : integer expression expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n        if\
    \ [ ${lst:$i:1} == 0 ]; then\n            evens=\"${evens} ${lst:$i:1}\"\n   \
    \     else\n            odds=\"${odds} ${lst:$i:1}\"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $((${evens}+${odds}))\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq5r9yrjx.sh: line 13: [: ==: unary operator expected

    /tmp/tmpq5r9yrjx.sh: line 20: + 4   8 8: syntax error in expression (error token
    is "8 8")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    if [[ ${lst[$i]} -eq 2 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 3 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 4 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 5 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 6 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 7 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 8 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 9 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 10 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 12 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 13 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n  \
    \    continue\n    fi\n    if [[ ${lst[$i]} -eq 14 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ \n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbouxdxol.sh: line 71: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpbouxdxol.sh: line 71: syntax error near `}''

    /tmp/tmpbouxdxol.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz66c0os.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( ${lst:$i:1} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${lst:$i:1} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6qaihhxj.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even=0\n    local\
    \ odd=0\n    local sum=0\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        if\
    \ [[ ${lst[$i]} -eq 0 ]]; then\n            continue\n        fi\n        if [[\
    \ ${lst[$i]} -eq 1 ]]; then\n            even=$((even+1))\n        fi\n      \
    \  if [[ ${lst[$i]} -eq 2 ]]; then\n            odd=$((odd+1))\n        fi\n \
    \       sum=$((sum+${lst[$i]}))\n    done\n    echo \"$((even+odd))\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpjzhrjyiq.sh: line 13: [[: 4 88: syntax error in expression (error
    token is "88")

    /tmp/tmpjzhrjyiq.sh: line 16: [[: 4 88: syntax error in expression (error token
    is "88")

    /tmp/tmpjzhrjyiq.sh: line 19: [[: 4 88: syntax error in expression (error token
    is "88")

    /tmp/tmpjzhrjyiq.sh: line 22: sum+4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [[ ${lst:$i:1} == 0 ]]; then\n\
    \            (( sum += ${lst:$i:1} ))\n        fi\n        (( i++ ))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfrlydqwc.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n    local k\n\
    \    local evens\n    local odds\n    local sums\n    local i\n    local j\n \
    \   local k\n    local evens\n    local odds\n    local sums\n    local i\n  \
    \  local j\n    local k\n    local evens\n    local odds\n    local sums\n   \
    \ local i\n    local j\n    local k\n    local evens\n    local odds\n    local\
    \ sums\n    local i\n    local j\n    local k\n    local evens\n    local odds\n\
    \    local sums\n    local i\n    local j\n    local k\n    local evens\n    local\
    \ odds\n    local sums\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n    local k\n\
    \    local evens\n    local odds\n    local sums\n    local i\n    local j\n \
    \   local k\n    local evens\n    local odds\n    local sums\n    local i\n  \
    \  local j\n    local k\n    local evens\n    local odds\n    local sums\n   \
    \ local i\n    local j\n    local k\n    local evens\n    local odds\n    local\
    \ sums\n    local i\n    local j\n    local k\n    local evens\n    local odds\n\
    \    local sums\n    local i\n    local j\n    local k\n    local evens\n    local\
    \ odds\n    local sums\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]} -eq 0 ]]; then\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 1 ]]; then\n \
    \           sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n  \
    \      if [[ ${lst[$i]} -eq 2 ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 3 ]]; then\n \
    \           sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n  \
    \      if [[ ${lst[$i]} -eq 4 ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 5 ]]; then\n \
    \           sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n  \
    \      if [[ ${lst[$i]} -eq 6 ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 7 ]]; then\n \
    \           sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n  \
    \      if [[ ${lst[$i]} -eq 8 ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 9 ]]; then\n \
    \           sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n  \
    \      if [[ ${lst[$i]} -eq 10 ]]; then\n            sum=$(( sum + ${lst[$i]}\
    \ ))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \            sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n \
    \       if [[ ${lst[$i]} -eq 12 ]]; then\n            sum=$(( sum + ${lst[$i]}\
    \ ))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq 13 ]]; then\n\
    \            sum=$(( sum + ${lst[$i]} ))\n            continue\n        fi\n \
    \       if [[ ${lst[$i]} -eq 14 ]]; then\n            sum=$(( sum + ${lst[$i]}\
    \ ))\n            continue\n        fi\n        if [[ ${lst\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpeegu4av6.sh: line 71: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpeegu4av6.sh: line 71: syntax error near `}''

    /tmp/tmpeegu4av6.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst}; i++ )); do\n        if [[ ${lst:$i:1} == 0 ]]; then\n   \
    \         echo \"${lst:$i:1}\"\n        fi\n        if [[ ${lst:$i:1} == 1 ]];\
    \ then\n            sum=$((sum+${lst:$i:1}))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${lst[$i]} ))\n        fi\n        i=$(( $i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd0hcjmg8.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst}; i++ )); do\n        if [[ ${lst:$i:1} == 0 ]]; then\n   \
    \         echo \"${lst:$i:1}\"\n        else\n            sum=$(( sum + ${lst:$i:1}\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxfq6s_q5.sh: line 14: sum +   : syntax error: operand expected
    (error token is "+   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n        if\
    \ [ ${lst:$i:1} = 0 ]; then\n            evens=\"${evens} ${lst:$i}\"\n      \
    \  else\n            odds=\"${odds} ${lst:$i}\"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $((${evens}+${odds}))\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7lo98cyq.sh: line 13: [: =: unary operator expected

    /tmp/tmp7lo98cyq.sh: line 20: + 4 88  88 88 8: syntax error in expression (error
    token is "88  88 88 8")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n        if\
    \ [ ${lst:$i:1} = 0 ]; then\n            evens=\"${evens} ${lst:$i:1}\"\n    \
    \    else\n            odds=\"${odds} ${lst:$i:1}\"\n        fi\n        i=$((i+1))\n\
    \    done\n    local evens_count=$(echo $evens | wc -w)\n    local odds_count=$(echo\
    \ $odds | wc -w)\n    if [ $evens_count -gt 0 ]; then\n        echo $((${evens_count}+${odds_count}))\n\
    \    else\n        echo $((${odds_count}+${evens_count}))\n    fi\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmp9ivo4u8x.sh: line 13: [: =: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for ((i=0; i<${#lst}; i++)); do\n    if [[ ${lst:$i:1} == 0 ]]; then\n    \
    \  continue\n    fi\n    if [[ ${lst:$i:1} == 1 ]]; then\n      sum=$((sum+${lst:$i:2}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for ((i=1; i<${#lst}; i++)); do\n    (( i % 2 )) && sum+=${lst[i]}\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local evens_sum\n    local odds_sum\n    local evens_odds\n\
    \    local odds_evens\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_evens\n    local odds_odds\n    local evens_odds\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens\n    local odds_odds\n\
    \    local evens_odds\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_evens\n    local odds_odds\n    local evens_odds\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens\n    local odds_odds\n\
    \    local evens_odds\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_evens\n    local odds_odds\n    local evens_odds\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens\n    local odds_odds\n\
    \    local evens_odds\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_evens\n    local odds_odds\n    local evens_odds\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens\n    local odds_odds\n\
    \    local evens_odds\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_evens\n    local odds_odds\n    local evens_odds\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens\n    local odds_odds\n\
    \    local evens_odds\n    local evens_evens\n    local odds_odds\n    local evens_odds\n\
    \    local evens_even\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n  local\
    \ j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n\
    \  local j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n \
    \ local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n  local\
    \ sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n    local k\n\
    \    local evens\n    local odds\n    local sums\n    local i\n    local j\n \
    \   local k\n    local evens\n    local odds\n    local sums\n    local i\n  \
    \  local j\n    local k\n    local evens\n    local odds\n    local sums\n   \
    \ local i\n    local j\n    local k\n    local evens\n    local odds\n    local\
    \ sums\n    local i\n    local j\n    local k\n    local evens\n    local odds\n\
    \    local sums\n    local i\n    local j\n    local k\n    local evens\n    local\
    \ odds\n    local sums\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n    local k\n\
    \    local evens\n    local odds\n    local sums\n    local i\n    local j\n \
    \   local k\n    local evens\n    local odds\n    local sums\n    local i\n  \
    \  local j\n    local k\n    local evens\n    local odds\n    local sums\n   \
    \ local i\n    local j\n    local k\n    local evens\n    local odds\n    local\
    \ sums\n    local i\n    local j\n    local k\n    local evens\n    local odds\n\
    \    local sums\n    local i\n    local j\n    local k\n    local evens\n    local\
    \ odds\n    local sums\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local i\n    local j\n    local k\n    local\
    \ evens\n    local odds\n    local sums\n    local i\n    local j\n\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1)))\n    do\n        if [ ${lst[$i]} -eq ${lst[$((i\
    \ + 1))]} ]\n        then\n            sum=$((sum + ${lst[$i]}))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1up34jl7.sh: line 12: [: 88: binary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    if [[ ${lst[$i]} -eq 2 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 3 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 4 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 5 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 6 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 7 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 8 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 9 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 10 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 12 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 13 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n  \
    \    continue\n    fi\n    if [[ ${lst[$i]} -eq 14 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ \n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbouxdxol.sh: line 71: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpbouxdxol.sh: line 71: syntax error near `}''

    /tmp/tmpbouxdxol.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            sum=$((sum+0))\n        else\n            sum=$((sum+${lst:$i:1}))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpbalvy7ty.sh: line 12: [: =: unary operator expected

    /tmp/tmpbalvy7ty.sh: line 15: sum+ : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + ${lst[i]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp97tf8mks.sh: line 13: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$((\
    \ $sum + ${lst[i]} ))\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3tu_z6u2.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even=0\n    local\
    \ odd=0\n    local sum=0\n    for (( i=0; i<${#lst}; i++ )); do\n        if [\
    \ ${lst:$i:1} == 0 ]; then\n            even=$((even+1))\n        elif [ ${lst:$i:1}\
    \ == 1 ]; then\n            odd=$((odd+1))\n        fi\n    done\n    sum=$((even+odd))\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_nm_dzqr.sh: line 13: [: ==: unary operator expected

    /tmp/tmp_nm_dzqr.sh: line 15: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + ${lst[i]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi29o9ne2.sh: line 13: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    local even\n    local odd\n    for (( i=0; i<${#lst[@]};\
    \ i++ )); do\n        even=${lst[$((i%2))]}\n        odd=${lst[$((i%2+1))]}\n\
    \        evens=\"${evens}${even} \"\n        odds=\"${odds}${odd} \"\n    done\n\
    \    echo \"${evens}${odds}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local \n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            evens=\"$evens $i\"\n        else\n            odds=\"$odds $i\"\n\
    \        fi\n    done\n    echo $((evens + $odds))\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsax4pmob.sh: line 18: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n\n    sum=0\n    for (( i=0; i<${#lst[@]}; i++ )); do\n\
    \        even=${lst[$((i%2))]}\n        odd=${lst[$((i%2+1))]}\n        sum=$((sum+even+odd))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp2zu4pzf.sh: line 17: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n\n  sum=0\n  len=${#lst[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    even=${lst[$i]}\n    odd=${lst[$((i+1))]}\n\
    \    if (( even % 2 == 0 )); then\n      sum=$((sum + even))\n    fi\n    if ((\
    \ odd % 2 == 0 )); then\n      sum=$((sum + odd))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8upsn63t.sh: line 22: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=0\n    local\
    \ odds=0\n    for (( i=0; i<${#lst}; i++ )); do\n        if [ ${lst:$i:1} == 0\
    \ ]; then\n            evens=$((evens+1))\n        else\n            odds=$((odds+1))\n\
    \        fi\n    done\n    echo $((evens+odds))\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpirjj_adu.sh: line 12: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local evens=0\n  local odds=0\n\
    \  local sum=0\n  local i=0\n  while [ $i -lt ${#lst} ]; do\n    if [[ ${lst:$i:1}\
    \ == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n    fi\n    ((i++))\n\
    \  done\n  ((odds++))\n  ((evens++))\n  while [ $i -lt ${#lst} ]; do\n    if [[\
    \ ${lst:$i:1} == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n \
    \   fi\n    ((sum+=${lst:$i:1}))\n    ((i++))\n  done\n  ((odds++))\n  ((evens++))\n\
    \  ((sum+=${lst:$i:1}))\n  ((i++))\n  while [ $i -lt ${#lst} ]; do\n    if [[\
    \ ${lst:$i:1} == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n \
    \   fi\n    ((sum+=${lst:$i:1}))\n    ((i++))\n  done\n  ((odds++))\n  ((evens++))\n\
    \  ((sum+=${lst:$i:1}))\n  ((i++))\n  while [ $i -lt ${#lst} ]; do\n    if [[\
    \ ${lst:$i:1} == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n \
    \   fi\n    ((sum+=${lst:$i:1}))\n    ((i++))\n  done\n  ((odds++))\n  ((evens++))\n\
    \  ((sum+=${lst:$i:1}))\n  ((i++))\n  while [ $i -lt ${#lst} ]; do\n    if [[\
    \ ${lst:$i:1} == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n \
    \   fi\n    ((sum+=${lst:$i:1}))\n    ((i++))\n  done\n  ((odds++))\n  ((evens++))\n\
    \  ((sum+=${lst:$i:1}))\n  ((i++))\n  while [ $i -lt ${#lst} ]; do\n    if [[\
    \ ${lst:$i:1} == 0 ]]; then\n      ((odds++))\n    else\n      ((evens++))\n\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeq925kd4.sh: line 81: syntax error near unexpected token `}''

    /tmp/tmpeq925kd4.sh: line 81: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [[ ${lst:$i:1} == 0 ]]; then\n\
    \            (( sum+=${lst:$i:1} ))\n            (( i=i+1 ))\n        else\n \
    \           (( sum+=${lst:$i:1} ))\n            (( i=i+2 ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if (( ${lst[i]} % 2 == 0 )); then\n      sum=$((${sum}\
    \ + ${lst[i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpicuwompq.sh: line 11: ((: 4 88 % 2 == 0 : syntax error in expression
    (error token is "88 % 2 == 0 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local \n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    local j\n    for i in $(seq 0 $((${#lst[@]} - 1))); do\n        j=$((i\
    \ + 1))\n        if [[ ${lst[i]} -eq ${lst[j]} ]]; then\n            sum=$((${sum}\
    \ + ${lst[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmat0apfv.sh: line 14: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local evens=\"\"\n  local\
    \ odds=\"\"\n  local i=0\n  while [ $i -lt ${#lst} ]; do\n    if [[ ${lst:$i:1}\
    \ == 0 ]]; then\n      evens=\"${evens} ${lst:$i:2}\"\n      i=$((i+2))\n    else\n\
    \      odds=\"${odds} ${lst:$i:1}\"\n      i=$((i+1))\n    fi\n  done\n  echo\
    \ $((${evens}+${odds}))\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5yw0v8fn.sh: line 21: + 4   8 8: syntax error in expression (error
    token is "8 8")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${lst[$i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbdgmbqnj.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local evens_sum\n    local odds_sum\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds\n    local evens_evens_sum\n    local\
    \ odds_evens_sum\n    local evens_odds_sum\n    local evens_evens_odds\n    local\
    \ odds_odds_sum\n    local evens_odds_odds\n    local evens_evens_odds_sum\n \
    \   local odds_evens_odds_sum\n    local evens_odds_odds_sum\n    local evens_evens_odds_odds\n\
    \    local odds_odds_odds_sum\n    local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n\
    \    local odds_evens_odds_odds_sum\n    local evens_odds_odds_odds_sum\n    local\
    \ evens_evens_odds_odds_odds\n    local odds_odds_odds_sum\n    local evens_odds_odds_odds\n\
    \    local evens_evens_odds_odds_sum\n    local odds_evens_odds_odds_sum\n   \
    \ local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n    local odds_evens_odds_odds_sum\n\
    \    local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n    local\
    \ odds_evens_odds_odds_sum\n    local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n\
    \    local odds_evens_odds_odds_sum\n    local evens_odds_odds_odds\n    local\
    \ evens_evens_odds_odds_sum\n    local odds_evens_odds_odds_sum\n    local evens_odds_odds_odds\n\
    \    local evens_evens_odds_odds_sum\n    local odds_evens_odds_odds_sum\n   \
    \ local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n    local odds_evens_odds_odds_sum\n\
    \    local evens_odds_odds_odds\n    local evens_evens_odds_odds_sum\n\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz66c0os.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            echo \"${lst:$i:1}\"\n            sum=$((sum+${lst:$i:1}))\n    \
    \    fi\n        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpfzodiaox.sh: line 12: [: =: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for ((i=0; i<${#lst[@]}; i++)); do\n        if (( i % 2 )); then\n  \
    \          sum=$(( sum + ${lst[i]} ))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    if [[ ${lst[$i]} -eq 2 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 3 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 4 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 5 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 6 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 7 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 8 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 9 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 10 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 12 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 13 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n  \
    \    continue\n    fi\n    if [[ ${lst[$i]} -eq 14 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ \n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbouxdxol.sh: line 71: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpbouxdxol.sh: line 71: syntax error near `}''

    /tmp/tmpbouxdxol.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [ ${lst:$i:1} = 0 ]; then\n      break\n\
    \    fi\n    sum=$(( ${sum} + ${lst:$i:1} ))\n    i=$(( i + 1 ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr_4fjz0i.sh: line 12: [: =: unary operator expected

    /tmp/tmpr_4fjz0i.sh: line 15: 4 +   : syntax error: operand expected (error token
    is "+   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even=0\n    local\
    \ odd=0\n    local sum=0\n    for (( i=0; i<${#lst}; i++ )); do\n        if [[\
    \ ${lst:$i:1} == 0 ]]; then\n            even=$((even+1))\n        else\n    \
    \        odd=$((odd+1))\n        fi\n    done\n    for (( i=0; i<${#lst}; i++\
    \ )); do\n        if [[ ${lst:$i:1} == 0 ]]; then\n            sum=$((sum+${lst:$i:2}))\n\
    \        else\n            sum=$((sum+${lst:$i:1}))\n        fi\n    done\n  \
    \  echo $((sum+even+odd))\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkqpf_c3.sh: line 23: sum+ : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq ${lst[$((i + 1))]} ]];\
    \ then\n      sum=$((sum + ${lst[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpdnc0_xj_.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=0\n    local\
    \ odds=0\n    local even\n    local odd\n    for (( i=0; i<${#lst[@]}; i++ ));\
    \ do\n        even=${lst[$(( i * 2 ))]}\n        odd=${lst[$(( i * 2 + 1 ))]}\n\
    \        if (( even != odd )); then\n            evens+=$even\n            odds+=$odd\n\
    \        fi\n    done\n    echo \"$evens\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvsqno6_2.sh: line 16: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even=0\n    local\
    \ odd=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    local j\n    local k\n    for ((i=0; i<${#lst[@]}; i++)); do\n      \
    \  j=$((i+1))\n        k=$((j+1))\n        if [[ ${lst[i]} -eq ${lst[j]} ]]; then\n\
    \            sum=$((${sum}+${lst[i]}))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx0uuhd2f.sh: line 16: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for (( i=0; i<${#lst}; i++ )); do\n    if [[ ${lst:$i:1} == 0 ]]; then\n  \
    \    continue\n    fi\n    if [[ ${lst:$i:1} == 1 ]]; then\n      sum=$(( sum\
    \ + ${lst:$i:1} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   len=${#lst[@]}\n    for (( i=0; i<len; i++ )); do\n        even=${lst[$((\
    \ i*2 ))]}\n        odd=${lst[$(( i*2+1 ))]}\n        if (( even != odd )); then\n\
    \            sum=$(( sum + even ))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2dciuk9b.sh: line 20: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n\n\
    \    len=${#lst[@]}\n    for ((i=0; i<len; i++)); do\n        even=${lst[i]}\n\
    \        odd=${lst[$((i+1))]}\n        if (( even % 2 != 0 )); then\n        \
    \    sum=$((even+odd))\n            lst[i]=$sum\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpw75du1ys.sh: line 21: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz66c0os.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + ${lst[i]}))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1_h_4e33.sh: line 13: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for ((i=1; i<${#lst}; i++)); do\n        if [[ ${lst:$i:1} == 0 ]]; then\n\
    \            echo \"${lst:$i}\"\n        else\n            sum=$(( ${sum} + ${lst:$i:1}\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5k90f7z4.sh: line 15: 0 +   : syntax error: operand expected (error
    token is "+   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + $lst[$i] ))\n        fi\n        i=$(( $i + 1 ))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg__67vfy.sh: line 13: 0 + 4 88[0] : syntax error in expression
    (error token is "88[0] ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1))); do\n        if [[ ${lst[$i]} -eq 0 ]]; then\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 1 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 2 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 3 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 4 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 5 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 6 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 7 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 8 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 9 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 10 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if [[ ${lst[$i]} -eq 12 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 13 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if [[ ${lst[$i]} -eq 14 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 15 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpml1r_909.sh: line 75: syntax error near unexpected token `}''

    /tmp/tmpml1r_909.sh: line 75: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            echo \"$sum\"\n            return\n        fi\n        sum=$(( ${sum}\
    \ + ${lst:$i:1} ))\n        i=$(( ${i} + 1 ))\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplijye31x.sh: line 12: [: =: unary operator expected

    /tmp/tmplijye31x.sh: line 16: 4 +   : syntax error: operand expected (error token
    is "+   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n\n    sum=0\n    for (( i=0; i<${#lst[@]}; i++ )); do\n\
    \        even=${lst[$(( i*2 ))]}\n        odd=${lst[$(( i*2+1 ))]}\n        ((\
    \ sum += even + odd ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp53wxndom.sh: line 17: ((: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + ${lst:$i} ))\n        fi\n        i=$(( $i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1t1oal_5.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        if [ ${lst[$i]}\
    \ -eq 0 ]; then\n            evens=\"${evens} 0\"\n        else\n            if\
    \ [ ${lst[$i]} -eq 1 ]; then\n                odds=\"${odds} 0\"\n           \
    \ else\n                if [ ${lst[$i]} -eq 2 ]; then\n                    evens=\"\
    ${evens} 1\"\n                else\n                    if [ ${lst[$i]} -eq 3\
    \ ]; then\n                        odds=\"${odds} 1\"\n                    else\n\
    \                        if [ ${lst[$i]} -eq 4 ]; then\n                     \
    \       evens=\"${evens} 2\"\n                        else\n                 \
    \           if [ ${lst[$i]} -eq 5 ]; then\n                                odds=\"\
    ${odds} 2\"\n                            else\n                              \
    \  if [ ${lst[$i]} -eq 6 ]; then\n                                    evens=\"\
    ${evens} 3\"\n                                else\n                         \
    \           if [ ${lst[$i]} -eq 7 ]; then\n                                  \
    \      odds=\"${odds} 3\"\n                                    else\n        \
    \                                if [ ${lst[$i]} -eq 8 ]; then\n             \
    \                               evens=\"${evens} 4\"\n                       \
    \                 else\n                                            if [ ${lst[$i]}\
    \ -eq 9 ]; then\n                                                odds=\"${odds}\
    \ 4\"\n                                            else\n                    \
    \                            if [ ${lst[$i]} -eq 10 ]; then\n                \
    \                                    evens=\"${evens} 5\"\n                  \
    \                              else\n                                        \
    \            if [ ${lst[$i]} -eq 11 ]; then\n                                \
    \                        odds=\"${odds} 5\"\n                                \
    \                    else\n                                                  \
    \      if [ ${lst[$i]} -eq 12 ]; then\n                                      \
    \                      evens=\"${evens} 6\"\n                                \
    \                        else\n                                              \
    \              if [ ${lst[$i]} -eq 13 ]; then\n                              \
    \                                  odds=\"${odds} 6\"\n                      \
    \                                      else\n                                \
    \                                if [ ${lst[$i]} -eq 14 ]; then\n            \
    \                                                        evens=\"${evens} 7\"\n\
    \                                                                else\n      \
    \                                                              if [ ${lst[$i]}\
    \ -eq 15 ]; then\n                                                           \
    \             odds=\"${odds} 7\"\n                                           \
    \                         else\n                                             \
    \                           if [ ${lst[$i]} -eq 16 ]; then\n                 \
    \                                                           evens=\"${evens} 8\"\
    \n                                                                        else\n\
    \                                                                            if\
    \ [ ${lst[$i]} -eq 17 ]; then\n                                              \
    \                                  odds=\"${odds} 8\"\n                      \
    \                                                      else\n                \
    \                                                                if [ ${lst[$i]}\
    \ -eq 18 ]; then\n                                                           \
    \                         evens=\"${even\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkq70wi2w.sh: line 79: unexpected EOF while looking for matching
    `"''

    /tmp/tmpkq70wi2w.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz66c0os.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    ((sum+=i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            sum=$(( $sum + ${lst:$i:1} ))\n            i=$(( $i + 1 ))\n    \
    \    else\n            sum=$(( $sum + ${lst:$i:1} ))\n            i=$(( $i + 1\
    \ ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwli41cct.sh: line 12: [: =: unary operator expected

    /tmp/tmpwli41cct.sh: line 16: 4 +   : syntax error: operand expected (error token
    is "+   ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [ $(( i % 2 )) -eq 0 ]; then\n      sum=$((\
    \ $sum + ${lst[$i]} ))\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0e8o13gc.sh: line 13: 0 + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local sums\n    local evens_str\n    local odds_str\n   \
    \ local sums_str\n    local evens_int\n    local odds_int\n    local sums_int\n\
    \    local evens_float\n    local odds_float\n    local sums_float\n    local\
    \ evens_str2\n    local odds_str2\n    local sums_str2\n    local evens_int2\n\
    \    local odds_int2\n    local sums_int2\n    local evens_float2\n    local odds_float2\n\
    \    local sums_float2\n    local evens_str2int\n    local odds_str2int\n    local\
    \ sums_str2int\n    local evens_int2int\n    local odds_int2int\n    local sums_int2int\n\
    \    local evens_float2int\n    local odds_float2int\n    local sums_float2int\n\
    \    local evens_str2float\n    local odds_str2float\n    local sums_str2float\n\
    \    local evens_int2float\n    local odds_int2float\n    local sums_int2float\n\
    \    local evens_float2float\n    local odds_float2float\n    local sums_float2float\n\
    \    local evens_str2int2\n    local odds_str2int2\n    local sums_str2int2\n\
    \    local evens_int2int2\n    local odds_int2int2\n    local sums_int2int2\n\
    \    local evens_float2int2\n    local odds_float2int2\n    local sums_float2int2\n\
    \    local evens_str2float2\n    local odds_str2float2\n    local sums_str2float2\n\
    \    local evens_int2float2\n    local odds_int2float2\n    local sums_int2float2\n\
    \    local evens_float2float2\n    local odds_float2float2\n    local sums_float2float2\n\
    \    local evens_str2int2int\n    local odds_str2int2int\n    local sums_str2int2int\n\
    \    local evens_int2int2int\n    local odds_int2int2int\n    local sums_int2int2int\n\
    \    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz66c0os.sh: line 13: sum + 4 88 : syntax error in expression (error
    token is "88 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( ${lst:$i:1} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${lst:$i:1} ))\n        fi\n       \
    \ i=$(( ${i} + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp77ehqqwl.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i\n\
    \  for i in $lst; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum +\
    \ i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]} -eq ${lst[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n        fi\n   \
    \ done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4niv7o7z.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    local j\n    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( ${lst:$i:1} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${lst:$i:1} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6qaihhxj.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local evens_str\n    local odds_str\n    local sums\n   \
    \ local sums_str\n    local evens_strs\n    local odds_strs\n    local evens_strs_str\n\
    \    local odds_strs_str\n    local evens_strs_strs\n    local odds_strs_strs\n\
    \    local evens_strs_strs_str\n    local odds_strs_strs_str\n    local evens_strs_strs_strs\n\
    \    local odds_strs_strs_strs\n    local evens_strs_strs_strs_str\n    local\
    \ odds_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_str\n    local\
    \ odds_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local evens_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs\n\
    \    local evens_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_str\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( ${lst:$i:1} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( $sum + ${lst:$i:1} ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6qaihhxj.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            (( sum += ${lst:$i:1} ))\n        fi\n        (( i++ ))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3giasimc.sh: line 12: [: =: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + $lst[$i] ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc_4vnmx7.sh: line 13: 0 + 4 88[0] : syntax error in expression
    (error token is "88[0] ")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1)))\n    do\n        if [[ ${lst[$i]} -eq 0 ]]\n\
    \        then\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 1 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 2 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 3 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 4 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 5 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 6 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 7 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 8 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 9 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 10 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 11 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n            continue\n\
    \        fi\n        if [[ ${lst[$i]} -eq 12 ]]\n        then\n            sum=$((${sum}\
    \ + ${lst[$i]}))\n            continue\n        fi\n        if [[ ${lst[$i]} -eq\
    \ 13 ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmplvtjfxyx.sh: line 79: syntax error near unexpected token `}''

    /tmp/tmplvtjfxyx.sh: line 79: `}''

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n\n  sum=0\n  even=0\n  odd=0\n  for i in $lst; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      even=$((even+i))\n    else\n      odd=$((odd+i))\n\
    \    fi\n  done\n  sum=$((even+odd))\n  echo $sum\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for i in $lst; do\n        if (( i % 2 )); then\n            sum=$((\
    \ sum + i ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]} -eq ${lst[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( $sum + ${lst[$i]} ))\n        fi\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcer_twpm.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    local j\n    for ((i=0; i<${#lst[@]}; i++)); do\n        if (( i % 2\
    \ )); then\n            sum=$(( sum + ${lst[i]} ))\n        fi\n    done\n   \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    (( sum += i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n  local i\n  sum=0\n  for ((i=0; i<${#lst[@]}; i++)); do\n    even=${lst[$((i*2))]}\n\
    \    odd=${lst[$((i*2)+1)]}\n    sum=$((sum+even+odd))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu5dgp97k.sh: command substitution: line 16: syntax error near unexpected
    token `+1''

    /tmp/tmpu5dgp97k.sh: command substitution: line 16: `(i*2)+1''

    /tmp/tmpu5dgp97k.sh: line 17: 4 88: syntax error in expression (error token is
    "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    sum=$((sum + ${lst[i]}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm8kqng_1.sh: line 11: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]} -eq ${lst[$(( $i\
    \ + 1 ))]} ]]; then\n            sum=$(( sum + ${lst[$i]} ))\n        fi\n   \
    \ done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4niv7o7z.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} = 0 ]; then\n\
    \            sum=$((sum + ${lst:$i:1}))\n        fi\n        i=$((i + 1))\n  \
    \  done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjezhuwe0.sh: line 12: [: =: unary operator expected

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n  local\
    \ j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n\
    \  local j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n \
    \ local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n  local\
    \ sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1)))\n    do\n        if [ ${lst[$i]} -eq ${lst[$((i\
    \ + 1))]} ]\n        then\n            sum=$((sum + ${lst[$i]}))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpebicijvb.sh: line 12: [: 88: binary operator expected

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n\n    sum=0\n    for (( i=0; i<${#lst[@]}; i++ )); do\n\
    \        even=${lst[$(( i%2 ))]}\n        odd=${lst[$(( i%2 ))]}\n        sum=$((\
    \ sum + even + odd ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6tvlp2mr.sh: line 17: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [ ${lst[$i]} -eq ${lst[$((i + 1))]} ]; then\n\
    \      sum=$((sum + ${lst[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmp17030lgi.sh: line 11: [: 88: binary operator expected

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n\n    sum=0\n    for (( i=0; i < ${#lst}; i++ )); do\n \
    \       even=${lst:$i:2}\n        odd=${lst:$i:1}\n        if [[ ${even} -eq ${odd}\
    \ ]]; then\n            sum=$(( sum + even ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7s2l6ces.sh: line 13: sum + 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local evens_str\n    local odds_str\n    local sums\n   \
    \ local sums_str\n    local evens_strs\n    local odds_strs\n    local sums_strs\n\
    \    local evens_strs_str\n    local odds_strs_str\n    local sums_strs_str\n\
    \    local evens_strs_strs\n    local odds_strs_strs\n    local sums_strs_strs\n\
    \    local evens_strs_strs_str\n    local odds_strs_strs_str\n    local sums_strs_strs_str\n\
    \    local evens_strs_strs_strs\n    local odds_strs_strs_strs\n    local sums_strs_strs_strs\n\
    \    local evens_strs_strs_strs_str\n    local odds_strs_strs_strs_str\n    local\
    \ sums_strs_strs_strs_str\n    local evens_strs_strs_strs_strs\n    local odds_strs_strs_strs_strs\n\
    \    local sums_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_str\n    local sums_strs_strs_strs_strs_str\n\
    \    local evens_strs_strs_strs_strs_strs\n    local odds_strs_strs_strs_strs_strs\n\
    \    local sums_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_str\n    local sums_strs_strs_strs_strs_strs_str\n\
    \    local evens_strs_strs_strs_strs_strs_strs\n    local odds_strs_strs_strs_strs_strs_strs\n\
    \    local sums_strs_strs_strs_strs_strs_strs\n    local evens_strs_strs_strs_strs_strs_strs_str\n\
    \    local odds_strs_strs_strs_strs_strs_strs_str\n    local sums_strs_strs_strs_strs_strs_strs_str\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    ((sum+=i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=0\n    local\
    \ odds=0\n    local sum=0\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n \
    \       if [ $(( i % 2 )) -eq 0 ]; then\n            evens=$(( evens + lst[$i]\
    \ ))\n        else\n            odds=$(( odds + lst[$i] ))\n        fi\n     \
    \   i=$(( i + 1 ))\n    done\n    sum=$(( evens + odds ))\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptm5jgpnk.sh: line 15: 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ ${lst:$i:1} == 2 ]; then\n\
    \            sum=$(( sum + ${lst:$i:1} ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl6kfz0ha.sh: line 12: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [[ ${lst:$i:1} == 0 ]]; then\n      ((i++))\n\
    \      continue\n    fi\n    sum=$((sum + ${lst:$i:1}))\n    ((i++))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppu2cxpep.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if ((i % 2)); then\n            sum=$((sum + i))\n  \
    \      fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    if [ ${lst:$i:1} = 0 ]; then\n      (( sum+=${lst:$i:1}\
    \ ))\n      (( i=i+1 ))\n    else\n      (( sum+=${lst:$i:1} ))\n      (( i=i+2\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ len\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local len\n    local even\n    local odd\n    local sum\n  \
    \  local i\n    local j\n    local k\n    local len\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local len\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local len\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local len\n    local \n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1))); do\n        if [[ ${lst[$i]} -eq 0 ]]; then\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 1 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 2 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 3 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 4 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 5 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 6 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 7 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 8 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 9 ]]; then\n \
    \           sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n    \
    \    if [[ ${lst[$i]} -eq 10 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if [[ ${lst[$i]} -eq 12 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 13 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if [[ ${lst[$i]} -eq 14 ]]; then\n            sum=$((sum + ${lst[$i]}))\n\
    \            continue\n        fi\n        if [[ ${lst[$i]} -eq 15 ]]; then\n\
    \            sum=$((sum + ${lst[$i]}))\n            continue\n        fi\n   \
    \     if \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpml1r_909.sh: line 75: syntax error near unexpected token `}''

    /tmp/tmpml1r_909.sh: line 75: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for i in $lst; do\n        if (( i % 2 )); then\n            sum=$((\
    \ $sum + $i ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=0\n    local\
    \ odds=0\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ even\n    local odd\n    local tmp\n    while [ $i -lt ${#lst} ]; do\n     \
    \   even=$((${lst[i]} % 2))\n        odd=$((${lst[i]} % 2))\n        if [ $even\
    \ -eq 0 ]; then\n            evens=$((evens + 1))\n        fi\n        if [ $odd\
    \ -eq 0 ]; then\n            odds=$((odds + 1))\n        fi\n        sum=$((sum\
    \ + ${lst[i]}))\n        i=$((i + 1))\n    done\n    echo $((sum + ${evens}))\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp25s6xo5k.sh: line 19: 4 88 % 2: syntax error in expression (error
    token is "88 % 2")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        if (( i % 2 )); then\n\
    \            sum=$(( sum + ${lst[i]} ))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local even\n    local \n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n        if\
    \ [ ${lst:$i:1} == 0 ]; then\n            evens=\"${evens} ${lst:$i:1}\"\n   \
    \     else\n            odds=\"${odds} ${lst:$i:1}\"\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $((${evens}+${odds}))\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq5r9yrjx.sh: line 13: [: ==: unary operator expected

    /tmp/tmpq5r9yrjx.sh: line 20: + 4   8 8: syntax error in expression (error token
    is "8 8")

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $lst;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $(seq 0 $((${#lst[@]} - 1)))\n    do\n        if [[ ${lst[$i]} -eq ${lst[$((i\
    \ + 1))]} ]]\n        then\n            sum=$((${sum} + ${lst[$i]}))\n       \
    \ fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp87f4ubx3.sh: line 12: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt ${#lst} ]; do\n    sum=$((sum + ${lst:$i:2}))\n    i=$((i+1))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=$(echo $lst\
    \ | sed 's/ //g' | sed 's/^/0/' | sed 's/$/1/' | sed 's/^/0/' | sed 's/$/1/')\n\
    \    local odds=$(echo $lst | sed 's/ //g' | sed 's/^/1/' | sed 's/$/0/' | sed\
    \ 's/^/1/' | sed 's/$/0/')\n    local sum=0\n    for (( i=0; i<${#evens}; i++\
    \ )); do\n        sum=$(( $sum + ${evens[$i]} ))\n    done\n    for (( i=0; i<${#odds};\
    \ i++ )); do\n        sum=$(( $sum + ${odds[$i]} ))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpht7ndri1.sh: line 13: 0 + 0048811: value too great for base (error
    token is "0048811")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    for\
    \ i in $lst; do\n        if ((i % 2)); then\n            sum=$((sum + i))\n  \
    \      fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1)))\n  do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    if [[ ${lst[$i]} -eq 2 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 3 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 4 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 5 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 6 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 7 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 8 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 9 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 10 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 12 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 13 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n  \
    \    continue\n    fi\n    if [[ ${lst[$i]} -eq 14 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if \n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph9l8fwzm.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmph9l8fwzm.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local evens\n\
    \    local odds\n    local evens_sum\n    local odds_sum\n    local evens_evens\n\
    \    local odds_odds\n    local evens_odds_sum\n    local odds_evens_sum\n   \
    \ local evens_odds_evens\n    local odds_evens_odds\n    local evens_odds_odds_sum\n\
    \    local odds_evens_odds_evens\n    local evens_odds_odds_odds\n    local evens_odds_odds_odds_sum\n\
    \    local odds_evens_odds_odds_evens\n    local evens_odds_odds_odds_odds\n \
    \   local evens_odds_odds_odds_odds_sum\n    local odds_evens_odds_odds_odds_evens\n\
    \    local evens_odds_odds_odds_odds_odds\n    local evens_odds_odds_odds_odds_odds_sum\n\
    \    local odds_evens_odds_odds_odds_odds_evens\n    local evens_odds_odds_odds_odds_odds_odds\n\
    \    local evens_odds_odds_odds_odds_odds_odds_sum\n    local odds_evens_odds_odds_odds_odds_odds_evens\n\
    \    local evens_odds_odds_odds_odds_odds_odds_odds\n    local evens_odds_odds_odds_odds_odds_odds_odds_sum\n\
    \    local odds_evens_odds_odds_odds_odds_odds_odds_evens\n    local evens_odds_odds_odds_odds_odds_odds_odds_odds\n\
    \    local evens_odds_odds_odds_odds_odds_odds_odds_odds_sum\n    local odds_evens_odds_odds_odds_odds_odds_odds_odds_evens\n\
    \    local evens_odds_odds_odds_odds_odds_odds_odds_odds_odds_odds\n    local\
    \ evens_odds_odds_odds_odds_odds_odds_odds_odds_odds_oddsum\n    local odds_evens_odds_odds_odds_odds_odds_odds_odds_odds_odds_evens\n\
    \    local evens_odds_odds_\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=0\n    local\
    \ odds=0\n    local even\n    local odd\n    local i\n    for (( i=0; i<${#lst[@]};\
    \ i++ )); do\n        even=${lst[$(( i*2 ))]}\n        odd=${lst[$(( i*2+1 ))]}\n\
    \        if [[ $even -eq $odd ]]; then\n            evens+=$even\n           \
    \ odds+=$odd\n        fi\n    done\n    echo \"$evens\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmptek5wk4a.sh: line 17: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local even\n    local odd\n\
    \    local sum\n    local i\n    local j\n    local k\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local even\n\
    \    local odd\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ even\n    local odd\n    local sum\n    local i\n    local j\n    local k\n\
    \    local even\n    local odd\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local even\n    local odd\n    local sum\n    local i\n    local j\n\
    \    local k\n    local even\n    local odd\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local even\n    local odd\n    local sum\n    local i\n\
    \    local j\n    local k\n    local even\n    local odd\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local even\n    local odd\n    local sum\n\
    \    local i\n    local j\n    local k\n    local even\n    local odd\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local \n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local even\n    local\
    \ odd\n    local sum\n    local i\n    local j\n    local k\n    local len\n \
    \   local evens\n    local odds\n    local evens_sum\n    local odds_sum\n   \
    \ local evens_len\n    local odds_len\n    local evens_odds\n    local odds_evens\n\
    \    local evens_evens\n    local evens_odds_sum\n    local odds_evens_sum\n \
    \   local evens_evens_sum\n    local evens_odds_len\n    local odds_evens_len\n\
    \    local evens_evens_len\n    local evens_odds_odds\n    local odds_evens_odds\n\
    \    local evens_evens_odds\n    local evens_odds_evens\n    local odds_evens_evens\n\
    \    local evens_evens_evens\n    local evens_odds_odds_sum\n    local odds_evens_odds_sum\n\
    \    local evens_evens_odds_sum\n    local evens_odds_evens_sum\n    local evens_evens_evens_sum\n\
    \    local evens_odds_odds_len\n    local odds_evens_odds_len\n    local evens_evens_odds_len\n\
    \    local evens_odds_evens_len\n    local evens_evens_evens_len\n    local evens_odds_odds_odds\n\
    \    local odds_evens_odds_odds\n    local evens_evens_odds_odds\n    local evens_odds_evens_odds\n\
    \    local evens_evens_evens_odds\n    local evens_odds_evens_evens\n    local\
    \ evens_evens_evens_evens\n    local evens_odds_evens_evens\n    local evens_evens_evens_evens\n\
    \    local evens_odds_odds_evens_sum\n    local odds_evens_odds_evens_sum\n  \
    \  local evens_evens_odds_evens_sum\n    local evens_odds_evens_evens_sum\n  \
    \  local evens_evens_evens_evens_sum\n    local evens_odds_odds_evens_len\n  \
    \  local odds_evens_odds_evens_len\n    local evens_evens_odds_evens_len\n   \
    \ local evens_odds_evens_evens_len\n    local evens_evens_evens_evens_len\n  \
    \  local \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027405
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    if [[ ${lst[$i]} -eq 2 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 3 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 4 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 5 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 6 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 7 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 8 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 9 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n   \
    \   continue\n    fi\n    if [[ ${lst[$i]} -eq 10 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]} -eq 11 ]]; then\n\
    \      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n    if [[ ${lst[$i]}\
    \ -eq 12 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n      continue\n    fi\n\
    \    if [[ ${lst[$i]} -eq 13 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n  \
    \    continue\n    fi\n    if [[ ${lst[$i]} -eq 14 ]]; then\n      sum=$((${sum}\
    \ + ${lst[$i]}))\n      continue\n    fi\n    if [[ \n}\n\ncandidate() {\n   \
    \ add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbouxdxol.sh: line 71: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpbouxdxol.sh: line 71: syntax error near `}''

    /tmp/tmpbouxdxol.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660027404
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt ${#lst} ]; do\n        if [ $(( ${lst:$i:1} % 2 )) -eq\
    \ 0 ]; then\n            sum=$(( ${sum} + ${lst:$i:1} ))\n        fi\n       \
    \ i=$(( i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvl7swan8.sh: line 12: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local evens=\"\"\n  \
    \  local odds=\"\"\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        if [[ ${lst[$i]}\
    \ -eq 0 ]]; then\n            echo \"${evens}${odds}${lst[$i]}\"\n        elif\
    \ [[ ${lst[$i]} -eq 1 ]]; then\n            echo \"${evens}${lst[$i]}\"\n    \
    \    elif [[ ${lst[$i]} -eq 2 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 3 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 4 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 5 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 6 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 7 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 8 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 9 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 10 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 11 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 12 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 13 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 14 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 15 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 16 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 17 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif [[ ${lst[$i]} -eq 18 ]]; then\n            echo \"${evens}${lst[$i]}\"\
    \n        elif \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxhxq3bqv.sh: line 51: syntax error near unexpected token `}''

    /tmp/tmpxhxq3bqv.sh: line 51: `}''

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n    local\
    \ i\n    for ((i=0; i<${#lst[@]}; i++)); do\n        if [[ ${lst[$i]} -eq ${lst[$((i+1))]}\
    \ ]]; then\n            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi7e4scls.sh: line 12: [[: 4 88: syntax error in expression (error
    token is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for i in $(seq\
    \ 0 $((${#lst[@]} - 1))); do\n    if [[ ${lst[$i]} -eq 0 ]]; then\n      continue\n\
    \    fi\n    if [[ ${lst[$i]} -eq 1 ]]; then\n      sum=$((${sum} + ${lst[$i]}))\n\
    \      continue\n    fi\n    sum=$((${sum} + ${lst[$i]}))\n  done\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi6koj4py.sh: line 11: [[: 4 88: syntax error in expression (error
    token is "88")

    /tmp/tmpi6koj4py.sh: line 14: [[: 4 88: syntax error in expression (error token
    is "88")

    /tmp/tmpi6koj4py.sh: line 18: 0 + 4 88: syntax error in expression (error token
    is "88")

    '
  stdout: ''
  timestamp: 1660027405
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# add([4, 2, 6, 7]) ==> 2\n#\n# $1 is\
    \ a space-separated list\nadd() {\n  local lst=$1\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n  local\
    \ j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n  local i\n\
    \  local j\n  local k\n  local len\n  local even\n  local odd\n  local sum\n \
    \ local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n  local\
    \ sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local odd\n\
    \  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n  local\
    \ odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local even\n\
    \  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n  local\
    \ even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local len\n\
    \  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n  local\
    \ len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n  local k\n\
    \  local len\n  local even\n  local odd\n  local sum\n  local i\n  local j\n \
    \ local k\n  local len\n  local \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027404

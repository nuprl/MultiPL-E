name: HumanEval_23_strlen
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n# >>>\
  \ strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n"
tests: "}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
  asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
completions: ["  local str=\"$1\"\n  local len=0\n  while [[ $str != \"\" ]]; do\n\
    \    ((len++))\n    str=\"${str#?}\"\n  done\n  echo $len", "  local len=0\n \
    \ local str=$1\n  while [[ $str != \"\" ]]; do\n    ((len++))\n    str=${str#?}\n\
    \  done\n  echo $len", "    local str=\"$1\"\n    local len=0\n    for (( i=1;\
    \ i<${#str}; i++ )); do\n        len=$((len+1))\n    done\n    echo \"$len\"",
  "    local str=\"$1\"\n    local len=0\n    local i\n    for (( i=1; i<${#str};\
    \ i++ )); do\n        len=$((len+1))\n    done\n    echo \"${len}\"", "  local\
    \ str=\"$1\"\n  local len=0\n  while [ \"${str:0:1}\" != \"\" ]; do\n    len=$((len+1))\n\
    \    str=\"${str:1}\"\n  done\n  echo $len", "    local str=$1\n    local len=0\n\
    \    while [ \"${str:0:1}\" != \"\" ]; do\n        len=$((len+1))\n        str=${str:1}\n\
    \    done\n    echo \"${len}\"", "    local str=\"$1\"\n    local len=0\n    for\
    \ (( c=0; c<${#str}; c++ )); do\n        len=$((len+1))\n    done\n    echo \"\
    $len\"", "  local len=0\n  local str=$1\n  while [ -n \"$str\" ]; do\n    len=$((len+1))\n\
    \    str=${str#?}\n  done\n  echo $len", "  local -i len=0\n  local -i i\n  local\
    \ str=\"$1\"\n  shift\n  for (( i=1; i<=$#; i++ )); do\n    len=$((len+${#str}))\n\
    \    str=\"${str%?}\"\n  done\n  echo \"$len\"", "  local len=0\n  local str=$1\n\
    \  while [[ $str != \"\" ]]; do\n    len=$((len+1))\n    str=${str#?}\n  done\n\
    \  echo $len", "  local len=0\n  local str=$1\n  while [[ $str != \"\" ]]; do\n\
    \    ((len++))\n    str=${str#?}\n  done\n  echo $len", "  local str=$1\n  local\
    \ len=0\n  while [ -n \"$str\" ]; do\n    len=$((len+1))\n    str=${str#?}\n \
    \ done\n  echo $len", "  local str=\"$1\"\n  local len=0\n  while [ -n \"$str\"\
    \ ]; do\n    ((len++))\n    str=\"${str#?}\"\n  done\n  echo \"$len\"", "  local\
    \ str=$1\n  local len=0\n  while [[ $str != \"\" ]]; do\n    ((len++))\n    str=${str#?}\n\
    \  done\n  echo $len", "  local len=0\n  local str=$1\n  while [[ $str != \"\"\
    \ ]]; do\n    ((len++))\n    str=${str#?}\n  done\n  echo $len", "  local str=\"\
    $1\"\n  local len=0\n  local i\n  for i in \"${str}\"; do\n    ((len++))\n  done\n\
    \  echo $len", "  local len=0\n  local str=$1\n  while [[ $str != \"\" ]]; do\n\
    \    len=$((len+1))\n    str=${str#?}\n  done\n  echo $len", "  local str=\"$1\"\
    \n  local len=0\n  while [[ $str != \"\" ]]; do\n    len=$((len+1))\n    str=\"\
    ${str%?}\"\n  done\n  echo $len", "  local str=\"$1\"\n  echo \"${#str}\"", " \
    \   local str=\"$1\"\n    local len=0\n    local i\n    len=0\n    for (( i=1;\
    \ i<${#str}; i++ )); do\n        len=$((len+1))\n    done\n    echo \"${len}\""]
stop_tokens:
- "\n}"

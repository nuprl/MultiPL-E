name: HumanEval_27_flip_case
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is a\
  \ string\nflip_case() {\n"
tests: "}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n\
  \    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
  \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
completions: ["    local string=$1\n    local newstring=\"\"\n    for (( i = 0; i\
    \ < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n        case\
    \ \"$letter\" in\n            a)\n                newstring+=\"B\"\n         \
    \       ;;\n            b)\n                newstring+=\"a\"\n               \
    \ ;;\n            c)\n                newstring+=\"C\"\n                ;;\n \
    \           d)\n                newstring+=\"d\"\n                ;;\n       \
    \     e)\n                newstring+=\"E\"\n                ;;\n            f)\
    \ \n                newstring+=\"f\"\n                ;;\n            g)\n   \
    \             newstring+=\"G\"\n                ;;\n            h) \n        \
    \        newstring+=\"H\"\n                ;;\n            i)\n              \
    \  newstring+=\"I\"\n                ;;\n            j)\n                newstring+=\"\
    J\"\n                ;;\n            k)\n                newstring+=\"K\"\n  \
    \              ;;\n            l) \n                newstring+=\"L\"\n       \
    \         ;;\n            m) \n                newstring+=\"M\"\n            \
    \    ;;\n            n) \n                newstring+=\"N\"\n                ;;\n\
    \            o) \n                newstring+=\"O\"\n                ;;\n     \
    \       p) \n                newstring+=\"P\"\n                ;;\n          \
    \  q) \n                newstring+=\"Q\"\n                ;;\n            r) \n\
    \                newstring+=\"R\"\n                ;;\n            s) \n     \
    \           newstring+=\"S\"\n                ;;\n            t) \n          \
    \      newstring+=\"T\"\n                ;;\n            u) \n               \
    \ newstring+=\"U\"\n                ;;\n            v) \n                newstring+=\"\
    V\"\n                ;;\n            w) \n                newstring+=\"W\"\n \
    \               ;;\n            x) \n                newstring+=\"X\"\n      \
    \          ;;\n            y) \n                newstring+=\"Y\"\n           \
    \     ;;\n            z) \n                newstring+=\"Z\"\n                ;;\n\
    \            *) \n                newstring+=\"$letter\"\n                ;;\n\
    \        esac\n    done\n    echo \"$newstring\"", "    local string=\"$1\"\n\
    \    local output=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local\
    \ c=\"${string:$i:1}\"\n        case \"$c\" in\n            A) output+=\"B\";;\n\
    \            B) output+=\"a\";;\n            C) output+=\"c\";;\n            D)\
    \ output+=\"d\";;\n            E) output+=\"e\";;\n            F) output+=\"f\"\
    ;;\n            G) output+=\"g\";;\n            H) output+=\"h\";;\n         \
    \   I) output+=\"i\";;\n            J) output+=\"j\";;\n            K) output+=\"\
    k\";;\n            L) output+=\"l\";;\n            M) output+=\"m\";;\n      \
    \      N) output+=\"n\";;\n            O) output+=\"o\";;\n            P) output+=\"\
    p\";;\n            Q) output+=\"q\";;\n            R) output+=\"r\";;\n      \
    \      S) output+=\"s\";;\n            T) output+=\"t\";;\n            U) output+=\"\
    u\";;\n            V) output+=\"v\";;\n            W) output+=\"w\";;\n      \
    \      X) output+=\"x\";;\n            Y) output+=\"y\";;\n            Z) output+=\"\
    z\";;\n            *) output+=\"$c\";;\n        esac\n    done\n    echo \"$output\"",
  "    local string=\"$1\"\n    local output=\"\"\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    ", "    local string=\"$1\"\n    local output=\"\
    \"\n    local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", "  local\
    \ string=\"$1\"\n  local output=\"\"\n  local i\n  for i in \"${string}\"; do\n\
    \    case $i in\n      [a-z])\n        output=\"${i^^}\"\n        ;;\n      [A-Z])\n\
    \        output=\"${i^^}\"\n        ;;\n      *)\n        output=\"${i^^}\"\n\
    \        ;;\n    esac\n  done\n  echo \"$output\"", "    local string=$1\n   \
    \ local output\n    output=$(echo \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"",
  "  local string=\"$1\"\n  local output=\"\"\n  local i\n  for i in \"${string}\"\
    ; do\n    case \"$i\" in\n      [a-z])\n        output+=\"[A-Z]\"\n        ;;\n\
    \      [A-Z])\n        output+=\"[a-z]\"\n        ;;\n      *)\n        output+=\"\
    $i\"\n        ;;\n    esac\n  done\n  echo \"$output\"", "    local string=\"\
    $1\"\n    local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++\
    \ )); do\n        case \"${string:$i:1}\" in\n            [a-z])\n           \
    \     output=\"${output:${#output}0:1}${string:$i:1}${#output}1:}\"\n        \
    \        ;;\n            *)\n                output=\"${output:${#output}0:1}${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"", "    local\
    \ string=\"$1\"\n    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\\
    )/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo\
    \ \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n     \
    \   case \"$letter\" in\n            a)\n                letter=A\n          \
    \      ;;\n            b)\n                letter=B\n                ;;\n    \
    \        c)\n                letter=C\n                ;;\n            d)\n  \
    \              letter=D\n                ;;\n            e)\n                letter=E\n\
    \                ;;\n            f)\n                letter=F\n              \
    \  ;;\n            g)\n                letter=G\n                ;;\n        \
    \    h)\n                letter=H\n                ;;\n            i)\n      \
    \          letter=I\n                ;;\n            j)\n                letter=J\n\
    \                ;;\n            k)\n                letter=K\n              \
    \  ;;\n            l)\n                letter=L\n                ;;\n        \
    \    m)\n                letter=M\n                ;;\n            n)\n      \
    \          letter=N\n                ;;\n            o)\n                letter=O\n\
    \                ;;\n            p)\n                letter=P\n              \
    \  ;;\n            q)\n                letter=Q\n                ;;\n        \
    \    r)\n                letter=R\n                ;;\n            s)\n      \
    \          letter=S\n                ;;\n            t)\n                letter=T\n\
    \                ;;\n            u)\n                letter=U\n              \
    \  ;;\n            v)\n                letter=V\n                ;;\n        \
    \    w)\n                letter=W\n                ;;\n            x)\n      \
    \          letter=X\n                ;;\n            y)\n                letter=Y\n\
    \                ;;\n            z)\n                letter=Z\n              \
    \  ;;\n            *)\n                letter=${letter:0:1}\n                ;;\n\
    \        esac\n        output+=\"${letter}\"\n    done\n    echo \"$output\"",
  "    local string=$1\n    local newString\n    newString=$(echo \"$string\" | sed\
    \ -e 's/\\(.\\)/\\U\\1/')\n    newString=$(echo \"$newString\" | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    echo \"$newString\"", "    local string=\"$1\"\n    local\
    \ output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n   \
    \     case \"${string:$i:1}\" in\n            [:lower:] )\n                output+=\"\
    \\U${string:$i:1}\"\n                ;;\n            [:upper:] )\n           \
    \     output+=\"${string:$i:1}\"\n                ;;\n            * )\n      \
    \          output+=\"${string:$i:1}\"\n                ;;\n        esac\n    done\n\
    \    echo \"$output\"", "    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"", "    local string=\"$1\"\n \
    \   local output=\"\"\n    local i\n    for (( i = 0; i < ${#string}; i++ ));\
    \ do\n        output=\"${output}${string[i]^^}\"\n    done\n    echo \"$output\"",
  "    local string=$1\n    local output\n    output=$(echo \"$string\" | sed 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  \
    \  echo \"$output\"", "    local string=\"$1\"\n    local output=\"\"\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n\
    \        case \"$char\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n       \
    \     [:upper:] )\n                output+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            * )\n                output+=\"\
    $char\"\n                ;;\n        esac\n    done\n    echo \"$output\"", " \
    \ local string=\"$1\"\n  echo \"${string^^}\"", "    local string=$1\n    local\
    \ newstring\n    newstring=$(echo $string | tr '[:lower:]' '[:upper:]')\n    newstring=$(echo\
    \ $newstring | tr '[:upper:]' '[:lower:]')\n    echo $newstring", "    local string=$1\n\
    \    local output\n    output=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"",
  "    local string=\"$1\"\n    local output=\"\"\n    local i\n    for (( i = 0;\
    \ i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n        case\
    \ \"$c\" in\n            [:lower:] )\n                output+=\"$(echo \"$c\"\
    \ | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:] )\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            * )\n                output+=\"$c\"\n          \
    \      ;;\n        esac\n    done\n    echo \"$output\""]
stop_tokens:
- "\n}"

name: HumanEval_80_is_happy
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
  \ string is happy or not.\n# A string is happy if its length is at least 3 and every\
  \ 3 consecutive letters are distinct\n# For example:\n# is_happy(a) => False\n#\
  \ is_happy(aa) => False\n# is_happy(abcd) => True\n# is_happy(aabb) => False\n#\
  \ is_happy(adb) => True\n# is_happy(xyy) => False\n#\n# $1 is a string\nis_happy()\
  \ {\n"
tests: "}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n\
  \    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\"\
  \ ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"\
  false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"\
  iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  local string=\"$1\"\n  local length=${#string}\n  if [[ $length -gt\
    \ 3 ]]; then\n    local i\n    for (( i=1; i<=$((length-1)); i++ )); do\n    \
    \  if [[ ${string:$i:1} == ${string:$((i+1)):1} ]]; then\n        echo \"$string\
    \ contains $((i+1)) consecutive letters\"\n      fi\n    done\n  fi", "  local\
    \ string=\"$1\"\n  local length=\"${#string}\"\n  local count=0\n  local letters=()\n\
    \  local letter\n  local result\n\n  if [[ \"$length\" -lt 3 ]]; then\n    return\
    \ 0\n  fi\n\n  while [ \"$count\" -lt \"$length\" ]; do\n    letter=\"${string:$count:1}\"\
    \n    letters+=($letter)\n    count=$((count+1))\n  done\n\n  result=0\n  for\
    \ letter in \"${letters[@]}\"; do\n    if [[ \"$letter\" == \"$letter\" ]]; then\n\
    \      result=1\n      break\n    fi\n  done\n\n  return $result", "  local string=$1\n\
    \  local length=${#string}\n  if [[ $length -gt 3 ]]; then\n    local count=0\n\
    \    local char\n    for char in $string; do\n      if [[ \"$char\" != \"$string[$((count++))]\"\
    \ ]]; then\n        echo \"$char is not distinct\"\n        return 1\n      fi\n\
    \    done\n  else\n    echo \"$string is happy\"\n    return 0\n  fi", "  local\
    \ string=$1\n  local length=${#string}\n  local count=1\n  local letters=${string:0:3}\n\
    \  while [[ $count -le $length ]]; do\n    local letters=${string:$count:$((count+3))}\n\
    \    local count=$((count+3))\n    if [[ ${letters//[!a-z]} == $letters ]]; then\n\
    \      count=$((count+3))\n    fi\n  done\n  [[ \"$length\" -ge 3 ]]", "  local\
    \ string=\"$1\"\n  local length=${#string}\n  local count=0\n  local letters=()\n\
    \  local letter\n  local result\n\n  if [[ $length -lt 3 ]]; then\n    return\
    \ 0\n  fi\n\n  while [[ $count -lt $length ]]; do\n    letter=${string:$count:1}\n\
    \    letters+=($letter)\n    count=$((count+1))\n  done\n\n  result=$(echo \"\
    ${letters[*]}\" | sort -u | grep -v '^$')\n\n  if [[ $result != \"\" ]]; then\n\
    \    return 1\n  else\n    return 0\n  fi", "  local string=\"$1\"\n  local length=\"\
    ${#string}\"\n  local count=0\n  local letters=()\n\n  for (( i=0; i<${#string};\
    \ i++ )); do\n    letters+=(${string:$i:1})\n  done\n\n  for (( i=0; i<${#letters[@]};\
    \ i++ )); do\n    count=$((${count}+1))\n  done\n\n  if [[ ${count} -gt 3 ]];\
    \ then\n    return 0\n  else\n    return 1\n  fi", "  local string=\"$1\"\n  local\
    \ length=${#string}\n  if [[ $length -gt 3 ]]; then\n    return 0\n  fi\n  local\
    \ count=0\n  local letters=()\n  local i=0\n  while [[ $i -lt $length ]]; do\n\
    \    local letter=${string:$i:1}\n    local letterCount=${#letters[@]}\n    if\
    \ [[ $letterCount -eq 0 ]]; then\n      letters[$letterCount]=$letter\n      count=$((count+1))\n\
    \    elif [[ $count -eq 3 ]]; then\n      local j=0\n      while [[ $j -lt $letterCount\
    \ ]]; do\n        if [[ \"${letters[$j]}\" == \"$letter\" ]]; then\n         \
    \ count=$((count+1))\n          j=$((j+1))\n        else\n          j=$((j+1))\n\
    \        fi\n      done\n    fi\n    i=$((i+1))\n  done\n  if [[ $count -eq 3\
    \ ]]; then\n    return 1\n  else\n    return 0\n  fi", "  local string=\"$1\"\n\
    \  local length=${#string}\n  local count=0\n  local lastchar=\"\"\n  local lastcharcount=0\n\
    \  local lastcharcount2=0\n  local lastcharcount3=0\n  local lastcharcount4=0\n\
    \  local lastcharcount5=0\n  local lastcharcount6=0\n  local lastcharcount7=0\n\
    \  local lastcharcount8=0\n  local lastcharcount9=0\n  local lastcharcount10=0\n\
    \  local lastcharcount11=0\n  local lastcharcount12=0\n  local lastcharcount13=0\n\
    \  local lastcharcount14=0\n  local lastcharcount15=0\n  local lastcharcount16=0\n\
    \  local lastcharcount17=0\n  local lastcharcount18=0\n  local lastcharcount19=0\n\
    \  local lastcharcount20=0\n  local lastcharcount21=0\n  local lastcharcount22=0\n\
    \  local lastcharcount23=0\n  local lastcharcount24=0\n  local lastcharcount25=0\n\
    \  local lastcharcount26=0\n  local lastcharcount27=0\n  local lastcharcount28=0\n\
    \  local lastcharcount29=0\n  local lastcharcount30=0\n  local lastcharcount31=0\n\
    \  local lastcharcount32=0\n  local lastcharcount33=0\n  local lastcharcount34=0\n\
    \  local lastcharcount35=0\n  local lastcharcount36=0\n  local lastcharcount37=0\n\
    \  local lastcharcount38=0\n  local lastcharcount39=0\n  local lastcharcount40=0\n\
    \  local lastcharcount41=0\n  local lastcharcount42=0\n  local lastcharcount43=0\n\
    \  local lastcharcount44=0\n  local lastcharcount45=0\n  local lastcharcount46=0\n\
    \  local lastcharcount47=0\n  local lastcharcount48=0\n  local lastcharcount49=0\n\
    \  local lastcharcount50=0\n  local lastcharcount51=0\n  local lastcharcount52=0\n\
    \  local lastcharcount53=0\n  local lastcharcount54=0\n  local lastcharcount55=0\n\
    \  local lastcharcount56=0\n  local lastcharcount57=0\n  local lastcharcount58=0\n\
    \  local lastcharcount59=0\n  local lastcharcount60=0\n  local lastcharcount61=0\n\
    \  ", "  local string=$1\n  local length=$((${#string} - 1))\n  local count=0\n\
    \  local letters=()\n  local letter\n  local i\n  local j\n  for i in $(seq 0\
    \ $length); do\n    letter=${string:$i:1}\n    letters+=($letter)\n  done\n  for\
    \ j in $(seq 0 $length); do\n    letter=${string:$j:1}\n    if [[ ${letters[*]}\
    \ != ${letter} ]]; then\n      count=$((count + 1))\n    fi\n  done\n  if (( length\
    \ == 3 && count > 0 )) || (( length < 3 )); then\n    return 0\n  else\n    return\
    \ 1\n  fi", "  local string=$1\n  local length=${#string}\n  local count=0\n \
    \ local char\n  local char1\n  local char2\n  local char3\n  local char4\n  local\
    \ char5\n  local char6\n  local char7\n  local char8\n  local char9\n  local char10\n\
    \  local char11\n  local char12\n  local char13\n  local char14\n  local char15\n\
    \  local char16\n  local char17\n  local char18\n  local char19\n  local char20\n\
    \  local char21\n  local char22\n  local char23\n  local char24\n  local char25\n\
    \  local char26\n  local char27\n  local char28\n  local char29\n  local char30\n\
    \  local char31\n  local char32\n  local char33\n  local char34\n  local char35\n\
    \  local char36\n  local char37\n  local char38\n  local char39\n  local char40\n\
    \  local char41\n  local char42\n  local char43\n  local char44\n  local char45\n\
    \  local char46\n  local char47\n  local char48\n  local char49\n  local char50\n\
    \  local char51\n  local char52\n  local char53\n  local char54\n  local char55\n\
    \  local char56\n  local char57\n  local char58\n  local char59\n  local char60\n\
    \  local char61\n  local char62\n  local char63\n  local char64\n  local char65\n\
    \  local char66\n  local char67\n  local char68\n  local char69\n  local char70\n\
    \  local char71\n  local char72\n  local char73\n  local char74\n  local char75\n\
    \  local char76\n  local char77\n  local char78\n  local char79\n  local char80\n\
    \  local char81\n  local char82\n  local char83\n  local char84\n  local char85\n\
    \  local char86\n  local char87\n  local char88\n  local char89\n  local char90\n\
    \  local char91\n  local char92\n  local char93\n  local char94\n  local char95\n\
    \  local char96\n  local char97\n  local char98\n", "  local string=$1\n  local\
    \ length=${#string}\n  if [[ $length -gt 3 ]]; then\n    for (( i=1; i<length-3;\
    \ i++ )); do\n      [[ \"${string:$i:1}\" == \"${string:$((i+1)):1}\" ]] || return\
    \ 1\n    done\n  else\n    return 1\n  fi\n  return 0", "    local string=$1\n\
    \    local length=${#string}\n    local count=0\n    local letters=()\n    local\
    \ letter\n    local i\n    local j\n    local k\n    local l\n    local m\n  \
    \  local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n", "  local string=\"$1\"\n  local length=\"${#string}\"\
    \n  if [[ $length -gt 3 ]]; then\n    return 0\n  fi\n  local count=0\n  local\
    \ letter\n  while (( count < length )); do\n    letter=\"${string:$count:1}\"\n\
    \    count=$(( count + 1 ))\n  done\n  local letter1=\"${string:0:1}\"\n  local\
    \ letter2=\"${string:1:1}\"\n  local letter3=\"${string:2:1}\"\n  local letter4=\"\
    ${string:3:1}\"\n  local letter5=\"${string:4:1}\"\n  local letter6=\"${string:5:1}\"\
    \n  local letter7=\"${string:6:1}\"\n  local letter8=\"${string:7:1}\"\n  local\
    \ letter9=\"${string:8:1}\"\n  local letter10=\"${string:9:1}\"\n  local letter11=\"\
    ${string:10:1}\"\n  local letter12=\"${string:11:1}\"\n  local letter13=\"${string:12:1}\"\
    \n  local letter14=\"${string:13:1}\"\n  local letter15=\"${string:14:1}\"\n \
    \ local letter16=\"${string:15:1}\"\n  local letter17=\"${string:16:1}\"\n  local\
    \ letter18=\"${string:17:1}\"\n  local letter19=\"${string:18:1}\"\n  local letter20=\"\
    ${string:19:1}\"\n  local letter21=\"${string:20:1}\"\n  local letter22=\"${string:21:1}\"\
    \n  local letter23=\"${string:22:1}\"\n  local letter24=\"${string:23:1}\"\n \
    \ local letter25=\"${string:24:1}\"\n  local letter26=\"${string:25:1}\"\n  local\
    \ letter27=\"${string:26:1}\"\n  local letter28=\"${string:27:1}\"\n  local letter29=\"\
    ${string:28:1}\"\n  local letter30=\"${string:29:1}\"\n  local letter31=\"${string:30:1}\"\
    \n  local letter32=\"${string:31:1}\"\n  local letter33=\"${string:32:1}\"\n \
    \ local letter34=\"${string:33:1}\"\n  local letter35=\"${string:34:1}\"\n  local\
    \ letter36=\"${string:35:1}\"\n  local letter37=\"${string:36:1}\"\n  local letter38=\"\
    ${string:37:1}\"\n  local letter39=\"${string:38:1}\"\n  local letter40=\"${string:39:1}\"\
    \n  local letter41=\"${string:40:1}\"\n  local letter42=\"${string:41:1}\"\n \
    \ local letter43", "    local string=$1\n    local length=${#string}\n    if [[\
    \ $length -gt 3 ]]; then\n        local count=0\n        local lastchar\n    \
    \    for (( i=0; i<${#string}; i++ )); do\n            local char=${string:$i:1}\n\
    \            if [[ \"$char\" != \"$lastchar\" ]]; then\n                (( count++\
    \ ))\n            fi\n            lastchar=$char\n        done\n        if [[\
    \ $count -eq 3 ]]; then\n            return 1\n        fi\n    fi\n    return\
    \ 0", "  local string=\"$1\"\n  local len=${#string}\n  local count=0\n  local\
    \ letters=()\n\n  while [[ $len -gt 0 ]]; do\n    local letter=${string:$count:1}\n\
    \    local next=${string:$count:2}\n    local prev=${string:$count:3}\n\n    if\
    \ [[ ${#letters[@]} -eq 0 ]]; then\n      letters=(\"$letter\")\n    elif [[ ${#letters[@]}\
    \ -eq 1 ]]; then\n      if [[ \"$letter\" == \"$letters[@]\" ]]; then\n      \
    \  letters=(\"$letter\")\n      else\n        letters=(\"$letter\" \"${letters[@]}\"\
    )\n      fi\n    elif [[ ${#letters[@]} -gt 1 ]]; then\n      if [[ \"$letter\"\
    \ == \"$letters[@]\" ]]; then\n        letters=(\"$letter\" \"${letters[@]}\"\
    )\n      else\n        letters=(\"$letter\" \"${letters[@]}\" \"${letters[@]}\"\
    )\n      fi\n    fi\n\n    ((count++))\n    len=$((len-1))\n  done\n\n  if [[\
    \ ${#letters[@]} -eq 3 ]]; then\n    local distinct=0\n    for (( i=0; i<3; i++\
    \ )); do\n      if [[ \"$letters\" == *\"$i\"* ]]; then\n        ((distinct++))\n\
    \      fi\n    done\n\n    if [[ ${distinct} -eq 3 ]]; then\n      return 0\n\
    \    else\n      return 1\n    fi\n  else\n    return 1\n  fi", "  local string=\"\
    $1\"\n  local length=\"${#string}\"\n  if [ \"${length}\" -lt 3 ]; then\n    return\
    \ 0\n  fi\n  local i\n  for i in $(seq 1 \"${length}\"); do\n    local j\n   \
    \ for j in $(seq 1 \"${length}\"); do\n      if [ \"${string[$i]}\" != \"${string[$j]}\"\
    \ ]; then\n        return 0\n      fi\n    done\n  done\n  return 1", "  local\
    \ str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n  while\
    \ [ $i -lt $len ]; do\n    local letter=${str:$i:1}\n    local count=0\n    while\
    \ [ $i -lt $len ]; do\n      if [[ $str == *$letter* ]]; then\n        ((count++))\n\
    \      fi\n      ((i++))\n    done\n    if [ $count -eq 3 ]; then\n      ((j++))\n\
    \      if [ $j -eq 3 ]; then\n        ((k++))\n        if [ $k -eq 3 ]; then\n\
    \          ((k=0))\n          ((j=0))\n        fi\n      fi\n    fi\n  done\n\
    \  if [ $len -gt 3 ]; then\n    return 0\n  else\n    return 1\n  fi", "  local\
    \ string=\"$1\"\n  local length=${#string}\n  if [[ $length -gt 3 ]]; then\n \
    \   for (( i=1; i<$length; i++ )); do\n      if [[ \"$string\" == \"${string:$i:1}\"\
    \ ]]; then\n        (( i++ ))\n      fi\n    done\n  else\n    return 1\n  fi\n\
    \  if [[ $i -eq $length ]]; then\n    return 0\n  else\n    return 1\n  fi", " \
    \ local string=\"$1\"\n  local length=${#string}\n  if [[ $length -gt 3 ]]; then\n\
    \    for (( i=0; i<3; i++ )); do\n      local letter=${string:$i:1}\n      local\
    \ count=0\n      for (( j=0; j<length; j++ )); do\n        if [[ \"$letter\" ==\
    \ \"${string:$j:1}\" ]]; then\n          (( count++ ))\n        fi\n      done\n\
    \      if [[ $count -eq 3 ]]; then\n        echo \"$string is happy\"\n      \
    \  return\n      fi\n    done\n  fi\n  echo \"$string is unhappy\"", "  local\
    \ string=$1\n  local length=${#string}\n  if [[ $length -gt 3 ]]; then\n    local\
    \ i\n    for (( i=0; i<3; i++ )); do\n      if [[ ${string:$i:1} == ${string:$((i+1)):1}\
    \ ]]; then\n        (( i++ ))\n      else\n        break\n      fi\n    done\n\
    \    if [[ $i -eq $length ]]; then\n      return 0\n    else\n      return 1\n\
    \    fi\n  else\n    return 1\n  fi"]
stop_tokens:
- "\n}"

name: HumanEval_95_check_dict_case
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings in\
  \ lower \n# case or all keys are strings in upper case, else return False.\n# The\
  \ function should return False is the given dictionary is empty.\n# Examples:\n\
  # check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n# check_dict_case({\"\
  a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n# check_dict_case({\"\
  a\":\"apple\", \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n# check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n#\
  \ check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  #\n# $1 is a two column CSV in key,value order\ncheck_dict_case() {\n"
tests: "}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
  \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
  n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
  nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") =\
  \ \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n\
  \    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
completions: ["    local dict=$1\n    local key\n    local value\n    local lower\n\
    \    local upper\n    local key2\n    local value2\n    local lower2\n    local\
    \ upper2\n    local key3\n    local value3\n    local lower3\n    local upper3\n\
    \    local key4\n    local value4\n    local lower4\n    local upper4\n    local\
    \ key5\n    local value5\n    local lower5\n    local upper5\n    local key6\n\
    \    local value6\n    local lower6\n    local upper6\n    local key7\n    local\
    \ value7\n    local lower7\n    local upper7\n    local key8\n    local value8\n\
    \    local lower8\n    local upper8\n    local key9\n    local value9\n    local\
    \ lower9\n    local upper9\n    local key10\n    local value10\n    local lower10\n\
    \    local upper10\n    local key11\n    local value11\n    local lower11\n  \
    \  local upper11\n    local key12\n    local value12\n    local lower12\n    local\
    \ upper12\n    local key13\n    local value13\n    local lower13\n    local upper13\n\
    \    local key14\n    local value14\n    local lower14\n    local upper14\n  \
    \  local key15\n    local value15\n    local lower15\n    local upper15\n    local\
    \ key16\n    local value16\n    local lower16\n    local upper16\n    local key17\n\
    \    local value17\n    local lower17\n    local upper17\n    local key18\n  \
    \  local value18\n    local lower18\n    local upper18\n    local key19\n    local\
    \ value19\n    local lower19\n    local upper19\n    local key20\n    local value20\n\
    \    local lower20\n    local upper20\n    local key21\n    local value21\n  \
    \  local lower21\n    local upper21\n    local key22\n    local value22\n    local\
    \ lower22\n    local upper22\n    local key23\n    local value23\n    local lower23\n\
    \    local upper23\n    local key24\n    local value24\n    local lower24\n  \
    \  local upper24\n    local key25\n    local value25\n    local lower25\n    local\
    \ upper25\n    local key26\n    local value26\n", "    local dictionary=\"$1\"\
    \n    local keys=\"$2\"\n    local upper_keys=\"$3\"\n    local lower_keys=\"\
    $4\"\n    local empty=\"$5\"\n    local empty_value=\"$6\"\n    local empty_key=\"\
    $7\"\n    local empty_value_key=\"$8\"\n    local empty_key_value=\"$9\"\n   \
    \ local empty_key_value_lower=\"$10\"\n    local empty_key_value_upper=\"$11\"\
    \n    local empty_key_value_both=\"$12\"\n    local empty_key_value_both_lower=\"\
    $13\"\n    local empty_key_value_both_upper=\"$14\"\n    local empty_key_value_both_both=\"\
    $15\"\n    local empty_key_value_both_both_lower=\"$16\"\n    local empty_key_value_both_both_upper=\"\
    $17\"\n    local empty_key_value_both_both_both=\"$18\"\n    local empty_key_value_both_both_both_lower=\"\
    $19\"\n    local empty_key_value_both_both_both_upper=\"$20\"\n    local empty_key_value_both_both_both_both=\"\
    $21\"\n    local empty_key_value_both_both_both_both_lower=\"$22\"\n    local\
    \ empty_key_value_both_both_both_both_upper=\"$23\"\n    local empty_key_value_both_both_both_both_both=\"\
    $24\"\n    local empty_key_value_both_both_both_both_both_lower=\"$25\"\n    local\
    \ empty_key_value_both_both_both_both_both_upper=\"$26\"\n    local empty_key_value_both_both_both_both_both_both=\"\
    $27\"\n    local empty_key_value_both_both_both_both_both_both_lower=\"$28\"\n\
    \    local empty_key_value_both_both_both_both_both_both_upper=\"$29\"\n    local\
    \ empty_key_value_both_both_both_both_both_both_both_lower=\"30\"\n    local empty_key_value_both_both_both_both_both_both_both_upper=\"\
    31\"\n    local empty_key_value_both_both_both_both_both_both_both_both_lower=\"\
    32\"\n    local empty_key_value_both_both_both_both_both_both_both_both_upper=\"\
    33\"\n    local empty_key_value_both_both_both_both_both_both_both_both_both_lower=\"\
    34\"\n    local empty_", "    local dictionary=\"$1\"\n    local key\n    local\
    \ value\n    local result\n\n    if [ -z \"$dictionary\" ]\n    then\n       \
    \ return 0\n    fi\n\n    for key in \"${!dictionary}\"\n    do\n        if [\
    \ \"${dictionary[$key]}\" != \"${dictionary[$key]}\" ]\n        then\n       \
    \     return 0\n        fi\n    done\n\n    for value in \"${!dictionary}\"\n\
    \    do\n        if [ \"${dictionary[$value]}\" != \"${dictionary[$value]}\" ]\n\
    \        then\n            return 0\n        fi\n    done\n\n    return 1", " \
    \   local dictionary=\"$1\"\n    local keys=$(echo \"$dictionary\" | cut -d ','\
    \ -f 1)\n    local values=$(echo \"$dictionary\" | cut -d ',' -f 2)\n    local\
    \ lowercase_keys=$(echo \"$keys\" | tr [a-z] [A-Z])\n    local uppercase_keys=$(echo\
    \ \"$keys\" | tr [A-Z] [a-z])\n    local lowercase_values=$(echo \"$values\" |\
    \ tr [a-z] [A-Z])\n    local uppercase_values=$(echo \"$values\" | tr [A-Z] [a-z])\n\
    \    local all_keys_are_lowercase_or_uppercase=true\n    local all_values_are_lowercase_or_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local all_keys_are_uppercase=true\n    local all_values_are_uppercase=true\n\
    \    local all_keys_are_lowercase=true\n    local all_values_are_lowercase=true\n\
    \    local ", "    local dict_name=$1\n    local dict_case=$2\n    local dict_case_keys=$3\n\
    \    local dict_case_values=$4\n    local dict_case_lower=$5\n    local dict_case_upper=$6\n\
    \    local dict_case_count=0\n    local dict_case_lowercount=0\n    local dict_case_uppercount=0\n\
    \    local dict_case_keycount=0\n    local dict_case_valuecount=0\n    local dict_case_lowervaluecount=0\n\
    \    local dict_case_uppervaluecount=0\n    local dict_case_keylowercount=0\n\
    \    local dict_case_keyuppercount=0\n    local dict_case_valuelowercount=0\n\
    \    local dict_case_valueruppercount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local dict_case_keylowervaluecount=0\n\
    \    local dict_case_keyuppervaluecount=0\n    local dict_case_valuelowervaluecount=0\n\
    \    local dict_case_valueruppervaluecount=0\n    local ", "    local dictionary=\"\
    $1\"\n    local keys=\"$2\"\n    local values=\"$3\"\n    local result=true\n\
    \    local count=0\n    local key\n    local value\n    local keyUpper\n    local\
    \ valueUpper\n    \n    if [ -z \"$dictionary\" ] || [ -z \"$keys\" ] || [ -z\
    \ \"$values\" ]; then\n        result=false\n        echo \"check_dict_case()\
    \ called with empty dictionary\"\n        return $result\n    fi\n    \n    IFS=,\n\
    \    while read -r key value; do\n        count=$((count+1))\n        if [ \"\
    $key\" == \"$keys\" ]; then\n            if [ \"$value\" == \"$values\" ]; then\n\
    \                result=true\n            else\n                result=false\n\
    \            fi\n        fi\n    done < \"$dictionary\"\n    \n    if [ \"$count\"\
    \ -eq \"$keys\" ]; then\n        result=true\n    else\n        result=false\n\
    \    fi\n    \n    return $result", "    local dictionary=$1\n    local keys=$2\n\
    \    local lower_case_keys=$(echo $keys | tr [:lower:] [:upper:])\n    local upper_case_keys=$(echo\
    \ $keys | tr [:upper:] [:lower:])\n    local all_keys=$(echo $lower_case_keys|tr\
    \ [:upper:] [:lower:]|tr [:lower:] [:upper:])\n    local is_empty=$(echo $all_keys|wc\
    \ -l)\n    local is_all_strings=$(echo $all_keys|grep -Fvf $lower_case_keys|grep\
    \ -Fvf $upper_case_keys|grep -Fvf $all_keys)\n    local is_all_strings_case=$(echo\
    \ $is_all_strings|grep -Fvf $lower_case_keys|grep -Fvf $upper_case_keys)\n   \
    \ local is_all_strings_case_and_not_empty=$(echo $is_all_strings_case|grep -Fvf\
    \ $all_keys)\n    local is_all_strings_case_and_not_empty_and_not_all_strings=$(echo\
    \ $is_all_strings_case_and_not_empty|grep -Fvf $all_keys)\n    local is_all_strings_case_and_not_empty_and_not_all_strings_case=$(echo\
    \ $is_all_strings_case_and_not_empty_and_not_all_strings|grep -Fvf $all_keys)\n\
    \    local is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty=$(echo\
    \ $is_all_strings_case_and_not_empty_and_not_all_strings_case|grep -Fvf $all_keys)\n\
    \    local is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings=$(echo\
    \ $is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty|grep\
    \ -Fvf $all_keys)\n    local is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings_case=$(echo\
    \ $is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings_case|grep\
    \ -Fvf $all_keys)\n    local is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty=$(echo\
    \ $is_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings_case_and_not_empty_and_not_all_strings|grep\
    \ -Fvf $all_keys)\n    local is_all_strings_case_and_not_empty_and_not_all_strings_",
  "    local dict=$1\n    local key\n    local value\n    local lower\n    local upper\n\
    \    local found\n    local count\n    local count2\n    local count3\n    local\
    \ count4\n    local count5\n    local count6\n    local count7\n    local count8\n\
    \    local count9\n    local count10\n    local count11\n    local count12\n \
    \   local count13\n    local count14\n    local count15\n    local count16\n \
    \   local count17\n    local count18\n    local count19\n    local count20\n \
    \   local count21\n    local count22\n    local count23\n    local count24\n \
    \   local count25\n    local count26\n    local count27\n    local count28\n \
    \   local count29\n    local count30\n    local count31\n    local count32\n \
    \   local count33\n    local count34\n    local count35\n    local count36\n \
    \   local count37\n    local count38\n    local count39\n    local count40\n \
    \   local count41\n    local count42\n    local count43\n    local count44\n \
    \   local count45\n    local count46\n    local count47\n    local count48\n \
    \   local count49\n    local count50\n    local count51\n    local count52\n \
    \   local count53\n    local count54\n    local count55\n    local count56\n \
    \   local count57\n    local count58\n    local count59\n    local count60\n \
    \   local count61\n    local count62\n    local count63\n    local count64\n \
    \   local count65\n    local count66\n    local count67\n    local count68\n \
    \   local count69\n    local count70\n    local count71\n    local count72\n \
    \   local count73\n    local count74\n    local count75\n    local count76\n \
    \   local count77\n    local count78\n    local count79\n    local count80\n \
    \   local count81\n    local count82\n    local count83\n    local count84\n \
    \   local count85\n    local count86\n    local count87\n    local count88\n \
    \   local count89\n    local count90\n    local count91\n    local count92\n \
    \   local count93\n    local count94\n    local count95\n    local count96\n \
    \   local count97\n    local ", "    local dict=$1\n    local keys=$2\n    local\
    \ lower=$3\n    local upper=$4\n    local count=0\n    local found=0\n    local\
    \ key\n    local value\n    local lower\n    local upper\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    local value\n    local\
    \ key\n    local value\n    local key\n    local value\n    local key\n    local\
    \ value\n    local key\n    local value\n    local key\n    ", "    local keys=(\"\
    $@\")\n    local lower=(\"${keys[@]/#/}\")\n    local upper=(\"${keys[@]/#/}\"\
    )\n    local empty=(\"${keys[@]/#/}\")\n    local all=(\"${keys[@]/#/}\")\n  \
    \  local lowerall=(\"${all[@]/#/}\")\n    local upperall=(\"${all[@]/#/}\")\n\
    \    local emptyall=(\"${all[@]/#/}\")\n    local allall=(\"${all[@]/#/}\")\n\
    \    local lowerallall=(\"${allall[@]/#/}\")\n    local upperallall=(\"${allall[@]/#/}\"\
    )\n    local emptyallall=(\"${allall[@]/#/}\")\n    local allallall=(\"${allall[@]/#/}\"\
    )\n    local lowerallallall=(\"${allallall[@]/#/}\")\n    local upperallallall=(\"\
    ${allallall[@]/#/}\")\n    local emptyallallall=(\"${allallall[@]/#/}\")\n   \
    \ local allallallall=(\"${allallall[@]/#/}\")\n    local lowerallallallall=(\"\
    ${allallallall[@]/#/}\")\n    local upperallallallall=(\"${allallallall[@]/#/}\"\
    )\n    local emptyallallallall=(\"${allallallall[@]/#/}\")\n    local allallallallall=(\"\
    ${allallallall[@]/#/}\")\n    local lowerallallallallall=(\"${allallallallall[@]/#/}\"\
    )\n    local upperallallallallall=(\"${allallallallall[@]/#/}\")\n    local emptyallallallall=(\"\
    ${allallallall[@]/#/}\")\n    local allallallallallall=(\"${allallallallall[@]/#/}\"\
    )\n    local lowerallallallallallall=(\"${allallallallallall[@]/#/}\")\n    local\
    \ upperallallallallallall=(\"${allallallallall[@]/#/}\")\n    local emptyallallallallall=(\"\
    ${allallallallall[@]/#/}\")\n    local allallallallallallall=(\"${allallallallall[@]/#",
  "    local dictionary=$1\n    local string_keys=$(echo $dictionary | awk -F, '{print\
    \ $1}')\n    local string_values=$(echo $dictionary | awk -F, '{print $2}')\n\
    \    local string_length=$(echo $string_keys | wc -w)\n    local string_length=$(echo\
    \ $string_values | wc -w)\n    local string_length=$(echo $string_length | bc)\n\
    \    local string_length=$(echo $string_length | awk {'print $1'})\n    local\
    \ string_length=$(echo $string_length | awk {'print $2'})\n    local string_length=$(echo\
    \ $string_length | awk {'print $3'})\n    local string_length=$(echo $string_length\
    \ | awk {'print $4'})\n    local string_length=$(echo $string_length | awk {'print\
    \ $5'})\n    local string_length=$(echo $string_length | awk {'print $6'})\n \
    \   local string_length=$(echo $string_length | awk {'print $7'})\n    local string_length=$(echo\
    \ $string_length | awk {'print $8'})\n    local string_length=$(echo $string_length\
    \ | awk {'print $9'})\n    local string_length=$(echo $string_length | awk {'print\
    \ $10'})\n    local string_length=$(echo $string_length | awk {'print $11'})\n\
    \    local string_length=$(echo $string_length | awk {'print $12'})\n    local\
    \ string_length=$(echo $string_length | awk {'print $13'})\n    local string_length=$(echo\
    \ $string_length | awk {'print $14'})\n    local string_length=$(echo $string_length\
    \ | awk {'print $15'})\n    local string_length=$(echo $string_length | awk {'print\
    \ $16'})\n    local string_length=$(echo $string_length | awk {'print $17'})\n\
    \    local string_length=$(echo $string_length | awk {'print $18'})\n    local\
    \ string_length=$(echo $string_length | awk {'print $19'})\n    local string_length=$(echo\
    \ $string_length | awk {'print $20'})\n    local string_length=$(echo $string_length\
    \ | awk {'print $21'})\n    local string_length=$(echo $string_length | awk {'print\
    \ $22'})\n    local string_length=$(echo $string_length | awk {'print $23'})\n\
    \    local string_length=$(echo $string_length | awk {'print $24'})\n    local\
    \ string_length=$(echo $string_length | awk {'print $25'})\n    local string_length=$(echo\
    \ $string_length | awk {'print $26'})\n    local string_length=$(echo $string_length\
    \ | awk {'print $27", "    local dictionary=\"$1\"\n    local keys=$(echo \"$dictionary\"\
    \ | cut -d ',' -f 1)\n    local values=$(echo \"$dictionary\" | cut -d ',' -f\
    \ 2)\n    local lowercase=0\n    local uppercase=0\n    local length=0\n    local\
    \ key\n    local value\n    local result\n\n    if [ -z \"$dictionary\" ] ; then\n\
    \        return 0\n    fi\n\n    for keyword in $keys ; do\n        if [ -z \"\
    $keyword\" ] ; then\n            return 0\n        fi\n        length=$(echo \"\
    $keyword\" | wc -c)\n        if [ \"$length\" -eq 1 ] ; then\n            lowercase=$(echo\
    \ \"$keyword\" | tr '[:upper:]' '[:lower:]')\n            uppercase=$(echo \"\
    $keyword\" | tr '[:lower:]' '[:upper:]')\n            if [ \"$lowercase\" == \"\
    $keyword\" ] ; then\n                lowercase=0\n            fi\n           \
    \ if [ \"$uppercase\" == \"$keyword\" ] ; then\n                uppercase=0\n\
    \            fi\n        fi\n    done\n\n    for value in $values ; do\n     \
    \   if [ -z \"$value\" ] ; then\n            return 0\n        fi\n        length=$(echo\
    \ \"$value\" | wc -c)\n        if [ \"$length\" -eq 1 ] ; then\n            lowercase=$(echo\
    \ \"$value\" | tr '[:upper:]' '[:lower:]')\n            uppercase=$(echo \"$value\"\
    \ | tr '[:lower:]' '[:upper:]')\n            if [ \"$lowercase\" == \"$value\"\
    \ ] ; then\n                lowercase=0\n            fi\n            if [ \"$uppercase\"\
    \ == \"$value\" ] ; then\n                uppercase=0\n            fi\n      \
    \  fi\n    done\n\n    if [ \"$lowercase\" -eq 0 -a \"$uppercase\" -eq 0 ] ; then\n\
    \        return 0\n    fi\n\n    if [ \"$lowercase\" -eq 1 -a \"$uppercase\" -eq\
    \ 1 ] ; then\n        return 1\n    fi\n\n    return 0", "    local dict=$1\n\
    \    local key\n    local value\n    local lower\n    local upper\n    local found\n\
    \    local count\n    local count2\n    local count3\n    local count4\n    local\
    \ count5\n    local count6\n    local count7\n    local count8\n    local count9\n\
    \    local count10\n    local count11\n    local count12\n    local count13\n\
    \    local count14\n    local count15\n    local count16\n    local count17\n\
    \    local count18\n    local count19\n    local count20\n    local count21\n\
    \    local count22\n    local count23\n    local count24\n    local count25\n\
    \    local count26\n    local count27\n    local count28\n    local count29\n\
    \    local count30\n    local count31\n    local count32\n    local count33\n\
    \    local count34\n    local count35\n    local count36\n    local count37\n\
    \    local count38\n    local count39\n    local count40\n    local count41\n\
    \    local count42\n    local count43\n    local count44\n    local count45\n\
    \    local count46\n    local count47\n    local count48\n    local count49\n\
    \    local count50\n    local count51\n    local count52\n    local count53\n\
    \    local count54\n    local count55\n    local count56\n    local count57\n\
    \    local count58\n    local count59\n    local count60\n    local count61\n\
    \    local count62\n    local count63\n    local count64\n    local count65\n\
    \    local count66\n    local count67\n    local count68\n    local count69\n\
    \    local count70\n    local count71\n    local count72\n    local count73\n\
    \    local count74\n    local count75\n    local count76\n    local count77\n\
    \    local count78\n    local count79\n    local count80\n    local count81\n\
    \    local count82\n    local count83\n    local count84\n    local count85\n\
    \    local count86\n    local count87\n    local count88\n    local count89\n\
    \    local count90\n    local count91\n    local count92\n    local count93\n\
    \    local count94\n    local count95\n    local count96\n    local count97\n\
    \    local ", "    local dictionary=$1\n    local key\n    local value\n    local\
    \ keyUpper\n    local keyLower\n    local valueUpper\n    local valueLower\n \
    \   local result\n\n    local dictionaryKeys\n    local dictionaryValues\n   \
    \ local dictionaryKeysUpper\n    local dictionaryKeysLower\n    local dictionaryValuesUpper\n\
    \    local dictionaryValuesLower\n    local dictionaryKeysCount\n    local dictionaryValuesCount\n\
    \    local dictionaryKeysCountUpper\n    local dictionaryKeysCountLower\n    local\
    \ dictionaryValuesCountUpper\n    local dictionaryValuesCountLower\n    local\
    \ dictionaryKeysCountUpper\n    local dictionaryKeysCountLower\n    local dictionaryValuesCountUpper\n\
    \    local dictionaryValuesCountLower\n\n    dictionaryKeys=$( echo \"${dictionary}\"\
    \ | awk -F, '{print $1}' )\n    dictionaryValues=$( echo \"${dictionary}\" | awk\
    \ -F, '{print $2}' )\n    dictionaryKeysUpper=$( echo \"${dictionary}\" | awk\
    \ -F, '{print $1}' | tr '[:upper:]' '[:lower:]' )\n    dictionaryKeysLower=$(\
    \ echo \"${dictionary}\" | awk -F, '{print $1}' | tr '[:lower:]' '[:upper:]' )\n\
    \    dictionaryValuesUpper=$( echo \"${dictionary}\" | awk -F, '{print $2}' |\
    \ tr '[:upper:]' '[:lower:]' )\n    dictionaryValuesLower=$( echo \"${dictionary}\"\
    \ | awk -F, '{print $2}' | tr '[:lower:]' '[:upper:]' )\n    dictionaryKeysCount=$(\
    \ echo \"${dictionary}\" | awk -F, '{print $1}' | wc -l )\n    dictionaryValuesCount=$(\
    \ echo \"${dictionary}\" | awk -F, '{print $2}' | wc -l )\n    dictionaryKeysCountUpper=$(\
    \ echo \"${dictionary}\" | awk -F, '{print $1}' | tr '[:upper:]' '[:lower:]' |\
    \ wc -l )\n    dictionaryKeysCountLower=$( echo \"${dictionary}\" | awk -F, '{print\
    \ $1}' | tr '[:lower:]' '[:upper:]' | wc -l )\n    dictionaryValuesCountUpper=$(\
    \ echo \"${dictionary}\" | awk -F, '{print $2}' | tr '[:upper:]' '[:lower:]' |\
    \ wc -l )\n    dictionaryValuesCountLower=$( echo \"${dictionary}\" | awk -F,\
    \ '{print $2}' | tr '[:lower:]' '[:upper:]' | wc -l )\n\n    if [ -z \"${", " \
    \   local dict=$1\n    local key\n    local value\n    local keyUpper\n    local\
    \ valueUpper\n    local result\n    local count\n    local keyCount\n    local\
    \ valueCount\n    local keyUpperCount\n    local valueUpperCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValue\n    local valueUpperValue\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValueCount\n    local keyUpperValueCount\n\
    \    local valueUpperValueCount\n    local keyUpperValueCount\n    local valueUpperValueCount\n\
    \    local keyUpperValueCount\n    local valueUpperValue", "    local dictionary=\"\
    $1\"\n    local keys=\"$2\"\n    local upper_keys=\"$3\"\n    local lower_keys=\"\
    $4\"\n    local empty=\"$5\"\n    local empty_value=\"$6\"\n    local empty_key=\"\
    $7\"\n    local empty_key_value=\"$8\"\n    local empty_key_value_pair=\"$9\"\n\
    \    local empty_key_value_pair_value=\"$10\"\n    local empty_key_value_pair_key_value=\"\
    $11\"\n    local empty_key_value_pair_key_value_pair=\"$12\"\n    local empty_key_value_pair_key_value_pair_value=\"\
    $13\"\n    local empty_key_value_pair_key_value_pair_key_value=\"$14\"\n    local\
    \ empty_key_value_pair_key_value_pair_key_value_pair=\"$15\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_value=\"\
    $16\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value=\"\
    $17\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair=\"\
    $18\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_value=\"\
    $19\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value=\"\
    $20\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair=\"\
    $21\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_value=\"\
    $22\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value=\"\
    $23\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair=\"\
    $24\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_value=\"\
    $25\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value=\"\
    $26\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair=\"\
    $27\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_value=\"\
    $28\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value=\"\
    $29\"\n    local empty_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair_key_value_pair=\"\
    $30\"\n    local ", "    local dictionary=\"$1\"\n    local keys=$(echo \"$dictionary\"\
    \ | cut -d, -f1)\n    local values=$(echo \"$dictionary\" | cut -d, -f2)\n   \
    \ local lowercase=0\n    local uppercase=0\n    local length=0\n    local key\n\
    \    local value\n    local result=0\n    \n    if [ -z \"$dictionary\" ]; then\n\
    \        return 0\n    fi\n    \n    for (( i=0; i<${#keys[@]}; i++ )); do\n \
    \       key=\"${keys[i]}\"\n        value=\"${values[i]}\"\n        \n       \
    \ if [ \"${keys[$i]}\" == \"$key\" ]; then\n            if [ \"$value\" == \"\
    $value\" ]; then\n                (( lowercase++ ))\n            else\n      \
    \          (( uppercase++ ))\n            fi\n        fi\n    done\n    \n   \
    \ length=${#keys[@]}\n    \n    if [ \"$lowercase\" -eq \"$length\" ] || [ \"\
    $uppercase\" -eq \"$length\" ]; then\n        return 0\n    else\n        return\
    \ 1\n    fi", "    local dictionary=\"$1\"\n    local keys=$(echo $dictionary\
    \ | cut -d, -f1)\n    local values=$(echo $dictionary | cut -d, -f2)\n    local\
    \ lowercase_keys=$(echo $keys | tr '[:upper:]' '[:lower:]')\n    local uppercase_keys=$(echo\
    \ $keys | tr '[:lower:]' '[:upper:]')\n    local lowercase_values=$(echo $values\
    \ | tr '[:upper:]' '[:lower:]')\n    local uppercase_values=$(echo $values | tr\
    \ '[:lower:]' '[:upper:]')\n    local all_keys_are_lowercase_or_uppercase=$(echo\
    \ $lowercase_keys | tr '[:upper:]' '[:lower:]' | wc -l | xargs -0)\n    local\
    \ all_keys_are_lowercase_or_uppercase=$(echo $uppercase_keys | tr '[:upper:]'\
    \ '[:lower:]' | wc -l | xargs -0)\n    local all_values_are_lowercase_or_uppercase=$(echo\
    \ $lowercase_values | tr '[:upper:]' '[:lower:]' | wc -l | xargs -0)\n    local\
    \ all_values_are_lowercase_or_uppercase=$(echo $uppercase_values | tr '[:upper:]'\
    \ '[:lower:]' | wc -l | xargs -0)\n    if [ \"$all_keys_are_lowercase_or_uppercase\"\
    \ -eq \"0\" ]; then\n        if [ \"$all_values_are_lowercase_or_uppercase\" -eq\
    \ \"0\" ]; then\n            echo \"True\"\n        else\n            echo \"\
    False\"\n        fi\n    else\n        if [ \"$all_values_are_lowercase_or_uppercase\"\
    \ -eq \"0\" ]; then\n            echo \"False\"\n        else\n            echo\
    \ \"True\"\n        fi\n    fi", "    local dict=$1\n    local key\n    local\
    \ value\n    local lower\n    local upper\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local foundBothUpper\n    local\
    \ foundBothLower\n    local foundBoth\n    local found\n    local foundUpper\n\
    \    local foundLower\n    local foundBoth\n    local found", "    local dictionary=\"\
    $1\"\n    local key\n    local value\n    local lower\n    local upper\n    local\
    \ found\n    local count\n    \n    lower=$(echo \"$dictionary\" | awk -F, '{print\
    \ $1}')\n    upper=$(echo \"$dictionary\" | awk -F, '{print $2}')\n    \n    if\
    \ [[ -z \"$lower\" ]]; then\n        lower=$(echo \"$dictionary\" | awk -F, '{print\
    \ $2}')\n        upper=$(echo \"$dictionary\" | awk -F, '{print $1}')\n    fi\n\
    \    \n    found=0\n    count=0\n    \n    for key in $lower; do\n        if [[\
    \ \"$key\" == \"$upper\" ]]; then\n            found=1\n        fi\n    done\n\
    \    \n    if [[ \"$found\" == \"0\" ]]; then\n        return 0\n    else\n  \
    \      return 1\n    fi"]
stop_tokens:
- "\n}"

name: HumanEval_61_correct_bracketing
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# brackets is a string of \"(\" and \")\".\n# return True if\
  \ every opening bracket has a corresponding closing bracket.\n# >>> correct_bracketing(\"\
  (\")\n# False\n# >>> correct_bracketing(\"()\")\n# True\n# >>> correct_bracketing(\"\
  (()())\")\n# True\n# >>> correct_bracketing(\")(()\")\n# False\n#\n# $1 is a string\n\
  correct_bracketing() {\n"
tests: "}\n\ncandidate() {\n    correct_bracketing \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"()\") = \"true\" ]]\n    [[ $(candidate \"(()())\") =\
  \ \"true\" ]]\n    [[ $(candidate \"()()(()())()\") = \"true\" ]]\n    [[ $(candidate\
  \ \"()()((()()())())(()()(()))\") = \"true\" ]]\n    [[ $(candidate \"((()())))\"\
  ) = \"false\" ]]\n    [[ $(candidate \")(()\") = \"false\" ]]\n    [[ $(candidate\
  \ \"(\") = \"false\" ]]\n    [[ $(candidate \"((((\") = \"false\" ]]\n    [[ $(candidate\
  \ \")\") = \"false\" ]]\n    [[ $(candidate \"(()\") = \"false\" ]]\n    [[ $(candidate\
  \ \"()()(()())())(()\") = \"false\" ]]\n    [[ $(candidate \"()()(()())()))()\"\
  ) = \"false\" ]]\n}\n\nrun_test"
completions: ["  local brackets=$1\n  local opening_brackets=$(echo $brackets | sed\
    \ -e 's/\\(.*\\)/\\1/' -e 's/\\(.*\\)/\\1/')\n  local closing_brackets=$(echo\
    \ $brackets | sed -e 's/\\(.*\\)/\\1/' -e 's/\\(.*\\)/\\1/')\n  local opening_brackets_count=$(echo\
    \ $opening_brackets | wc -w)\n  local closing_brackets_count=$(echo $closing_brackets\
    \ | wc -w)\n  if [ $opening_brackets_count -eq $closing_brackets_count ]; then\n\
    \    return 0\n  else\n    return 1\n  fi", "  local brackets=\"$1\"\n  local\
    \ opening_brackets=\"()\"\n  local closing_brackets=\")\"\n  local opening_brackets_count=$(echo\
    \ \"$opening_brackets\" | wc -w)\n  local closing_brackets_count=$(echo \"$closing_brackets\"\
    \ | wc -w)\n  local opening_brackets_length=$(echo \"$opening_brackets\" | wc\
    \ -l)\n  local closing_brackets_length=$(echo \"$closing_brackets\" | wc -l)\n\
    \  local opening_brackets_found=0\n  local closing_brackets_found=0\n  local opening_brackets_not_found=0\n\
    \  local closing_brackets_not_found=0\n  local opening_brackets_not_found_in_brackets=0\n\
    \  local closing_brackets_not_found_in_brackets=0\n  local opening_brackets_not_found_in_brackets_length=$(echo\
    \ \"$opening_brackets_not_found_in_brackets\" | wc -l)\n  local closing_brackets_not_found_in_brackets_length=$(echo\
    \ \"$closing_brackets_not_found_in_brackets\" | wc -l)\n  local opening_brackets_not_found_in_brackets_count=$(echo\
    \ \"$opening_brackets_not_found_in_brackets\" | wc -w)\n  local closing_brackets_not_found_in_brackets_count=$(echo\
    \ \"$closing_brackets_not_found_in_brackets\" | wc -w)\n  local opening_brackets_not_found_in_brackets_found=0\n\
    \  local closing_brackets_not_found_in_brackets_found=0\n  local opening_brackets_not_found_in_brackets_not_found=0\n\
    \  local closing_brackets_not_found_in_brackets_not_found=0\n  local opening_brackets_not_found_in_brackets_not_found_length=$(echo\
    \ \"$opening_brackets_not_found_in_brackets_not_found\" | wc -l)\n  local closing_brackets_not_found_in_brackets_not_found_length=$(echo\
    \ \"$closing_brackets_not_found_in_brackets_not_found\" | wc -l)\n  local opening_brackets_not_found_in_brackets_not_found_count=$(echo\
    \ \"$opening_brackets_not_found_in_brackets_not_found\" | wc -w)\n  local closing_brackets_not_found_in_brackets_",
  "    local brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/\\\
    (.*\\)/\\1/g')\n    local closing_brackets=$(echo $brackets | sed 's/\\)/\\1/g')\n\
    \    local opening_brackets_count=$(echo $opening_brackets | wc -l)\n    local\
    \ closing_brackets_count=$(echo $closing_brackets | wc -l)\n    if [ $opening_brackets_count\
    \ -ne $closing_brackets_count ]; then\n        return 0\n    else\n        return\
    \ 1\n    fi", "    local brackets=\"${1}\"\n    local opening_brackets=\"()\"\n\
    \    local closing_brackets=\"{}[]\"\n    local bracket_count=0\n    local bracket_open=0\n\
    \    local bracket_close=0\n    local bracket_open_index=0\n    local bracket_close_index=0\n\
    \    local bracket_open_key=\"\"\n    local bracket_close_key=\"\"\n    local\
    \ bracket_open_value=\"\"\n    local bracket_close_value=\"\"\n    local bracket_open_keys=\"\
    \"\n    local bracket_close_keys=\"\"\n    local bracket_open_values=\"\"\n  \
    \  local bracket_close_values=\"\"\n    local bracket_open_keys_index=0\n    local\
    \ bracket_close_keys_index=0\n    local bracket_open_values_index=0\n    local\
    \ bracket_close_values_index=0\n    local bracket_open_keys_value=\"\"\n    local\
    \ bracket_close_keys_value=\"\"\n    local bracket_open_values_value=\"\"\n  \
    \  local bracket_close_values_value=\"\"\n    local bracket_open_keys_key=\"\"\
    \n    local bracket_close_keys_key=\"\"\n    local bracket_open_values_key=\"\"\
    \n    local bracket_close_values_key=\"\"\n    local bracket_open_keys_values=\"\
    \"\n    local bracket_close_keys_values=\"\"\n    local bracket_open_values_values=\"\
    \"\n    local bracket_close_values_values=\"\"\n    local bracket_open_keys_keys=\"\
    \"\n    local bracket_close_keys_keys=\"\"\n    local bracket_open_values_keys=\"\
    \"\n    local bracket_close_values_keys=\"\"\n    local bracket_open_keys_value=\"\
    \"\n    local bracket_close_keys_value=\"\"\n    local bracket_open_values_value=\"\
    \"\n    local bracket_close_values_value=\"\"\n    local bracket_open_keys_key=\"\
    \"\n    local bracket_close_keys_key=\"\"\n    local bracket_open_values_key=\"\
    \"\n    local bracket_close_values_key=\"\"\n    local bracket_open_keys_values=\"\
    \"\n    local bracket_close_keys_values=\"\"\n    local bracket_open_values_values=\"\
    \"\n    local bracket_close_values_values=\"\"\n", "  local brackets=$1\n  local\
    \ opening_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\1/')\n  local closing_brackets=$(echo\
    \ $brackets | sed 's/\\)/\\1/')\n  local opening_count=0\n  local closing_count=0\n\
    \  local opening_brackets_array=()\n  local closing_brackets_array=()\n  local\
    \ opening_brackets_string=\"\"\n  local closing_brackets_string=\"\"\n  local\
    \ opening_brackets_string2=\"\"\n  local closing_brackets_string2=\"\"\n  local\
    \ opening_brackets_string3=\"\"\n  local closing_brackets_string3=\"\"\n  local\
    \ opening_brackets_string4=\"\"\n  local closing_brackets_string4=\"\"\n  local\
    \ opening_brackets_string5=\"\"\n  local closing_brackets_string5=\"\"\n  local\
    \ opening_brackets_string6=\"\"\n  local closing_brackets_string6=\"\"\n  local\
    \ opening_brackets_string7=\"\"\n  local closing_brackets_string7=\"\"\n  local\
    \ opening_brackets_string8=\"\"\n  local closing_brackets_string8=\"\"\n  local\
    \ opening_brackets_string9=\"\"\n  local closing_brackets_string9=\"\"\n  local\
    \ opening_brackets_string10=\"\"\n  local closing_brackets_string10=\"\"\n  local\
    \ opening_brackets_string11=\"\"\n  local closing_brackets_string11=\"\"\n  local\
    \ opening_brackets_string12=\"\"\n  local closing_brackets_string12=\"\"\n  local\
    \ opening_brackets_string13=\"\"\n  local closing_brackets_string13=\"\"\n  local\
    \ opening_brackets_string14=\"\"\n  local closing_brackets_string14=\"\"\n  local\
    \ opening_brackets_string15=\"\"\n  local closing_brackets_string15=\"\"\n  local\
    \ opening_brackets_string16=\"\"\n  local closing_brackets_string16=\"\"\n  local\
    \ opening_brackets_string17=\"\"\n  local closing_brackets_string17=\"\"\n  local\
    \ opening_brackets_string18=\"\"\n  local closing_brackets_string18=\"\"\n  local\
    \ opening_brackets_string19=\"\"\n  local ", "    local brackets=$1\n    local\
    \ open_brackets=$(echo $brackets | grep -o \"\\(.*\\)\")\n    local close_brackets=$(echo\
    \ $brackets | grep -o \"\\).*\")\n    local num_open_brackets=$(echo $open_brackets\
    \ | wc -l)\n    local num_close_brackets=$(echo $close_brackets | wc -l)\n   \
    \ if [ $num_open_brackets -ne $num_close_brackets ]; then\n        return 0\n\
    \    fi\n    for open_bracket in $open_brackets; do\n        if [[ ! $open_bracket\
    \ =~ \\(.*\\) ]]; then\n            return 0\n        fi\n    done\n    for close_bracket\
    \ in $close_brackets; do\n        if [[ ! $close_bracket =~ \\).* ]]; then\n \
    \           return 0\n        fi\n    done\n    return 1", "  local brackets=$1\n\
    \  local opening_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\1/')\n  local closing_brackets=$(echo\
    \ $brackets | sed 's/\\)/\\1/')\n  local opening_count=0\n  local closing_count=0\n\
    \  local correct_bracketing=0\n  local opening_counts=$(echo $opening_brackets\
    \ | sed 's/\\(.*\\)/\\1/')\n  local closing_counts=$(echo $closing_brackets |\
    \ sed 's/\\)/\\1/')\n  local opening_counts_array=($opening_counts)\n  local closing_counts_array=($closing_counts)\n\
    \  for (( i=0; i<${#opening_counts_array[@]}; i++ )); do\n    opening_count=$((opening_count+opening_counts_array[i]))\n\
    \    closing_count=$((closing_count+closing_counts_array[i]))\n    if [ $opening_count\
    \ -eq $closing_count ]; then\n      correct_bracketing=1\n      break\n    fi\n\
    \  done\n  return $correct_bracketing", "  local brackets=$1\n  local opening_brackets=0\n\
    \  local closing_brackets=0\n  local opening_count=0\n  local closing_count=0\n\
    \  local opening_chars=0\n  local closing_chars=0\n  local opening_quotes=0\n\
    \  local closing_quotes=0\n  local opening_parens=0\n  local closing_parens=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_square_brackets=0\n\
    \  local closing_square_brackets=0\n  local opening_angle_brackets=0\n  local\
    \ closing_angle_brackets=0\n  local opening_square_brackets=0\n  local closing_square_brackets=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_angle_brackets=0\n\
    \  local closing_angle_brackets=0\n  local opening_parens=0\n  local closing_parens=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_square_brackets=0\n\
    \  local closing_square_brackets=0\n  local opening_angle_brackets=0\n  local\
    \ closing_angle_brackets=0\n  local opening_square_brackets=0\n  local closing_square_brackets=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_square_brackets=0\n\
    \  local closing_square_brackets=0\n  local opening_angle_brackets=0\n  local\
    \ closing_angle_brackets=0\n  local opening_parens=0\n  local closing_parens=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_square_brackets=0\n\
    \  local closing_square_brackets=0\n  local opening_angle_brackets=0\n  local\
    \ closing_angle_brackets=0\n  local opening_square_brackets=0\n  local closing_square_brackets=0\n\
    \  local opening_curly_brackets=0\n  local closing_curly_brackets=0\n  local opening_square_brackets=0\n\
    \  local closing_square_b", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/\\(.*\\)/\\1/g')\n    local closing_brackets=$(echo $brackets\
    \ | sed 's/\\)/\\1/g')\n    local opening_brackets_count=$(echo $opening_brackets\
    \ | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n\
    \    if [ $opening_brackets_count -eq $closing_brackets_count ]; then\n      \
    \  return 0\n    else\n        return 1\n    fi", "    local brackets=$1\n   \
    \ local opening_brackets=0\n    local closing_brackets=0\n    local bracket_count=0\n\
    \    local bracket_opening=0\n    local bracket_closing=0\n    local bracket_opening_count=0\n\
    \    local bracket_closing_count=0\n    local bracket_opening_count2=0\n    local\
    \ bracket_closing_count2=0\n    local bracket_opening_count3=0\n    local bracket_closing_count3=0\n\
    \    local bracket_opening_count4=0\n    local bracket_closing_count4=0\n    local\
    \ bracket_opening_count5=0\n    local bracket_closing_count5=0\n    local bracket_opening_count6=0\n\
    \    local bracket_closing_count6=0\n    local bracket_opening_count7=0\n    local\
    \ bracket_closing_count7=0\n    local bracket_opening_count8=0\n    local bracket_closing_count8=0\n\
    \    local bracket_opening_count9=0\n    local bracket_closing_count9=0\n    local\
    \ bracket_opening_count10=0\n    local bracket_closing_count10=0\n    local bracket_opening_count11=0\n\
    \    local bracket_closing_count11=0\n    local bracket_opening_count12=0\n  \
    \  local bracket_closing_count12=0\n    local bracket_opening_count13=0\n    local\
    \ bracket_closing_count13=0\n    local bracket_opening_count14=0\n    local bracket_closing_count14=0\n\
    \    local bracket_opening_count15=0\n    local bracket_closing_count15=0\n  \
    \  local bracket_opening_count16=0\n    local bracket_closing_count16=0\n    local\
    \ bracket_opening_count17=0\n    local bracket_closing_count17=0\n    local bracket_opening_count18=0\n\
    \    local bracket_closing_count18=0\n    local bracket_opening_count19=0\n  \
    \  local bracket_closing_count19=0\n    local bracket_opening_count20=0\n    local\
    \ bracket_closing_count20=0\n    local bracket_opening_count21=0\n    local bracket_closing_count21=0\n\
    \    local ", "    local brackets=\"$1\"\n    local opening_brackets=\"()\"\n\
    \    local closing_brackets=\")\"\n    local bracket_count=0\n    local bracket_open=0\n\
    \    local bracket_close=0\n    local bracket_open_bracket=\"\"\n    local bracket_close_bracket=\"\
    \"\n    local bracket_open_brackets=\"()\"\n    local bracket_close_brackets=\"\
    )\"\n    local bracket_close_brackets_count=${#closing_brackets}\n    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n\
    \    local bracket_close_brackets_count=${#bracket_close_brackets}\n    local\
    \ bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n\
    \    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n   \
    \ local bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local\
    \ bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n\
    \    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n   \
    \ local bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local\
    \ bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n\
    \    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n   \
    \ local bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local\
    \ bracket_close_brackets_count=${#bracket_close_brackets_count}\n    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n\
    \    local bracket_close_brackets_count=${#bracket_close_brackets_count}\n   \
    \ local bracket_", "    local brackets=\"${1}\"\n    local opening_brackets=\"\
    ()\"\n    local closing_brackets=\"{}[]\"\n    local bracket_count=0\n    local\
    \ bracket_open=0\n    local bracket_close=0\n    local bracket_open_index=0\n\
    \    local bracket_close_index=0\n    local bracket_open_index2=0\n    local bracket_close_index2=0\n\
    \    local bracket_open_index3=0\n    local bracket_close_index3=0\n    local\
    \ bracket_open_index4=0\n    local bracket_close_index4=0\n    local bracket_open_index5=0\n\
    \    local bracket_close_index5=0\n    local bracket_open_index6=0\n    local\
    \ bracket_close_index6=0\n    local bracket_open_index7=0\n    local bracket_close_index7=0\n\
    \    local bracket_open_index8=0\n    local bracket_close_index8=0\n    local\
    \ bracket_open_index9=0\n    local bracket_close_index9=0\n    local bracket_open_index10=0\n\
    \    local bracket_close_index10=0\n    local bracket_open_index11=0\n    local\
    \ bracket_close_index11=0\n    local bracket_open_index12=0\n    local bracket_close_index12=0\n\
    \    local bracket_open_index13=0\n    local bracket_close_index13=0\n    local\
    \ bracket_open_index14=0\n    local bracket_close_index14=0\n    local bracket_open_index15=0\n\
    \    local bracket_close_index15=0\n    local bracket_open_index16=0\n    local\
    \ bracket_close_index16=0\n    local bracket_open_index17=0\n    local bracket_close_index17=0\n\
    \    local bracket_open_index18=0\n    local bracket_close_index18=0\n    local\
    \ bracket_open_index19=0\n    local bracket_close_index19=0\n    local bracket_open_index20=0\n\
    \    local bracket_close_index20=0\n    local bracket_open_index21=0\n    local\
    \ bracket_close_index21=0\n    local bracket_open_index22=0\n    local bracket_close_index22=0\n\
    \    local bracket_open_index23=0\n    local bracket_close_index23=0\n", "   \
    \ local brackets=$1\n    local opening_brackets=$(echo $brackets | grep -o '\\\
    (.*\\)')\n    local closing_brackets=$(echo $brackets | grep -o '\\).*')\n   \
    \ local num_opening_brackets=$(echo $opening_brackets | wc -w)\n    local num_closing_brackets=$(echo\
    \ $closing_brackets | wc -w)\n    if [ $num_opening_brackets -ne $num_closing_brackets\
    \ ]\n    then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ brackets=$1\n    local opening_brackets=$(echo $brackets | sed 's/\\(.*\\)/\\\
    1/')\n    local closing_brackets=$(echo $brackets | sed 's/\\)/\\1/')\n    local\
    \ opening_count=0\n    local closing_count=0\n    for opening_bracket in $opening_brackets;\
    \ do\n        opening_count=$(($opening_count + 1))\n    done\n    for closing_bracket\
    \ in $closing_brackets; do\n        closing_count=$(($closing_count + 1))\n  \
    \  done\n    if [ $opening_count -ne $closing_count ]; then\n        return false\n\
    \    else\n        return true\n    fi", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/\\(.*\\)/\\1/')\n    local closing_brackets=$(echo $brackets\
    \ | sed 's/\\)/\\1/')\n    local opening_brackets_count=$(echo $opening_brackets\
    \ | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n\
    \    local opening_brackets_count_correct=$(echo $opening_brackets_count | bc)\n\
    \    local closing_brackets_count_correct=$(echo $closing_brackets_count | bc)\n\
    \    if [ $opening_brackets_count_correct -eq $opening_brackets_count ]\n    then\n\
    \        if [ $closing_brackets_count_correct -eq $closing_brackets_count ]\n\
    \        then\n            echo \"True\"\n        else\n            echo \"False\"\
    \n        fi\n    else\n        echo \"False\"\n    fi", "    local brackets=$1\n\
    \    local open_brackets=0\n    local close_brackets=0\n    local bracket_count=0\n\
    \    local bracket_open=false\n    local bracket_close=false\n    local bracket_open_index=-1\n\
    \    local bracket_close_index=-1\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n    local bracket_open_string_count=0\n    local\
    \ bracket_close_string_count=0\n    local bracket_open_string=\"\"\n    local\
    \ bracket_close_string=\"\"\n    local bracket_open_string_index=0\n    local\
    \ bracket_close_string_index=0\n", "    local brackets=$1\n    local opening_brackets=$(echo\
    \ $brackets | sed 's/\\(.*\\)/\\1/')\n    local closing_brackets=$(echo $brackets\
    \ | sed 's/\\)/\\1/')\n    local opening_brackets_count=$(echo $opening_brackets\
    \ | wc -w)\n    local closing_brackets_count=$(echo $closing_brackets | wc -w)\n\
    \    if [ $opening_brackets_count -eq $closing_brackets_count ]; then\n      \
    \  return 0\n    else\n        return 1\n    fi", "    local brackets=$1\n   \
    \ local opening_brackets=$(echo $brackets | grep -o \"\\(.*\\)\")\n    local closing_brackets=$(echo\
    \ $brackets | grep -o \"\\).*\")\n    local opening_brackets_count=$(echo $opening_brackets\
    \ | wc -l)\n    local closing_brackets_count=$(echo $closing_brackets | wc -l)\n\
    \    if [ $opening_brackets_count -eq $closing_brackets_count ]; then\n      \
    \  return 0\n    else\n        return 1\n    fi", "    local brackets=\"$1\"\n\
    \    local opening_brackets=$(echo \"$brackets\" | sed 's/\\(.*\\)/\\1/')\n  \
    \  local closing_brackets=$(echo \"$brackets\" | sed 's/\\)/\\1/')\n    local\
    \ opening_count=0\n    local closing_count=0\n    for opening_bracket in $opening_brackets;\
    \ do\n        if [ \"$opening_bracket\" == \"$closing_bracket\" ]; then\n    \
    \        ((opening_count++))\n        else\n            ((closing_count++))\n\
    \        fi\n    done\n    return ((opening_count == closing_count))", "  local\
    \ brackets=\"${1}\"\n  local opening_brackets=\"()\"\n  local closing_brackets=\"\
    )\"\n  local opening_brackets_index=0\n  local closing_brackets_index=0\n  local\
    \ bracket_count=0\n  local bracket_count_max=0\n  local bracket_count_min=0\n\
    \  local bracket_count_diff=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n\
    \  local bracket_count_diff_max=0\n  local bracket_count_diff_min=0\n  local bracket_count_diff_max=0\n\
    \  local bracket_count_diff_min=0\n  local bracket_count_diff_max"]
stop_tokens:
- "\n}"

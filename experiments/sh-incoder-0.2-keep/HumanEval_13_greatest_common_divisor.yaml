name: HumanEval_13_greatest_common_divisor
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> greatest_common_divisor(3, 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n\
  # 5\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor() {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n   \
    \     local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    local d\n    d=$(( (a % b) == 0\
    \ ? a : b ))\n    while [ $d -eq 0 ]; do\n        a=$(( $a / 10 ))\n        b=$((\
    \ $b / 10 ))\n        d=$(( (a % b) == 0 ? a : b ))\n    done\n    echo \"$d\"",
  "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$((\
    \ $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a\
    \ % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a %\
    \ b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1 ] && a=$b\n        b=$c\n\
    \    done\n    echo $a", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le\
    \ $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    local -a args\n    local -i i\n\n    a=$1\n\
    \    b=$2\n\n    args=( \"$@\" )\n    for (( i=1; i<${#args[@]}; i++ )); do\n\
    \        a=$((a%${args[$i]}))\n        b=$((b%${args[$i]}))\n    done\n    echo\
    \ \"$b\"", "    local a b\n    read a b\n    echo $(( ( ( a % $b ) -( b % a )\
    \ ) ))", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n   \
    \     local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n      \
    \  local a_b=$(( $a % $b ))\n        if [ $a_b -eq 0 ]; then\n            echo\
    \ \"$a\"\n            break\n        fi\n        a=$a_b\n    done", "    local\
    \ a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n        local c=$(( a %\
    \ b ))\n        a=$b\n        b=$c\n    done\n    echo \"$b\"", "    local a b\n\
    \    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n        local c=$(( $a % $b\
    \ ))\n        [ $c -eq 0 ] && break\n        [ $c -eq 1 ] && echo $a\n       \
    \ a=$b\n        b=$c\n    done", "    local a b\n    a=$1\n    b=$2\n    while\
    \ [ $a -le $b ]; do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n\
    \    done\n    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a\
    \ -gt 0 ]; do\n        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n\
    \    echo \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ];\
    \ do\n        local c=$(( $a % $b ))\n        a=$b\n        b=$c\n    done\n \
    \   echo $b", "    local a b\n    a=$1\n    b=$2\n    while [ $a -le $b ]; do\n\
    \        local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo\
    \ \"$b\"", "    local a b\n    a=$1\n    b=$2\n    while [ $a -gt 0 ]; do\n  \
    \      local c=$(( a % b ))\n        a=$b\n        b=$c\n    done\n    echo \"\
    $b\""]
stop_tokens:
- "\n}"

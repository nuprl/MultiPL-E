language: sh
name: HumanEval_130_tri
results:
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 2 ))\n   \
    \ echo $a $b $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + 1))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 1 ))\n   \
    \ local d=$(( 3 * n - 1 ))\n    local res\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local \n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( n - 1\
    \ ))\n  local b=$(( n - 2 ))\n  local c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n\
    \  local result\n  result=$(( c + d ))\n  result=$(( result + a ))\n  result=$((\
    \ result + b ))\n  result=$(( result + c ))\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    a=$b\n    b=$c\n    c=$d\n\
    \    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 2 * n\
    \ ))\n  local b=$(( 3 * n ))\n  local c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n\
    \  local e=$(( n + 3 ))\n  local f=$(( n + 4 ))\n  local g=$(( n + 5 ))\n  local\
    \ h=$(( n + 6 ))\n  local i=$(( n + 7 ))\n  local j=$(( n + 8 ))\n  local k=$((\
    \ n + 9 ))\n  local l=$(( n + 10 ))\n  local m=$(( n + 11 ))\n  local n=$(( n\
    \ + 12 ))\n  local o=$(( n + 13 ))\n  local p=$(( n + 14 ))\n  local q=$(( n +\
    \ 15 ))\n  local r=$(( n + 16 ))\n  local s=$(( n + 17 ))\n  local t=$(( n + 18\
    \ ))\n  local u=$(( n + 19 ))\n  local v=$(( n + 20 ))\n  local w=$(( n + 21 ))\n\
    \  local x=$(( n + 22 ))\n  local y=$(( n + 23 ))\n  local z=$(( n + 24 ))\n \
    \ local A=$(( n + 25 ))\n  local B=$(( n + 26 ))\n  local C=$(( n + 27 ))\n  local\
    \ D=$(( n + 28 ))\n  local E=$(( n + 29 ))\n  local F=$(( n + 30 ))\n  local G=$((\
    \ n + 31 ))\n  local H=$(( n + 32 ))\n  local I=$(( n + 33 ))\n  local J=$(( n\
    \ + 34 ))\n  local K=$(( n + 35 ))\n  local L=$(( n + 36 ))\n  local M=$(( n +\
    \ 37 ))\n  local N=$(( n + 38 ))\n  local O=$(( n + 39 ))\n  local P=$(( n + 40\
    \ ))\n  local Q=$(( n + 41 ))\n  local R=$(( n + 42 ))\n  local S=$(( n + 43 ))\n\
    \  local T=$(( n + 44 ))\n  local U=$(( n + 45 ))\n  local V=$(( n + 46 ))\n \
    \ local W=$(( n + 47 ))\n  local X=$(( n + 48\n}\n\ncandidate() {\n    tri \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpluwq3ppw.sh: line 70: unexpected EOF while looking for matching
    `)''

    /tmp/tmpluwq3ppw.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  \n  echo \"$sum\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} + 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} + 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} + 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} + 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} + 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} + 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} + 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} + 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} + 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} + 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} + 1 ))\n  local A=$(( ${n} + 1 ))\n  local B=$((\
    \ ${n} + 1 ))\n  local C=$(( ${n} + 1 ))\n  local D=$(( ${n} + 1 ))\n  local E=$((\
    \ ${n} + 1 ))\n  local F=$(( ${n} + 1 ))\n  local G=$(( ${n} + 1 ))\n  local H=$((\
    \ ${n} + 1 ))\n  local I=$(( ${n} + 1 ))\n  local J=$(( ${n} + 1 ))\n  local K=$((\
    \ ${n} + 1 ))\n  local L=$(( ${n} + 1 ))\n  local M=$(( ${n} + 1 ))\n  \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( n + 1 ))\n  local c=$(( n + 2 ))\n  local d=$(( n + 3\
    \ ))\n  local e=$(( n + 4 ))\n  local f=$(( n + 5 ))\n  local g=$(( n + 6 ))\n\
    \  local h=$(( n + 7 ))\n  local i=$(( n + 8 ))\n  local j=$(( n + 9 ))\n  local\
    \ k=$(( n + 10 ))\n  local l=$(( n + 11 ))\n  local m=$(( n + 12 ))\n  local n=$((\
    \ n + 13 ))\n  local o=$(( n + 14 ))\n  local p=$(( n + 15 ))\n  local q=$(( n\
    \ + 16 ))\n  local r=$(( n + 17 ))\n  local s=$(( n + 18 ))\n  local t=$(( n +\
    \ 19 ))\n  local u=$(( n + 20 ))\n  local v=$(( n + 21 ))\n  local w=$(( n + 22\
    \ ))\n  local x=$(( n + 23 ))\n  local y=$(( n + 24 ))\n  local z=$(( n + 25 ))\n\
    \  local A=$(( n + 26 ))\n  local B=$(( n + 27 ))\n  local C=$(( n + 28 ))\n \
    \ local D=$(( n + 29 ))\n  local E=$(( n + 30 ))\n  local F=$(( n + 31 ))\n  local\
    \ G=$(( n + 32 ))\n  local H=$(( n + 33 ))\n  local I=$(( n + 34 ))\n  local J=$((\
    \ n + 35 ))\n  local K=$(( n + 36 ))\n  local L=$(( n + 37 ))\n  local M=$(( n\
    \ + 38 ))\n  local N=$(( n + 39 ))\n  local O=$(( n + 40 ))\n  local P=$(( n +\
    \ 41 ))\n  local Q=$(( n + 42 ))\n  local R=$(( n + 43 ))\n  local S=$(( n + 44\
    \ ))\n  local T=$(( n + 45 ))\n  local U=$(( n + 46 ))\n  local V=$(( n + 47 ))\n\
    \  local W=$(( n + 48 ))\n  local X=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphfoo4yrl.sh: line 70: unexpected EOF while looking for matching
    `)''

    /tmp/tmphfoo4yrl.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local\
    \ z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local\
    \ f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local\
    \ l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local\
    \ r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local\
    \ x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local\
    \ d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local\
    \ j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local\
    \ p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local\
    \ v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local result=()\n\
    \  local i=1\n  local j=1\n  local k=1\n  result+=($1)\n  while [ $i -le $n ];\
    \ do\n    i=$((i+2))\n    j=$((j+2))\n    k=$((k+2))\n    result+=($j)\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( n - 1\
    \ ))\n  local b=$(( n - 2 ))\n  local c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n\
    \  local result\n  result=$(( c + d ))\n  result=$(( result + b ))\n  result=$((\
    \ result + a ))\n  echo $result\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        echo $sum\n        (( n = $n -\
    \ 1 ))\n        (( a = $a + $c ))\n        (( b = $c + $d ))\n        (( c = $d\
    \ + $a ))\n        (( d = $a + $b ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ * 3 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} + 2 ))\n    local e=$(( ${n} + 3 ))\n    local f=$(( ${n} + 4 ))\n\
    \    local g=$(( ${n} + 5 ))\n    local h=$(( ${n} + 6 ))\n    local i=$(( ${n}\
    \ + 7 ))\n    local j=$(( ${n} + 8 ))\n    local k=$(( ${n} + 9 ))\n    local\
    \ l=$(( ${n} + 10 ))\n    local m=$(( ${n} + 11 ))\n    local n=$(( ${n} + 12\
    \ ))\n    local o=$(( ${n} + 13 ))\n    local p=$(( ${n} + 14 ))\n    local q=$((\
    \ ${n} + 15 ))\n    local r=$(( ${n} + 16 ))\n    local s=$(( ${n} + 17 ))\n \
    \   local t=$(( ${n} + 18 ))\n    local u=$(( ${n} + 19 ))\n    local v=$(( ${n}\
    \ + 20 ))\n    local w=$(( ${n} + 21 ))\n    local x=$(( ${n} + 22 ))\n    local\
    \ y=$(( ${n} + 23 ))\n    local z=$(( ${n} + 24 ))\n    local A=$(( ${n} + 25\
    \ ))\n    local B=$(( ${n} + 26 ))\n    local C=$(( ${n} + 27 ))\n    local D=$((\
    \ ${n} + 28 ))\n    local E=$(( ${n} + 29 ))\n    local F=$(( ${n} + 30 ))\n \
    \   local G=$(( ${n} + 31 ))\n    local H=$(( ${n} + 32 ))\n    local I=$(( ${n}\
    \ + 33 ))\n    local J=$(( ${n} + 34 ))\n    local K=$(( ${n} + 35 ))\n    local\
    \ L=$(( ${n} + 36 ))\n    local M=$(( ${n} + 37 ))\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    a=$b\n    b=$c\n    c=$d\n\
    \    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + $i))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(($sum + $a))\n    sum=$(($sum + $b))\n    sum=$(($sum +\
    \ $c))\n    sum=$(($sum + $d))\n    \n    a=$(($a + $c))\n    b=$(($b + $d))\n\
    \    c=$(($c + $a))\n    d=$(($d + $b))\n  done\n  \n  echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $n -eq 1 ] && echo $sum\n   \
    \     [ $n -eq 2 ] && echo $sum\n        [ $n -eq 3 ] && echo $sum\n        [\
    \ $n -eq 4 ] && echo $sum\n        [ $n -eq 5 ] && echo $sum\n        [ $n -eq\
    \ 6 ] && echo $sum\n        [ $n -eq 7 ] && echo $sum\n        [ $n -eq 8 ] &&\
    \ echo $sum\n        [ $n -eq 9 ] && echo $sum\n        [ $n -eq 10 ] && echo\
    \ $sum\n        [ $n -eq 11 ] && echo $sum\n        [ $n -eq 12 ] && echo $sum\n\
    \        [ $n -eq 13 ] && echo $sum\n        [ $n -eq 14 ] && echo $sum\n    \
    \    [ $n -eq 15 ] && echo $sum\n        [ $n -eq 16 ] && echo $sum\n        [\
    \ $n -eq 17 ] && echo $sum\n        [ $n -eq 18 ] && echo $sum\n        [ $n -eq\
    \ 19 ] && echo $sum\n        [ $n -eq 20 ] && echo $sum\n        [ $n -eq 21 ]\
    \ && echo $sum\n        [ $n -eq 22 ] && echo $sum\n        [ $n -eq 23 ] && echo\
    \ $sum\n        [ $n -eq 24 ] && echo $sum\n        [ $n -eq 25 ] && echo $sum\n\
    \        [ $n -eq 26 ] && echo $sum\n        [ $n -eq 27 ] && echo $sum\n    \
    \    [ $n -eq 28 ] && echo $sum\n        [ $n -eq 29 ] && echo $sum\n        [\
    \ $n -eq 30 ] && echo $sum\n        [ $n -eq 31 ] && echo $sum\n        [ $n -eq\
    \ 32 ] && echo $sum\n        [ $n -eq 33 ] && echo $sum\n        [ $n -eq 34 ]\
    \ && echo $sum\n        [ $n -eq 35 ] && echo $sum\n        [ $n -eq 36 ] && echo\
    \ $sum\n        [ $n -eq 37 ] && echo $sum\n        [ $n -eq 38 ] && echo $sum\n\
    \        [ $n -eq 39 ] && echo $sum\n        [ $n -eq 40 ] && echo $sum\n    \
    \    [ $n -eq 41 ] && echo $sum\n        [ $n -eq 42 \n}\n\ncandidate() {\n  \
    \  tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5_t98lqu.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmp5_t98lqu.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ + 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} + 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} + 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} + 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} + 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} + 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} + 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} + 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} + 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} + 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} + 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} + 1 ))\n  local a=$(( ${a} + ${n} ))\n  local\
    \ b=$(( ${b} + ${n} ))\n  local c=$(( ${c} + ${n} ))\n  local d=$(( ${d} + ${n}\
    \ ))\n  local e=$(( ${e} + ${n} ))\n  local f=$(( ${f} + ${n} ))\n  local g=$((\
    \ ${g} + ${n} ))\n  local h=$(( ${h} + ${n} ))\n  local i=$(( ${i} + ${n} ))\n\
    \  local j=$(( ${j} + ${n} ))\n  local k=$(( ${k} + ${n} ))\n  local l=$\n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} - 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} - 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} - 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} - 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} - 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} - 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} - 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} - 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} - 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} - 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} - 1 ))\n  local A=$(( ${n} + 1 ))\n  local B=$((\
    \ ${n} - 1 ))\n  local C=$(( ${n} + 1 ))\n  local D=$(( ${n} - 1 ))\n  local E=$((\
    \ ${n} + 1 ))\n  local F=$(( ${n} - 1 ))\n  local G=$(( ${n} + 1 ))\n  local H=$((\
    \ ${n} - 1 ))\n  local I=$(( ${n} + 1 ))\n  local J=$(( ${n} - 1 ))\n  local K=$((\
    \ ${n} + 1 ))\n  local L=$(( ${n} - 1 ))\n  local M=$(( ${n} + 1 ))\n  local N=$((\
    \ ${n} - 1 ))\n  local O=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpmr_vheqi.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmr_vheqi.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  while [ $n -gt 0 ]; do\n   \
    \ sum=$(( $a + $b ))\n    [ $(( n % 2 )) -eq 0 ] && sum=$(( $sum + $c ))\n   \
    \ [ $(( n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n    echo $sum\n    [ $(( n %\
    \ 2 )) -eq 0 ] && a=$b\n    [ $(( n % 2 )) -eq 1 ] && b=$c\n    [ $(( n % 2 ))\
    \ -eq 0 ] && c=$d\n    [ $(( n % 2 )) -eq 1 ] && d=$sum\n    n=$(( $n - 1 ))\n\
    \  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$(( $sum +\
    \ $j ))\n    j=$(( $j + $k ))\n    k=$(( $k + $i ))\n    i=$(( $i + 1 ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ * 3 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} - 1 ))\n    local e=$(( ${n} + 1 ))\n    local f=$(( ${n} - 1 ))\n\
    \    local g=$(( ${n} + 1 ))\n    local h=$(( ${n} - 1 ))\n    local i=$(( ${n}\
    \ + 1 ))\n    local j=$(( ${n} - 1 ))\n    local k=$(( ${n} + 1 ))\n    local\
    \ l=$(( ${n} - 1 ))\n    local m=$(( ${n} + 1 ))\n    local n=$(( ${n} - 1 ))\n\
    \    local o=$(( ${n} + 1 ))\n    local p=$(( ${n} - 1 ))\n    local q=$(( ${n}\
    \ + 1 ))\n    local r=$(( ${n} - 1 ))\n    local s=$(( ${n} + 1 ))\n    local\
    \ t=$(( ${n} - 1 ))\n    local u=$(( ${n} + 1 ))\n    local v=$(( ${n} - 1 ))\n\
    \    local w=$(( ${n} + 1 ))\n    local x=$(( ${n} - 1 ))\n    local y=$(( ${n}\
    \ + 1 ))\n    local z=$(( ${n} - 1 ))\n    local A=$(( ${n} + 1 ))\n    local\
    \ B=$(( ${n} - 1 ))\n    local C=$(( ${n} + 1 ))\n    local D=$(( ${n} - 1 ))\n\
    \    local E=$(( ${n} + 1 ))\n    local F=$(( ${n} - 1 ))\n    local G=$(( ${n}\
    \ + 1 ))\n    local H=$(( ${n} - 1 ))\n    local I=$(( ${n} + 1 ))\n    local\
    \ J=$(( ${n} - 1 ))\n    local K=$(( ${n} + 1 ))\n    local L=$(( ${n} - 1 ))\n\
    \    local M=$(( ${n} + 1 ))\n    local N=$(( ${n} - 1 ))\n    local O=$(( \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ykynh6s.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5ykynh6s.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=$(( 3 *\
    \ n + 1 ))\n  local i\n  for i in $(seq 0 $(( n - 1 ))); do\n    sum=$(( sum +\
    \ i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local result=()\n    local i\n\
    \    \n    for (( i=1; i<=$n; i++ )); do\n        result+=(\"$a\")\n        result+=(\"\
    $b\")\n        result+=(\"$c\")\n        result+=(\"$d\")\n        a=$b\n    \
    \    b=$c\n        c=$d\n        d=$((a + b + c + d))\n    done\n    \n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 2 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  echo \"${a},${b},${c}\"\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} - 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} - 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} + 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} + 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} + 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} + 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} + 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} + 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} + 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} + 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} + 1 ))\n  local a=$(( ${n} + 1 ))\n  local b=$((\
    \ ${n} + 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n} + 1 ))\n  local e=$((\
    \ ${n} + 1 ))\n  local f=$(( ${n} + 1 ))\n  local g=$(( ${n} + 1 ))\n  local h=$((\
    \ ${n} + 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$(( ${n} + 1 ))\n  local k=$((\
    \ ${n} + 1 ))\n  local l=$(( ${n} + 1 ))\n  local m=$(( ${n} + 1 ))\n  local n\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    \n    if [ $(( $i % 2\
    \ )) -eq 0 ]; then\n      sum=$(( $sum + $c ))\n      echo $sum\n    else\n  \
    \    sum=$(( $sum + $d ))\n      echo $sum\n    fi\n    \n    a=$b\n    b=$c\n\
    \    c=$d\n    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ \n    for i in $(seq 1 $n); do\n        sum=$(( $a + $c + $d ))\n        echo\
    \ $sum\n        a=$b\n        b=$c\n        c=$d\n        d=$sum\n    done\n}\n\
    \ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} +\
    \ 1 ))\n  local b=$(( ${n} + 2 ))\n  local c=$(( ${n} + 3 ))\n  echo \"${a},${b},${c}\"\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  local d=$((\
    \ 3 * n - 2 ))\n  local result\n  result=$(( a + b + c + d ))\n  echo $result\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + j))\n\
    \    j=$((j + k))\n    k=$((k + i))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 2 ))\n    local d=$((\
    \ n + 3 ))\n    local e=$(( n + 4 ))\n    local f=$(( n + 5 ))\n    local g=$((\
    \ n + 6 ))\n    local h=$(( n + 7 ))\n    local i=$(( n + 8 ))\n    local j=$((\
    \ n + 9 ))\n    local k=$(( n + 10 ))\n    local l=$(( n + 11 ))\n    local m=$((\
    \ n + 12 ))\n    local n=$(( n + 13 ))\n    local o=$(( n + 14 ))\n    local p=$((\
    \ n + 15 ))\n    local q=$(( n + 16 ))\n    local r=$(( n + 17 ))\n    local s=$((\
    \ n + 18 ))\n    local t=$(( n + 19 ))\n    local u=$(( n + 20 ))\n    local v=$((\
    \ n + 21 ))\n    local w=$(( n + 22 ))\n    local x=$(( n + 23 ))\n    local y=$((\
    \ n + 24 ))\n    local z=$(( n + 25 ))\n    local A=$(( n + 26 ))\n    local B=$((\
    \ n + 27 ))\n    local C=$(( n + 28 ))\n    local D=$(( n + 29 ))\n    local E=$((\
    \ n + 30 ))\n    local F=$(( n + 31 ))\n    local G=$(( n + 32 ))\n    local H=$((\
    \ n + 33 ))\n    local I=$(( n + 34 ))\n    local J=$(( n + 35 ))\n    local K=$((\
    \ n + 36 ))\n    local L=$(( n + 37 ))\n    local M=$(( n + 38 ))\n    local N=$((\
    \ n + 39 ))\n    local O=$(( n + 40 ))\n    local P=$(( n + 41 ))\n    local Q=$((\
    \ n + 42 ))\n    local R=$(( n + 43 ))\n    local S=$(( n + 44 ))\n    local T=$((\
    \ n + 45 ))\n    local U=$(( n + 46 ))\n    local V=$(( n + 47 ))\n    local W=$((\
    \ n + 48 ))\n    local X=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp2zw2t49s.sh: line 70: unexpected EOF while looking for matching
    `)''

    /tmp/tmp2zw2t49s.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $c + $b ))\n    a=$b\n    b=$c\n    c=$sum\n  done\n\
    \  echo $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2\
    \ 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum\n    local i\n    sum=$((\
    \ $n + 1 ))\n    echo ${sum}\n    for (( i=1; i<=$sum; i++ )); do\n        echo\
    \ ${a}\n        echo ${b}\n        echo ${c}\n        echo ${d}\n        a=$((\
    \ $a + $b ))\n        b=$(( $b + $c ))\n        c=$(( $c + $d ))\n        d=$((\
    \ $d + $a ))\n    done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + 1))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: -1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local result\n  result=()\n\
    \  local i\n  for i in $(seq 1 $n); do\n    result+=( $(tri $((i-1))) + $(tri\
    \ $((i-2))) + $(tri $((i+1))) )\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=44 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660026614
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 2 ))\n   \
    \ echo $a $b $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n\n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    a=$b\n    b=$c\n    c=$d\n\
    \    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  while [ $n -gt 0 ]; do\n   \
    \ sum=$(( $a + $b ))\n    [ $(( n % 2 )) -eq 0 ] && sum=$(( $sum + $c ))\n   \
    \ [ $(( n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n    echo $sum\n    [ $(( n %\
    \ 2 )) -eq 0 ] && a=$b\n    [ $(( n % 2 )) -eq 1 ] && b=$c\n    [ $(( n % 2 ))\
    \ -eq 0 ] && c=$d\n    [ $(( n % 2 )) -eq 1 ] && d=$sum\n    n=$(( $n - 1 ))\n\
    \  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 1 ))\n   \
    \ local d=$(( 3 * n - 1 ))\n    local res\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local \n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} - 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} - 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} - 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} - 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} - 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} - 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} - 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} - 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} - 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} - 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} - 1 ))\n  local a=$(( ${n} + 1 ))\n  local b=$((\
    \ ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n} - 1 ))\n  local e=$((\
    \ ${n} + 1 ))\n  local f=$(( ${n} - 1 ))\n  local g=$(( ${n} + 1 ))\n  local h=$((\
    \ ${n} - 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$(( ${n} - 1 ))\n  local k=$((\
    \ ${n} + 1 ))\n  local l=$(( ${n} - 1 ))\n  local m=$(( ${n} + 1 ))\n  local n=$((\
    \ ${n} - 1 ))\n  local o=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp9kj259bw.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmp9kj259bw.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( n + 1 ))\n  local c=$(( n + 2 ))\n  local d=$(( n + 3\
    \ ))\n  local e=$(( n + 4 ))\n  local f=$(( n + 5 ))\n  local g=$(( n + 6 ))\n\
    \  local h=$(( n + 7 ))\n  local i=$(( n + 8 ))\n  local j=$(( n + 9 ))\n  local\
    \ k=$(( n + 10 ))\n  local l=$(( n + 11 ))\n  local m=$(( n + 12 ))\n  local n=$((\
    \ n + 13 ))\n  local o=$(( n + 14 ))\n  local p=$(( n + 15 ))\n  local q=$(( n\
    \ + 16 ))\n  local r=$(( n + 17 ))\n  local s=$(( n + 18 ))\n  local t=$(( n +\
    \ 19 ))\n  local u=$(( n + 20 ))\n  local v=$(( n + 21 ))\n  local w=$(( n + 22\
    \ ))\n  local x=$(( n + 23 ))\n  local y=$(( n + 24 ))\n  local z=$(( n + 25 ))\n\
    \  local A=$(( n + 26 ))\n  local B=$(( n + 27 ))\n  local C=$(( n + 28 ))\n \
    \ local D=$(( n + 29 ))\n  local E=$(( n + 30 ))\n  local F=$(( n + 31 ))\n  local\
    \ G=$(( n + 32 ))\n  local H=$(( n + 33 ))\n  local I=$(( n + 34 ))\n  local J=$((\
    \ n + 35 ))\n  local K=$(( n + 36 ))\n  local L=$(( n + 37 ))\n  local M=$(( n\
    \ + 38 ))\n  local N=$(( n + 39 ))\n  local O=$(( n + 40 ))\n  local P=$(( n +\
    \ 41 ))\n  local Q=$(( n + 42 ))\n  local R=$(( n + 43 ))\n  local S=$(( n + 44\
    \ ))\n  local T=$(( n + 45 ))\n  local U=$(( n + 46 ))\n  local V=$(( n + 47 ))\n\
    \  local W=$(( n + 48 ))\n  local X=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphfoo4yrl.sh: line 70: unexpected EOF while looking for matching
    `)''

    /tmp/tmphfoo4yrl.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ + 1 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + ${n} - 1 ))\n  \
    \  local d=$(( ${n} + ${n} - ${n} ))\n    local e=$(( ${n} + ${n} - ${n} - ${n}\
    \ ))\n    local f=$(( ${n} + ${n} - ${n} - ${n} - ${n} ))\n    local g=$(( ${n}\
    \ + ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local h=$(( ${n} + ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} ))\n    local i=$(( ${n} + ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} ))\n    local j=$(( ${n} + ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} ))\n    local k=$(( ${n} + ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local l=$(( ${n} + ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local m=$(( ${n}\
    \ + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n}\
    \ ))\n    local n=$(( ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} - ${n} ))\n    local o=$(( ${n} + ${n} - ${n} - ${n} - ${n}\
    \ - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} ))\n    local p=$((\
    \ ${n} + ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} - ${n} -\
    \ ${n} - ${n} - ${n} ))\n    local q=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppn_hpbxa.sh: line 37: unexpected EOF while looking for matching
    `)''

    /tmp/tmppn_hpbxa.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 2 ))\n  local b=$(( ${n} * 3 ))\n  local c=$(( ${n} * 4 ))\n  local d=$(( ${n}\
    \ * 5 ))\n  local e=$(( ${n} * 6 ))\n  local f=$(( ${n} * 7 ))\n  local g=$((\
    \ ${n} * 8 ))\n  local h=$(( ${n} * 9 ))\n  local i=$(( ${n} * 10 ))\n  local\
    \ j=$(( ${n} * 11 ))\n  local k=$(( ${n} * 12 ))\n  local l=$(( ${n} * 13 ))\n\
    \  local m=$(( ${n} * 14 ))\n  local n=$(( ${n} * 15 ))\n  local o=$(( ${n} *\
    \ 16 ))\n  local p=$(( ${n} * 17 ))\n  local q=$(( ${n} * 18 ))\n  local r=$((\
    \ ${n} * 19 ))\n  local s=$(( ${n} * 20 ))\n  local t=$(( ${n} * 21 ))\n  local\
    \ u=$(( ${n} * 22 ))\n  local v=$(( ${n} * 23 ))\n  local w=$(( ${n} * 24 ))\n\
    \  local x=$(( ${n} * 25 ))\n  local y=$(( ${n} * 26 ))\n  local z=$(( ${n} *\
    \ 27 ))\n  local A=$(( ${n} * 28 ))\n  local B=$(( ${n} * 29 ))\n  local C=$((\
    \ ${n} * 30 ))\n  local D=$(( ${n} * 31 ))\n  local E=$(( ${n} * 32 ))\n  local\
    \ F=$(( ${n} * 33 ))\n  local G=$(( ${n} * 34 ))\n  local H=$(( ${n} * 35 ))\n\
    \  local I=$(( ${n} * 36 ))\n  local J=$(( ${n} * 37 ))\n  local K=$(( ${n} *\
    \ 38 ))\n  local L=$(( ${n} * 39 ))\n  local M=$(( ${n}\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6r2mlf3c.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmp6r2mlf3c.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 2 ))\n   \
    \ local d=$(( 3 * n - 2 ))\n    local res\n    local i\n    res=()\n    for ((\
    \ i = 1; i <= n; i++ )); do\n        res+=( $(( a + b + c + d )) )\n        ((\
    \ a = b ))\n        (( b = c ))\n        (( c = d ))\n        (( d = $(( d + 1\
    \ )) ))\n    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $(( a\
    \ + b + c ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 1 ))\n   \
    \ local d=$(( 3 * n - 1 ))\n    local result\n    local i\n    for (( i = 1; i\
    \ <= n; i++ )); do\n        result=$(( a + b + c + d ))\n        a=$b\n      \
    \  b=$c\n        c=$d\n        d=$result\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ * 3 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} + 2 ))\n    local e=$(( ${n} + 3 ))\n    local f=$(( ${n} + 4 ))\n\
    \    local g=$(( ${n} + 5 ))\n    local h=$(( ${n} + 6 ))\n    local i=$(( ${n}\
    \ + 7 ))\n    local j=$(( ${n} + 8 ))\n    local k=$(( ${n} + 9 ))\n    local\
    \ l=$(( ${n} + 10 ))\n    local m=$(( ${n} + 11 ))\n    local n=$(( ${n} + 12\
    \ ))\n    local o=$(( ${n} + 13 ))\n    local p=$(( ${n} + 14 ))\n    local q=$((\
    \ ${n} + 15 ))\n    local r=$(( ${n} + 16 ))\n    local s=$(( ${n} + 17 ))\n \
    \   local t=$(( ${n} + 18 ))\n    local u=$(( ${n} + 19 ))\n    local v=$(( ${n}\
    \ + 20 ))\n    local w=$(( ${n} + 21 ))\n    local x=$(( ${n} + 22 ))\n    local\
    \ y=$(( ${n} + 23 ))\n    local z=$(( ${n} + 24 ))\n    local A=$(( ${n} + 25\
    \ ))\n    local B=$(( ${n} + 26 ))\n    local C=$(( ${n} + 27 ))\n    local D=$((\
    \ ${n} + 28 ))\n    local E=$(( ${n} + 29 ))\n    local F=$(( ${n} + 30 ))\n \
    \   local G=$(( ${n} + 31 ))\n    local H=$(( ${n} + 32 ))\n    local I=$(( ${n}\
    \ + 33 ))\n    local J=$(( ${n} + 34 ))\n    local K=$(( ${n} + 35 ))\n    local\
    \ L=$(( ${n} + 36 ))\n    local M=$(( ${n} + 37 ))\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ \n    for i in $(seq 1 $n); do\n        sum=$(( $a + $b ))\n        (( c > d\
    \ )) && d=$(( $c + $d ))\n        (( c > d )) && c=$(( $c + $d ))\n        ((\
    \ c > d )) && b=$(( $c + $d ))\n        (( c > d )) && a=$(( $c + $d ))\n    \
    \    sum=$(( $sum + $c ))\n    done\n    \n    echo $sum\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( n\
    \ - 1 ))\n    local b=$(( n - 2 ))\n    local c=$(( n + 1 ))\n    local d=$((\
    \ n + 2 ))\n    local result\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local \n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    if [ $(( $i % 2 )) -eq\
    \ 0 ]; then\n      sum=$(( $sum + $c ))\n      echo $sum\n    else\n      sum=$((\
    \ $sum + $d ))\n      echo $sum\n    fi\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $n -eq 1 ] && echo $sum\n   \
    \     [ $n -eq 2 ] && echo $sum\n        [ $n -eq 3 ] && echo $sum\n        [\
    \ $n -eq 4 ] && echo $sum\n        [ $n -eq 5 ] && echo $sum\n        [ $n -eq\
    \ 6 ] && echo $sum\n        [ $n -eq 7 ] && echo $sum\n        [ $n -eq 8 ] &&\
    \ echo $sum\n        [ $n -eq 9 ] && echo $sum\n        [ $n -eq 10 ] && echo\
    \ $sum\n        [ $n -eq 11 ] && echo $sum\n        [ $n -eq 12 ] && echo $sum\n\
    \        [ $n -eq 13 ] && echo $sum\n        [ $n -eq 14 ] && echo $sum\n    \
    \    [ $n -eq 15 ] && echo $sum\n        [ $n -eq 16 ] && echo $sum\n        [\
    \ $n -eq 17 ] && echo $sum\n        [ $n -eq 18 ] && echo $sum\n        [ $n -eq\
    \ 19 ] && echo $sum\n        [ $n -eq 20 ] && echo $sum\n        [ $n -eq 21 ]\
    \ && echo $sum\n        [ $n -eq 22 ] && echo $sum\n        [ $n -eq 23 ] && echo\
    \ $sum\n        [ $n -eq 24 ] && echo $sum\n        [ $n -eq 25 ] && echo $sum\n\
    \        [ $n -eq 26 ] && echo $sum\n        [ $n -eq 27 ] && echo $sum\n    \
    \    [ $n -eq 28 ] && echo $sum\n        [ $n -eq 29 ] && echo $sum\n        [\
    \ $n -eq 30 ] && echo $sum\n        [ $n -eq 31 ] && echo $sum\n        [ $n -eq\
    \ 32 ] && echo $sum\n        [ $n -eq 33 ] && echo $sum\n        [ $n -eq 34 ]\
    \ && echo $sum\n        [ $n -eq 35 ] && echo $sum\n        [ $n -eq 36 ] && echo\
    \ $sum\n        [ $n -eq 37 ] && echo $sum\n        [ $n -eq 38 ] && echo $sum\n\
    \        [ $n -eq 39 ] && echo $sum\n        [ $n -eq 40 ] && echo $sum\n    \
    \    [ $n -eq 41 ] && echo $sum\n        [ $n -eq 42 \n}\n\ncandidate() {\n  \
    \  tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvn5gh6y4.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmpvn5gh6y4.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( n - 1\
    \ ))\n  local b=$(( n - 2 ))\n  local c=$(( n + 1 ))\n  local d=$(( n + 2 ))\n\
    \  local result\n  result=$(( 3 * a + 2 * b + c ))\n  result=$(( result / d ))\n\
    \  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result -\
    \ 1 ))\n  result=$(( result / 3 ))\n  result=$(( result + 1 ))\n  result=$(( result\
    \ / 2 ))\n  result=$(( result - 1 ))\n  result=$(( result / 3 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result - 1 ))\n  result=$((\
    \ result / 3 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result - 1 ))\n  result=$(( result / 3 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result - 1 ))\n  result=$(( result / 3 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result - 1 ))\n  result=$((\
    \ result / 3 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result - 1 ))\n  result=$(( result / 3 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result - 1 ))\n  result=$(( result / 3 ))\n  result=$((\
    \ result + 1 ))\n  result=$(( result / 2 ))\n  result=$(( result - 1 ))\n  result=$((\
    \ result / 3 ))\n  result=$(( result + 1 ))\n  result=$(( result / 2 ))\n  result=$((\
    \ result - 1 ))\n  result=$(( result / 3 ))\n  result=$(( result + 1 ))\n  result=$((\
    \ result / 2 ))\n  result=$(( result - 1 ))\n  result=$(( result / 3 ))\n  result=$((\
    \ result + 1 ))\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + 1))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum+j))\n\
    \    j=$((j+k))\n    k=$((k+1))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    [ $(( $i % 2 )) -eq 0 ]\
    \ && b=$sum\n    [ $(( $i % 2 )) -eq 1 ] && c=$sum\n    sum=$(( $c + $d ))\n \
    \   echo $sum\n    [ $(( $i % 2 )) -eq 0 ] && d=$sum\n    [ $(( $i % 2 )) -eq\
    \ 1 ] && a=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ * 3 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} - 1 ))\n    local e=$(( ${n} + 1 ))\n    local f=$(( ${n} - 1 ))\n\
    \    local g=$(( ${n} + 1 ))\n    local h=$(( ${n} - 1 ))\n    local i=$(( ${n}\
    \ + 1 ))\n    local j=$(( ${n} - 1 ))\n    local k=$(( ${n} + 1 ))\n    local\
    \ l=$(( ${n} - 1 ))\n    local m=$(( ${n} + 1 ))\n    local n=$(( ${n} - 1 ))\n\
    \    local o=$(( ${n} + 1 ))\n    local p=$(( ${n} - 1 ))\n    local q=$(( ${n}\
    \ + 1 ))\n    local r=$(( ${n} - 1 ))\n    local s=$(( ${n} + 1 ))\n    local\
    \ t=$(( ${n} - 1 ))\n    local u=$(( ${n} + 1 ))\n    local v=$(( ${n} - 1 ))\n\
    \    local w=$(( ${n} + 1 ))\n    local x=$(( ${n} - 1 ))\n    local y=$(( ${n}\
    \ + 1 ))\n    local z=$(( ${n} - 1 ))\n    local A=$(( ${n} + 1 ))\n    local\
    \ B=$(( ${n} - 1 ))\n    local C=$(( ${n} + 1 ))\n    local D=$(( ${n} - 1 ))\n\
    \    local E=$(( ${n} + 1 ))\n    local F=$(( ${n} - 1 ))\n    local G=$(( ${n}\
    \ + 1 ))\n    local H=$(( ${n} - 1 ))\n    local I=$(( ${n} + 1 ))\n    local\
    \ J=$(( ${n} - 1 ))\n    local K=$(( ${n} + 1 ))\n    local L=$(( ${n} - 1 ))\n\
    \    local M=$(( ${n} + 1 ))\n    local N=$(( ${n} - 1 ))\n    local O=$(( \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ykynh6s.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5ykynh6s.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 2 ))\n   \
    \ local d=$(( 3 * n - 2 ))\n    local e=$(( 3 * n + 3 ))\n    local f=$(( 3 *\
    \ n - 3 ))\n    local g=$(( 3 * n + 4 ))\n    local h=$(( 3 * n - 4 ))\n    local\
    \ i=$(( 3 * n + 5 ))\n    local j=$(( 3 * n - 5 ))\n    local k=$(( 3 * n + 6\
    \ ))\n    local l=$(( 3 * n - 6 ))\n    local m=$(( 3 * n + 7 ))\n    local n=$((\
    \ 3 * n - 7 ))\n    local o=$(( 3 * n + 8 ))\n    local p=$(( 3 * n - 8 ))\n \
    \   local q=$(( 3 * n + 9 ))\n    local r=$(( 3 * n - 9 ))\n    local s=$(( 3\
    \ * n + 10 ))\n    local t=$(( 3 * n - 10 ))\n    local u=$(( 3 * n + 11 ))\n\
    \    local v=$(( 3 * n - 11 ))\n    local w=$(( 3 * n + 12 ))\n    local x=$((\
    \ 3 * n - 12 ))\n    local y=$(( 3 * n + 13 ))\n    local z=$(( 3 * n - 13 ))\n\
    \    local A=$(( 3 * n + 14 ))\n    local B=$(( 3 * n - 14 ))\n    local C=$((\
    \ 3 * n + 15 ))\n    local D=$(( 3 * n - 15 ))\n    local E=$(( 3 * n + 16 ))\n\
    \    local F=$(( 3 * n - 16 ))\n    local G=$(( 3 * n + 17 ))\n    local H=$((\
    \ 3 * n - 17 ))\n    local I=$(( 3 * n + 18 ))\n    local J=$(( 3 * n - 18 ))\n\
    \    local K=$(( 3 * n + 19 ))\n    local L=$(( 3 * n - 19 ))\n    local M=$((\
    \ 3 * n + 20 ))\n    local N=$(( 3 * n - 20 ))\n    local O=$(( 3 * n + 21 ))\n\
    \    local P=$(( 3 * n - 21 ))\n    local Q=$(( 3 * n + 22 ))\n    local R=$((\
    \ 3 * n - 22 ))\n    local S=$(( 3 * n + 23 ))\n    local T=$(( 3 * n - 23 ))\n\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $n -eq 0 ] && break\n       \
    \ [ $n -eq 1 ] && break\n        [ $n -eq 2 ] && break\n        [ $n -eq 3 ] &&\
    \ break\n        [ $n -eq 4 ] && break\n        [ $n -eq 5 ] && break\n      \
    \  [ $n -eq 6 ] && break\n        [ $n -eq 7 ] && break\n        [ $n -eq 8 ]\
    \ && break\n        [ $n -eq 9 ] && break\n        [ $n -eq 10 ] && break\n  \
    \      [ $n -eq 11 ] && break\n        [ $n -eq 12 ] && break\n        [ $n -eq\
    \ 13 ] && break\n        [ $n -eq 14 ] && break\n        [ $n -eq 15 ] && break\n\
    \        [ $n -eq 16 ] && break\n        [ $n -eq 17 ] && break\n        [ $n\
    \ -eq 18 ] && break\n        [ $n -eq 19 ] && break\n        [ $n -eq 20 ] &&\
    \ break\n        [ $n -eq 21 ] && break\n        [ $n -eq 22 ] && break\n    \
    \    [ $n -eq 23 ] && break\n        [ $n -eq 24 ] && break\n        [ $n -eq\
    \ 25 ] && break\n        [ $n -eq 26 ] && break\n        [ $n -eq 27 ] && break\n\
    \        [ $n -eq 28 ] && break\n        [ $n -eq 29 ] && break\n        [ $n\
    \ -eq 30 ] && break\n        [ $n -eq 31 ] && break\n        [ $n -eq 32 ] &&\
    \ break\n        [ $n -eq 33 ] && break\n        [ $n -eq 34 ] && break\n    \
    \    [ $n -eq 35 ] && break\n        [ $n -eq 36 ] && break\n        [ $n -eq\
    \ 37 ] && break\n        [ $n -eq 38 ] && break\n        [ $n -eq 39 ] && break\n\
    \        [ $n -eq 40 ] && break\n        [ $n -eq 41 ] && break\n        [ $n\
    \ -eq 42 ] && break\n        [ $n -eq 43 ] && break\n        [ $n -eq 44 ] &&\
    \ break\n        [ $n -eq 45 ] && \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp0w6qrgk1.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmp0w6qrgk1.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 1 + n\
    \ / 2 ))\n  local b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$((\
    \ 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local\
    \ g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n\
    \  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n /\
    \ 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$((\
    \ 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local q=$(( 1 + n / 2 ))\n  local\
    \ r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n  local t=$(( 1 + n / 2 ))\n\
    \  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n / 2 ))\n  local w=$(( 1 + n /\
    \ 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$(( 1 + n / 2 ))\n  local z=$((\
    \ 1 + n / 2 ))\n  local a=$(( 1 + n / 2 ))\n  local b=$(( 1 + n / 2 ))\n  local\
    \ c=$(( 1 + n / 2 ))\n  local d=$(( 1 + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n\
    \  local f=$(( 1 + n / 2 ))\n  local g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n /\
    \ 2 ))\n  local i=$(( 1 + n / 2 ))\n  local j=$(( 1 + n / 2 ))\n  local k=$((\
    \ 1 + n / 2 ))\n  local l=$(( 1 + n / 2 ))\n  local m=$(( 1 + n / 2 ))\n  local\
    \ n=$(( 1 + n / 2 ))\n  local o=$(( 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n\
    \  local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2\
    \ 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  echo $a $b $c\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    sum=$(($a+$b+$c+$d))\n    echo $sum\n    local j\n    for j in $(seq\
    \ 1 $((i-1))); do\n      sum=$(($sum+$j))\n    done\n    local k\n    for k in\
    \ $(seq 1 $((i+1))); do\n      sum=$(($sum+$k))\n    done\n    local l\n    for\
    \ l in $(seq 1 $((i+2))); do\n      sum=$(($sum+$l))\n    done\n    local m\n\
    \    for m in $(seq 1 $((i+3))); do\n      sum=$(($sum+$m))\n    done\n    local\
    \ n\n    for n in $(seq 1 $((i+4))); do\n      sum=$(($sum+$n))\n    done\n  \
    \  local o\n    for o in $(seq 1 $((i+5))); do\n      sum=$(($sum+$o))\n    done\n\
    \    local p\n    for p in $(seq 1 $((i+6))); do\n      sum=$(($sum+$p))\n   \
    \ done\n    local q\n    for q in $(seq 1 $((i+7))); do\n      sum=$(($sum+$q))\n\
    \    done\n    local r\n    for r in $(seq 1 $((i+8))); do\n      sum=$(($sum+$r))\n\
    \    done\n    local s\n    for s in $(seq 1 $((i+9))); do\n      sum=$(($sum+$s))\n\
    \    done\n    local t\n    for t in $(seq 1 $((i+10))); do\n      sum=$(($sum+$t))\n\
    \    done\n    local u\n    for u in $(seq 1 $((i+11))); do\n      sum=$(($sum+$u))\n\
    \    done\n    local v\n    for v in $(seq 1 $((i+12))); do\n      sum=$(($sum+$v))\n\
    \    done\n    local w\n    for w in $(seq 1 $((i+13))); do\n      sum=$(($sum+$w))\n\
    \    done\n    local x\n    for x in $(seq 1 $((i+14))); do\n      sum=$(($sum+$x))\n\
    \    done\n    local y\n    for y in $(seq 1 $((i+15))); do\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5i6phe11.sh: line 93: syntax error near unexpected token `}''

    /tmp/tmp5i6phe11.sh: line 93: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ \n    for (( i = 1; i <= n; i++ )); do\n        sum=$(( sum + a ))\n       \
    \ sum=$(( sum + b ))\n        sum=$(( sum + c ))\n        sum=$(( sum + d ))\n\
    \        a=$(( c + d ))\n        b=$(( b + c ))\n        c=$(( a + b ))\n    \
    \    d=$(( d + a ))\n    done\n    \n    echo $sum\n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $n -eq 0 ] && break\n       \
    \ [ $n -eq 1 ] && break\n        [ $n -eq 2 ] && break\n        [ $n -eq 3 ] &&\
    \ break\n        [ $n -eq 4 ] && break\n        [ $n -eq 5 ] && break\n      \
    \  [ $n -eq 6 ] && break\n        [ $n -eq 7 ] && break\n        [ $n -eq 8 ]\
    \ && break\n        [ $n -eq 9 ] && break\n        [ $n -eq 10 ] && break\n  \
    \      [ $n -eq 11 ] && break\n        [ $n -eq 12 ] && break\n        [ $n -eq\
    \ 13 ] && break\n        [ $n -eq 14 ] && break\n        [ $n -eq 15 ] && break\n\
    \        [ $n -eq 16 ] && break\n        [ $n -eq 17 ] && break\n        [ $n\
    \ -eq 18 ] && break\n        [ $n -eq 19 ] && break\n        [ $n -eq 20 ] &&\
    \ break\n        [ $n -eq 21 ] && break\n        [ $n -eq 22 ] && break\n    \
    \    [ $n -eq 23 ] && break\n        [ $n -eq 24 ] && break\n        [ $n -eq\
    \ 25 ] && break\n        [ $n -eq 26 ] && break\n        [ $n -eq 27 ] && break\n\
    \        [ $n -eq 28 ] && break\n        [ $n -eq 29 ] && break\n        [ $n\
    \ -eq 30 ] && break\n        [ $n -eq 31 ] && break\n        [ $n -eq 32 ] &&\
    \ break\n        [ $n -eq 33 ] && break\n        [ $n -eq 34 ] && break\n    \
    \    [ $n -eq 35 ] && break\n        [ $n -eq 36 ] && break\n        [ $n -eq\
    \ 37 ] && break\n        [ $n -eq 38 ] && break\n        [ $n -eq 39 ] && break\n\
    \        [ $n -eq 40 ] && break\n        [ $n -eq 41 ] && break\n        [ $n\
    \ -eq 42 ] && break\n        [ $n -eq 43 ] && break\n        [ $n -eq 44 ] &&\
    \ break\n        [ $n -eq 45 ] && \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpd2_iy0dp.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmpd2_iy0dp.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  sum=$(( $n + 1 ))\n\
    \  echo \"$sum\"\n  for i in $(seq 1 $sum); do\n    echo $a\n    echo $b\n   \
    \ echo $c\n    echo $d\n    local tmp=$(( $a + $b + $c + $d ))\n    echo $tmp\n\
    \    local tmp2=$(( $tmp % 2 ))\n    echo $tmp2\n    local tmp3=$(( $tmp2 ))\n\
    \    echo $tmp3\n    local tmp4=$(( $tmp3 ))\n    echo $tmp4\n    local tmp5=$((\
    \ $tmp4 ))\n    echo $tmp5\n    local tmp6=$(( $tmp5 ))\n    echo $tmp6\n    local\
    \ tmp7=$(( $tmp6 ))\n    echo $tmp7\n    local tmp8=$(( $tmp7 ))\n    echo $tmp8\n\
    \    local tmp9=$(( $tmp8 ))\n    echo $tmp9\n    local tmp10=$(( $tmp9 ))\n \
    \   echo $tmp10\n    local tmp11=$(( $tmp10 ))\n    echo $tmp11\n    local tmp12=$((\
    \ $tmp11 ))\n    echo $tmp12\n    local tmp13=$(( $tmp12 ))\n    echo $tmp13\n\
    \    local tmp14=$(( $tmp13 ))\n    echo $tmp14\n    local tmp15=$(( $tmp14 ))\n\
    \    echo $tmp15\n    local tmp16=$(( $tmp15 ))\n    echo $tmp16\n    local tmp17=$((\
    \ $tmp16 ))\n    echo $tmp17\n    local tmp18=$(( $tmp17 ))\n    echo $tmp18\n\
    \    local tmp19=$(( $tmp18 ))\n    echo $tmp19\n    local tmp20=$(( $tmp19 ))\n\
    \    echo $tmp20\n    local tmp21=$(( $tmp20 ))\n    echo $tmp21\n    local tmp22=$((\
    \ $tmp21 ))\n    echo $tmp22\n    local tmp23=$(( $tmp22 ))\n    echo $tmp23\n\
    \    local tmp24=$(( $tmp23 ))\n    echo $tmp24\n    local tmp25=$(( $tmp24 ))\n\
    \    echo $tmp25\n    local tmp26=$(( $tmp25 ))\n    echo $tmp26\n    local tmp27=$((\
    \ $tmp26 ))\n    echo $tmp27\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpadlltqiy.sh: line 89: syntax error near unexpected token `}''

    /tmp/tmpadlltqiy.sh: line 89: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i=0\n \
    \   while [ $i -lt $n ]; do\n        sum=$(( $a + $b ))\n        i=$(( $i + 1\
    \ ))\n        [ $i -eq $n ] && break\n        [ $(( $n % 2 )) -eq 0 ] && c=$((\
    \ $c + $d ))\n        [ $(( $n % 2 )) -eq 1 ] && d=$(( $d + $c ))\n        [ $((\
    \ $n % 2 )) -eq 0 ] && b=$(( $b + $d ))\n        [ $(( $n % 2 )) -eq 1 ] && a=$((\
    \ $a + $c ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local sum1=0\n  local sum2=0\n  local sum3=0\n\
    \  local sum4=0\n  local sum5=0\n  local sum6=0\n  local sum7=0\n  local sum8=0\n\
    \  local sum9=0\n  local sum10=0\n  local sum11=0\n  local sum12=0\n  local sum13=0\n\
    \  local sum14=0\n  local sum15=0\n  local sum16=0\n  local sum17=0\n  local sum18=0\n\
    \  local sum19=0\n  local sum20=0\n  local sum21=0\n  local sum22=0\n  local sum23=0\n\
    \  local sum24=0\n  local sum25=0\n  local sum26=0\n  local sum27=0\n  local sum28=0\n\
    \  local sum29=0\n  local sum30=0\n  local sum31=0\n  local sum32=0\n  local sum33=0\n\
    \  local sum34=0\n  local sum35=0\n  local sum36=0\n  local sum37=0\n  local sum38=0\n\
    \  local sum39=0\n  local sum40=0\n  local sum41=0\n  local sum42=0\n  local sum43=0\n\
    \  local sum44=0\n  local sum45=0\n  local sum46=0\n  local sum47=0\n  local sum48=0\n\
    \  local sum49=0\n  local sum50=0\n  local sum51=0\n  local sum52=0\n  local sum53=0\n\
    \  local sum54=0\n  local sum55=0\n  local sum56=0\n  local sum57=0\n  local sum58=0\n\
    \  local sum59=0\n  local sum60=0\n  local sum61=0\n  local sum62=0\n  local sum63=0\n\
    \  local sum64=0\n  local sum65=0\n  local sum66=0\n  local sum67=0\n  local sum68=0\n\
    \  local sum69=0\n  local sum70=0\n  local sum71=0\n  local sum72=0\n  local sum73=0\n\
    \  local sum74=0\n  local sum75=0\n  local sum76=0\n  local sum77=0\n  local sum78=0\n\
    \  local sum79=0\n  local sum80=0\n  local sum81=0\n\n}\n\ncandidate() {\n   \
    \ tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\"\
    \ ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\")\
    \ = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n \
    \   [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n\n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    echo $sum\n    echo $sum\n\
    \    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n \
    \   echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n  \
    \  echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n   \
    \ echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo\
    \ $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n\
    \    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n \
    \   echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n  \
    \  echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n   \
    \ echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo\
    \ $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n\
    \    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n \
    \   echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n  \
    \  echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n   \
    \ echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo\
    \ $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n\
    \    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n \
    \   echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n  \
    \  echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n   \
    \ echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo\
    \ $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n\
    \    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n    echo $sum\n \
    \   echo $sum\n    echo $sum\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp1e7uwe5m.sh: line 145: syntax error near unexpected token `}''

    /tmp/tmp1e7uwe5m.sh: line 145: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $c + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + $i))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ + 1 ))\n    local b=$(( ${n} + 2 ))\n    local c=$(( ${n} + 3 ))\n    local\
    \ d=$(( ${n} + 4 ))\n    local e=$(( ${n} + 5 ))\n    local f=$(( ${n} + 6 ))\n\
    \    local g=$(( ${n} + 7 ))\n    local h=$(( ${n} + 8 ))\n    local i=$(( ${n}\
    \ + 9 ))\n    local j=$(( ${n} + 10 ))\n    local k=$(( ${n} + 11 ))\n    local\
    \ l=$(( ${n} + 12 ))\n    local m=$(( ${n} + 13 ))\n    local n=$(( ${n} + 14\
    \ ))\n    local o=$(( ${n} + 15 ))\n    local p=$(( ${n} + 16 ))\n    local q=$((\
    \ ${n} + 17 ))\n    local r=$(( ${n} + 18 ))\n    local s=$(( ${n} + 19 ))\n \
    \   local t=$(( ${n} + 20 ))\n    local u=$(( ${n} + 21 ))\n    local v=$(( ${n}\
    \ + 22 ))\n    local w=$(( ${n} + 23 ))\n    local x=$(( ${n} + 24 ))\n    local\
    \ y=$(( ${n} + 25 ))\n    local z=$(( ${n} + 26 ))\n    local A=$(( ${n} + 27\
    \ ))\n    local B=$(( ${n} + 28 ))\n    local C=$(( ${n} + 29 ))\n    local D=$((\
    \ ${n} + 30 ))\n    local E=$(( ${n} + 31 ))\n    local F=$(( ${n} + 32 ))\n \
    \   local G=$(( ${n} + 33 ))\n    local H=$(( ${n} + 34 ))\n    local I=$(( ${n}\
    \ + 35 ))\n    local J=$(( ${n} + 36 ))\n    local K=$(( ${n} + 37 ))\n    local\
    \ L=$(( ${n} + 38 ))\n    local M=$(( ${n} + \n}\n\ncandidate() {\n    tri \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz6n1k1re.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpz6n1k1re.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b + $c + $d ))\n    a=$b\n    b=$c\n    c=$d\n  \
    \  d=$sum\n  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local\
    \ v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local\
    \ z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local\
    \ f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local\
    \ l=1\n  local m=1\n  local n=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ + 1 ))\n    local b=$(( ${n} + 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} + 1 ))\n    local e=$(( ${n} + 1 ))\n    local f=$(( ${n} + 1 ))\n\
    \    local g=$(( ${n} + 1 ))\n    local h=$(( ${n} + 1 ))\n    local i=$(( ${n}\
    \ + 1 ))\n    local j=$(( ${n} + 1 ))\n    local k=$(( ${n} + 1 ))\n    local\
    \ l=$(( ${n} + 1 ))\n    local m=$(( ${n} + 1 ))\n    local n=$(( ${n} + 1 ))\n\
    \    local o=$(( ${n} + 1 ))\n    local p=$(( ${n} + 1 ))\n    local q=$(( ${n}\
    \ + 1 ))\n    local r=$(( ${n} + 1 ))\n    local s=$(( ${n} + 1 ))\n    local\
    \ t=$(( ${n} + 1 ))\n    local u=$(( ${n} + 1 ))\n    local v=$(( ${n} + 1 ))\n\
    \    local w=$(( ${n} + 1 ))\n    local x=$(( ${n} + 1 ))\n    local y=$(( ${n}\
    \ + 1 ))\n    local z=$(( ${n} + 1 ))\n    local A=$(( ${n} + 1 ))\n    local\
    \ B=$(( ${n} + 1 ))\n    local C=$(( ${n} + 1 ))\n    local D=$(( ${n} + 1 ))\n\
    \    local E=$(( ${n} + 1 ))\n    local F=$(( ${n} + 1 ))\n    local G=$(( ${n}\
    \ + 1 ))\n    local H=$(( ${n} + 1 ))\n    local I=$(( ${n} + 1 ))\n    local\
    \ J=$(( ${n} + 1 ))\n    local K=$(( ${n} + 1 ))\n    local L=$(( ${n} + 1 ))\n\
    \    local M=$(( ${n} + 1 ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ * 3 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} - 1 ))\n    local e=$(( ${n} + 1 ))\n    local f=$(( ${n} - 1 ))\n\
    \    local g=$(( ${n} + 1 ))\n    local h=$(( ${n} - 1 ))\n    local i=$(( ${n}\
    \ + 1 ))\n    local j=$(( ${n} - 1 ))\n    local k=$(( ${n} + 1 ))\n    local\
    \ l=$(( ${n} - 1 ))\n    local m=$(( ${n} + 1 ))\n    local n=$(( ${n} - 1 ))\n\
    \    local o=$(( ${n} + 1 ))\n    local p=$(( ${n} - 1 ))\n    local q=$(( ${n}\
    \ + 1 ))\n    local r=$(( ${n} - 1 ))\n    local s=$(( ${n} + 1 ))\n    local\
    \ t=$(( ${n} - 1 ))\n    local u=$(( ${n} + 1 ))\n    local v=$(( ${n} - 1 ))\n\
    \    local w=$(( ${n} + 1 ))\n    local x=$(( ${n} - 1 ))\n    local y=$(( ${n}\
    \ + 1 ))\n    local z=$(( ${n} - 1 ))\n    local A=$(( ${n} + 1 ))\n    local\
    \ B=$(( ${n} - 1 ))\n    local C=$(( ${n} + 1 ))\n    local D=$(( ${n} - 1 ))\n\
    \    local E=$(( ${n} + 1 ))\n    local F=$(( ${n} - 1 ))\n    local G=$(( ${n}\
    \ + 1 ))\n    local H=$(( ${n} - 1 ))\n    local I=$(( ${n} + 1 ))\n    local\
    \ J=$(( ${n} - 1 ))\n    local K=$(( ${n} + 1 ))\n    local L=$(( ${n} - 1 ))\n\
    \    local M=$(( ${n} + 1 ))\n    local N=$(( ${n} - 1 ))\n    local O=$(( \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ykynh6s.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5ykynh6s.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $(( n % 2 )) -eq 0 ] && sum=$((\
    \ $sum + $c ))\n        [ $(( n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n     \
    \   echo $sum\n        (( n = n - 1 ))\n        a=$b\n        b=$c\n        c=$d\n\
    \        d=$sum\n    done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local result\n    \n    result=$(( b + c + d ))\n    \n\
    \    while [ $n -gt 0 ]; do\n        local temp=$(( n - 1 ))\n        result=$((\
    \ result + $(( temp + 1 )) + $(( temp + 2 )) + $(( temp + 3 )) ))\n        ((\
    \ n = temp - 1 ))\n    done\n    \n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local\
    \ g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local\
    \ m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local\
    \ s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local\
    \ y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local\
    \ e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local\
    \ k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local\
    \ q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local\
    \ w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local\
    \ c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local\
    \ i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local\
    \ o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local\
    \ u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local\
    \ a=1\n  local b=1\n  local c=1\n  local d=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ ))\n  local b=$(( 1 + n / 2 ))\n  local c=$(( 1 + n / 2 ))\n  local d=$(( 1\
    \ + n / 2 ))\n  local e=$(( 1 + n / 2 ))\n  local f=$(( 1 + n / 2 ))\n  local\
    \ g=$(( 1 + n / 2 ))\n  local h=$(( 1 + n / 2 ))\n  local i=$(( 1 + n / 2 ))\n\
    \  local j=$(( 1 + n / 2 ))\n  local k=$(( 1 + n / 2 ))\n  local l=$(( 1 + n /\
    \ 2 ))\n  local m=$(( 1 + n / 2 ))\n  local n=$(( 1 + n / 2 ))\n  local o=$((\
    \ 1 + n / 2 ))\n  local p=$(( 1 + n / 2 ))\n  local q=$(( 1 + n / 2 ))\n  local\
    \ r=$(( 1 + n / 2 ))\n  local s=$(( 1 + n / 2 ))\n  local t=$(( 1 + n / 2 ))\n\
    \  local u=$(( 1 + n / 2 ))\n  local v=$(( 1 + n / 2 ))\n  local w=$(( 1 + n /\
    \ 2 ))\n  local x=$(( 1 + n / 2 ))\n  local y=$(( 1 + n / 2 ))\n  local z=$((\
    \ 1 + n / 2 ))\n  local A=$(( 1 + n / 2 ))\n  local B=$(( 1 + n / 2 ))\n  local\
    \ C=$(( 1 + n / 2 ))\n  local D=$(( 1 + n / 2 ))\n  local E=$(( 1 + n / 2 ))\n\
    \  local F=$(( 1 + n / 2 ))\n  local G=$(( 1 + n / 2 ))\n  local H=$(( 1 + n /\
    \ 2 ))\n  local I=$(( 1 + n / 2 ))\n  local J=$(( 1 + n / 2 ))\n  local K=$((\
    \ 1 + n / 2 ))\n  local L=$(( 1 + n / 2 ))\n  local M=$(( 1 + n / 2 ))\n  local\
    \ N=$(( 1 + n / 2 ))\n  local O=$(( 1 + n / 2 ))\n  local P=$(( 1 + n / 2 ))\n\
    \  local Q=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  local d=$((\
    \ 3 * n - 2 ))\n  local result\n  result=$(( $a + $b ))\n  result=$(( $result\
    \ + $c ))\n  result=$(( $result + $d ))\n  echo $result\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( n\
    \ - 1 ))\n    local b=$(( n - 2 ))\n    local c=$(( n + 1 ))\n    local d=$((\
    \ n + 2 ))\n    local result\n    local i\n    \n    result=()\n    \n    for\
    \ i in $(seq 1 $n); do\n        result+=( $(( a * $(( b + c )) )) )\n        result+=(\
    \ $(( b * $(( c + d )) )) )\n        result+=( $(( c * $(( d + a )) )) )\n   \
    \     result+=( $(( d * $(( a + b )) )) )\n    done\n    \n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  while [ $n -gt 0 ]; do\n   \
    \ sum=$(( $a + $b ))\n    [ $(( $n % 2 )) -eq 0 ] && sum=$(( $sum + $c ))\n  \
    \  [ $(( $n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n    echo $sum\n    [ $(( $n\
    \ % 2 )) -eq 0 ] && a=$b\n    [ $(( $n % 2 )) -eq 1 ] && b=$c\n    [ $(( $n %\
    \ 2 )) -eq 0 ] && c=$d\n    [ $(( $n % 2 )) -eq 1 ] && d=$sum\n    n=$(( $n -\
    \ 1 ))\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local sum=0\n\
    \    local i=1\n    local j=1\n    local k=1\n    local sum1=0\n    local sum2=0\n\
    \    local sum3=0\n    local sum4=0\n    local sum5=0\n    local sum6=0\n    local\
    \ sum7=0\n    local sum8=0\n    local sum9=0\n    local sum10=0\n    local sum11=0\n\
    \    local sum12=0\n    local sum13=0\n    local sum14=0\n    local sum15=0\n\
    \    local sum16=0\n    local sum17=0\n    local sum18=0\n    local sum19=0\n\
    \    local sum20=0\n    local sum21=0\n    local sum22=0\n    local sum23=0\n\
    \    local sum24=0\n    local sum25=0\n    local sum26=0\n    local sum27=0\n\
    \    local sum28=0\n    local sum29=0\n    local sum30=0\n    local sum31=0\n\
    \    local sum32=0\n    local sum33=0\n    local sum34=0\n    local sum35=0\n\
    \    local sum36=0\n    local sum37=0\n    local sum38=0\n    local sum39=0\n\
    \    local sum40=0\n    local sum41=0\n    local sum42=0\n    local sum43=0\n\
    \    local sum44=0\n    local sum45=0\n    local sum46=0\n    local sum47=0\n\
    \    local sum48=0\n    local sum49=0\n    local sum50=0\n    local sum51=0\n\
    \    local sum52=0\n    local sum53=0\n    local sum54=0\n    local sum55=0\n\
    \    local sum56=0\n    local sum57=0\n    local sum58=0\n    local sum59=0\n\
    \    local sum60=0\n    local sum61=0\n    local sum62=0\n    local sum63=0\n\
    \    local sum64=0\n    local sum65=0\n    local sum66=0\n    local sum67=0\n\
    \    local sum68=0\n    local sum69=0\n    local sum70=0\n    local sum71=0\n\
    \    local sum72=0\n    local sum73=0\n    local sum74=0\n    local sum75=0\n\
    \    local sum76=0\n    local sum77=0\n    local sum78=0\n    local sum79=0\n\
    \    local sum80=0\n    local sum81=0\n\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ - 1 ))\n  local e=$(( ${n} + 1 ))\n  local f=$(( ${n} - 1 ))\n  local g=$((\
    \ ${n} + 1 ))\n  local h=$(( ${n} - 1 ))\n  local i=$(( ${n} + 1 ))\n  local j=$((\
    \ ${n} - 1 ))\n  local k=$(( ${n} + 1 ))\n  local l=$(( ${n} - 1 ))\n  local m=$((\
    \ ${n} + 1 ))\n  local n=$(( ${n} - 1 ))\n  local o=$(( ${n} + 1 ))\n  local p=$((\
    \ ${n} - 1 ))\n  local q=$(( ${n} + 1 ))\n  local r=$(( ${n} - 1 ))\n  local s=$((\
    \ ${n} + 1 ))\n  local t=$(( ${n} - 1 ))\n  local u=$(( ${n} + 1 ))\n  local v=$((\
    \ ${n} - 1 ))\n  local w=$(( ${n} + 1 ))\n  local x=$(( ${n} - 1 ))\n  local y=$((\
    \ ${n} + 1 ))\n  local z=$(( ${n} - 1 ))\n  local A=$(( ${n} + 1 ))\n  local B=$((\
    \ ${n} - 1 ))\n  local C=$(( ${n} + 1 ))\n  local D=$(( ${n} - 1 ))\n  local E=$((\
    \ ${n} + 1 ))\n  local F=$(( ${n} - 1 ))\n  local G=$(( ${n} + 1 ))\n  local H=$((\
    \ ${n} - 1 ))\n  local I=$(( ${n} + 1 ))\n  local J=$(( ${n} - 1 ))\n  local K=$((\
    \ ${n} + 1 ))\n  local L=$(( ${n} - 1 ))\n  local M=$(( ${n} + 1 ))\n  local N=$((\
    \ ${n} - 1 ))\n  local O=$(( \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpmr_vheqi.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmpmr_vheqi.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  \n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local sum=0\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local result=()\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    result+=( $a )\n    if [ $(( i % 2 )) -eq 0 ]; then\n      result+=(\
    \ $b )\n      b=$c\n      c=$d\n      d=$a+$b+$c\n      a=$d\n    else\n     \
    \ result+=( $c )\n      c=$d\n      d=$a+$b+$c\n      b=$c\n      a=$d\n    fi\n\
    \  done\n  result+=( $a )\n  result+=( $b )\n  result+=( $c )\n  result+=( $d\
    \ )\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\n\
    candidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ \n    for i in $(seq 1 $n); do\n        sum=$(( $a + $b ))\n        echo $sum\n\
    \        (( a = $sum))\n        (( b = $sum))\n        (( c = $sum))\n       \
    \ (( d = $sum))\n    done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    [ $(( $n % 2 )) -eq 0 ]\
    \ && sum=$(( $sum + $c ))\n    [ $(( $n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n\
    \    echo $sum\n    [ $(( $i % 2 )) -eq 0 ] && a=$(( $a + $c ))\n    [ $(( $i\
    \ % 2 )) -eq 1 ] && b=$(( $b + $d ))\n    [ $(( $i % 2 )) -eq 0 ] && c=$(( $c\
    \ + $b ))\n    [ $(( $i % 2 )) -eq 1 ] && d=$(( $d + $a ))\n  done\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local\
    \ z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local\
    \ f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local\
    \ l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local\
    \ r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local\
    \ x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local\
    \ d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local\
    \ j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local\
    \ p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local\
    \ v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum + $j))\n\
    \    j=$((j + $k))\n    k=$((k + 1))\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum+j))\n\
    \    j=$((j+k))\n    k=$((k+i))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local a=$(( n + 1 ))\n    local\
    \ b=$(( n + 1 ))\n    local c=$(( n + 1 ))\n    local d=$(( n + 1 ))\n    local\
    \ e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local g=$(( n + 1 ))\n    local\
    \ h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local j=$(( n + 1 ))\n    local\
    \ k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local m=$(( n + 1 ))\n    local\
    \ n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local p=$(( n + 1 ))\n    local\
    \ q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local s=$(( n + 1 ))\n    local\
    \ t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local v=$(( n + 1 ))\n    local\
    \ w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 2 * n + 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( n + 1 ))\n    local e=$(( n + 1 ))\n    local f=$(( n + 1 ))\n    local\
    \ g=$(( n + 1 ))\n    local h=$(( n + 1 ))\n    local i=$(( n + 1 ))\n    local\
    \ j=$(( n + 1 ))\n    local k=$(( n + 1 ))\n    local l=$(( n + 1 ))\n    local\
    \ m=$(( n + 1 ))\n    local n=$(( n + 1 ))\n    local o=$(( n + 1 ))\n    local\
    \ p=$(( n + 1 ))\n    local q=$(( n + 1 ))\n    local r=$(( n + 1 ))\n    local\
    \ s=$(( n + 1 ))\n    local t=$(( n + 1 ))\n    local u=$(( n + 1 ))\n    local\
    \ v=$(( n + 1 ))\n    local w=$(( n + 1 ))\n    local x=$(( n + 1 ))\n    local\
    \ y=$(( n + 1 ))\n    local z=$(( n + 1 ))\n    local A=$(( n + 1 ))\n    local\
    \ B=$(( n + 1 ))\n    local C=$(( n + 1 ))\n    local D=$(( n + 1 ))\n    local\
    \ E=$(( n + 1 ))\n    local F=$(( n + 1 ))\n    local G=$(( n + 1 ))\n    local\
    \ H=$(( n + 1 ))\n    local I=$(( n + 1 ))\n    local J=$(( n + 1 ))\n    local\
    \ K=$(( n + 1 ))\n    local L=$(( n + 1 ))\n    local M=$(( n + 1 ))\n    local\
    \ N=$(( n + 1 ))\n    local O=$(( n + 1 ))\n    local P=$(( n + 1 ))\n    local\
    \ Q=$(( n + 1 ))\n    local R=$(( n + 1 ))\n    local S=$(( n + 1 ))\n    local\
    \ T=$(( n + 1 ))\n    local U=$(( n + 1 ))\n    local V=$(( n + 1 ))\n    local\
    \ W=$(( n + 1 ))\n    local X=$(( n + 1 ))\n    local Y=$\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  while [ $n -gt 0 ]; do\n   \
    \ sum=$(( $a + $b ))\n    [ $(( $n % 2 )) -eq 0 ] && sum=$(( $sum + $c ))\n  \
    \  [ $(( $n % 2 )) -eq 1 ] && sum=$(( $sum + $d ))\n    echo $sum\n    [ $(( $n\
    \ % 2 )) -eq 0 ] && a=$b\n    [ $(( $n % 2 )) -eq 1 ] && b=$c\n    [ $(( $n %\
    \ 2 )) -eq 0 ] && c=$d\n    [ $(( $n % 2 )) -eq 1 ] && d=$sum\n    n=$(( $n -\
    \ 1 ))\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( n\
    \ - 1 ))\n    local b=$(( n - 2 ))\n    local c=$(( n + 1 ))\n    local d=$((\
    \ n + 2 ))\n    local result\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local \n}\n\ncandidate() {\n \
    \   tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2\
    \ 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( 3 * n + 2 ))\n   \
    \ local d=$(( 3 * n - 2 ))\n    local res\n    res=$(( b + c + d ))\n    echo\
    \ $res\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n - 1 ))\n    local c=$(( n + 1 ))\n    local\
    \ d=$(( 2 * n + 1 ))\n    local e=$(( 2 * n - 1 ))\n    local f=$(( n + 1 ))\n\
    \    local g=$(( 2 * n + 1 ))\n    local h=$(( 2 * n - 1 ))\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n  \
    \  local o=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n   \
    \ local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n    local\
    \ y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n\
    \    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n \
    \   local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local result=()\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n + 2 ))\n  local c=$(( 3 * n + 3 ))\n  local d=$((\
    \ 3 * n + 4 ))\n  local e=$(( 3 * n + 5 ))\n  local f=$(( 3 * n + 6 ))\n  local\
    \ g=$(( 3 * n + 7 ))\n  local h=$(( 3 * n + 8 ))\n  local i=$(( 3 * n + 9 ))\n\
    \  local j=$(( 3 * n + 10 ))\n  local k=$(( 3 * n + 11 ))\n  local l=$(( 3 * n\
    \ + 12 ))\n  local m=$(( 3 * n + 13 ))\n  local n=$(( 3 * n + 14 ))\n  local o=$((\
    \ 3 * n + 15 ))\n  local p=$(( 3 * n + 16 ))\n  local q=$(( 3 * n + 17 ))\n  local\
    \ r=$(( 3 * n + 18 ))\n  local s=$(( 3 * n + 19 ))\n  local t=$(( 3 * n + 20 ))\n\
    \  local u=$(( 3 * n + 21 ))\n  local v=$(( 3 * n + 22 ))\n  local w=$(( 3 * n\
    \ + 23 ))\n  local x=$(( 3 * n + 24 ))\n  local y=$(( 3 * n + 25 ))\n  local z=$((\
    \ 3 * n + 26 ))\n  local A=$(( 3 * n + 27 ))\n  local B=$(( 3 * n + 28 ))\n  local\
    \ C=$(( 3 * n + 29 ))\n  local D=$(( 3 * n + 30 ))\n  local E=$(( 3 * n + 31 ))\n\
    \  local F=$(( 3 * n + 32 ))\n  local G=$(( 3 * n + 33 ))\n  local H=$(( 3 * n\
    \ + 34 ))\n  local I=$(( 3 * n + 35 ))\n  local J=$(( 3 * n + 36 ))\n  local K=$((\
    \ 3 * n + 37 ))\n  local L=$(( 3 * n + 38 ))\n  local M=$(( 3 * n + 39 ))\n  local\
    \ N=$(( 3 * n + 40 ))\n  local O=$(( 3 * n + 41 ))\n  local P=$(( 3 * n + 42 ))\n\
    \  local Q=$(( 3 * n + 43 ))\n  local R=$(( 3 * n + 44 ))\n  local S=$(( 3 * n\
    \ + 45 ))\n  local T=$((\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpikxwh2na.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpikxwh2na.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  sum=$(( $a + $b ))\n\
    \  for i in $(seq 1 $n); do\n    sum=$(( $sum + $c ))\n    c=$(( $c + $d ))\n\
    \    d=$(( $d + $a ))\n    a=$(( $a + $b ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( n + 1 ))\n    local c=$(( n + 2 ))\n    local d=$((\
    \ 3 * n + 2 ))\n    local e=$(( 2 * n + 1 ))\n    local f=$(( 2 * n + 2 ))\n \
    \   local g=$(( 2 * n + 3 ))\n    local h=$(( 2 * n + 4 ))\n    local i=$(( 2\
    \ * n + 5 ))\n    local j=$(( 2 * n + 6 ))\n    local k=$(( 2 * n + 7 ))\n   \
    \ local l=$(( 2 * n + 8 ))\n    local m=$(( 2 * n + 9 ))\n    local n=$(( 2 *\
    \ n + 10 ))\n    local o=$(( 2 * n + 11 ))\n    local p=$(( 2 * n + 12 ))\n  \
    \  local q=$(( 2 * n + 13 ))\n    local r=$(( 2 * n + 14 ))\n    local s=$(( 2\
    \ * n + 15 ))\n    local t=$(( 2 * n + 16 ))\n    local u=$(( 2 * n + 17 ))\n\
    \    local v=$(( 2 * n + 18 ))\n    local w=$(( 2 * n + 19 ))\n    local x=$((\
    \ 2 * n + 20 ))\n    local y=$(( 2 * n + 21 ))\n    local z=$(( 2 * n + 22 ))\n\
    \    local A=$(( 2 * n + 23 ))\n    local B=$(( 2 * n + 24 ))\n    local C=$((\
    \ 2 * n + 25 ))\n    local D=$(( 2 * n + 26 ))\n    local E=$(( 2 * n + 27 ))\n\
    \    local F=$(( 2 * n + 28 ))\n    local G=$(( 2 * n + 29 ))\n    local H=$((\
    \ 2 * n + 30 ))\n    local I=$(( 2 * n + 31 ))\n    local J=$(( 2 * n + 32 ))\n\
    \    local K=$(( 2 * n + 33 ))\n    local L=$(( 2 * n + 34 ))\n    local M=$((\
    \ 2 * n + 35 ))\n    local N=$(( 2 * n + 36 ))\n    local O=$(( 2 * n + 37 ))\n\
    \    local P=$(( 2 * n + 38 ))\n    local Q=$(( 2 * n + 39 ))\n    local R=$((\
    \ 2 * n + 40 ))\n    local S=$(( 2 * n + 41 ))\n    local T=$(( 2 * n + 4\n}\n\
    \ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1h_3whet.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1h_3whet.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local result=()\n    local i\n\
    \    for (( i=1; i<=$n; i++ )); do\n        result+=($a)\n        if [ $((i %\
    \ 2)) -eq 0 ]; then\n            a=$((a + b))\n        else\n            b=$((b\
    \ + c))\n        fi\n        c=$((c + d))\n        d=$((d + 1))\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  \n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local sum=0\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local p=1\n    local q=1\n    local r=1\n    local s=1\n  \
    \  local t=1\n    local u=1\n    local v=1\n    local w=1\n    local x=1\n   \
    \ local y=1\n    local z=1\n    local a=1\n    local b=1\n    local c=1\n    local\
    \ d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n\
    \    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local n=1\n \
    \   local p=1\n    local q=1\n    local r=1\n    local s=1\n    local t=1\n  \
    \  local u=1\n    local v=1\n    local w=1\n    local x=1\n    local y=1\n   \
    \ local z=1\n    local a=1\n    local b=1\n    local c=1\n    local d=1\n    local\
    \ e=1\n    local f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n\
    \    local k=1\n    local l=1\n    local m=1\n    local n=1\n    local p=1\n \
    \   local q=1\n    local r=1\n    local s=1\n    local t=1\n    local u=1\n  \
    \  local v=1\n    local w=1\n    local x=1\n    local y=1\n    local z=1\n   \
    \ local a=1\n    local b=1\n    local c=1\n    local d=1\n    local e=1\n    local\
    \ f=1\n    local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n\
    \    local l=1\n    local m=1\n    local n=1\n    local p=1\n    local q=1\n \
    \   local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n  \
    \  local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n   \
    \ local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n    local\
    \ g=1\n    local h=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    if [ $(( $n % 2 )) -eq 0\
    \ ]; then\n      sum=$(( $sum + $c ))\n      echo $sum\n    fi\n    sum=$(( $sum\
    \ + $d ))\n    echo $sum\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n  done\n}\n\
    \ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local sum=0\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    local e=1\n    local f=1\n    local g=1\n    local h=1\n\
    \    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n \
    \   local n=1\n    local o=1\n    local p=1\n    local q=1\n    local r=1\n  \
    \  local s=1\n    local t=1\n    local u=1\n    local v=1\n    local w=1\n   \
    \ local x=1\n    local y=1\n    local z=1\n    local a=1\n    local b=1\n    local\
    \ c=1\n    local d=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  local x=1\n  local y=1\n  local\
    \ z=1\n  local a=1\n  local b=1\n  local c=1\n  local d=1\n  local e=1\n  local\
    \ f=1\n  local g=1\n  local h=1\n  local i=1\n  local j=1\n  local k=1\n  local\
    \ l=1\n  local m=1\n  local n=1\n  local o=1\n  local p=1\n  local q=1\n  local\
    \ r=1\n  local s=1\n  local t=1\n  local u=1\n  local v=1\n  local w=1\n  local\
    \ x=1\n  local y=1\n  local z=1\n  local a=1\n  local b=1\n  local c=1\n  local\
    \ d=1\n  local e=1\n  local f=1\n  local g=1\n  local h=1\n  local i=1\n  local\
    \ j=1\n  local k=1\n  local l=1\n  local m=1\n  local n=1\n  local o=1\n  local\
    \ p=1\n  local q=1\n  local r=1\n  local s=1\n  local t=1\n  local u=1\n  local\
    \ v=1\n  local w=1\n  local x=1\n  local y=1\n  local z=1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local e=1\n  local f=1\n  local g=1\n  local\
    \ h=1\n  local i=1\n  local j=1\n  local k=1\n  local l=1\n  local m=1\n  local\
    \ n=1\n  local o=1\n  local p=1\n  local q=1\n  local r=1\n  local s=1\n  local\
    \ t=1\n  local u=1\n  local v=1\n  local w=1\n  \n}\n\ncandidate() {\n    tri\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n\
    \    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"\
    1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    local x=1\n    local y=1\n    local z=1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local e=1\n    local f=1\n   \
    \ local g=1\n    local h=1\n    local i=1\n    local j=1\n    local k=1\n    local\
    \ l=1\n    local m=1\n    local n=1\n    local o=1\n    local p=1\n    local q=1\n\
    \    local r=1\n    local s=1\n    local t=1\n    local u=1\n    local v=1\n \
    \   local w=1\n    \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $(( a\
    \ + b + c ))\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3\
    \ 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  for i in $(seq 1 $n);\
    \ do\n    sum=$(( $a + $b ))\n    echo $sum\n    [ $(( $i % 2 )) -eq 0 ] && b=$sum\n\
    \    [ $(( $i % 2 )) -eq 1 ] && c=$sum\n    sum=$(( $c + $d ))\n    echo $sum\n\
    \    [ $(( $i % 2 )) -eq 0 ] && d=$sum\n    [ $(( $i % 2 )) -eq 1 ] && a=$sum\n\
    \  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\"\
    \ ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\"\
    ) = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n\
    \    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"\
    9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3\
    \ 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 1 ))\n  local d=$((\
    \ 3 * n - 1 ))\n  local result\n  result=$(( a + b + c + d ))\n  echo $result\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 3 * n - 1 ))\n  local c=$(( 3 * n + 2 ))\n  echo $a $b\
    \ $c\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( ${n}\
    \ + 1 ))\n    local b=$(( ${n} - 1 ))\n    local c=$(( ${n} + 1 ))\n    local\
    \ d=$(( ${n} - 1 ))\n    local res\n    local i\n    local j\n    local k\n  \
    \  local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 1\
    \ + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n    local c=$(( 1 + n / 2 ))\n   \
    \ local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2 ))\n    local f=$(( 1 +\
    \ n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$(( 1 + n / 2 ))\n    local\
    \ i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n    local k=$(( 1 + n / 2\
    \ ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1 + n / 2 ))\n    local n=$((\
    \ 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n    local p=$(( 1 + n / 2 ))\n \
    \   local q=$(( 1 + n / 2 ))\n    local r=$(( 1 + n / 2 ))\n    local s=$(( 1\
    \ + n / 2 ))\n    local t=$(( 1 + n / 2 ))\n    local u=$(( 1 + n / 2 ))\n   \
    \ local v=$(( 1 + n / 2 ))\n    local w=$(( 1 + n / 2 ))\n    local x=$(( 1 +\
    \ n / 2 ))\n    local y=$(( 1 + n / 2 ))\n    local z=$(( 1 + n / 2 ))\n    local\
    \ a=$(( 1 + n / 2 ))\n    local b=$(( 1 + n / 2 ))\n    local c=$(( 1 + n / 2\
    \ ))\n    local d=$(( 1 + n / 2 ))\n    local e=$(( 1 + n / 2 ))\n    local f=$((\
    \ 1 + n / 2 ))\n    local g=$(( 1 + n / 2 ))\n    local h=$(( 1 + n / 2 ))\n \
    \   local i=$(( 1 + n / 2 ))\n    local j=$(( 1 + n / 2 ))\n    local k=$(( 1\
    \ + n / 2 ))\n    local l=$(( 1 + n / 2 ))\n    local m=$(( 1 + n / 2 ))\n   \
    \ local n=$(( 1 + n / 2 ))\n    local o=$(( 1 + n / 2 ))\n    local p=$(( 1 +\
    \ n / 2 ))\n    local \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  echo $a $b $c\n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local result=()\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    \n    if [ $(( i % 2 ))\
    \ -eq 0 ]; then\n      sum=$(( $sum + $c ))\n      echo $sum\n    fi\n    \n \
    \   sum=$(( $sum + $d ))\n    echo $sum\n    \n    if [ $(( i % 2 )) -eq 1 ];\
    \ then\n      sum=$(( $sum + $c ))\n      echo $sum\n    fi\n    \n    a=$b\n\
    \    b=$c\n    c=$d\n    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[\
    \ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8\
    \ 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15\
    \ 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n   \
    \ [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120\
    \ 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"\
    1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=1\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    local i\n   \
    \ local j\n    local k\n    local l\n    local m\n    local n\n    local o\n \
    \   local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local sum\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local l\n    local m\n    \n\
    }\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
    \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3\
    \ 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[\
    \ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") =\
    \ \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4\
    \ 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum\n  local i\n  \n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  \n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=$(( 3\
    \ * n + 1 ))\n    local b=$(( 3 * n + 2 ))\n    local c=$(( 3 * n + 3 ))\n   \
    \ local d=$(( 3 * n + 4 ))\n    local e=$(( 3 * n + 5 ))\n    local f=$(( 3 *\
    \ n + 6 ))\n    local g=$(( 3 * n + 7 ))\n    local h=$(( 3 * n + 8 ))\n    local\
    \ i=$(( 3 * n + 9 ))\n    local j=$(( 3 * n + 10 ))\n    local k=$(( 3 * n + 11\
    \ ))\n    local l=$(( 3 * n + 12 ))\n    local m=$(( 3 * n + 13 ))\n    local\
    \ n=$(( 3 * n + 14 ))\n    local o=$(( 3 * n + 15 ))\n    local p=$(( 3 * n +\
    \ 16 ))\n    local q=$(( 3 * n + 17 ))\n    local r=$(( 3 * n + 18 ))\n    local\
    \ s=$(( 3 * n + 19 ))\n    local t=$(( 3 * n + 20 ))\n    local u=$(( 3 * n +\
    \ 21 ))\n    local v=$(( 3 * n + 22 ))\n    local w=$(( 3 * n + 23 ))\n    local\
    \ x=$(( 3 * n + 24 ))\n    local y=$(( 3 * n + 25 ))\n    local z=$(( 3 * n +\
    \ 26 ))\n    local A=$(( 3 * n + 27 ))\n    local B=$(( 3 * n + 28 ))\n    local\
    \ C=$(( 3 * n + 29 ))\n    local D=$(( 3 * n + 30 ))\n    local E=$(( 3 * n +\
    \ 31 ))\n    local F=$(( 3 * n + 32 ))\n    local G=$(( 3 * n + 33 ))\n    local\
    \ H=$(( 3 * n + 34 ))\n    local I=$(( 3 * n + 35 ))\n    local J=$(( 3 * n +\
    \ 36 ))\n    local K=$(( 3 * n + 37 ))\n    local L=$(( 3 * n + 38 ))\n    local\
    \ M=$(( 3 * n + 39 ))\n    local N=$(( 3 * n + 40 ))\n    local O=$(( 3 * n +\
    \ 41 ))\n    local P=$(( 3 * n + 42 ))\n    local Q=$(( 3 * n + 43 ))\n    local\
    \ R=$(( 3 * n + 44 ))\n    local S=$(( 3 * n + 45 ))\n    local T=$((\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflrqol7c.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmpflrqol7c.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( 3 * n\
    \ + 1 ))\n  local b=$(( 2 * n + 1 ))\n  local c=$(( n + 1 ))\n  local d=$(( n\
    \ + 1 ))\n  local e=$(( n + 1 ))\n  local f=$(( n + 1 ))\n  local g=$(( n + 1\
    \ ))\n  local h=$(( n + 1 ))\n  local i=$(( n + 1 ))\n  local j=$(( n + 1 ))\n\
    \  local k=$(( n + 1 ))\n  local l=$(( n + 1 ))\n  local m=$(( n + 1 ))\n  local\
    \ n=$(( n + 1 ))\n  local o=$(( n + 1 ))\n  local p=$(( n + 1 ))\n  local q=$((\
    \ n + 1 ))\n  local r=$(( n + 1 ))\n  local s=$(( n + 1 ))\n  local t=$(( n +\
    \ 1 ))\n  local u=$(( n + 1 ))\n  local v=$(( n + 1 ))\n  local w=$(( n + 1 ))\n\
    \  local x=$(( n + 1 ))\n  local y=$(( n + 1 ))\n  local z=$(( n + 1 ))\n  local\
    \ A=$(( n + 1 ))\n  local B=$(( n + 1 ))\n  local C=$(( n + 1 ))\n  local D=$((\
    \ n + 1 ))\n  local E=$(( n + 1 ))\n  local F=$(( n + 1 ))\n  local G=$(( n +\
    \ 1 ))\n  local H=$(( n + 1 ))\n  local I=$(( n + 1 ))\n  local J=$(( n + 1 ))\n\
    \  local K=$(( n + 1 ))\n  local L=$(( n + 1 ))\n  local M=$(( n + 1 ))\n  local\
    \ N=$(( n + 1 ))\n  local O=$(( n + 1 ))\n  local P=$(( n + 1 ))\n  local Q=$((\
    \ n + 1 ))\n  local R=$(( n + 1 ))\n  local S=$(( n + 1 ))\n  local T=$(( n +\
    \ 1 ))\n  local U=$(( n + 1 ))\n  local V=$(( n + 1 ))\n  local W=$(( n + 1 ))\n\
    \  local X=$(( n + 1 ))\n  local Y=$\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate\
    \ \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n\
    \    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24\
    \ 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026608
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=1\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n  for i in $(seq 1\
    \ $n); do\n    sum=$(( $a + $c + $d ))\n    a=$b\n    b=$c\n    c=$d\n    d=$sum\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local sum=0\n  local\
    \ i=1\n  local j=1\n  local k=1\n  while [ $i -le $n ]; do\n    sum=$((sum+j))\n\
    \    j=$((j+i))\n    i=$((i+k))\n    k=$((k+2))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"\
    1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate\
    \ \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\"\
    \ ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
    \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3\
    \ 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48\
    \ 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 2
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n    local n=$1\n    local a=0\n  \
    \  local b=1\n    local c=1\n    local d=1\n    local sum=0\n    while [ $n -gt\
    \ 0 ]; do\n        sum=$(( $a + $b ))\n        [ $n -eq 1 ] && break\n       \
    \ [ $n -eq 2 ] && break\n        [ $n -eq 3 ] && break\n        [ $n -eq 4 ] &&\
    \ break\n        [ $n -eq 5 ] && break\n        [ $n -eq 6 ] && break\n      \
    \  [ $n -eq 7 ] && break\n        [ $n -eq 8 ] && break\n        [ $n -eq 9 ]\
    \ && break\n        [ $n -eq 10 ] && break\n        [ $n -eq 11 ] && break\n \
    \       [ $n -eq 12 ] && break\n        [ $n -eq 13 ] && break\n        [ $n -eq\
    \ 14 ] && break\n        [ $n -eq 15 ] && break\n        [ $n -eq 16 ] && break\n\
    \        [ $n -eq 17 ] && break\n        [ $n -eq 18 ] && break\n        [ $n\
    \ -eq 19 ] && break\n        [ $n -eq 20 ] && break\n        [ $n -eq 21 ] &&\
    \ break\n        [ $n -eq 22 ] && break\n        [ $n -eq 23 ] && break\n    \
    \    [ $n -eq 24 ] && break\n        [ $n -eq 25 ] && break\n        [ $n -eq\
    \ 26 ] && break\n        [ $n -eq 27 ] && break\n        [ $n -eq 28 ] && break\n\
    \        [ $n -eq 29 ] && break\n        [ $n -eq 30 ] && break\n        [ $n\
    \ -eq 31 ] && break\n        [ $n -eq 32 ] && break\n        [ $n -eq 33 ] &&\
    \ break\n        [ $n -eq 34 ] && break\n        [ $n -eq 35 ] && break\n    \
    \    [ $n -eq 36 ] && break\n        [ $n -eq 37 ] && break\n        [ $n -eq\
    \ 38 ] && break\n        [ $n -eq 39 ] && break\n        [ $n -eq 40 ] && break\n\
    \        [ $n -eq 41 ] && break\n        [ $n -eq 42 ] && break\n        [ $n\
    \ -eq 43 ] && break\n        [ $n -eq 44 ] && break\n        [ $n -eq 45 ] &&\
    \ break\n        [ $n -eq 46 \n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"\
    4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n   \
    \ [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"\
    1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n\
    \    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate\
    \ \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[\
    \ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpm1z2c3kj.sh: line 74: syntax error near unexpected token `}''

    /tmp/tmpm1z2c3kj.sh: line 74: `}''

    '
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=0\n  local\
    \ b=1\n  local c=1\n  local d=1\n  local sum=0\n  local i\n\n  for i in $(seq\
    \ 1 $n); do\n    sum=$(( $a + $b ))\n    echo $sum\n    a=$b\n    b=$c\n    c=$d\n\
    \    d=$sum\n  done\n}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"\
    1 3 2 8 3\" ]]\n    [[ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate\
    \ \"6\") = \"1 3 2 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4\
    \ 24\" ]]\n    [[ $(candidate \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate\
    \ \"9\") = \"1 3 2 8 3 15 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2\
    \ 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\"\
    ) = \"1\" ]]\n    [[ $(candidate \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609
- exit_code: 1
  program: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply\
    \ by mathematicians in \n# the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
    # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
    # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
    \ given a non-negative integer number n, you have to a return a list of the \n\
    # first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# tri(3) = [1,\
    \ 3, 2, 8]\n#\n# $1 is an integer\ntri() {\n  local n=$1\n  local a=$(( ${n} *\
    \ 3 ))\n  local b=$(( ${n} - 1 ))\n  local c=$(( ${n} + 1 ))\n  local d=$(( ${n}\
    \ + 2 ))\n  local e=$(( ${n} + 3 ))\n  local f=$(( ${n} + 4 ))\n  local g=$((\
    \ ${n} + 5 ))\n  local h=$(( ${n} + 6 ))\n  local i=$(( ${n} + 7 ))\n  local j=$((\
    \ ${n} + 8 ))\n  local k=$(( ${n} + 9 ))\n  local l=$(( ${n} + 10 ))\n  local\
    \ m=$(( ${n} + 11 ))\n  local n=$(( ${n} + 12 ))\n  local o=$(( ${n} + 13 ))\n\
    \  local p=$(( ${n} + 14 ))\n  local q=$(( ${n} + 15 ))\n  local r=$(( ${n} +\
    \ 16 ))\n  local s=$(( ${n} + 17 ))\n  local t=$(( ${n} + 18 ))\n  local u=$((\
    \ ${n} + 19 ))\n  local v=$(( ${n} + 20 ))\n  local w=$(( ${n} + 21 ))\n  local\
    \ x=$(( ${n} + 22 ))\n  local y=$(( ${n} + 23 ))\n  local z=$(( ${n} + 24 ))\n\
    \  local A=$(( ${n} + 25 ))\n  local B=$(( ${n} + 26 ))\n  local C=$(( ${n} +\
    \ 27 ))\n  local D=$(( ${n} + 28 ))\n  local E=$(( ${n} + 29 ))\n  local F=$((\
    \ ${n} + 30 ))\n  local G=$(( ${n} + 31 ))\n  local H=$(( ${n} + 32 ))\n  local\
    \ I=$(( ${n} + 33 ))\n  local J=$(( ${n} + 34 ))\n  local K=$(( ${n} + 35 ))\n\
    \  local L=$(( ${n} + 36 ))\n  local M=$(( ${n} + 37 ))\n}\n\ncandidate() {\n\
    \    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1 3\
    \ 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[ $(candidate \"\
    5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2 8 3 15 4\" ]]\n\
    \    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate \"8\"\
    ) = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15 4 24\
    \ 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63 8\
    \ 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026609

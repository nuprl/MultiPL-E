name: HumanEval_87_get_row
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n#\
  \ each tuple is a coordinate - (row, columns), starting with 0.\n# Sort coordinates\
  \ initially by rows in ascending order.\n# Also, sort coordinates of the row by\
  \ columns in descending order.\n# Examples:\n# get_row([\n# [1,2,3,4,5,6],\n# [1,2,3,4,1,6],\n\
  # [1,2,3,4,5,1]\n# ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n# get_row([],\
  \ 1) == []\n# get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]\n#\n# $1 is a newline-separated,\
  \ space-separated list\n# $2 is an integer\nget_row() {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: []
stop_tokens:
- "\n}"

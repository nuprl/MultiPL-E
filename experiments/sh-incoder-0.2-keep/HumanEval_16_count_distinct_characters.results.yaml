language: sh
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        [[ $char =~ [A-Z] ]] && count=$((count+1))\n        [[ $char =~\
    \ [a-z] ]] && count=$((count+1))\n        [[ $char =~ [0-9] ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/ /\\n/g'); do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char == [A-Z] ]] && count=$((count+1))\n \
    \       [[ $char == [a-z] ]] && count=$((count+1))\n        [[ $char == [0-9]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && return 0\n   \
    \     ((count++))\n    done\n    return $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [[ $character == [A-Z] ]] && count=$((count+1))\n\
    \        [[ $character == [a-z] ]] && count=$((count+1))\n        [[ $character\
    \ == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"${character}\" == \"${character^^}\"\
    \ ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local char\n  local charcount\n  local\
    \ charcount2\n  local charcount3\n  local charcount4\n  local charcount5\n  local\
    \ charcount6\n  local charcount7\n  local charcount8\n  local charcount9\n  local\
    \ charcount10\n  local charcount11\n  local charcount12\n  local charcount13\n\
    \  local charcount14\n  local charcount15\n  local charcount16\n  local charcount17\n\
    \  local charcount18\n  local charcount19\n  local charcount20\n  local charcount21\n\
    \  local charcount22\n  local charcount23\n  local charcount24\n  local charcount25\n\
    \  local charcount26\n  local charcount27\n  local charcount28\n  local charcount29\n\
    \  local charcount30\n  local charcount31\n  local charcount32\n  local charcount33\n\
    \  local charcount34\n  local charcount35\n  local charcount36\n  local charcount37\n\
    \  local charcount38\n  local charcount39\n  local charcount40\n  local charcount41\n\
    \  local charcount42\n  local charcount43\n  local charcount44\n  local charcount45\n\
    \  local charcount46\n  local charcount47\n  local charcount48\n  local charcount49\n\
    \  local charcount50\n  local charcount51\n  local charcount52\n  local charcount53\n\
    \  local charcount54\n  local charcount55\n  local charcount56\n  local charcount57\n\
    \  local charcount58\n  local charcount59\n  local charcount60\n  local charcount61\n\
    \  local charcount62\n  local charcount63\n  local charcount64\n  local charcount65\n\
    \  local charcount66\n  local charcount67\n  local charcount68\n  local charcount69\n\
    \  local charcount70\n  local charcount71\n  local charcount72\n  local charcount73\n\
    \  local charcount74\n  local charcount75\n  local charcount76\n  local charcount77\n\
    \  local charcount78\n  local charcount79\n  local charcount80\n  local charcount81\n\
    \  local charcount82\n  local charcount83\n\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/./& /g'); do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ (( i=0; i<${#string}; i++ )); do\n    character=\"${string:$i:1}\"\n    case\
    \ \"$character\" in\n      [a-z]) \\\n        (( count++ )) ;;\n      [A-Z]) \\\
    \n        (( count++ )) ;;\n      [0-9]) \\\n        (( count++ )) ;;\n      *)\
    \ ;;\n    esac\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [[ $char =~ ^[[:upper:]]$ ]] && count=$((count+1))\n\
    \        [[ $char =~ ^[[:lower:]]$ ]] && count=$((count+1))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != ${char^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^^} ]] && [[ $char != ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]]\
    \ && [[ $char != ${char^^^^^^^} ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp37iq27bu.sh: line 14: syntax error in conditional expression

    /tmp/tmp37iq27bu.sh: line 17: syntax error near `candidate(''

    /tmp/tmp37iq27bu.sh: line 17: `candidate() {''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  while read -r\
    \ character; do\n    count=$((count+1))\n  done < <(echo \"$string\" | tr A-Z\
    \ a-z)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/\\(.\\)/\\U\\1/')\n    do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [[ $character == [A-Z] ]] && count=$((count+1))\n\
    \        [[ $character == [a-z] ]] && count=$((count+1))\n        [[ $character\
    \ == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char == $char ]] && count=$((count+1))\n \
    \   done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  while read -r char;\
    \ do\n    [[ \"$char\" =~ ^[[:upper:]]$ ]] && count=$((count+1))\n    [[ \"$char\"\
    \ =~ ^[[:lower:]]$ ]] && count=$((count+1))\n  done <<< \"$string\"\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [[ \"$character\"\
    \ == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char,,}\" == \"${char,,}\" ] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/\\(.\\)/\\L\\1/')\n    do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        [[ $char != $char ]] && [[ $char != ${char^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^^} ]] && [[ $char != ${char^^^^^} ]] &&\
    \ [[ $char != ${char^^^^^^} ]] && [[ $char != ${char^^^^^^^} ]] && [[ $char !=\
    \ ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^} ]]\
    \ && [[ $char != ${char^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^} ]] && \n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplmzxriyx.sh: line 15: syntax error near unexpected token `}''

    /tmp/tmplmzxriyx.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"$char\" ] && continue\n        [ \"$char\" == \"$char\"\
    \ ] && continue\n        ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local char\n  local char_count\n  local\
    \ char_array\n  local char_array_count\n  local char_array_index\n  local char_array_length\n\
    \  local char_array_element\n  local char_array_element_count\n  local char_array_element_index\n\
    \  local char_array_element_length\n  local char_array_element_value\n  local\
    \ char_array_element_value_length\n  local char_array_element_value_length_count\n\
    \  local char_array_element_value_length_index_count\n  local char_array_element_value_length_index_count\n\
    \  local char_array_element_value_length_index_count_index\n  local char_array_element_value_length_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index\n  local\
    \ char_array_element_value_length_index_count_index_count_index_count\n  local\
    \ char_array_element_value_length_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\n\
    \  local char_array_element_value_length_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count\n\
    \  local char_array_\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"$character\" == \"$string\" ] &&\
    \ continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  while IFS= read\
    \ -r character; do\n    [[ \"$character\" =~ ^[[:upper:]]$ ]] || continue\n  \
    \  [[ \"$character\" =~ ^[[:lower:]]$ ]] || continue\n    (( ++count ))\n  done\
    \ <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local lower\n\
    \  local upper\n  local char\n  local char2\n  local char3\n  local char4\n  local\
    \ char5\n  local char6\n  local char7\n  local char8\n  local char9\n  local char10\n\
    \  local char11\n  local char12\n  local char13\n  local char14\n  local char15\n\
    \  local char16\n  local char17\n  local char18\n  local char19\n  local char20\n\
    \  local char21\n  local char22\n  local char23\n  local char24\n  local char25\n\
    \  local char26\n  local char27\n  local char28\n  local char29\n  local char30\n\
    \  local char31\n  local char32\n  local char33\n  local char34\n  local char35\n\
    \  local char36\n  local char37\n  local char38\n  local char39\n  local char40\n\
    \  local char41\n  local char42\n  local char43\n  local char44\n  local char45\n\
    \  local char46\n  local char47\n  local char48\n  local char49\n  local char50\n\
    \  local char51\n  local char52\n  local char53\n  local char54\n  local char55\n\
    \  local char56\n  local char57\n  local char58\n  local char59\n  local char60\n\
    \  local char61\n  local char62\n  local char63\n  local char64\n  local char65\n\
    \  local char66\n  local char67\n  local char68\n  local char69\n  local char70\n\
    \  local char71\n  local char72\n  local char73\n  local char74\n  local char75\n\
    \  local char76\n  local char77\n  local char78\n  local char79\n  local char80\n\
    \  local char81\n  local char82\n  local char83\n  local char84\n  local char85\n\
    \  local char86\n  local char87\n  local char88\n  local char89\n  local char90\n\
    \  local char91\n  local char92\n  local char93\n  local char94\n  local char95\n\
    \  local char96\n  local char97\n  local char98\n\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/\\(.\\)/\\L\\1/')\n    do\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ (( i=1; i<${#string}; i++ )); do\n    character=\"${string:$i:1}\"\n    [[ \"\
    $character\" =~ [A-Z] ]] || continue\n    (( count++ ))\n  done\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  while read -r\
    \ character; do\n    [[ \"$character\" =~ ^[[:upper:]]+$ ]] || continue\n    [[\
    \ \"$character\" =~ ^[[:lower:]]+$ ]] || continue\n    ((count++))\n  done <<<\
    \ \"$string\"\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char == [A-Z] ]] && count=$((count+1))\n \
    \       [[ $char == [a-z] ]] && count=$((count+1))\n        [[ $char == [0-9]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [[ \"$character\"\
    \ == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"${character}\" == \"${character^^}\"\
    \ ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != ${char^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^} ]] && [[ $char !=\
    \ ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]] && [[ $char != ${char^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^} ]] && [[\
    \ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] &&\
    \ [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph8tpjffd.sh: line 14: syntax error in conditional expression

    /tmp/tmph8tpjffd.sh: line 17: syntax error near `candidate(''

    /tmp/tmph8tpjffd.sh: line 17: `candidate() {''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [[ \"$character\"\
    \ == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in ${string//[^a-zA-Z]};\
    \ do\n        count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char =~ ^([[:lower:]]|[[:upper:]])$ ]] ||\
    \ continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed -e 's/./\\L&/g'); do\n        ((count++))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char =~ ^([[:lower:][:upper:]])$ ]] || continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  while read -r char;\
    \ do\n    ((count++))\n  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"${string^^}\" ] && continue\n        [ \"$char\" == \"\
    ${string^^^}\" ] && continue\n        [ \"$char\" == \"${string^^^^}\" ] && continue\n\
    \        ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n\n  while read -r char;\
    \ do\n    [[ \"$char\" =~ ^([[:upper:]])+$ ]] || continue\n    count=$(( ${count}\
    \ + ${#char} - 1 ))\n  done < <(echo \"$string\" | tr A-Z a-z)\n\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local character\n  local i\n  for i\
    \ in $(seq 0 ${#string}); do\n    character=${string:$i:1}\n    [[ \"$character\"\
    \ =~ [A-Z] ]] && count=$((count+1))\n    [[ \"$character\" =~ [a-z] ]] && count=$((count+1))\n\
    \    [[ \"$character\" =~ [0-9] ]] && count=$((count+1))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [[ $char =~ [A-Z] ]] && count=$((count+1))\n        [[\
    \ $char =~ [a-z] ]] && count=$((count+1))\n        [[ $char =~ [0-9] ]] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local characters=$string\n  \
    \  local character\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate() {\n \
    \   count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  local char_count\n\
    \  local char_index\n  local char_index2\n  local char_index3\n  local char_index4\n\
    \  local char_index5\n  local char_index6\n  local char_index7\n  local char_index8\n\
    \  local char_index9\n  local char_index10\n  local char_index11\n  local char_index12\n\
    \  local char_index13\n  local char_index14\n  local char_index15\n  local char_index16\n\
    \  local char_index17\n  local char_index18\n  local char_index19\n  local char_index20\n\
    \  local char_index21\n  local char_index22\n  local char_index23\n  local char_index24\n\
    \  local char_index25\n  local char_index26\n  local char_index27\n  local char_index28\n\
    \  local char_index29\n  local char_index30\n  local char_index31\n  local char_index32\n\
    \  local char_index33\n  local char_index34\n  local char_index35\n  local char_index36\n\
    \  local char_index37\n  local char_index38\n  local char_index39\n  local char_index40\n\
    \  local char_index41\n  local char_index42\n  local char_index43\n  local char_index44\n\
    \  local char_index45\n  local char_index46\n  local char_index47\n  local char_index48\n\
    \  local char_index49\n  local char_index50\n  local char_index51\n  local char_index52\n\
    \  local char_index53\n  local char_index54\n  local char_index55\n  local char_index56\n\
    \  local char_index57\n  local char_index58\n  local char_index59\n  local char_index60\n\
    \  local char_index61\n  local char_index62\n  local char_index63\n  local char_index64\n\
    \  local char_index65\n  local char_index66\n  local char_index67\n  local char_index68\n\
    \  local char_index69\n  local char_index70\n  local char_index71\n  local char_index72\n\
    \  local char_index73\n  local char_index74\n  local char_index75\n  local char_index76\n\
    \  local char_index77\n  local char_index78\n  local char_index79\n  local char_index80\n\
    \  local char_index81\n  local char_index82\n  \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != [A-Z] ]] &&\
    \ [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[\
    \ $char != [,] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,]\
    \ ]] && [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]]\
    \ && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char\
    \ != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && \n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_toqynlt.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmp_toqynlt.sh: line 14: syntax error near `&*''

    /tmp/tmp_toqynlt.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [~`] ]] && [[ $char != [|] ]] && [[ $char != [;] ]] && [[ $char
    != [,] ]] && [[ $char != [<] ]] && [[ $char != [>] ]] && [[ $char != [,] ]] &&
    [[ $char != [;] ]] && [[ $char != [,] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[
    $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;]
    ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char
    != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] &&
    [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char != [;] ]] && [[ $char !=
    [;] ]] && [[ $char != [;] ]] && ''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local character\n  local i\n  for i\
    \ in $(seq 0 $((${#string} - 1)))\n  do\n    character=${string:$i:1}\n    [[\
    \ \"$character\" =~ [A-Za-z] ]] || continue\n    ((count++))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"$character\" == \"$string\" ] &&\
    \ continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && return 0\n   \
    \     [ \"$char\" == \"$char\" -a \"$char\" != \"$char\" ] && return 1\n     \
    \   count=$((count+1))\n    done\n    return $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"${string^}\" ] && continue\n        ((count++))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  while read -r\
    \ character; do\n    count=$((count+1))\n  done <<< \"$string\"\n  echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != ${char^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^^} ]] && [[ $char !=\
    \ ${char^^^^^} ]] && [[ $char != ${char^^^^^^} ]] && [[ $char != ${char^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^} ]] && [[\
    \ $char != ${char^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^} ]] && [[ $char\
    \ != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^} ]] &&\
    \ [[ $char != ${char^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^}\
    \ ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^^^} ]] && [[ $char != ${char^^^^^^^^^^^^^^^^^^\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptad_t85u.sh: line 14: syntax error in conditional expression

    /tmp/tmptad_t85u.sh: line 17: syntax error near `candidate(''

    /tmp/tmptad_t85u.sh: line 17: `candidate() {''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  local char_count\n\
    \  local char_prev\n  local char_next\n  local char_prev_count\n  local char_next_count\n\
    \  local char_prev_char\n  local char_next_char\n  local char_prev_char_next\n\
    \  local char_next_char_prev\n  local char_prev_char_next_next\n  local char_next_char_prev_prev\n\
    \  local char_prev_char_next_next_prev\n  local char_next_char_prev_prev_next\n\
    \  local char_prev_char_next_next_prev_prev\n  local char_next_char_prev_prev_next_prev\n\
    \  local char_prev_char_next_next_prev_prev_next\n  local char_next_char_prev_prev_next_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_next_prev\n  local char_next_char_prev_prev_next_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_next_prev\n  local char_next_char_prev_prev_next_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_next_prev_prev\n  local\
    \ char_next_char_prev_prev_next_prev_prev_prev_prev_prev_prev\n  local char_prev_char_next_next_prev_prev_prev_prev_prev_prev_next_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_prev_prev_next_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_prev_next_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_next_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_prev_char_next_next_prev_prev_prev_prev_prev_next_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local char_next_char_prev_prev_\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [[ $char == [A-Z] ]] && count=$((count+1))\n \
    \       [[ $char == [a-z] ]] && count=$((count+1))\n        [[ $char == [0-9]\
    \ ]] && count=$((count+1))\n    done\n\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"${character}\" == \"${character^^}\"\
    \ ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [[ $char != $char ]] && [[ $char != ${char^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^^} ]] && [[ $char != ${char^^^^^}\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && return 0\n   \
    \     ((count++))\n    done\n    return $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        (( count++ ))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  for char in \"${string}\"\
    ; do\n    [[ \"$char\" =~ ^[[:upper:]]$ ]] && count=$((count+1))\n    [[ \"$char\"\
    \ =~ ^[[:lower:]]$ ]] && count=$((count+1))\n    [[ \"$char\" =~ ^[[:digit:]]$\
    \ ]] && count=$((count+1))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        [ \"${char}\" == \"${string^^}\" ] && continue\n        (( count++ ))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  local chars\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n\n  chars=$(echo \"$string\" | sed 's/ //g')\n\
    \  chars=$(echo \"$chars\" | sed 's/^[[:upper:]]*//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/[[:lower:]]*$//g')\n  chars=$(echo \"$chars\" | sed 's/[[:upper:]]*$//g')\n\
    \  chars=$(echo \"$chars\" | sed 's/^[[:lower:]]*//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/[[:upper:]]*$//g')\n  chars=$(echo \"$chars\" | sed 's/^[[:lower:]]*//g')\n\
    \  chars=$(echo \"$chars\" | sed 's/[[:upper:]]*$//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/^[[:lower:]]*//g')\n  chars=$(echo \"$chars\" | sed 's/[[:upper:]]*$//g')\n\
    \  chars=$(echo \"$chars\" | sed 's/^[[:lower:]]*//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/[[:upper:]]*$//g')\n  chars=$(echo \"$chars\" | sed 's/^[[:lower:]]*//g')\n\
    \  chars=$(echo \"$chars\" | sed 's/[[:upper:]]*$//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/^[[:lower:]]*//g')\n  chars=$(echo \"$chars\" | sed 's/[[:upper:]]*$//g')\n\
    \  chars=$(echo \"$chars\" | sed 's/^[[:lower:]]*//g')\n  chars=$(echo \"$chars\"\
    \ | sed 's/[[:upper:]]*$//g')\n  chars=$(echo \"$chars\" | sed 's/^\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpllwt2g7a.sh: line 51: unexpected EOF while looking for matching
    `''''

    /tmp/tmpllwt2g7a.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local char\n  while read -r char;\
    \ do\n    [[ \"$char\" =~ ^[[:upper:][:lower:]]$ ]] || continue\n    ((count++))\n\
    \  done <<< \"$string\"\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"$char\" ] && continue\n        ((count++))\n    done\n\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [[ $character == [A-Z] ]] && count=$((count+1))\n\
    \        [[ $character == [a-z] ]] && count=$((count+1))\n        [[ $character\
    \ == [0-9] ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in ${string//[^[:alpha:]]/};\
    \ do\n        count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != [A-Z] ]] &&\
    \ [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]\
    \ ]] && [\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd_x0q2l3.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmpd_x0q2l3.sh: line 14: syntax error near `&*''

    /tmp/tmpd_x0q2l3.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?/]
    ]] && [''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        [[ $char =~ ^[[:upper:]] ]] && count=$((count+1))\n \
    \       [[ $char =~ ^[[:lower:]] ]] && count=$((count+1))\n        [[ $char =~\
    \ ^[[:digit:]] ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        [ \"${char}\" == \"${string^^}\" ] && continue\n        ((count++))\n\
    \    done\n    echo \"${count}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local char\n  local chars\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [[ $char != ${char,,} ]] || continue\n       \
    \ ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [[ \"$character\"\
    \ == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        [[ $char =~ ^[[:upper:]] ]] || continue\n        ((count++))\n \
    \   done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && return 0\n   \
    \     [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"\
    ${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return\
    \ 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\"\
    \ == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\" ] &&\
    \ return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"\
    $char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" ] && return 0\n      \
    \  [ \"$char\" == \"${string^^}\" ] && return 0\n        [ \"$char\" == \"${string^^}\"\
    \ ] && return 0\n        [ \"$char\" == \"${string^^}\" \n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8ew1yub9.sh: line 52: syntax error near unexpected token `}''

    /tmp/tmp8ew1yub9.sh: line 52: `}''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char == [A-Z] ]] && count=$((count+1))\n \
    \       [[ $char == [a-z] ]] && count=$((count+1))\n        [[ $char == [0-9]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [ \"$character\"\
    \ == \"$i\" ] || [ \"$character\" == \"${i:0:1}\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [[ $char =~ ^([[:upper:]])$ ]] && count=$((count+1))\n\
    \        [[ $char =~ ^([[:lower:]])$ ]] && count=$((count+1))\n    done\n\n  \
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        [ \"${char}\" == \"${string^^}\" ] && continue\n        (( count++ ))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     [ \"$char\" == \"${string^}\" ] && continue\n        [ \"$char\" == \"${string^^}\"\
    \ ] && continue\n        [ \"$char\" == \"${string^^^}\" ] && continue\n     \
    \   ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        (( count++ ))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in ${string//,/\
    \ }; do\n        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char,,}\" = \"${char,,}\" ] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | tr [A-Z] [a-z]); do\n        ((count++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char,,}\" = \"${char,,}\" ] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | sed 's/./\\L&/g'); do\n        ((count++))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local character\n  local lower\n  local\
    \ upper\n  local lower_index\n  local upper_index\n  local i\n  lower=$(echo $string\
    \ | tr '[:upper:]' '[:lower:]')\n  upper=$(echo $string | tr '[:lower:]' '[:upper:]')\n\
    \  lower_index=$(echo $lower | tr '[:upper:]' '[:lower:]')\n  upper_index=$(echo\
    \ $upper | tr '[:lower:]' '[:upper:]')\n  for (( i=0; i<${#string}; i++ )); do\n\
    \    character=${string:$i:1}\n    lower=${lower:$i:1}\n    upper=${upper:$i:1}\n\
    \    if [[ $lower != $character ]]; then\n      lower_index=$((lower_index + 1))\n\
    \    fi\n    if [[ $upper != $character ]]; then\n      upper_index=$((upper_index\
    \ + 1))\n    fi\n  done\n  count=$((lower_index + upper_index))\n  echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=\"$1\"\n  local count=0\n  local character\n  local i\n  for\
    \ i in \"${string}\"; do\n    character=\"${i:0:1}\"\n    if [[ \"$character\"\
    \ == \"$i\" ]]; then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char,,}\" = \"${char,,}\" ] && count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n\n    for char in\
    \ $string; do\n        ((count++))\n    done\n\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local character\n  while read -r character;\
    \ do\n    ((count++))\n  done < <(echo \"$string\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]' | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:upper:]\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5qpl6t4a.sh: line 15: unexpected EOF while looking for matching
    `''''

    /tmp/tmp5qpl6t4a.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local character\n    for character\
    \ in $string; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in \"\
    ${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        [ \"${char}\" == \"${string^^}\" ] && continue\n        ((count++))\n\
    \    done\n    echo \"${count}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != ${char^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[\
    \ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^}\
    \ ]] && [[ $char != ${char^^^} ]] && [[ $char != ${char^^^} ]] && [[ $char !=\
    \ ${char^^^} \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpldpdc7h6.sh: line 14: syntax error in conditional expression

    /tmp/tmpldpdc7h6.sh: line 15: syntax error near `}''

    /tmp/tmpldpdc7h6.sh: line 15: `}''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [[ $char != $char ]] && [[ $char != [A-Z] ]] &&\
    \ [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]\
    \ ]] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3pc3wryu.sh: line 14: syntax error in conditional expression: unexpected
    token `&''

    /tmp/tmp3pc3wryu.sh: line 14: syntax error near `&*''

    /tmp/tmp3pc3wryu.sh: line 14: `        [[ $char != $char ]] && [[ $char != [A-Z]
    ]] && [[ $char != [a-z] ]] && [[ $char != [0-9] ]] && [[ $char != [!@#$%^&*()_+{}|:<>?]]
    ]] && count=$((count+1))''

    '
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"${char}\" == \"${string}\" ] && continue\n\
    \        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n  local string=$1\n  local count=0\n  local char\n  local char_count\n  local\
    \ char_count_temp\n  local char_count_temp2\n  local char_count_temp3\n  local\
    \ char_count_temp4\n  local char_count_temp5\n  local char_count_temp6\n  local\
    \ char_count_temp7\n  local char_count_temp8\n  local char_count_temp9\n  local\
    \ char_count_temp10\n  local char_count_temp11\n  local char_count_temp12\n  local\
    \ char_count_temp13\n  local char_count_temp14\n  local char_count_temp15\n  local\
    \ char_count_temp16\n  local char_count_temp17\n  local char_count_temp18\n  local\
    \ char_count_temp19\n  local char_count_temp20\n  local char_count_temp21\n  local\
    \ char_count_temp22\n  local char_count_temp23\n  local char_count_temp24\n  local\
    \ char_count_temp25\n  local char_count_temp26\n  local char_count_temp27\n  local\
    \ char_count_temp28\n  local char_count_temp29\n  local char_count_temp30\n  local\
    \ char_count_temp31\n  local char_count_temp32\n  local char_count_temp33\n  local\
    \ char_count_temp34\n  local char_count_temp35\n  local char_count_temp36\n  local\
    \ char_count_temp37\n  local char_count_temp38\n  local char_count_temp39\n  local\
    \ char_count_temp40\n  local char_count_temp41\n  local char_count_temp42\n  local\
    \ char_count_temp43\n  local char_count_temp44\n  local char_count_temp45\n  local\
    \ char_count_temp46\n  local char_count_temp47\n  local char_count_temp48\n  local\
    \ char_count_temp49\n  local char_count_temp50\n  local char_count_temp51\n  local\
    \ char_count_temp52\n  local char_count_temp53\n  local char_count_temp54\n  local\
    \ char_count_temp55\n  local char_count_temp56\n  local char_count_temp57\n  local\
    \ char_count_temp58\n  local char_count_temp59\n  local char_count_temp60\n  local\
    \ char_count_temp61\n  local char_count_temp62\n  local char_count_temp63\n  local\
    \ char_count_temp64\n  local char_count_temp65\n  local char_count_temp66\n  local\
    \ char_count_temp67\n  local char_count_temp68\n  local char_count_temp69\n  local\
    \ char_count_temp70\n  local char_\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in ${string//[^A-Za-z]};\
    \ do\n        count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"${character}\" == \"${character^^}\"\
    \ ] && count=$((count+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in ${string//[^a-zA-Z]};\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local char\n    for char\
    \ in \"${string}\"; do\n        [ \"$char\" == \"$string\" ] && continue\n   \
    \     (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        [ \"$character\" == \"$string\" ] &&\
    \ continue\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $string;\
    \ do\n        ((count++))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=$1\n    local count=0\n    local char\n    for char in $(echo\
    \ $string | tr [A-Z] [a-z]); do\n        ((count++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> count_distinct_characters('xyzXYZ')\n# 3\n\
    # >>> count_distinct_characters('Jerry')\n# 4\n#\n# $1 is a string\ncount_distinct_characters()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local character\n    for\
    \ character in \"${string}\"; do\n        ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025999

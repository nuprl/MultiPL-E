name: HumanEval_30_get_positive
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> get_positive([-1,\
  \ 2, -4, 5, 6])\n# [2, 5, 6]\n# >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10])\n# [5, 3, 2, 3, 9, 123, 1]\n#\n# $1 is a space-separated list\nget_positive()\
  \ {\n"
tests: "}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
  \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
  ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
completions: ["    local list=\"$1\"\n    local positive\n    positive=()\n    for\
    \ element in \"${list[@]}\"; do\n        if [[ ${element} -gt 0 ]]; then\n   \
    \         positive+=(\"${element}\")\n        fi\n    done\n    echo \"${positive[@]}\"",
  "    local list=\"$1\"\n    local positive\n    positive=()\n    for element in\
    \ $list; do\n        if (( element > 0 )); then\n            positive+=(\"$element\"\
    )\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"$1\"\n\
    \    local positive\n    positive=()\n    for element in $list; do\n        if\
    \ [[ $element -gt 0 ]]; then\n            positive+=(\"$element\")\n        fi\n\
    \    done\n    echo \"${positive[@]}\"", "  local numbers=$1\n  local positive=()\n\
    \  for number in $numbers; do\n    if [[ $number -gt 0 ]]; then\n      positive+=(\"\
    $number\")\n    fi\n  done\n  echo \"${positive[@]}\"", "  local list=\"$1\"\n\
    \  local positive\n  positive=()\n  for item in $list; do\n    if [[ $item -gt\
    \ 0 ]]; then\n      positive+=(\"$item\")\n    fi\n  done\n  echo \"${positive[@]}\"",
  "    local list=\"$1\"\n    local positive\n    positive=()\n    for element in\
    \ $list; do\n        if [[ $element -gt 0 ]]; then\n            positive+=(\"\
    $element\")\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"\
    $1\"\n    local positive\n    positive=()\n    for element in $list; do\n    \
    \    if (( element > 0 )); then\n            positive+=(\"$element\")\n      \
    \  fi\n    done\n    echo \"${positive[@]}\"", "    local numbers=$1\n    local\
    \ positive\n    positive=()\n    for number in $numbers; do\n        if (( number\
    \ > 0 )); then\n            positive+=(\"$number\")\n        fi\n    done\n  \
    \  echo \"${positive[@]}\"", "    local list=\"$1\"\n    local positive\n    positive=()\n\
    \    for element in $list; do\n        if [[ $element -gt 0 ]]; then\n       \
    \     positive+=(\"$element\")\n        fi\n    done\n    echo \"${positive[@]}\"",
  "    local list=\"$1\"\n    local positive\n    positive=()\n    for element in\
    \ $list; do\n        if [[ $element -gt 0 ]]; then\n            positive+=(\"\
    $element\")\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"\
    $1\"\n    local positive=()\n    local i\n    for (( i = 0; i < ${#list}; i++\
    \ )); do\n        if [[ ${list[i]} -gt 0 ]]; then\n            positive+=(\"${list[i]}\"\
    )\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"$1\"\n\
    \    local positive\n    positive=()\n    for element in $list; do\n        if\
    \ (( element > 0 )); then\n            positive+=(\"$element\")\n        fi\n\
    \    done\n    echo \"${positive[@]}\"", "    local items=(\"${@}\")\n    local\
    \ positive=()\n    for item in \"${items[@]}\"; do\n        if [[ ${item} -gt\
    \ 0 ]]; then\n            positive+=(\"${item}\")\n        fi\n    done\n    echo\
    \ \"${positive[@]}\"", "    local -n arr=$1\n    local ret=()\n    for x in \"\
    ${arr[@]}\"; do\n        if (( x < 0 )); then\n            echo \"$x\"\n     \
    \   else\n            ret+=(\"$x\")\n        fi\n    done\n    echo \"${ret[@]}\"",
  "    local list=\"$1\"\n    local positive\n    positive=()\n    for element in\
    \ ${list}; do\n        if [[ ${element} -gt 0 ]]; then\n            positive+=(\"\
    $element\")\n        fi\n    done\n    echo \"${positive[@]}\"", "    local list=\"\
    $1\"\n    local positive\n    positive=()\n    for element in $list; do\n    \
    \    if (( element > 0 )); then\n            positive+=(\"$element\")\n      \
    \  fi\n    done\n    echo \"${positive[@]}\"", "  local list=\"$1\"\n  local positive\n\
    \  positive=()\n  for number in $list; do\n    if [[ $number -gt 0 ]]; then\n\
    \      positive+=(\"$number\")\n    fi\n  done\n  echo \"${positive[@]}\"", " \
    \   local -n list=$1\n    local -a positive\n    local i j\n    for (( i=0; i\
    \ < ${#list[@]} && ${list[i]} > 0; i++ )); do\n        positive+=(\"${list[i]}\"\
    )\n    done\n    positive=(\"${positive[@]}\")", "    local -n list=$1\n    local\
    \ -a positive\n    local -a non_positive\n    local -a non_negative\n    local\
    \ -a non_zero\n    local -a non_non_zero\n    local -a non_non_negative\n    local\
    \ -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_negative\n    local -a non_non_positive\n    local -a non_non_negative\n\
    \    local -a non_non_positive\n    local -a non_non_negative\n    local -a non_non_positive\n\
    \    local -a non_non_", "    local numbers=$1\n    local positive\n    positive=()\n\
    \    for number in $numbers; do\n        if [ $number -gt 0 ]; then\n        \
    \    positive+=(\"$number\")\n        fi\n    done\n    echo \"${positive[@]}\""]
stop_tokens:
- "\n}"

completions:
- "  local IFS=$1\n  local -a arr=()\n  local i item\n  for item in \"${arr[@]}\"\
  ; do\n    [[ $item != $item ]] || continue\n    i=$(( ${#arr[@]} - 1 ))\n    while\
  \ [[ ${arr[i]} != $item ]]; do\n      arr[i]=${arr[i+1]}\n      i=$(( i - 1 ))\n\
  \    done\n    arr[i]=$item\n  done\n  IFS=$' \\t\\n'\n  echo \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i len res\n    IFS=$'\\n' arr=($(sort\
  \ -u <<<\"$*\"))\n    len=${#arr[*]}\n    for ((i=0; i < len; i++)); do\n      \
  \  res=\"${arr[i]}\"\n    done\n    echo \"${res}\""
- "    local IFS=$1\n    local -a A\n    local i imax\n    local output\n\n    imax=${#A[@]}\n\
  \    for ((i = 0; i < imax; i++)); do\n        if [[ ! ${A[i]} == ${A[i-1]} ]];\
  \ then\n            output+=(\"${A[i]}\")\n        fi\n    done\n    echo \"${output[@]}\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        [[ $item != $item ]] || continue\n        arr+=(\"$item\")\n    done\n\
  \    arr=( \"${arr[@]}\" )\n    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    local a\n    local n\n    local i\n    local j\n    local\
  \ k\n    local t\n    local len\n    local sort\n    sort=0\n    IFS=$' \\t\\n'\n\
  \    for a in \"$@\"; do\n        n=0\n        for (( i=0; i < ${#a}; i++ )); do\n\
  \            if [[ ${a}[${i}] == \"${a}[${i}+1]\" ]]; then\n                (( n=n+1\
  \ ))\n            else\n                if (( n == 0 )); then\n                \
  \    sort=1\n                    a=\"${a}[${i}]\"\n                else\n      \
  \              a=\"${a}[${i}]\"\n                    break\n                fi\n\
  \            fi\n        done\n    done\n    if [[ $sort -eq 1 ]]; then\n      \
  \  echo \"$a\"\n    else\n        echo \"$a\" | sort -u | tr '\\n' ' '\n    fi"
- '    local IFS=$1; shift; echo "$*" | sort -u | tr -d ''\n'''
- "    local IFS=$1\n    local -a arr\n    local i seen result\n    IFS=$'\\n'\n \
  \   arr=($1)\n    seen=()\n    result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
  \        seen+=(\"$i\")\n    done\n    seen=( \"${seen[@]}\" )\n    for ((i=0; i<${#arr[@]};\
  \ i++)); do\n        if [[ ${seen[i]} -eq ${i} ]]; then\n            result+=(\"\
  ${arr[i]}\")\n        fi\n    done\n    echo \"${result[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i len output\n    IFS=$'\\n'\n  \
  \  arr=( $* )\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        if [[\
  \ ${arr[$i]} == ${arr[$((i+1))]} ]]; then\n            unset arr[$i]\n        fi\n\
  \    done\n    output=$(IFS=' '; echo \"${arr[*]}\")\n    IFS=$IFS_ORIG\n    echo\
  \ \"$output\""
- '    local IFS=$1; shift; echo "$@" | tr " " "\n" | sort -u | tr "\n" " "'
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local i seen sorted\n    seen=()\n    sorted=()\n    for i; do\n        [[\
  \ -z \"${seen[$i]}\" ]] && seen[$i]=1 || continue\n        sorted+=($i)\n    done\n\
  \    sorted=($(sort <<<\"${sorted[*]}\" | uniq))"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local IFS=$1\n  local -a arr=()\n  local i item\n  for ((i=0; i<${#arr[@]}; i++));\
  \ do\n    item=${arr[i]}\n    while [ -n \"${item}\" ]; do\n      arr+=(\"$item\"\
  )\n      item=${arr[i]}\n    done\n  done\n  IFS=$IFS\n  echo ${arr[@]}"
- '    local IFS=$1; shift; echo "$*" | tr '' '' ''\n'' | sort -u | tr ''\n'' '' '''
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i item\n    IFS=$'\\n' arr=($(sort\
  \ -u <<<\"${@:2}\")); unset IFS\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
  \  item=\"${arr[i]}\"\n        if [[ ! \"${arr[i]}\" =~ ^[0-9]+$ ]]; then\n    \
  \        arr[i]=\"${item}\"\n        fi\n    done\n    echo \"${arr[@]}\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i result\n    IFS=$'\\n'\n  \
  \  arr=($(sort <<<\"${@}\" | uniq -u))\n    for ((i=0; i < ${#arr[@]}; i++)); do\n\
  \        result+=(\"${arr[i]}\")\n    done\n    echo \"${result[@]}\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i item\n    IFS=\"$IFS\"\n  \
  \  arr=($(sort -u <<<\"${@:2}\"|tr \"\\n\" \" \"))\n    for ((i=0; i < ${#arr[@]};\
  \ i++)); do\n        item=\"${arr[i]}\"\n        if [[ ! \"$item\" == \"${arr[i-1]}\"\
  \ ]]; then\n            arr[i]=\"${arr[i-1]}\"\n        fi\n    done\n    IFS=\"\
  $IFS\"\n    echo \"${arr[@]}\""
- "  local i ilist sorted\n  ilist=\"$1\"\n  sorted=()\n  while IFS= read -r i; do\n\
  \    sorted+=(\"$i\")\n  done < <(printf '%s\\n' \"${ilist[@]}\" | sort -u)\n  printf\
  \ '%s\\n' \"${sorted[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a list=()\n    local i item\n    for ((i=0; i<${#list[@]};\
  \ i++)); do\n        item=${list[$i]}\n        [[ -z $item ]] && continue\n    \
  \    [[ -z \"${list[$((j=$i+1))]}\" ]] && list[j]=$item && continue\n        for\
  \ ((j=$i+1; j<${#list[@]}; j++)); do\n            [[ \"${list[$j]}\" != \"$item\"\
  \ ]] && break\n            list[j]=$item\n        done\n    done\n    IFS=$OLDIFS\n\
  \    echo \"${list[*]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i ii out sorted\n  sorted=( $(sort -u <<< \"$1\") )\n  out=()\n  for ((\
  \ i=1; i<${#sorted[@]}; i++ )); do\n    for (( ii=0; ii<i; ii++ )); do\n      if\
  \ [[ ${sorted[$ii]} != ${sorted[$i]} ]]; then\n        out+=(\"${sorted[$ii]}\"\
  )\n        break\n      fi\n    done\n  done\n  printf \"%s\\n\" \"${out[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    echo ${arr[@]} | tr ' ' '\\\
  n' | sort -u | tr '\\n' ' '"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i ret\n\n    IFS=$'\\n'\n   \
  \ arr=($@)\n    IFS=\"$IFS\"\n\n    for((i=0;i<${#arr[@]};++i)); do\n        [[\
  \ ${arr[i]} != $arr[i+1] ]] && ret+=\" $arr[i]\"\n    done\n\n    echo \"$ret\""
- "    local IFS=$1\n    local -a arr=()\n    local i seen=()\n    local output\n\
  \    for ((i=1; i<${#1[@]}; i++)); do\n        local j\n        for ((j=0; j<i;\
  \ j++)); do\n            [[ ${seen[$j]} ]] && break\n        done\n        seen[$i]=1\n\
  \        arr+=(\"${!i}\")\n    done\n    IFS=$IFS\n    IFS=$'\\n'\n    output=$(printf\
  \ '%s\\n' \"${arr[@]}\")\n    IFS=$IFS\n    IFS=$'\\n'\n    echo \"$output\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i seen\n    IFS=$'\\n' arr=($(sort\
  \ <<<\"${@}\" | uniq -u))\n    for ((i = 0; i < ${#arr[@]}; i++)); do\n        if\
  \ [[ ${seen[${arr[i]}]} ]]; then\n            arr+=(\"${arr[i]}\")\n        fi\n\
  \        seen[${arr[i]}]=1\n    done\n    echo \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$1\n    local -a arr\n    local i result\n\n    if [ -z \"$IFS\"\
  \ ]; then\n        IFS=\" \"\n    fi\n\n    arr=( $@ )\n    IFS=$IFS\n    set -u\n\
  \    result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        result+=( \"${arr[i]}\"\
  \ )\n    done\n    IFS=$IFS\n    set +u\n    echo \"${result[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local i ilist sorted\n    sorted=( $(sort -u <<< \"$1\") )\n    ilist=\" \"\
  \n    for (( i=0; i<${#sorted[@]}; i++ )); do\n        ilist+=\"${sorted[$i]} \"\
  \n    done\n    echo \"$ilist\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i seen result\n\n    seen=()\n  \
  \  arr=( $@ )\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${seen[${#seen[@]}]}\
  \ == ${arr[i]} ]]; then\n            result+=(\"${arr[i]}\")\n        else\n   \
  \         seen+=(\"${arr[i]}\")\n        fi\n    done\n    echo \"${result[@]}\""
- "    local IFS=$1\n    local -a A\n    local -a B\n    local i j k\n    local -a\
  \ C\n    local -a RESULT\n    local -a TMP\n    local -a TMP2\n    local -a TMP3\n\
  \    local -a TMP4\n    local -a TMP5\n    local -a TMP6\n    local -a TMP7\n  \
  \  local -a TMP8\n    local -a TMP9\n    local -a TMP10\n    local -a TMP11\n  \
  \  local -a TMP12\n    local -a TMP13\n    local -a TMP14\n    local -a TMP15\n\
  \    local -a TMP16\n    local -a TMP17\n    local -a TMP18\n    local -a TMP19\n\
  \    local -a TMP20\n    local -a TMP21\n    local -a TMP22\n    local -a TMP23\n\
  \    local -a TMP24\n    local -a TMP25\n    local -a TMP26\n    local -a TMP27\n\
  \    local -a TMP28\n    local -a TMP29\n    local -a TMP30\n    local -a TMP31\n\
  \    local -a TMP32\n    local -a TMP33\n    local -a TMP34\n    local -a TMP35\n\
  \    local -a TMP36\n    local -a TMP37\n    local -a TMP38\n    local -a TMP39\n\
  \    local -a TMP40\n    local -a TMP41\n    local -a TMP42\n    local -a TMP43\n\
  \    local -a TMP44\n    local -a TMP45\n    local -a TMP46\n    local -a TMP47\n\
  \    local -a TMP48\n    local -a TMP49\n    local -a TMP50\n    local -a TMP51\n\
  \    local -a TMP52\n    local -a TMP53\n    local -a TMP54\n    local -a TMP55\n\
  \    local -a TMP56\n    local -a TMP57\n    local -a TMP58\n    local -a TMP59\n\
  \    local -a TMP60\n    local -a TMP61\n    local -a TMP62\n    local -a TMP63\n\
  \    local -a TMP64\n    local -a TMP65\n    local -a TMP66\n    local -a TMP67\n\
  \    local -a TMP68\n"
- "    local IFS=$1\n    local -a arr\n    local i seen result\n\n    seen=()\n  \
  \  arr=( $@ )\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${seen[${#seen[@]}]}\
  \ == ${arr[i]} ]]; then\n            result+=(\"${arr[i]}\")\n        else\n   \
  \         seen+=(\"${arr[i]}\")\n        fi\n    done\n\n    echo \"${result[@]}\""
- '    local IFS=$1; shift; echo "$@" | tr '' '' ''\n'' | sort -u | tr ''\n'' '' '''
- "    local IFS=$1\n    local -a list=()\n    local element i\n\n    for element\
  \ in \"${list[@]}\"; do\n        ! [[ $element =~ $IFS ]] && [[ $element != *[![:space:]]*\
  \ ]] &&\n            list+=(\"$element\")\n    done\n\n    IFS=$IFS\n    sort -u\
  \ <<<\"${list[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "  local i ilist output\n  ilist=\"$1\"\n  output=\"$(IFS=$'\\n'; echo \"$ilist\"\
  \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\n  IFS=$' \\t\\n'\n  echo \"$output\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local i seen sorted\n    seen=()\n    sorted=()\n    for (( i=0; i<${#1}; i++\
  \ )); do\n        seen[$i]=true\n    done\n    for (( i=0; i<${#1}; i++ )); do\n\
  \        if [[ ${seen[$i]} == true ]]; then\n            sorted+=(\"${1}[$i]\")\n\
  \        fi\n    done\n    echo \"${sorted[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local i ilist sorted\n    sorted=( $(sort -u <<< \"$1\") )\n    for ilist in\
  \ \"${sorted[@]}\"; do\n        i=0;\n        while [ \"${ilist}\" == \"${sorted[i]}\"\
  \ ]; do\n            i=$(( i + 1 ))\n        done\n        sorted[i]=\"${ilist}\"\
  \n    done\n    echo \"${sorted[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i seen sorted\n  read -a sorted <<< \"$1\"\n  seen=()\n  for i in \"${sorted[@]}\"\
  ; do\n    [[ \"${seen[$i]}\" ]] || echo \"$i\"\n    seen[$i]=1\n  done"
- "  local IFS=$1; shift\n  local -a array=( $* )\n  local i result\n  IFS=$'\\n'\
  \ read -r -d '' -a array <<<\"${array[*]}\"\n  result=()\n  for element in \"${array[@]}\"\
  ; do\n    [[ $element != \"${element%?}\" ]] || continue\n    if [[ ! \" ${result[*]}\
  \ \" =~ \" $element \" ]]; then\n      result+=( \"$element\" )\n    fi\n  done\n\
  \  printf '%s\\n' \"${result[@]}\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i item\n    IFS=$'\\n' arr=($(sort\
  \ -u <<<\"$*\"))\n    for ((i=0; i<${#arr[@]}; i++)); do\n        item=\"${arr[i]}\"\
  \n        if [[ ! \"$item\" == \"${arr[i+1]}\" ]]; then\n            arr[i+1]=\"\
  $item\"\n        fi\n    done\n    echo \"${arr[@]}\""
- '  local IFS=$1; shift; echo "$*" | tr '' '' ''\n'' | sort -u | tr ''\n'' '' '''
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for ((i=1; i<=$#;\
  \ i++))\n    do\n        item=\"${!i}\"\n        arr+=(\"$item\")\n    done\n  \
  \  IFS=$IFS\n    sort -u <<< \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    local -a arr=( $1 )\n    local i seen result\n    seen=()\n\
  \    result=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n        local j\n      \
  \  for ((j=0; j<${#seen[@]}; j++)); do\n            [ \"${arr[i]}\" = \"${seen[j]}\"\
  \ ] && break\n        done\n        seen+=(\"${arr[i]}\")\n        result+=(\"${arr[i]}\"\
  )\n    done\n    echo \"${result[@]}\""
- "    local IFS=$'\\n'\n    local a\n    for a in \"$@\"; do\n        [[ $a =~ $a\
  \ ]] || continue\n        echo $a\n    done"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local i seen sorted\n    seen=()\n    sorted=()\n    for i; do\n        seen+=(\"\
  $i\")\n    done\n    sort -u <<<\"$seen\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i seen j\n    seen=()\n    arr=(\
  \ $@ )\n    for ((i=0; i<${#arr[@]}; i++)); do\n        j=$i\n        while [ \"\
  ${j}\" -le \"${#arr[@]}\" ] && [ \"${arr[j]}\" -ne \"${arr[i]}\" ]; do\n       \
  \     j=$((j+1))\n        done\n        if [ \"${j}\" -gt \"${#seen[@]}\" ]; then\n\
  \            seen+=( \"${arr[i]}\" )\n        fi\n        arr[i]=\"${arr[j]}\"\n\
  \    done\n    IFS=\"$IFS\"\n    set -- \"${seen[@]}\""
- "    local IFS=$1\n    local -a arr\n    local i item\n    IFS=$'\\n'\n    arr=(\
  \ $* )\n    IFS=$IFS\n    echo ${arr[@]} | tr ' ' '\\n' | sort -u | tr '\\n' ' '"
- "    local IFS=$1\n    local -a ar\n    local i item\n    ar=( $@ )\n    IFS=$'\
  \ \\t\\n'\n    for ((i=0; i<${#ar[@]}; i++)); do\n        item=\"${ar[i]}\"\n  \
  \      if [[ ! $item =~ $UNIQUE_PATT ]]; then\n            ar[i]=\"$item\"\n   \
  \     fi\n    done\n    IFS=$IFS\n    echo \"${ar[@]}\""
- "    local IFS=$1\n    local -a arr\n    local i count\n    local output\n\n   \
  \ arr=( $@ )\n    IFS=$' \\t\\n'\n\n    count=\"${#arr[@]}\"\n    for ((i = 0; i\
  \ < count; i++)); do\n        if [[ ${arr[i]} == ${arr[i+1]} ]]; then\n        \
  \    unset arr[i+1]\n        fi\n    done\n\n    output=( ${arr[@]} )\n    IFS=$IFS\n\
  \    sort -u >&${output[1]}"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "  local i ilist sorted\n  ilist=\"$1\"\n  sorted=()\n  while IFS= read -r i; do\n\
  \    sorted+=(\"$i\")\n  done < <(printf '%s\\n' \"${ilist[@]}\" | sort -u)\n  printf\
  \ '%s\\n' \"${sorted[@]}\""
- "    local i ilist output\n    ilist=\"$1\"\n    ilist=\"${ilist// /$'\\n'}\"\n\
  \    ilist=\"$(echo \"$ilist\" | sed 's/ /\\n/g')\"\n    IFS=$'\\n'\n    output=\"\
  $(echo \"$ilist\" | sort -u | tr '\\n' ' ')\"\n    IFS=$' \\t\\n'\n    echo \"$output\""
- '    local IFS=$1; shift; echo "$*" | sort -u | tr -d ''\n'''
- "  local IFS=$1\n  local -a arr=()\n  local i seen=()\n  local output\n\n  for ((i\
  \ = 0; i < ${#arr[@]}; i++)); do\n    local e=${arr[i]}\n    if [[ ${seen[$e]} ]];\
  \ then\n      continue\n    fi\n    seen[$e]=1\n    output+=(\"$e\")\n  done\n\n\
  \  IFS=$' \\t\\n'\n  echo \"${output[*]}\""
- "    local IFS=$1\n    local -a arr\n    local i item\n    IFS=$'\\n' arr=($1)\n\
  \    for ((i=0; i<${#arr[@]}; i++)); do\n        item=\"${arr[i]}\"\n        arr[i]=${arr[i+1]}\n\
  \        arr[i+1]=$item\n    done\n    IFS=$IFS\n    echo ${arr[@]}"
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i ret\n\n    arr=( $@ )\n   \
  \ IFS=$' \\t\\n'\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        if [[ ${arr[i]}\
  \ != ${arr[i+1]} ]]; then\n            arr[i]=\"${arr[i]} ${arr[i+1]}\"\n      \
  \  fi\n    done\n    IFS=\"$IFS\"\n    set -- \"${arr[@]}\"\n    IFS=$IFS\n    sort\
  \ -u -- \"${@}\""
- "  local i ilist sorted temp\n  sorted=false\n  ilist=\"$1\"\n  ilist=${ilist//\
  \ /}\n  ilist=${ilist//$'\\n'/}\n  ilist=${ilist//$'\\r'/}\n  ilist=${ilist//$'\\\
  t'/}\n  ilist=${ilist//$'\\v'/}\n  ilist=${ilist//$'\\f'/}\n  ilist=${ilist//$'\\\
  b'/}\n  ilist=${ilist//$'\\a'/}\n  ilist=${ilist//$'\\e'/}\n  ilist=${ilist//$'\\\
  v'/}\n  ilist=${ilist//$'\\f'/}\n  ilist=${ilist//$'\\b'/}\n  ilist=${ilist//$'\\\
  a'/}\n  ilist=${ilist//$'\\e'/}\n  ilist=${ilist//$'\\v'/}\n  ilist=${ilist//$'\\\
  f'/}\n  ilist=${ilist//$'\\b'/}\n  ilist=${ilist//$'\\a'/}\n  ilist=${ilist//$'\\\
  e'/}\n  ilist=${ilist//$'\\v'/}\n  ilist=${ilist//$'\\f'/}\n  ilist=${ilist//$'\\\
  b'/}\n  ilist=${ilist//$'\\a'/}\n  ilist=${ilist//$'\\e'/}\n  ilist=${ilist//$'\\\
  v'/}\n  ilist=${ilist//$'\\f'/}\n  ilist=${ilist//$'\\b'/}\n  ilist=${ilist//$'\\\
  a'/}\n  ilist=${ilist//$'\\e'/}\n  ilist=${ilist//$'\\v'/}\n  ilist=${ilist//$'\\\
  f'/}\n  ilist=${ilist//$'\\b'/}\n  ilist=${ilist//$'\\a'/}\n  ilist=${ilist//$'\\\
  e'/}\n  ilist=${ilist//$'\\v'/}\n  ilist=${ilist//$'\\f'/}\n  ilist=${ilist//$'\\\
  b'/}\n  ilist=${ilist//$'\\a'/}\n  ilist=${"
- "  local IFS=$1\n  local -a arr=()\n  local i item\n  for i in \"${arr[@]}\"; do\n\
  \    [[ -z $i ]] && continue\n    [[ -z \"${arr[$i]}\" ]] && arr[$i]=$i\n  done\n\
  \  IFS=$IFS\n  echo ${arr[@]}"
- "    local IFS=\"$1\"\n    local -a arr=()\n    local i item\n    for item in \"\
  ${arr[@]}\"; do\n        [[ $item != $item ]] || continue\n        arr+=(\"$item\"\
  )\n    done\n    IFS=\"$IFS\"\n    sort -u <<<\"${arr[@]}\""
- '    local IFS=$1; shift; echo "$*" | sort -u | tr -d ''\n'''
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$1; shift\n    local -a arr=(\"$@\")\n    local i seen result\n \
  \   seen=()\n    result=()\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        local\
  \ j\n        for ((j=0; j < ${#seen[@]}; j++)); do\n            if [[ ${arr[i]}\
  \ != ${seen[j]} ]]; then\n                seen[j]=${arr[i]}\n                result+=(\"\
  ${arr[i]}\")\n                break\n            fi\n        done\n    done\n  \
  \  echo \"${result[@]}\""
- "    local IFS=$1\n    local -a arr=()\n    local i seen=()\n    local output\n\n\
  \    for ((i=0; i < ${#arr[@]}; i++)); do\n        local j\n        for ((j=0; j\
  \ < ${#seen[@]}; j++)); do\n            if [[ ${seen[$j]} -eq $i ]]; then\n    \
  \            continue 2\n            fi\n        done\n        seen[$i]=$i\n   \
  \     arr[$i]=${arr[$i]}\n    done\n    IFS=$IFS\n    output=$(IFS=$'\\n'; echo\
  \ \"${arr[*]}\")\n    IFS=$IFS\n    unique=$output"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a A\n    local -a B\n    local i imax\n    local j\n\
  \    local len\n\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n\
  \    local -a G\n    local -a H\n    local -a I\n    local -a J\n\n    local -a\
  \ K\n    local -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a\
  \ P\n    local -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a\
  \ U\n    local -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a\
  \ Z\n\n    local -a a\n    local -a b\n    local -a c\n    local -a d\n    local\
  \ -a e\n    local -a f\n    local -a g\n    local -a h\n    local -a i\n    local\
  \ -a j\n    local -a k\n    local -a l\n    local -a m\n    local -a n\n    local\
  \ -a o\n    local -a p\n    local -a q\n    local -a r\n    local -a s\n    local\
  \ -a t\n    local -a u\n    local -a v\n    local -a w\n    local -a x\n    local\
  \ -a y\n    local -a z\n\n    local -a A\n    local -a B\n    local -a C\n    local\
  \ -a D\n    local -a E\n    local -a F\n    local -a G\n    local -a H\n    local\
  \ -a I\n    local -a J\n\n    local -a K\n    local -a L\n    local -a M\n    local\
  \ -a N\n    local -a O\n    local -a P\n    local -a Q\n    local -a R\n    local\
  \ -a S\n    local -a T\n    local -a U\n    local -a V\n    local -a W\n    local\
  \ -a X\n    local -a Y\n    local -a Z\n\n    local -a a\n    local -a b\n    local\
  \ -a c\n    local -a d"
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "  local i out sorted\n  sorted=( $(sort -u <<< \"$1\") )\n  IFS=$'\\n' out='' for\
  \ i in \"${sorted[@]}\"; do out=( \"${out[@]}\" \"$i\" ); done\n  printf '%s\\n'\
  \ \"${out[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local IFS=$1\n  local -a A\n  A=( $* )\n  local T I\n  T=( \"${A[@]}\" )\n  I=1\n\
  \  while [ $I -le ${#T} ]; do\n    I=$(( I + 1 ))\n    if [[ ${T[$I]} != ${T[$((I-1))]}\
  \ ]]; then\n      T[$((I-1))]=\"${T[$I]}\"\n    fi\n  done\n  T=( \"${T[@]}\" )\n\
  \  echo \"${T[@]}\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i item\n    IFS=$'\\n' arr=($(sort\
  \ -u <<<\"${@:2}\")); unset IFS\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
  \  item=\"${arr[i]}\"\n        if [[ \" ${arr[@]:$i:1}\" != *\" $item \"* ]]; then\n\
  \            arr[i]=\"$item\"\n        fi\n    done\n    echo \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local IFS=$1\n  local -a arr=()\n  local i seen result\n\n  for i in \"${arr[@]}\"\
  ; do\n    seen=false\n    for j in \"${arr[@]}\"; do\n      if [ \"$i\" = \"$j\"\
  \ ]; then\n        seen=true\n        break\n      fi\n    done\n    if [ \"$seen\"\
  \ = false ]; then\n      arr+=( \"$i\" )\n    fi\n  done\n\n  IFS=$' \\t\\n'\n \
  \ result=$(printf '%s\\n' \"${arr[@]}\" | sort -u)\n  IFS=$IFS\n  echo \"$result\""
- "  local IFS=$'\\n'\n  sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- '    local IFS=$1; shift; echo "$*" | tr " " "\n" | sort -u | tr "\n" " ";'
- "    local IFS=$1\n    local -a arr\n    local i result\n\n    if [ -z \"$IFS\"\
  \ ]; then\n        IFS=\" \"\n    fi\n\n    arr=( $@ )\n    for ((i=0; i<${#arr[@]};\
  \ i++)); do\n        result+=(\"${arr[i]}\")\n    done\n\n    IFS=$IFS\n    sort\
  \ -u <<<\"${result[@]}\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    local -a arr=( $1 )\n    local i seen=()\n    local output\n\
  \    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${seen[i]} ]]; then\n   \
  \         output+=(\"${seen[i]}\")\n        else\n            seen[i]=true\n   \
  \         output+=(\"${arr[i]}\")\n        fi\n    done\n    echo \"${output[@]}\""
- "    local IFS=$1\n    local -a A\n    local -a B\n    local -a C\n    local -a\
  \ RESULT\n\n    # Remove duplicate elements from $IFS-separated input\n    while\
  \ read -a B; do\n        [[ ${B[*]} =~ ^$IFS$ ]] && continue\n        C+=(\"${B[@]}\"\
  )\n    done < <(printf \"%s\\n\" \"${C[@]}\" | sort -u)\n\n    # Remove duplicate\
  \ elements from each element of $IFS-separated input\n    for I in \"${!C[@]}\"\
  ; do\n        while read -a B; do\n            [[ ${B[*]} =~ ^$IFS$ ]] && continue\n\
  \            RESULT+=(\"${B[@]}\")\n        done < <(printf \"%s\\n\" \"${C[@]}\"\
  \ | sort -u | grep -E \"^${I}$\")\n    done\n\n    # Remove duplicate elements from\
  \ each element of $IFS-separated input\n    for I in \"${!RESULT[@]}\"; do\n   \
  \     while read -a B; do\n            [[ ${B[*]} =~ ^$IFS$ ]] && continue\n   \
  \         C+=(\"${B[@]}\")\n        done < <(printf \"%s\\n\" \"${RESULT[@]}\" |\
  \ grep -E \"^${I}$\")\n    done\n\n    # Remove duplicate elements from $IFS-separated\
  \ input\n    for I in \"${!C[@]}\"; do\n        while read -a B; do\n          \
  \  [[ ${B[*]} =~ ^$IFS$ ]] && continue\n            RESULT+=(\"${B[@]}\")\n    \
  \    done < <(printf \"%s\\n\" \"${C[@]}\" | sort -u)\n    done\n\n    # Remove\
  \ duplicate elements from each element of $IFS-separated input\n    for I in \"\
  ${!RESULT[@]}\"; do\n        while read -a B; do\n            [[ ${B[*]} =~ ^$IFS$\
  \ ]] && continue\n            C+=(\"${B[@]}\")\n        done < <(printf \"%s\\n\"\
  \ \"${RESULT[@]}\" | grep -E \"^${I}$\")\n    done\n\n    # Remove duplicate elements\
  \ from $IFS-separated input\n    for I in \"${!C[@]}\"; do\n        while read -a\
  \ B; do\n            [[ ${B[*]} =~ ^$IFS$ ]] && continue\n            RESULT+=(\"\
  ${B[@]}\")"
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<< \"${arr[@]}\""
- '    local IFS=$1; shift; echo "$*" | tr " " "\n" | sort -u | tr "\n" " "'
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i ilist output\n  ilist=\"$1\"\n  output=\"$(echo \"$ilist\" | tr \" \"\
  \ \"\\n\" | sort -u | tr \"\\n\" \" \")\"\n  echo \"$output\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i item\n    IFS=$'\\n'\n    arr=(\
  \ $* )\n    IFS=$IFS\n    echo ${arr[@]} | tr ' ' '\\n' | sort -u | tr '\\n' ' '"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i count\n    count=0\n    arr=( $@\
  \ )\n    for i in \"${arr[@]}\"; do\n        ((count++))\n        arr[$i]\n    done\n\
  \    arr=( \"${arr[@]:0:$((count-1))}\" )\n    echo \"${arr[@]}\""
- "    local IFS=$1; shift\n    local -a list=( $* )\n    local i seen=()\n    local\
  \ output\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${seen[i]} ]];\
  \ then\n            output+=(\"${seen[i]}\")\n        else\n            seen[i]=true\n\
  \            output+=(\"${list[i]}\")\n        fi\n    done\n    echo \"${output[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i item\n    IFS=$'\\n'\n    arr=(\
  \ $* )\n    IFS=$IFS\n    echo ${arr[@]} | tr ' ' '\\n' | sort -u | tr '\\n' ' '"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        [[ $item != $item ]] && [[ $item != -* ]] && [[ $item != != ]] && [[ !\
  \ \" ${arr[@]} \" =~ \" $item \" ]]\n        arr+=(\"$item\")\n    done\n    IFS=$IFS\n\
  \    sort -u ${arr[@]}"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    local -n arr=$1\n    local i result\n    local -a seen=()\n\
  \    local j\n\n    # remove duplicates\n    for ((i = 0; i < ${#arr[@]}; i++));\
  \ do\n        j=${i}\n        while ((j > 0) && (${arr[j]} != ${arr[j-1]})); do\n\
  \            seen[j]=1\n            j=$((j-1))\n        done\n        if ((j > 0));\
  \ then\n            seen[j]=1\n        fi\n    done\n\n    # sort and remove duplicates\n\
  \    for ((i = 0; i < ${#seen[@]}; i++)); do\n        if (( ${seen[i]} != 1 ));\
  \ then\n            result+=(\"${arr[i]}\")\n        fi\n    done\n\n    echo \"\
  ${result[@]}\""
- "  local IFS=$1\n  local -a arr=()\n  local i item\n  for i in \"${arr[@]}\"; do\n\
  \    [[ -z $i ]] && continue\n    [[ -z \"${arr[$i]}\" ]] && arr[$i]=$i\n  done\n\
  \  printf '%s\\n' \"${arr[@]}\" | sort -u"
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        [[ $item == $item ]] || continue\n        arr+=(\"$item\")\n    done\n\
  \    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i ilist sorted\n  ilist=\"$1\"\n  sorted=()\n  while IFS= read -r i; do\n\
  \    sorted+=(\"$i\")\n  done < <(printf \"%s\\n\" \"${ilist[@]}\" | sort -u)\n\
  \  printf \"%s\\n\" \"${sorted[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- '    local IFS=$1; shift; echo "$*" | tr " " "\n" | sort -u | tr "\n" " ";'
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i seen\n    IFS=$'\\n' read -r\
  \ -a arr <<<\"$1\"\n    seen=()\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
  \  if [[ ${seen[${#seen[@]}]} == ${arr[i]} ]]; then\n            unset arr[i]\n\
  \        fi\n        seen+=(\"${arr[i]}\")\n    done\n    echo \"${arr[@]}\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        [[ $item != $item ]] || continue\n        arr+=(\"$item\")\n    done\n\
  \    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<< \"${arr[@]}\""
- "    local IFS=$1\n    local -a A\n    local -a B\n    local -a C\n    local -a\
  \ RESULT\n\n    # Remove duplicate elements from $IFS-separated list\n    # Ignore\
  \ empty elements\n    IFS=$'\\n'\n    for a in \"${A[@]}\"; do\n        if [[ -n\
  \ \"$a\" ]]; then\n            B=()\n            for b in \"${B[@]}\"; do\n    \
  \            if [[ \"$a\" == \"$b\" ]]; then\n                    C=()\n       \
  \             for c in \"${C[@]}\"; do\n                        C+=(\"$c\")\n  \
  \                  done\n                    RESULT+=(\"${C[@]}\")\n           \
  \     else\n                    B+=(\"$b\")\n                fi\n            done\n\
  \            A+=(\"${B[@]}\")\n        fi\n    done\n    echo \"${RESULT[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- '    local IFS=$1; shift; echo "$*" | sort -u | tr -d '' '''
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i ilist sorted\n  ilist=$( echo $1 | sed 's/ /\\n/g' | sort -u )\n  sorted=$(\
  \ echo $ilist | sed 's/^/\\n/g' | sed 's/\\n$//' )\n  echo $sorted"
- "    local IFS=$1\n    local -a arr\n    local i seen result\n\n    seen=()\n  \
  \  arr=( $@ )\n    for ((i=0; i<${#arr[@]}; i++)); do\n        seen+=( \"${arr[i]}\"\
  \ )\n    done\n    arr=( \"${seen[@]}\" )\n    IFS=$IFS\n    set -- \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<< \"${arr[@]}\""
- "    local IFS=$1\n    local -a arr\n    local i len res\n\n    arr=( $@ )\n   \
  \ len=${#arr[@]}\n    for ((i=1; i<=$len; i++)); do\n        if [[ ${arr[$i]} ==\
  \ ${arr[i-1]} ]]; then\n            arr=( ${arr[@]:0:i} ${arr[@]:(i+1)} )\n    \
  \    fi\n    done\n    res=\"${arr[@]}\"\n    IFS=$IFS\n    sort -u <<< \"$res\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$'\\n'\n    local -a list=( $1 )\n    local output\n    output=(\
  \ $(sort <<<\"${list[*]}\" | uniq) )\n    IFS=$' \\t\\n'\n    echo \"${output[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        [[ $item != $item ]] || continue\n        arr+=(\"$item\")\n    done\n\
  \    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=$1\n    local -a ar\n    local i prev cur\n\n    ar=($@)\n    prev=cur=\"\
  ${ar[0]}\"\n    IFS=$' \\t\\n'\n    for ((i=1; i<${#ar[@]}; i++)); do\n        if\
  \ [[ ${ar[i]} == $prev ]]; then\n            ((i++))\n        else\n           \
  \ ar[i]=$prev\n        fi\n    done\n    IFS=$IFS\n    echo \"${ar[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i seen=()\n    local output\n\n\
  \    for ((i=1; i<${#1[@]}; i++)); do\n        if [[ ${seen[${#seen[@]}]} == ${i}\
  \ ]]; then\n            continue\n        fi\n        seen[${#seen[@]}+1]=${i}\n\
  \        arr+=(\"${i}\")\n    done\n\n    # sort the unique elements and remove\
  \ duplicates\n    IFS=$IFS\n    sort -n -k 1 <<<\"${arr[@]}\" | uniq -u"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    local a\n    local b\n    local c\n    local d\n    local\
  \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
  \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
  \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
  \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
  \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
  \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
  \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
  \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
  \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
  \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
  \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
  \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
  \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
  \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
  \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
  \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
  \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
  \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
  \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
  \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
  \ u\n    local v\n"
- "    local IFS=$1\n    local -a arr=()\n    local i seen result\n\n    for ((i =\
  \ 0; i < ${#arr[@]}; i++)); do\n        seen=false\n        result=false\n     \
  \   for ((j = 0; j < ${#arr[@]}; j++)); do\n            if [[ ${arr[j]} == ${arr[i]}\
  \ ]]; then\n                seen=true\n                result=true\n           \
  \     break\n            fi\n        done\n        if [ \"${seen}\" = false ]; then\n\
  \            arr+=(\"${arr[i]}\")\n        fi\n    done\n\n    IFS=$IFS\n    echo\
  \ \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=\"$1\"\n    local -a arr=()\n    local i item\n    for item in \"\
  ${arr[@]}\"; do\n        [[ $item != $item ]] || continue\n        i=$(( ${#arr[@]}\
  \ -1 ))\n        while [[ $(( ${i} >= 0 )); $(( ${i} >= 0 )); $(( ${i} -= 1 ))]\
  \ ]; do\n            [[ \"${arr[$i]}\" != \"${arr[$(( $i - 1 ))]}\" ]] || break\n\
  \        done\n        arr[$i]=\"$item\"\n    done\n    IFS=\"$IFS\"\n    echo ${arr[@]}"
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "  local i ilist output\n  ilist=\"$1\"\n  output=\"$(echo \"$ilist\" | tr ' ' '\\\
  n' | sort -u | tr '\\n' ' ')\"\n  echo \"$output\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr\n    local i item\n    arr=( $@ )\n    IFS=$'\
  \ \\t\\n'\n    for ((i=0; i<${#arr[@]}; i++)); do\n        item=\"${arr[i]}\"\n\
  \        if [[ ! \" ${arr[@]} \" =~ \" ${item} \" ]]; then\n            arr+=(\"\
  ${item}\")\n        fi\n    done\n    echo \"${arr[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    sort -u <<<\"${arr[@]}\""
- "    local IFS=\"$1\"\n    local -a A\n    local -a B\n    local -a C\n    local\
  \ -a RESULT\n\n    # Remove duplicate elements from $IFS-separated list\n    # Ignore\
  \ empty elements\n    # Ignore lines beginning with #\n    # Ignore lines starting\
  \ with '-'\n    # Ignore lines starting with '+'\n    local IGNORE=()\n    IGNORE+=(\"\
  ^#\")\n    IGNORE+=(\"^-\")\n    IGNORE+=(\"^+\")\n    IGNORE+=(\"^ *\")\n    IGNORE+=(\"\
  ^ *$\")\n    IGNORE+=(\"^ *\\#.*\")\n    IGNORE+=(\"^ *\\#.*$\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\")\n    IGNORE+=(\"^ *\\#.*\\#$\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\"\
  )\n    IGNORE+=(\"^ *\\#.*\\#\\#$\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#$\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\")\n    IGNORE+=(\"^\
  \ *\\#.*\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#$\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"\
  ^ *\\#.*\\#\\#\\#\\#\\#\")\n    IGNORE+=(\"^ *\\#.*\\#\\#\\#\\"
- "    local IFS=$1\n    local -a arr=()\n    local i item\n    for item in $@; do\n\
  \        arr+=(\"$item\")\n    done\n    IFS=$IFS\n    echo ${arr[@]}"
- "  local i ilist sorted\n  ilist=\"$1\"\n  sorted=()\n  for i in $ilist; do\n  \
  \  sorted+=(\"$i\")\n  done\n  printf '%s\\n' \"${sorted[@]}\" | sort -u"
- "  local IFS=$1; shift\n  local -a array=( $* )\n  local i element seen=()\n  for\
  \ i in \"${!array[@]}\"; do\n    seen[$i]=\n  done\n  for i in \"${!seen[@]}\";\
  \ do\n    element=\"${array[i]}\"\n    array=( \"${array[@]:$i:1}\" )\n    if [[\
  \ ${seen[$i]} == $element ]]; then\n      continue\n    fi\n    seen[$i]=$element\n\
  \  done\n  printf '%s\\n' \"${array[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
- "    local IFS=$'\\n'\n    sort -u <<< \"$1\""
- "    local IFS=\"$1\"\n    local -a arr\n    local i imax\n    local output\n\n\
  \    imax=\"${#arr[@]}\"\n    for ((i=0; i<imax; i++)); do\n        arr[i]=\"${arr[i]}\"\
  \n    done\n    arr=($(sort -u <<<\"${arr[@]}\"))\n    output=$(IFS=\"$IFS\" printf\
  \ \"%s\\n\" \"${arr[@]}\")\n    echo \"$output\""
- "    local IFS=$'\\n'\n    local a\n    local b\n    local c\n    local d\n    local\
  \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
  \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
  \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
  \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
  \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
  \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
  \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
  \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
  \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
  \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
  \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
  \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
  \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
  \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
  \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
  \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
  \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
  \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
  \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
  \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
  \ u\n    local v\n"
- "    local IFS=$1\n    local -a ar\n    local i prev tmp\n    ar=( $@ )\n    IFS=$'\
  \ \\t\\n'\n    for ((i=0; i<${#ar[@]}; i++)); do\n        prev=false\n        for\
  \ ((j=$i; j<${#ar[@]}; j++)); do\n            if [[ ${ar[$i]} == ${ar[$j]} ]]; then\n\
  \                if [[ ${prev} == false ]]; then\n                    tmp=${ar[$i]}\n\
  \                    ar[$i]=${ar[$j]}\n                    ar[$j]=${tmp}\n     \
  \           else\n                    ar[$i]=${ar[$j]}\n                fi\n   \
  \         else\n                prev=true\n            fi\n        done\n    done\n\
  \    IFS=$IFS\n    echo \"${ar[@]}\""
- "    local IFS=$'\\n'\n    sort -u <<<\"$1\""
language: sh
name: HumanEval_34_unique
prompt: '#!/bin/bash

  # Return sorted unique elements in a list

  # >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])

  # [0, 2, 3, 5, 9, 123]

  #

  # $1 is a space-separated list

  unique() {

  '
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    unique \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 3 5 2 3 3 9 0 123\") = \"0 2 3 5 9 123\" ]]\n}\n\nrun_test"

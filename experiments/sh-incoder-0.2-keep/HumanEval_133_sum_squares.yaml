name: HumanEval_133_sum_squares
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a list of numbers.\n# You need to return the\
  \ sum of squared numbers in the given list,\n# round each element in the list to\
  \ the upper int(Ceiling) first.\n# Examples:\n# For lst = [1,2,3] the output should\
  \ be 14\n# For lst = [1,4,9] the output should be 98\n# For lst = [1,3,5,7] the\
  \ output should be 84\n# For lst = [1.4,4.2,0] the output should be 29\n# For lst\
  \ = [-2.4,1,1] the output should be 6\n#\n# $1 is a space-separated list\nsum_squares()\
  \ {\n"
tests: "}\n\ncandidate() {\n    sum_squares \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1.0 2.0 3.0\") = \"14\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\"\
  ) = \"14\" ]]\n    [[ $(candidate \"1.0 3.0 5.0 7.0\") = \"84\" ]]\n    [[ $(candidate\
  \ \"1.4 4.2 0.0\") = \"29\" ]]\n    [[ $(candidate \"-2.4 1.0 1.0\") = \"6\" ]]\n\
  \    [[ $(candidate \"100.0 1.0 15.0 2.0\") = \"10230\" ]]\n    [[ $(candidate \"\
  10000.0 10000.0\") = \"200000000\" ]]\n    [[ $(candidate \"-1.4 4.6 6.3\") = \"\
  75\" ]]\n    [[ $(candidate \"-1.4 17.9 18.9 19.9\") = \"1086\" ]]\n    [[ $(candidate\
  \ \"0.0\") = \"0\" ]]\n    [[ $(candidate \"-1.0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"-1.0 1.0 0.0\") = \"2\" ]]\n}\n\nrun_test"
completions: ["    local lst=$1\n    local sum=0\n    for element in $lst; do\n  \
    \      sum=$((sum+element*element))\n    done\n    echo $sum", "    local lst=$1\n\
    \    local sum=0\n    local i\n    for ((i=0; i<${#lst[@]}; i++)); do\n      \
    \  sum=$((${sum}+${lst[i]}*${lst[i]}))\n    done\n    echo \"${sum}\"", "    local\
    \ lst=$1\n    local sum=0\n    for number in $lst; do\n        sum=$((sum+number*number))\n\
    \    done\n    echo \"$sum\"", "    local lst=$1\n    local sum=0\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    ", "    local lst=$1\n\
    \    local sum=0\n    local i\n    for i in $lst; do\n        sum=$((sum+i*i))\n\
    \    done\n    echo \"$sum\"", "  local lst=$1\n  local sum=0\n  local i\n  for\
    \ i in $lst; do\n    sum=$((sum+i*i))\n  done\n  echo $sum", "    local lst=$1\n\
    \    local sum=0\n    local i=0\n    while [ $i -lt ${#lst} ]; do\n        sum=$((\
    \ $sum + ${lst[$i]} * ${lst[$i]} ))\n        i=$(( $i + 1 ))\n    done\n    echo\
    \ \"$sum\"", "    local lst=$1\n    local sum=0\n    for i in $lst; do\n     \
    \   sum=$((sum+i*i))\n    done\n    echo $sum", "    local lst=$1\n    local sum=0\n\
    \    for (( i=0; i<${#lst[@]}; i++ )); do\n        sum=$(( sum + ${lst[i]} * ${lst[i]}\
    \ ))\n    done\n    echo $sum", "    local lst=$1\n    local sum=0\n    local\
    \ i\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        sum=$(( sum + ${lst[i]}\
    \ * ${lst[i]} ))\n    done\n    echo $sum", "    local lst=$1\n    local sum=0\n\
    \    for element in $lst; do\n        sum=$((sum + element*element))\n    done\n\
    \    echo $((sum+0))", "    local lst=$1\n    local sum=0\n    for x in $lst;\
    \ do\n        sum=$((sum + x*x))\n    done\n    echo $sum", "    local lst=$1\n\
    \    local sum=0\n    local i\n    for ((i=0; i<${#lst[@]}; i++)); do\n      \
    \  sum=$((sum+${lst[i]}*${lst[i]}))\n    done\n    echo $((sum+0))", "  local\
    \ lst=$1\n  local sum=0\n  for i in $lst; do\n    sum=$((sum+i*i))\n  done\n \
    \ echo $sum", "  local lst=$1\n  local sum=0\n  for i in $lst; do\n    sum=$((sum+i*i))\n\
    \  done\n  echo $sum", "    local lst=$1\n    local sum=0\n    for element in\
    \ $lst; do\n        sum=$((sum+element*element))\n    done\n    echo $sum", " \
    \   local lst=$1\n    local sum=0\n    local i\n    local j\n    local k\n   \
    \ local n\n    local m\n    local p\n    local q\n    local r\n    local s\n \
    \   local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    ", "    local lst=$1\n    local sum=0\n    for\
    \ element in ${lst[@]}; do\n        sum=$((sum + element*element))\n    done\n\
    \    echo $sum", "  local lst=$1\n  local sum=0\n  local i\n  for i in $lst; do\n\
    \    sum=$((sum+i*i))\n  done\n  echo $sum", "    local lst=$1\n    local sum=0\n\
    \    local i\n    for (( i=0; i<${#lst[@]}; i++ )); do\n        sum=$(( sum +\
    \ ${lst[i]} * ${lst[i]} ))\n    done\n    echo $(( sum / 2 ))"]
stop_tokens:
- "\n}"

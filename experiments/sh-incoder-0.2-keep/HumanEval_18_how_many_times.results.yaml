language: sh
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string::$i}\" == \"${substring}\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe67nega9.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i\n  for i in $(seq 0 $((${#string}\
    \ - ${#substring})))\n  do\n    if [[ $string == ${string:i:${#substring}} ]]\n\
    \    then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [[ $string == *\"${substring}\"* ]]; then\n\
    \            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i\n  for i in $(seq 0 ${#string})\n\
    \  do\n    if [[ ${string:$i:${#substring}} == $substring ]]\n    then\n     \
    \ ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: -i:1}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4d62kbuy.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n                break\n            fi\n        done\n \
    \   done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substring_len\n    local substring_index\n    local\
    \ substring_index2\n    local substring_index3\n    local substring_index4\n \
    \   local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local substring_count=0\n    local\
    \ substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local match\n    local match_index\n    local match_index2\n\
    \    local match_index3\n    local match_index4\n    local match_index5\n    local\
    \ match_index6\n    local match_index7\n    local match_index8\n    local match_index9\n\
    \    local match_index10\n    local match_index11\n    local match_index12\n \
    \   local match_index13\n    local match_index14\n    local match_index15\n  \
    \  local match_index16\n    local match_index17\n    local match_index18\n   \
    \ local match_index19\n    local match_index20\n    local match_index21\n    local\
    \ match_index22\n    local match_index23\n    local match_index24\n    local match_index25\n\
    \    local match_index26\n    local match_index27\n    local match_index28\n \
    \   local match_index29\n    local match_index30\n    local match_index31\n  \
    \  local match_index32\n    local match_index33\n    local match_index34\n   \
    \ local match_index35\n    local match_index36\n    local match_index37\n    local\
    \ match_index38\n    local match_index39\n    local match_index40\n    local match_index41\n\
    \    local match_index42\n    local match_index43\n    local match_index44\n \
    \   local match_index45\n    local match_index46\n    local match_index47\n  \
    \  local match_index48\n    local match_index49\n    local match_index50\n   \
    \ local match_index51\n    local match_index52\n    local match_index53\n    local\
    \ match_index54\n    local match_index55\n    local match_index56\n    local match_index57\n\
    \    local match_index58\n    local match_index59\n    local match_index60\n \
    \   local match_index61\n    local match_index62\n    local match_index63\n  \
    \  local match_index64\n    local match_index65\n    local match_index66\n   \
    \ local match_index67\n    local match_index68\n    local match_index69\n    local\
    \ match_index70\n    local match_index71\n    local match_index72\n    local match_index73\n\
    \    local match_index74\n    local match_index75\n    local match_index76\n \
    \   local match_index77\n    local match_index78\n    local match_index79\n  \
    \  local match_index80\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_index=0\n\
    \    local substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: i:${#substring}}\" == \"$substring\" ]]; then\n  \
    \    ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkp2wecqr.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local substring_index=0\n  local substring_index2=0\n\
    \  local substring_index3=0\n  local substring_index4=0\n  local substring_index5=0\n\
    \  local substring_index6=0\n  local substring_index7=0\n  local substring_index8=0\n\
    \  local substring_index9=0\n  local substring_index10=0\n  local substring_index11=0\n\
    \  local substring_index12=0\n  local substring_index13=0\n  local substring_index14=0\n\
    \  local substring_index15=0\n  local substring_index16=0\n  local substring_index17=0\n\
    \  local substring_index18=0\n  local substring_index19=0\n  local substring_index20=0\n\
    \  local substring_index21=0\n  local substring_index22=0\n  local substring_index23=0\n\
    \  local substring_index24=0\n  local substring_index25=0\n  local substring_index26=0\n\
    \  local substring_index27=0\n  local substring_index28=0\n  local substring_index29=0\n\
    \  local substring_index30=0\n  local substring_index31=0\n  local substring_index32=0\n\
    \  local substring_index33=0\n  local substring_index34=0\n  local substring_index35=0\n\
    \  local substring_index36=0\n  local substring_index37=0\n  local substring_index38=0\n\
    \  local substring_index39=0\n  local substring_index40=0\n  local substring_index41=0\n\
    \  local substring_index42=0\n  local substring_index43=0\n  local substring_index44=0\n\
    \  local substring_index45=0\n  local substring_index46=0\n  local substring_index47=0\n\
    \  local substring_index48=0\n  local substring_index49=0\n  local substring_index50=0\n\
    \  local substring_index51=0\n  local substring_index52=0\n  local substring_index53=0\n\
    \  local substring_index54=0\n  local substring_index55=0\n  local substring_index56=0\n\
    \  local substring_index57=0\n  local substring_index58=0\n  local substring_index59=0\n\
    \  local substring_index60=0\n  local substring_index61=0\n  local substring_index62=0\n\
    \  local substring_index63=0\n  local substring_index64=0\n  local substring_index65=0\n\
    \  local substring_index66=0\n  local substring_index67=0\n  local substring_index68=0\n\
    \  local substring_index69=0\n  local substring_index70=0\n  local substring_index71=0\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_index=0\n\
    \    local substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ ${string::$i} == ${substring} ]]; then\n      ((count++))\n  \
    \  fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx53qisd5.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=1;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: -i:1}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4d62kbuy.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substring_len\n    local substring_index\n    local\
    \ substring_index2\n    local substring_index3\n    local substring_index4\n \
    \   local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=${#string}\n    local\
    \ j=${#substring}\n    while [ $i -ge 0 ]; do\n        if [[ $string == *$substring*\
    \ ]]; then\n            (( count++ ))\n            i=$(( $i - 1 ))\n        else\n\
    \            i=$(( $i - 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local substring_index=0\n    local\
    \ substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string:$i:1}\" = \"$substring\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj3_wf0n6.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n  \
    \  local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n   \
    \ local K=0\n    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local\
    \ P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n\
    \    local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n  \
    \  local F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n   \
    \ local K=0\n    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local\
    \ P=0\n    local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n\
    \    local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local \n}\n\ncandidate() {\n\
    \    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[\
    \ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\"\
    \ \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ ${string#$i} =~ $substring ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_azkcgg9.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ len\n    local substringlen\n    local substringcount\n    local substringcount2\n\
    \    local substringcount3\n    local substringcount4\n    local substringcount5\n\
    \    local substringcount6\n    local substringcount7\n    local substringcount8\n\
    \    local substringcount9\n    local substringcount10\n    local substringcount11\n\
    \    local substringcount12\n    local substringcount13\n    local substringcount14\n\
    \    local substringcount15\n    local substringcount16\n    local substringcount17\n\
    \    local substringcount18\n    local substringcount19\n    local substringcount20\n\
    \    local substringcount21\n    local substringcount22\n    local substringcount23\n\
    \    local substringcount24\n    local substringcount25\n    local substringcount26\n\
    \    local substringcount27\n    local substringcount28\n    local substringcount29\n\
    \    local substringcount30\n    local substringcount31\n    local substringcount32\n\
    \    local substringcount33\n    local substringcount34\n    local substringcount35\n\
    \    local substringcount36\n    local substringcount37\n    local substringcount38\n\
    \    local substringcount39\n    local substringcount40\n    local substringcount41\n\
    \    local substringcount42\n    local substringcount43\n    local substringcount44\n\
    \    local substringcount45\n    local substringcount46\n    local substringcount47\n\
    \    local substringcount48\n    local substringcount49\n    local substringcount50\n\
    \    local substringcount51\n    local substringcount52\n    local substringcount53\n\
    \    local substringcount54\n    local substringcount55\n    local substringcount56\n\
    \    local substringcount57\n    local substringcount58\n    local substringcount59\n\
    \    local substringcount60\n    local substringcount61\n    local substringcount62\n\
    \    local substringcount63\n    local substringcount64\n    local substringcount65\n\
    \    local substringcount66\n    local substringcount67\n    local substringcount68\n\
    \    local substringcount69\n    local substringcount70\n    local substringcount71\n\
    \    local substringcount72\n    local substringcount73\n    local substringcount74\n\
    \    local substringcount75\n    local substringcount76\n    local substringcount77\n\
    \    local substringcount78\n    local substringcount79\n    local substringcount80\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [[ $i -lt ${#string} ]]; do\n        ((i++))\n        if [[ ${string:$i:1} ==\
    \ $substring ]]; then\n            ((count++))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string: i:1}\" == \"$substring\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpaqr528or.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string: -i:$i }\" == \"$substring\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph65cwoke.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]];\
    \ then\n            (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:${#substring}} == $substring ]];\
    \ then\n            (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local substring_index=0\n    local\
    \ substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string::$i}\" = \"${substring}\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8y63oys7.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local substring_index=0\n  local\
    \ substring_index2=0\n  local substring_index3=0\n  local substring_index4=0\n\
    \  local substring_index5=0\n  local substring_index6=0\n  local substring_index7=0\n\
    \  local substring_index8=0\n  local substring_index9=0\n  local substring_index10=0\n\
    \  local substring_index11=0\n  local substring_index12=0\n  local substring_index13=0\n\
    \  local substring_index14=0\n  local substring_index15=0\n  local substring_index16=0\n\
    \  local substring_index17=0\n  local substring_index18=0\n  local substring_index19=0\n\
    \  local substring_index20=0\n  local substring_index21=0\n  local substring_index22=0\n\
    \  local substring_index23=0\n  local substring_index24=0\n  local substring_index25=0\n\
    \  local substring_index26=0\n  local substring_index27=0\n  local substring_index28=0\n\
    \  local substring_index29=0\n  local substring_index30=0\n  local substring_index31=0\n\
    \  local substring_index32=0\n  local substring_index33=0\n  local substring_index34=0\n\
    \  local substring_index35=0\n  local substring_index36=0\n  local substring_index37=0\n\
    \  local substring_index38=0\n  local substring_index39=0\n  local substring_index40=0\n\
    \  local substring_index41=0\n  local substring_index42=0\n  local substring_index43=0\n\
    \  local substring_index44=0\n  local substring_index45=0\n  local substring_index46=0\n\
    \  local substring_index47=0\n  local substring_index48=0\n  local substring_index49=0\n\
    \  local substring_index50=0\n  local substring_index51=0\n  local substring_index52=0\n\
    \  local substring_index53=0\n  local substring_index54=0\n  local substring_index55=0\n\
    \  local substring_index56=0\n  local substring_index57=0\n  local substring_index58=0\n\
    \  local substring_index59=0\n  local substring_index60=0\n  local substring_index61=0\n\
    \  local substring_index62=0\n  local substring_index63=0\n  local substring_index64=0\n\
    \  local substring_index65=0\n  local substring_index66=0\n  local substring_index67=0\n\
    \  local substring_index68=0\n  local substring_index69=0\n  local substring_index70=0\n\
    \  local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: -1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    while [ \"$i\" -lt \"${#string}\" ]; do\n        local c=\"${string:$i:1}\"\
    \n        if [ \"$c\" == \"$substring\" ]; then\n            ((count++))\n   \
    \         i=$((i+1))\n            j=$((j+1))\n        elif [ \"$c\" == \"$substring\"\
    \ -a \"$j\" -eq 0 ]; then\n            ((count++))\n            i=$((i+1))\n \
    \           j=$((j+1))\n        elif [ \"$c\" == \"$substring\" -a \"$j\" -gt\
    \ 0 ]; then\n            ((count++))\n            j=$((j+1))\n        fi\n   \
    \ done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=39 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660028397
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_index=0\n\
    \    local substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=1;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count+=1))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9hl210a7.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substring_len\n    local substring_index\n    local\
    \ substring_index2\n    local substring_index3\n    local substring_index4\n \
    \   local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]];\
    \ then\n            ((count++))\n        fi\n        ((i++))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string::$i}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp44955blj.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local substring_index=0\n    local\
    \ substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local match\n    local match_index\n    local match_index2\n\
    \    local match_index3\n    local match_index4\n    local match_index5\n    local\
    \ match_index6\n    local match_index7\n    local match_index8\n    local match_index9\n\
    \    local match_index10\n    local match_index11\n    local match_index12\n \
    \   local match_index13\n    local match_index14\n    local match_index15\n  \
    \  local match_index16\n    local match_index17\n    local match_index18\n   \
    \ local match_index19\n    local match_index20\n    local match_index21\n    local\
    \ match_index22\n    local match_index23\n    local match_index24\n    local match_index25\n\
    \    local match_index26\n    local match_index27\n    local match_index28\n \
    \   local match_index29\n    local match_index30\n    local match_index31\n  \
    \  local match_index32\n    local match_index33\n    local match_index34\n   \
    \ local match_index35\n    local match_index36\n    local match_index37\n    local\
    \ match_index38\n    local match_index39\n    local match_index40\n    local match_index41\n\
    \    local match_index42\n    local match_index43\n    local match_index44\n \
    \   local match_index45\n    local match_index46\n    local match_index47\n  \
    \  local match_index48\n    local match_index49\n    local match_index50\n   \
    \ local match_index51\n    local match_index52\n    local match_index53\n    local\
    \ match_index54\n    local match_index55\n    local match_index56\n    local match_index57\n\
    \    local match_index58\n    local match_index59\n    local match_index60\n \
    \   local match_index61\n    local match_index62\n    local match_index63\n  \
    \  local match_index64\n    local match_index65\n    local match_index66\n   \
    \ local match_index67\n    local match_index68\n    local match_index69\n    local\
    \ match_index70\n    local match_index71\n    local match_index72\n    local match_index73\n\
    \    local match_index74\n    local match_index75\n    local match_index76\n \
    \   local match_index77\n    local match_index78\n    local match_index79\n  \
    \  local match_index80\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for ((i=0;\
    \ i<${#string}; i++)); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]];\
    \ then\n            (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ $i == $substring ]]; then\n      ((count++))\n    fi\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string[i]}\" == \"$substring\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp32acxbzc.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ len\n    local substringlen\n    local substringlen2\n    local substringlen3\n\
    \    local substringlen4\n    local substringlen5\n    local substringlen6\n \
    \   local substringlen7\n    local substringlen8\n    local substringlen9\n  \
    \  local substringlen10\n    local substringlen11\n    local substringlen12\n\
    \    local substringlen13\n    local substringlen14\n    local substringlen15\n\
    \    local substringlen16\n    local substringlen17\n    local substringlen18\n\
    \    local substringlen19\n    local substringlen20\n    local substringlen21\n\
    \    local substringlen22\n    local substringlen23\n    local substringlen24\n\
    \    local substringlen25\n    local substringlen26\n    local substringlen27\n\
    \    local substringlen28\n    local substringlen29\n    local substringlen30\n\
    \    local substringlen31\n    local substringlen32\n    local substringlen33\n\
    \    local substringlen34\n    local substringlen35\n    local substringlen36\n\
    \    local substringlen37\n    local substringlen38\n    local substringlen39\n\
    \    local substringlen40\n    local substringlen41\n    local substringlen42\n\
    \    local substringlen43\n    local substringlen44\n    local substringlen45\n\
    \    local substringlen46\n    local substringlen47\n    local substringlen48\n\
    \    local substringlen49\n    local substringlen50\n    local substringlen51\n\
    \    local substringlen52\n    local substringlen53\n    local substringlen54\n\
    \    local substringlen55\n    local substringlen56\n    local substringlen57\n\
    \    local substringlen58\n    local substringlen59\n    local substringlen60\n\
    \    local substringlen61\n    local substringlen62\n    local substringlen63\n\
    \    local substringlen64\n    local substringlen65\n    local substringlen66\n\
    \    local substringlen67\n    local substringlen68\n    local substringlen69\n\
    \    local substringlen70\n    local substringlen71\n    local substringlen72\n\
    \    local substringlen73\n    local substringlen74\n    local substringlen75\n\
    \    local substringlen76\n    local substringlen77\n    local substringlen78\n\
    \    local substringlen79\n    local substringlen80\n    local substringlen\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i\n  for i in $(seq 0 $((${#string}\
    \ - ${#substring})))\n  do\n    if [[ $string == ${string:$i:${#substring}} ]]\n\
    \    then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          ((count++))\n        fi\n        ((i++))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string: -i:1}\" == \"$substring\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuuzzxdov.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: i:1}\" == \"$substring\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk6vlk1d9.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local substring_count=0\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n\
    \      (( substring_count++ ))\n    else\n      if (( substring_count==0 )); then\n\
    \        (( count++ ))\n      fi\n      substring_count=0\n    fi\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n  \
    \          (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_index=0\n\
    \    local substring_index2=0\n    local substring_index3=0\n    local substring_index4=0\n\
    \    local substring_index5=0\n    local substring_index6=0\n    local substring_index7=0\n\
    \    local substring_index8=0\n    local substring_index9=0\n    local substring_index10=0\n\
    \    local substring_index11=0\n    local substring_index12=0\n    local substring_index13=0\n\
    \    local substring_index14=0\n    local substring_index15=0\n    local substring_index16=0\n\
    \    local substring_index17=0\n    local substring_index18=0\n    local substring_index19=0\n\
    \    local substring_index20=0\n    local substring_index21=0\n    local substring_index22=0\n\
    \    local substring_index23=0\n    local substring_index24=0\n    local substring_index25=0\n\
    \    local substring_index26=0\n    local substring_index27=0\n    local substring_index28=0\n\
    \    local substring_index29=0\n    local substring_index30=0\n    local substring_index31=0\n\
    \    local substring_index32=0\n    local substring_index33=0\n    local substring_index34=0\n\
    \    local substring_index35=0\n    local substring_index36=0\n    local substring_index37=0\n\
    \    local substring_index38=0\n    local substring_index39=0\n    local substring_index40=0\n\
    \    local substring_index41=0\n    local substring_index42=0\n    local substring_index43=0\n\
    \    local substring_index44=0\n    local substring_index45=0\n    local substring_index46=0\n\
    \    local substring_index47=0\n    local substring_index48=0\n    local substring_index49=0\n\
    \    local substring_index50=0\n    local substring_index51=0\n    local substring_index52=0\n\
    \    local substring_index53=0\n    local substring_index54=0\n    local substring_index55=0\n\
    \    local substring_index56=0\n    local substring_index57=0\n    local substring_index58=0\n\
    \    local substring_index59=0\n    local substring_index60=0\n    local substring_index61=0\n\
    \    local substring_index62=0\n    local substring_index63=0\n    local substring_index64=0\n\
    \    local substring_index65=0\n    local substring_index66=0\n    local substring_index67=0\n\
    \    local substring_index68=0\n    local substring_index69=0\n    local substring_index70=0\n\
    \    local substring_index71=0\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    len=\"${#string}\"\n    for ((i=0; i<len; i++)); do\n    \
    \    j=$((i+1))\n        if [[ $j -gt $len ]]; then\n            j=$len\n    \
    \    fi\n        if [[ $j -eq 1 ]]; then\n            echo \"$substring\"\n  \
    \          continue\n        fi\n        if [[ $j -eq 2 ]]; then\n           \
    \ if [[ $string == *\"$substring\"* ]]; then\n                count=$((count+1))\n\
    \            fi\n            continue\n        fi\n        if [[ $string == *\"\
    $substring\"* ]]; then\n            count=$((count+1))\n            i=$((j-1))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=1; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local match\n    local match_index\n    local match_index2\n\
    \    local match_index3\n    local match_index4\n    local match_index5\n    local\
    \ match_index6\n    local match_index7\n    local match_index8\n    local match_index9\n\
    \    local match_index10\n    local match_index11\n    local match_index12\n \
    \   local match_index13\n    local match_index14\n    local match_index15\n  \
    \  local match_index16\n    local match_index17\n    local match_index18\n   \
    \ local match_index19\n    local match_index20\n    local match_index21\n    local\
    \ match_index22\n    local match_index23\n    local match_index24\n    local match_index25\n\
    \    local match_index26\n    local match_index27\n    local match_index28\n \
    \   local match_index29\n    local match_index30\n    local match_index31\n  \
    \  local match_index32\n    local match_index33\n    local match_index34\n   \
    \ local match_index35\n    local match_index36\n    local match_index37\n    local\
    \ match_index38\n    local match_index39\n    local match_index40\n    local match_index41\n\
    \    local match_index42\n    local match_index43\n    local match_index44\n \
    \   local match_index45\n    local match_index46\n    local match_index47\n  \
    \  local match_index48\n    local match_index49\n    local match_index50\n   \
    \ local match_index51\n    local match_index52\n    local match_index53\n    local\
    \ match_index54\n    local match_index55\n    local match_index56\n    local match_index57\n\
    \    local match_index58\n    local match_index59\n    local match_index60\n \
    \   local match_index61\n    local match_index62\n    local match_index63\n  \
    \  local match_index64\n    local match_index65\n    local match_index66\n   \
    \ local match_index67\n    local match_index68\n    local match_index69\n    local\
    \ match_index70\n    local match_index71\n    local match_index72\n    local match_index73\n\
    \    local match_index74\n    local match_index75\n    local match_index76\n \
    \   local match_index77\n    local match_index78\n    local match_index79\n  \
    \  local match_index80\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ ${string:$i:${#substring}} == $substring ]];\
    \ then\n            (( count++ ))\n        fi\n        i=$(( i + 1 ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: i:1}\" == \"$substring\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk6vlk1d9.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local match\n    local match_index\n    local match_length\n\
    \    local match_length_index\n    local match_length_count\n    local match_length_count2\n\
    \    local match_length_count3\n    local match_length_count4\n    local match_length_count5\n\
    \    local match_length_count6\n    local match_length_count7\n    local match_length_count8\n\
    \    local match_length_count9\n    local match_length_count10\n    local match_length_count11\n\
    \    local match_length_count12\n    local match_length_count13\n    local match_length_count14\n\
    \    local match_length_count15\n    local match_length_count16\n    local match_length_count17\n\
    \    local match_length_count18\n    local match_length_count19\n    local match_length_count20\n\
    \    local match_length_count21\n    local match_length_count22\n    local match_length_count23\n\
    \    local match_length_count24\n    local match_length_count25\n    local match_length_count26\n\
    \    local match_length_count27\n    local match_length_count28\n    local match_length_count29\n\
    \    local match_length_count30\n    local match_length_count31\n    local match_length_count32\n\
    \    local match_length_count33\n    local match_length_count34\n    local match_length_count35\n\
    \    local match_length_count36\n    local match_length_count37\n    local match_length_count38\n\
    \    local match_length_count39\n    local match_length_count40\n    local match_length_count41\n\
    \    local match_length_count42\n    local match_length_count43\n    local match_length_count44\n\
    \    local match_length_count45\n    local match_length_count46\n    local match_length_count47\n\
    \    local match_length_count48\n    local match_length_count49\n    local match_length_count50\n\
    \    local match_length_count51\n    local match_length_count52\n    local match_length_count53\n\
    \    local match_length_count54\n    local match_length_count55\n    local match_length_count56\n\
    \    local match_length_count57\n    local match_length_count58\n    local match_length_count59\n\
    \    local match_length_count60\n    local match_length_count61\n    local match_length_count62\n\
    \    local match_length_count63\n    local match_length_count64\n    local match_length_count65\n\
    \    local match_length_count66\n    local \n}\n\ncandidate() {\n    how_many_times\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n\
    \    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_count=0\n\
    \    local substring_index=0\n    local substring_index2=0\n    local substring_index3=0\n\
    \    local substring_index4=0\n    local substring_index5=0\n    local substring_index6=0\n\
    \    local substring_index7=0\n    local substring_index8=0\n    local substring_index9=0\n\
    \    local substring_index10=0\n    local substring_index11=0\n    local substring_index12=0\n\
    \    local substring_index13=0\n    local substring_index14=0\n    local substring_index15=0\n\
    \    local substring_index16=0\n    local substring_index17=0\n    local substring_index18=0\n\
    \    local substring_index19=0\n    local substring_index20=0\n    local substring_index21=0\n\
    \    local substring_index22=0\n    local substring_index23=0\n    local substring_index24=0\n\
    \    local substring_index25=0\n    local substring_index26=0\n    local substring_index27=0\n\
    \    local substring_index28=0\n    local substring_index29=0\n    local substring_index30=0\n\
    \    local substring_index31=0\n    local substring_index32=0\n    local substring_index33=0\n\
    \    local substring_index34=0\n    local substring_index35=0\n    local substring_index36=0\n\
    \    local substring_index37=0\n    local substring_index38=0\n    local substring_index39=0\n\
    \    local substring_index40=0\n    local substring_index41=0\n    local substring_index42=0\n\
    \    local substring_index43=0\n    local substring_index44=0\n    local substring_index45=0\n\
    \    local substring_index46=0\n    local substring_index47=0\n    local substring_index48=0\n\
    \    local substring_index49=0\n    local substring_index50=0\n    local substring_index51=0\n\
    \    local substring_index52=0\n    local substring_index53=0\n    local substring_index54=0\n\
    \    local substring_index55=0\n    local substring_index56=0\n    local substring_index57=0\n\
    \    local substring_index58=0\n    local substring_index59=0\n    local substring_index60=0\n\
    \    local substring_index61=0\n    local substring_index62=0\n    local substring_index63=0\n\
    \    local substring_index64=0\n    local substring_index65=0\n    local substring_index66=0\n\
    \    local substring_index67=0\n    local substring_index68=0\n    local substring_index69=0\n\
    \    local substring_index70=0\n\n}\n\ncandidate() {\n    how_many_times \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[\
    \ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local substring_count=0\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        if\
    \ [[ ${string:$i:1} == ${substring:$i:1} ]]; then\n            (( substring_count++\
    \ ))\n        fi\n    done\n    for (( j=0; j<${#substring}; j++ )); do\n    \
    \    if [[ ${substring:$j:1} == ${string:$j:1} ]]; then\n            (( count++\
    \ ))\n        fi\n    done\n    echo \"${substring_count}\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for ((i=0;\
    \ i<${#string}; i++)); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substringlen\n    local substringcount\n    local substringcount2\n\
    \    local substringcount3\n    local substringcount4\n    local substringcount5\n\
    \    local substringcount6\n    local substringcount7\n    local substringcount8\n\
    \    local substringcount9\n    local substringcount10\n    local substringcount11\n\
    \    local substringcount12\n    local substringcount13\n    local substringcount14\n\
    \    local substringcount15\n    local substringcount16\n    local substringcount17\n\
    \    local substringcount18\n    local substringcount19\n    local substringcount20\n\
    \    local substringcount21\n    local substringcount22\n    local substringcount23\n\
    \    local substringcount24\n    local substringcount25\n    local substringcount26\n\
    \    local substringcount27\n    local substringcount28\n    local substringcount29\n\
    \    local substringcount30\n    local substringcount31\n    local substringcount32\n\
    \    local substringcount33\n    local substringcount34\n    local substringcount35\n\
    \    local substringcount36\n    local substringcount37\n    local substringcount38\n\
    \    local substringcount39\n    local substringcount40\n    local substringcount41\n\
    \    local substringcount42\n    local substringcount43\n    local substringcount44\n\
    \    local substringcount45\n    local substringcount46\n    local substringcount47\n\
    \    local substringcount48\n    local substringcount49\n    local substringcount50\n\
    \    local substringcount51\n    local substringcount52\n    local substringcount53\n\
    \    local substringcount54\n    local substringcount55\n    local substringcount56\n\
    \    local substringcount57\n    local substringcount58\n    local substringcount59\n\
    \    local substringcount60\n    local substringcount61\n    local substringcount62\n\
    \    local substringcount63\n    local substringcount64\n    local substringcount65\n\
    \    local substringcount66\n    local substringcount67\n    local substringcount68\n\
    \    local substringcount69\n    local substringcount70\n    local substringcount71\n\
    \    local substringcount72\n    local substringcount73\n    local substringcount74\n\
    \    local substringcount75\n    local substringcount76\n    local substringcount77\n\
    \    local substringcount78\n    local substringcount79\n    local substringcount80\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substringlen\n    local substringlen2\n    local substringlen3\n\
    \    local substringlen4\n    local substringlen5\n    local substringlen6\n \
    \   local substringlen7\n    local substringlen8\n    local substringlen9\n  \
    \  local substringlen10\n    local substringlen11\n    local substringlen12\n\
    \    local substringlen13\n    local substringlen14\n    local substringlen15\n\
    \    local substringlen16\n    local substringlen17\n    local substringlen18\n\
    \    local substringlen19\n    local substringlen20\n    local substringlen21\n\
    \    local substringlen22\n    local substringlen23\n    local substringlen24\n\
    \    local substringlen25\n    local substringlen26\n    local substringlen27\n\
    \    local substringlen28\n    local substringlen29\n    local substringlen30\n\
    \    local substringlen31\n    local substringlen32\n    local substringlen33\n\
    \    local substringlen34\n    local substringlen35\n    local substringlen36\n\
    \    local substringlen37\n    local substringlen38\n    local substringlen39\n\
    \    local substringlen40\n    local substringlen41\n    local substringlen42\n\
    \    local substringlen43\n    local substringlen44\n    local substringlen45\n\
    \    local substringlen46\n    local substringlen47\n    local substringlen48\n\
    \    local substringlen49\n    local substringlen50\n    local substringlen51\n\
    \    local substringlen52\n    local substringlen53\n    local substringlen54\n\
    \    local substringlen55\n    local substringlen56\n    local substringlen57\n\
    \    local substringlen58\n    local substringlen59\n    local substringlen60\n\
    \    local substringlen61\n    local substringlen62\n    local substringlen63\n\
    \    local substringlen64\n    local substringlen65\n    local substringlen66\n\
    \    local substringlen67\n    local substringlen68\n    local substringlen69\n\
    \    local substringlen70\n    local substringlen71\n    local substringlen72\n\
    \    local substringlen73\n    local substringlen74\n    local substringlen75\n\
    \    local substringlen76\n    local substringlen77\n    local substringlen78\n\
    \    local substringlen79\n    local substringlen80\n    local substringlen\n\
    }\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [[ $i -lt ${#string} ]]; do\n        if [[ ${string:$i:${#substring}} == $substring\
    \ ]]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n \
    \   echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local substring_count=0\n    local\
    \ i=0\n    local j=0\n    while [ $i -lt ${#string} ]; do\n        if [[ $string\
    \ == *\"${substring}\"* ]]; then\n            (( substring_count++ ))\n      \
    \  fi\n        (( i++ ))\n    done\n    i=${#string}\n    while [ $i -lt ${#string}\
    \ ]; do\n        if [[ $string == *\"${substring}${substring}\"* ]]; then\n  \
    \          (( substring_count++ ))\n        fi\n        (( i++ ))\n    done\n\
    \    i=${#string}\n    while [ $i -lt ${#string} ]; do\n        if [[ $string\
    \ == *\"${substring}${substring}${substring}\"* ]]; then\n            (( substring_count++\
    \ ))\n        fi\n        (( i++ ))\n    done\n    i=${#string}\n    while [ $i\
    \ -lt ${#string} ]; do\n        if [[ $string == *\"${substring}${substring}${substring}${substring}\"\
    * ]]; then\n            (( substring_count++ ))\n        fi\n        (( i++ ))\n\
    \    done\n    i=${#string}\n    while [ $i -lt ${#string} ]; do\n        if [[\
    \ $string == *\"${substring}${substring}${substring}${substring}${substring}\"\
    * ]]; then\n            (( substring_count++ ))\n        fi\n        (( i++ ))\n\
    \    done\n    i=${#string}\n    while [ $i -lt ${#string} ]; do\n        if [[\
    \ $string == *\"${substring}${substring}${substring}${substring}${substring}${substring}\"\
    * ]]; then\n            (( substring_count++ ))\n        fi\n        (( i++ ))\n\
    \    done\n    i=${#string}\n    while [ $i -lt ${#string} ]; do\n        if [[\
    \ $string == *\"${substring}${substring}${substring}${substring}${substring}${substring}${substring}\"\
    * ]]; then\n            (( substring_count++ ))\n        fi\n        (( i++ ))\n\
    \    done\n    i=${#string}\n    while [ $i -lt ${#string} ]; do\n        if [[\
    \ $string == *\"${substring}${substring}${substring}${substring}${substring}${substring}${substring}${substring}\"\
    * ]]; then\n            (( substring_count++ ))\n        fi\n        (( i++ ))\n\
    \    done\n    i=\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in $(seq 1 \"\
    ${#string}\")\n  do\n    if [[ \"${string:$i:1}\" == \"${substring}\" ]]\n   \
    \ then\n      ((count++))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:1}\" == \"${substring}\"\
    \ ]; then\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: i:1}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx5820cuy.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for ((i=0; i<${#string}; i++)); do\n        for ((j=0; j<${#substring}; j++));\
    \ do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n       \
    \         ((count+=1))\n            fi\n        done\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [[ \"${string: i:1}\" == \"${substring}\" ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx5820cuy.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    while [ $i -lt\
    \ ${#string} ]; do\n        if [[ $string == *$substring* ]]; then\n         \
    \   ((count++))\n        fi\n        i=$((i+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
    ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
    \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"\
    xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\"\
    \ ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        for (( j=0; j<${#substring};\
    \ j++ )); do\n            if [[ ${string:$i:1} == ${substring:$j:1} ]]; then\n\
    \                (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local substring_index=0\n  local\
    \ substring_index2=0\n  while [[ $string ]]; do\n    substring_index=$((substring_index\
    \ + 1))\n    substring_index2=$((substring_index2 + 1))\n    if [[ $string ==\
    \ *\"$substring\"* ]]; then\n      count=$((count + 1))\n    fi\n    string=${string:${#substring}}\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${!string}\"\
    ; do\n    if [ \"${string:$i:1}\" == \"$substring\" ]; then\n      ((count++))\n\
    \    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n \
    \   [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\"\
    \ \"cac\") = \"4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqh6xra7e.sh: line 17: : invalid variable name

    '
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i\n  for i in $(seq 0 ${#string});\
    \ do\n    if [[ ${string:$i:${#substring}} == ${substring} ]]; then\n      ((count++))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  local i\n  for i in \"${string}\"\
    ; do\n    if [[ \"$i\" == \"$substring\" ]]; then\n      ((count++))\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ while [ $i -lt ${#string} ]; do\n        if [[ $string == *$substring* ]]; then\n\
    \            (( count++ ))\n            i=$(( i + 1 ))\n            j=$(( j +\
    \ 1 ))\n        else\n            i=$(( i + 1 ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=\"$1\"\
    \n  local substring=\"$2\"\n  local count=0\n  while [[ $string =~ $substring\
    \ ]]; do\n    ((count++))\n    string=\"${BASH_REMATCH[1]}\"\n  done\n  echo \"\
    $count\"\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\"\
    \ \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n  \
    \  [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028393
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ${substring} ]]; then\n\
    \            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 1
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i\n    local j\n\
    \    local len\n    local substring_len\n    local substring_index\n    local\
    \ substring_index2\n    local substring_index3\n    local substring_index4\n \
    \   local substring_index5\n    local substring_index6\n    local substring_index7\n\
    \    local substring_index8\n    local substring_index9\n    local substring_index10\n\
    \    local substring_index11\n    local substring_index12\n    local substring_index13\n\
    \    local substring_index14\n    local substring_index15\n    local substring_index16\n\
    \    local substring_index17\n    local substring_index18\n    local substring_index19\n\
    \    local substring_index20\n    local substring_index21\n    local substring_index22\n\
    \    local substring_index23\n    local substring_index24\n    local substring_index25\n\
    \    local substring_index26\n    local substring_index27\n    local substring_index28\n\
    \    local substring_index29\n    local substring_index30\n    local substring_index31\n\
    \    local substring_index32\n    local substring_index33\n    local substring_index34\n\
    \    local substring_index35\n    local substring_index36\n    local substring_index37\n\
    \    local substring_index38\n    local substring_index39\n    local substring_index40\n\
    \    local substring_index41\n    local substring_index42\n    local substring_index43\n\
    \    local substring_index44\n    local substring_index45\n    local substring_index46\n\
    \    local substring_index47\n    local substring_index48\n    local substring_index49\n\
    \    local substring_index50\n    local substring_index51\n    local substring_index52\n\
    \    local substring_index53\n    local substring_index54\n    local substring_index55\n\
    \    local substring_index56\n    local substring_index57\n    local substring_index58\n\
    \    local substring_index59\n    local substring_index60\n    local substring_index61\n\
    \    local substring_index62\n    local substring_index63\n    local substring_index64\n\
    \    local substring_index65\n    local substring_index66\n    local substring_index67\n\
    \    local substring_index68\n    local substring_index69\n    local substring_index70\n\
    \    local substring_index71\n    local substring_index72\n    local substring_index73\n\
    \    local substring_index74\n    local substring_index75\n    local substring_index76\n\
    \    local substring_index77\n    local substring_index78\n    local substring_index79\n\
    \    local substring_index80\n}\n\ncandidate() {\n    how_many_times \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate\
    \ \"xyxyxyx\" \"x\") = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"\
    4\" ]]\n    [[ $(candidate \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028392
- exit_code: 0
  program: "#!/bin/bash\n# Find how many times a given substring can be found in the\
    \ original string. Count overlaping cases.\n# >>> how_many_times('', 'a')\n# 0\n\
    # >>> how_many_times('aaa', 'a')\n# 3\n# >>> how_many_times('aaaa', 'aa')\n# 3\n\
    #\n# $1 is a string\n# $2 is a string\nhow_many_times() {\n  local string=$1\n\
    \  local substring=$2\n  local count=0\n  local i\n  for i in $(seq 0 $((${#string}\
    \ - ${#substring})))\n  do\n    if [[ ${string:$i:${#substring}} == $substring\
    \ ]]\n    then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\") = \"4\" ]]\n \
    \   [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate \"john\
    \ doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028393

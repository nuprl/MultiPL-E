language: sh
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=()\n\
    \    local letter_positions=()\n    local new_message=\"\"\n    local vowel_position\n\
    \    local letter_position\n    local letter\n    local vowel\n    local position\n\
    \    local count\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ output=\"\"\n  local vowelCount=0\n  local vowelPosition=0\n  local letterPosition=0\n\
    \  local letterCount=0\n  local letterPosition=0\n  local letter\n  \n  while\
    \ [[ $message != \"\" ]]; do\n    letter=${message:$letterPosition:1}\n    letterCount=$((letterCount+1))\n\
    \    letterPosition=$((letterPosition+1))\n    if [[ $letter == A ]]; then\n \
    \     letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == E ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == I ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == O ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == U ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == A ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == E ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == I ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == O ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == U ]];\
    \ then\n      letterPosition=$((letterPosition+1))\n      letterCount=$((letterCount+1))\n\
    \      letterPosition=$((letterPosition+1))\n    fi\n    if [[ $letter == A ]];\
    \ then\n      letterPosition=$((\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwq1juo_v.sh: line 80: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwq1juo_v.sh: line 97: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelIndex=0\n    local vowelCount=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelPositionInLetter=0\n\
    \    local currentVowelPositionInVowel=0\n    local currentVowelPositionInVowelCount=0\n\
    \    local currentVowelPositionInVowelCount2=0\n    local currentVowelPositionInVowelCount3=0\n\
    \    local currentVowelPositionInVowelCount4=0\n    local currentVowelPositionInVowelCount5=0\n\
    \    local currentVowelPositionInVowelCount6=0\n    local currentVowelPositionInVowelCount7=0\n\
    \    local currentVowelPositionInVowelCount8=0\n    local currentVowelPositionInVowelCount9=0\n\
    \    local currentVowelPositionInVowelCount10=0\n    local currentVowelPositionInVowelCount11=0\n\
    \    local currentVowelPositionInVowelCount12=0\n    local currentVowelPositionInVowelCount13=0\n\
    \    local currentVowelPositionInVowelCount14=0\n    local currentVowelPositionInVowelCount15=0\n\
    \    local currentVowelPositionInVowelCount16=0\n    local currentVowelPositionInVowelCount17=0\n\
    \    local currentVowelPositionInVowelCount18=0\n    local currentVowelPositionInVowelCount19=0\n\
    \    local currentVowelPositionInVowelCount20=0\n    local currentVowelPositionInVowelCount21=0\n\
    \    local currentVowelPositionInVowelCount22=0\n    local currentVowelPositionInVowelCount23=0\n\
    \    local currentVowelPositionInVowelCount24=0\n    local currentVowelPositionInVowelCount25=0\n\
    \    local currentVowelPositionInVowelCount26=0\n    local currentVowelPositionInVowelCount27=0\n\
    \    local currentVowelPositionInVowelCount\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local vowel_positions=$(echo $message\
    \ | tr a-z $letters | tr A-Z $letters | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted=$(echo\
    \ $vowel_positions | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse=$(echo\
    \ $vowel_positions_sorted | rev | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_2=$(\
    \ echo $vowel_positions_sorted_reverse | rev | cut -d ' ' -f 2 | rev | tr ' '\
    \ '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_3=$( echo $vowel_positions_sorted_reverse_2\
    \ | rev | cut -d ' ' -f 3 | rev | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_4=$(\
    \ echo $vowel_positions_sorted_reverse_3 | rev | cut -d ' ' -f 4 | rev | tr '\
    \ ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_5=$( echo $vowel_positions_sorted_reverse_4\
    \ | rev | cut -d ' ' -f 5 | rev | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_6=$(\
    \ echo $vowel_positions_sorted_reverse_5 | rev | cut -d ' ' -f 6 | rev | tr '\
    \ ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_7=$( echo $vowel_positions_sorted_reverse_6\
    \ | rev | cut -d ' ' -f 7 | rev | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_8=$(\
    \ echo $vowel_positions_sorted_reverse_7 | rev | cut -d ' ' -f 8 | rev | tr '\
    \ ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_9=$( echo $vowel_positions_sorted_reverse_8\
    \ | rev | cut -d ' ' -f 9 | rev | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_10=$(\
    \ echo $vowel_positions_sorted_reverse_9 | rev | cut -d ' ' -f 10 | rev | tr '\
    \ ' '\\n' | sort -u)\n  local vowel_positions_sorted_reverse_11=$( echo $vowel_positions_sorted_reverse_10\
    \ | rev | cut -d ' ' -f 11 | rev | tr ' ' '\\n' | sort -u)\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowel\n    local vowel2\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \ \n    local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i o u y\"\n \
    \   local vowels_4=\"a e i o u y\"\n    local vowels_5=\"a e i o u y\"\n    local\
    \ vowels_6=\"a e i o u y\"\n    local vowels_7=\"a e i o u y\"\n    local vowels_8=\"\
    a e i o u y\"\n    local vowels_9=\"a e i o u y\"\n    local vowels_10=\"a e i\
    \ o u y\"\n    local vowels_11=\"a e i o u y\"\n    local vowels_12=\"a e i o\
    \ u y\"\n    local vowels_13=\"a e i o u y\"\n    local vowels_14=\"a e i o u\
    \ y\"\n    local vowels_15=\"a e i o u y\"\n    local vowels_16=\"a e i o u y\"\
    \n    local vowels_17=\"a e i o u y\"\n    local vowels_18=\"a e i o u y\"\n \
    \   local vowels_19=\"a e i o u y\"\n    local vowels_20=\"a e i o u y\"\n   \
    \ local vowels_21=\"a e i o u y\"\n    local vowels_22=\"a e i o u y\"\n    local\
    \ vowels_23=\"a e i o u y\"\n    local vowels_24=\"a e i o u y\"\n    local vowels_25=\"\
    a e i o u y\"\n    local vowels_26=\"a e i o u y\"\n    local vowels_27=\"a e\
    \ i o u y\"\n    local vowels_28=\"a e i o u y\"\n    local vowels_29=\"a e i\
    \ o u y\"\n    local vowels_30=\"a e i o u y\"\n    local vowels_31=\"a e i o\
    \ u y\"\n    local vowels_32=\"a e i o u y\"\n    local vowels_33=\"a e i o u\
    \ y\"\n    local vowels_34=\"a e i o u y\"\n    local vowels_35=\"a e i o u y\"\
    \n    local vowels_36=\"a e i o u y\"\n    local vowels_37=\"a e i o u y\"\n \
    \   local vowels_38=\"a e i o u y\"\n    local vowels_39=\"a e i o u y\"\n\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowel_count=$(echo $message | sed 's/\\(.\\)/\\1/' | wc -w)\n    local\
    \ vowel_count_2=$((vowel_count - 1))\n    local vowel_count_3=$((vowel_count +\
    \ 1))\n    local vowel_count_4=$((vowel_count_2 + 1))\n    local vowel_count_5=$((vowel_count_3\
    \ + 1))\n    local vowel_count_6=$((vowel_count_4 + 1))\n    local vowel_count_7=$((vowel_count_5\
    \ + 1))\n    local vowel_count_8=$((vowel_count_6 + 1))\n    local vowel_count_9=$((vowel_count_7\
    \ + 1))\n    local vowel_count_10=$((vowel_count_8 + 1))\n    local vowel_count_11=$((vowel_count_9\
    \ + 1))\n    local vowel_count_12=$((vowel_count_10 + 1))\n    local vowel_count_13=$((vowel_count_11\
    \ + 1))\n    local vowel_count_14=$((vowel_count_12 + 1))\n    local vowel_count_15=$((vowel_count_13\
    \ + 1))\n    local vowel_count_16=$((vowel_count_14 + 1))\n    local vowel_count_17=$((vowel_count_15\
    \ + 1))\n    local vowel_count_18=$((vowel_count_16 + 1))\n    local vowel_count_19=$((vowel_count_17\
    \ + 1))\n    local vowel_count_20=$((vowel_count_18 + 1))\n    local vowel_count_21=$((vowel_count_19\
    \ + 1))\n    local vowel_count_22=$((vowel_count_20 + 1))\n    local vowel_count_23=$((vowel_count_21\
    \ + 1))\n    local vowel_count_24=$((vowel_count_22 + 1))\n    local vowel_count_25=$((vowel_count_23\
    \ + 1))\n    local vowel_count_26=$((vowel_count_24 + 1))\n    local vowel_count_27=$((vowel_count_25\
    \ + 1))\n    local vowel_count_28=$((vowel_count_26 + 1))\n    local vowel_count_29=$((vowel_count_27\
    \ + 1))\n    local vowel_count_30=$((vowel_count_28 + 1))\n    local vowel_count_31=$((vowel_count_29\
    \ + 1))\n    local vowel_count_32=$((vowel_count_30 + 1))\n    local vowel_count_33=$((vowel_count_3\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwhptht4h.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwhptht4h.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\" \n\
    \  local vowels_2=\"a e i o u y AE AI OE OI UE UI\"\n  local vowels_3=\"a e i\
    \ o u y AE AI OE OI UE UI ae ai oe oi ue ui\"\n  local vowels_4=\"a e i o u y\
    \ AE AI OE OI UE UI ae ai oe oi ue ui AE AI OE OI UE UI ae ai oe oi ue ui AE\"\
    \n  local vowels_5=\"a e i o u y AE AI OE OI UE UI ae ai oe oi ue ui AE AI OE\
    \ OI UE UI ae ai oe oi ue ui AE\"\n  local vowels_6=\"a e i o u y AE AI OE OI\
    \ UE UI ae ai oe oi ue ui AE AI OE OI UE UI ae ai oe oi ue ui AE\"\n  local vowels_7=\"\
    a e i o u y AE AI OE OI UE UI ae ai oe oi ue ui AE AI OE OI UE UI ae ai oe oi\
    \ ue ui AE\"\n  local vowels_8=\"a e i o u y AE AI OE OI UE UI ae ai oe oi ue\
    \ ui AE AI OE OI UE UI ae ai oe oi ue ui AE\"\n  local vowels_9=\"a e i o u y\
    \ AE AI OE OI UE UI ae ai oe oi ue ui AE AI OE OI UE UI ae ai oe oi ue ui AE\"\
    \n  local vowels_10=\"a e i o u y AE AI OE OI UE UI ae ai oe oi ue ui AE AI OE\
    \ OI UE UI ae ai oe oi ue ui AE\"\n  local vowels_11=\"a e i o u y AE AI OE OI\
    \ UE UI ae ai oe oi ue ui AE AI OE OI UE UI ae ai oe oi ue ui \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl6jjn9x1.sh: line 39: unexpected EOF while looking for matching
    `"''

    /tmp/tmpl6jjn9x1.sh: line 43: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local output=''\n  local i\n  local j\n  local k\n  local vowel\n  local vowel_position\n\
    \  local vowel_position2\n  local vowel_position3\n  local vowel_position4\n \
    \ local vowel_position5\n  local vowel_position6\n  local vowel_position7\n  local\
    \ vowel_position8\n  local vowel_position9\n  local vowel_position10\n  local\
    \ vowel_position11\n  local vowel_position12\n  local vowel_position13\n  local\
    \ vowel_position14\n  local vowel_position15\n  local vowel_position16\n  local\
    \ vowel_position17\n  local vowel_position18\n  local vowel_position19\n  local\
    \ vowel_position20\n  local vowel_position21\n  local vowel_position22\n  local\
    \ vowel_position23\n  local vowel_position24\n  local vowel_position25\n  local\
    \ vowel_position26\n  local vowel_position27\n  local vowel_position28\n  local\
    \ vowel_position29\n  local vowel_position30\n  local vowel_position31\n  local\
    \ vowel_position32\n  local vowel_position33\n  local vowel_position34\n  local\
    \ vowel_position35\n  local vowel_position36\n  local vowel_position37\n  local\
    \ vowel_position38\n  local vowel_position39\n  local vowel_position40\n  local\
    \ vowel_position41\n  local vowel_position42\n  local vowel_position43\n  local\
    \ vowel_position44\n  local vowel_position45\n  local vowel_position46\n  local\
    \ vowel_position47\n  local vowel_position48\n  local vowel_position49\n  local\
    \ vowel_position50\n  local vowel_position51\n  local vowel_position52\n  local\
    \ vowel_position53\n  local vowel_position54\n  local vowel_position55\n  local\
    \ vowel_position56\n  local vowel_position57\n  local vowel_position58\n  local\
    \ vowel_position59\n  local vowel_position60\n  local vowel_position61\n  local\
    \ vowel_position62\n  local vowel_position63\n  local vowel_position64\n  local\
    \ vowel_position65\n  local vowel_position66\n  local vowel_position67\n  local\
    \ vowel_position68\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local vowelCount=0\n\
    \  local letterCount=0\n  local letterIndex=0\n  local vowelIndex=0\n  local letter\n\
    \  local vowel\n  local outputLetter\n  local outputVowel\n  local letterIndex2\n\
    \  local vowelIndex2\n  local letter2\n  local vowel2\n  local letter2Index\n\
    \  local vowel2Index\n  local letter3\n  local vowel3\n  local letter3Index\n\
    \  local vowel3Index\n  local letter4\n  local vowel4\n  local letter4Index\n\
    \  local vowel4Index\n  local letter5\n  local vowel5\n  local letter5Index\n\
    \  local vowel5Index\n  local letter6\n  local vowel6\n  local letter6Index\n\
    \  local vowel6Index\n  local letter7\n  local vowel7\n  local letter7Index\n\
    \  local vowel7Index\n  local letter8\n  local vowel8\n  local letter8Index\n\
    \  local vowel8Index\n  local letter9\n  local vowel9\n  local letter9Index\n\
    \  local vowel9Index\n  local letter10\n  local vowel10\n  local letter10Index\n\
    \  local vowel10Index\n  local letter11\n  local vowel11\n  local letter11Index\n\
    \  local vowel11Index\n  local letter12\n  local vowel12\n  local letter12Index\n\
    \  local vowel12Index\n  local letter13\n  local vowel13\n  local letter13Index\n\
    \  local vowel13Index\n  local letter14\n  local vowel14\n  local letter14Index\n\
    \  local vowel14Index\n  local letter15\n  local vowel15\n  local letter15Index\n\
    \  local vowel15Index\n  local letter16\n  local vowel16\n  local letter16Index\n\
    \  local vowel16Index\n  local letter17\n  local vowel17\n  local letter17Index\n\
    \  local vowel17Index\n  local letter18\n  local vowel18\n  local letter18Index\n\
    \  local vowel18Index\n  local letter19\n  local vowel19\n  local letter19Index\n\
    \  local vowel19Index\n  local letter20\n  local vowel20\n  local letter20Index\n\
    \  local vowel20Index\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=${#vowelsArray[@]}\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndexCount=0\n    local vowelsArrayIndexEnd=0\n    local\
    \ vowelsArrayIndexEndCount=0\n    local vowelsArrayIndexStart=0\n    local vowelsArrayIndexStartCount=0\n\
    \    local vowelsArrayIndexStartEnd=0\n    local vowelsArrayIndexStartEndCount=0\n\
    \    local vowelsArrayIndexStartEndStart=0\n    local vowelsArrayIndexStartEndStartCount=0\n\
    \    local vowelsArrayIndexStartEndStartEnd=0\n    local vowelsArrayIndexStartEndStartEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEnd=0\n    local vowelsArrayIndexStartEndStartEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n\
    \    local vowelsArrayIndexStartEndStartEndEndEndEndEndEndCount=0\n    local vowelsArrayIndexStartEndStartEndEndEndEndEnd\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\n   \
    \ local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=()\n\
    \    local new_message=\"\"\n    local new_vowels=\"\"\n    local new_alphabet=\"\
    \"\n    local new_vowel_positions=()\n    local new_vowel_positions_string=\"\"\
    \n    local new_vowel_positions_string2=\"\"\n    local new_vowel_positions_string3=\"\
    \"\n    local new_vowel_positions_string4=\"\"\n    local new_vowel_positions_string5=\"\
    \"\n    local new_vowel_positions_string6=\"\"\n    local new_vowel_positions_string7=\"\
    \"\n    local new_vowel_positions_string8=\"\"\n    local new_vowel_positions_string9=\"\
    \"\n    local new_vowel_positions_string10=\"\"\n    local new_vowel_positions_string11=\"\
    \"\n    local new_vowel_positions_string12=\"\"\n    local new_vowel_positions_string13=\"\
    \"\n    local new_vowel_positions_string14=\"\"\n    local new_vowel_positions_string15=\"\
    \"\n    local new_vowel_positions_string16=\"\"\n    local new_vowel_positions_string17=\"\
    \"\n    local new_vowel_positions_string18=\"\"\n    local new_vowel_positions_string19=\"\
    \"\n    local new_vowel_positions_string20=\"\"\n    local new_vowel_positions_string21=\"\
    \"\n    local new_vowel_positions_string22=\"\"\n    local new_vowel_positions_string23=\"\
    \"\n    local new_vowel_positions_string24=\"\"\n    local new_vowel_positions_string25=\"\
    \"\n    local new_vowel_positions_string26=\"\"\n    local new_vowel_positions_string27=\"\
    \"\n    local new_vowel_positions_string28=\"\"\n    local new_vowel_positions_string29=\"\
    \"\n    local new_vowel_positions_string30=\"\"\n    local new_vowel_positions_string31=\"\
    \"\n    local new_vowel_positions_string32=\"\"\n    local new_vowel_positions_string33=\"\
    \"\n    local new_vowel_positions_string34=\"\"\n    local new_vowel_positions_string35=\"\
    \"\n    local new_vowel_positions_string36=\"\"\n    local new_vowel_positions_string37=\"\
    \"\n    local new_vowel_positions_string38=\"\"\n    local new_vowel_positions_string39=\"\
    \"\n    local new_vowel_positions_string40=\"\"\n    local new_vowel_\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i o u y\"\n \
    \   local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n \
    \   local vowel_positions=$(echo $msg | sed 's/[aeiouy]/\\n/g' | sed 's/^/0/'\
    \ | sed 's/$/0/' | sort -n | uniq -c)\n    local vowel_positions_sorted=$(echo\
    \ $vowel_positions | sed 's/^/0/' | sed 's/$/0/' | sort -n)\n    local vowel_positions_sorted_reverse=$(echo\
    \ $vowel_positions_sorted | sed 's/^/0/' | sed 's/$/0/' | sort -r | uniq -c)\n\
    \    local vowel_positions_sorted_reverse_sorted=$(echo $vowel_positions_sorted_reverse\
    \ | sed 's/^/0/' | sed 's/$/0/' | sort -r)\n    local vowel_positions_sorted_reverse_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_sorted | sed 's/^/0/' | sed 's/$/0/' | sort\
    \ -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse | sed 's/^/0/' | sed 's/$/0/'\
    \ | sort -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse_sorted | sed 's/^/0/' | sed 's/$/0/'\
    \ | sort -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse | sed 's/^/0/'\
    \ | sed 's/$/0/' | sort -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted | sed 's/^/0/'\
    \ | sed 's/$/0/' | sort -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted\
    \ | sed 's/^/0/' | sed 's/$/0/' | sort -r | uniq -c)\n    local vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse_sorted_reverse\
    \ | sed 's/^/0/' | sed 's/$/0/' | sort -r | \n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpka_oxhst.sh: line 28: unexpected EOF while looking for matching
    `)''

    /tmp/tmpka_oxhst.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local vowelCount2=0\n    local letterCount2=0\n    local letterIndex2=0\n\
    \    local vowelIndex2=0\n    local vowelCount3=0\n    local letterCount3=0\n\
    \    local letterIndex3=0\n    local vowelIndex3=0\n    local vowelCount4=0\n\
    \    local letterCount4=0\n    local letterIndex4=0\n    local vowelIndex4=0\n\
    \    local vowelCount5=0\n    local letterCount5=0\n    local letterIndex5=0\n\
    \    local vowelIndex5=0\n    local vowelCount6=0\n    local letterCount6=0\n\
    \    local letterIndex6=0\n    local vowelIndex6=0\n    local vowelCount7=0\n\
    \    local letterCount7=0\n    local letterIndex7=0\n    local vowelIndex7=0\n\
    \    local vowelCount8=0\n    local letterCount8=0\n    local letterIndex8=0\n\
    \    local vowelIndex8=0\n    local vowelCount9=0\n    local letterCount9=0\n\
    \    local letterIndex9=0\n    local vowelIndex9=0\n    local vowelCount10=0\n\
    \    local letterCount10=0\n    local letterIndex10=0\n    local vowelIndex10=0\n\
    \    local vowelCount11=0\n    local letterCount11=0\n    local letterIndex11=0\n\
    \    local vowelIndex11=0\n    local vowelCount12=0\n    local letterCount12=0\n\
    \    local letterIndex12=0\n    local vowelIndex12=0\n    local vowelCount13=0\n\
    \    local letterCount13=0\n    local letterIndex13=0\n    local vowelIndex13=0\n\
    \    local vowelCount14=0\n    local letterCount14=0\n    local letterIndex14=0\n\
    \    local vowelIndex14=0\n    local vowelCount15=0\n    local letterCount15=0\n\
    \    local letterIndex15=0\n    local vowelIndex15=0\n    local vowelCount16=0\n\
    \    local letterCount16=0\n    local letterIndex16=0\n    local vowelIndex16=0\n\
    \    local vowelCount17=0\n    local letterCount17=0\n    local letterIndex17=0\n\
    \    local vowelIndex17=0\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayLength=${#vowelsArray[@]}\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndex2=0\n    local vowelsArrayIndex3=0\n    local vowelsArrayIndex4=0\n\
    \    local vowelsArrayIndex5=0\n    local vowelsArrayIndex6=0\n    local vowelsArrayIndex7=0\n\
    \    local vowelsArrayIndex8=0\n    local vowelsArrayIndex9=0\n    local vowelsArrayIndex10=0\n\
    \    local vowelsArrayIndex11=0\n    local vowelsArrayIndex12=0\n    local vowelsArrayIndex13=0\n\
    \    local vowelsArrayIndex14=0\n    local vowelsArrayIndex15=0\n    local vowelsArrayIndex16=0\n\
    \    local vowelsArrayIndex17=0\n    local vowelsArrayIndex18=0\n    local vowelsArrayIndex19=0\n\
    \    local vowelsArrayIndex20=0\n    local vowelsArrayIndex21=0\n    local vowelsArrayIndex22=0\n\
    \    local vowelsArrayIndex23=0\n    local vowelsArrayIndex24=0\n    local vowelsArrayIndex25=0\n\
    \    local vowelsArrayIndex26=0\n    local vowelsArrayIndex27=0\n    local vowelsArrayIndex28=0\n\
    \    local vowelsArrayIndex29=0\n    local vowelsArrayIndex30=0\n    local vowelsArrayIndex31=0\n\
    \    local vowelsArrayIndex32=0\n    local vowelsArrayIndex33=0\n    local vowelsArrayIndex34=0\n\
    \    local vowelsArrayIndex35=0\n    local vowelsArrayIndex36=0\n    local vowelsArrayIndex37=0\n\
    \    local vowelsArrayIndex38=0\n    local vowelsArrayIndex39=0\n    local vowelsArrayIndex40=0\n\
    \    local vowelsArrayIndex41=0\n    local vowelsArrayIndex42=0\n    local vowelsArrayIndex43=0\n\
    \    local vowelsArrayIndex44=0\n    local vowelsArrayIndex45=0\n    local vowelsArrayIndex46=0\n\
    \    local vowelsArrayIndex47=0\n    local vowelsArrayIndex48=0\n    local vowelsArrayIndex49=0\n\
    \    local vowelsArrayIndex50=0\n    local vowelsArrayIndex51=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local output=''\n  local i\n  local j\n  local vowel\n  local vowel_position\n\
    \  local vowel_position2\n  local vowel_position3\n  local vowel_position4\n \
    \ local vowel_position5\n  local vowel_position6\n  local vowel_position7\n  local\
    \ vowel_position8\n  local vowel_position9\n  local vowel_position10\n  local\
    \ vowel_position11\n  local vowel_position12\n  local vowel_position13\n  local\
    \ vowel_position14\n  local vowel_position15\n  local vowel_position16\n  local\
    \ vowel_position17\n  local vowel_position18\n  local vowel_position19\n  local\
    \ vowel_position20\n  local vowel_position21\n  local vowel_position22\n  local\
    \ vowel_position23\n  local vowel_position24\n  local vowel_position25\n  local\
    \ vowel_position26\n  local vowel_position27\n  local vowel_position28\n  local\
    \ vowel_position29\n  local vowel_position30\n  local vowel_position31\n  local\
    \ vowel_position32\n  local vowel_position33\n  local vowel_position34\n  local\
    \ vowel_position35\n  local vowel_position36\n  local vowel_position37\n  local\
    \ vowel_position38\n  local vowel_position39\n  local vowel_position40\n  local\
    \ vowel_position41\n  local vowel_position42\n  local vowel_position43\n  local\
    \ vowel_position44\n  local vowel_position45\n  local vowel_position46\n  local\
    \ vowel_position47\n  local vowel_position48\n  local vowel_position49\n  local\
    \ vowel_position50\n  local vowel_position51\n  local vowel_position52\n  local\
    \ vowel_position53\n  local vowel_position54\n  local vowel_position55\n  local\
    \ vowel_position56\n  local vowel_position57\n  local vowel_position58\n  local\
    \ vowel_position59\n  local vowel_position60\n  local vowel_position61\n  local\
    \ vowel_position62\n  local vowel_position63\n  local vowel_position64\n  local\
    \ vowel_position65\n  local vowel_position66\n  local vowel_position67\n  local\
    \ vowel_position68\n  local vowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\n  \
    \  local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n   \
    \ local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw3l6oxw_.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpw3l6oxw_.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowel_positions=$(echo $message | tr ' ' '\\n' | sort | uniq -c | sort\
    \ -n | tail -n 2)\n    local vowel_positions_sorted=$(echo $vowel_positions |\
    \ tr ' ' '\\n' | sort | uniq)\n    local vowel_positions_sorted_reverse=$(echo\
    \ $vowel_positions_sorted | rev | cut -d ' ' -f 1 | rev)\n    local vowel_positions_sorted_reverse_count=$(echo\
    \ $vowel_positions_sorted_reverse | wc -w)\n    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count+1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel_positions_sorted_reverse_count-1))\n\
    \    local vowel_positions_sorted_reverse_count=$(($vowel\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpciu896hu.sh: line 39: unexpected EOF while looking for matching
    `)''

    /tmp/tmpciu896hu.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowel_count=$(echo $message | tr ' ' '\\n' | grep -o \"[aeiouy]+\"\
    \ | wc -l)\n    local vowel_position=$(echo $message | tr ' ' '\\n' | grep -o\
    \ \"[aeiouy]+\" | sed 's/[aeiouy]+/\\n/g' | sed 's/^/\\n/g' | sed 's/$/\\n/g'\
    \ | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed\
    \ 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\\
    n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\\
    n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g'\
    \ | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed\
    \ 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\\
    n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g'\
    \ | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed\
    \ 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\\
    n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g'\
    \ | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed\
    \ 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\\
    n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf93wysgo.sh: line 18: unexpected EOF while looking for matching
    `''''

    /tmp/tmpf93wysgo.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelChar=\"\"\n    local vowelCharIndex=0\n    local vowelCharCount=0\n   \
    \ local vowelCharIndex2=0\n    local vowelCharCount2=0\n    local vowelCharIndex3=0\n\
    \    local vowelCharCount3=0\n    local vowelCharIndex4=0\n    local vowelCharCount4=0\n\
    \    local vowelCharIndex5=0\n    local vowelCharCount5=0\n    local vowelCharIndex6=0\n\
    \    local vowelCharCount6=0\n    local vowelCharIndex7=0\n    local vowelCharCount7=0\n\
    \    local vowelCharIndex8=0\n    local vowelCharCount8=0\n    local vowelCharIndex9=0\n\
    \    local vowelCharCount9=0\n    local vowelCharIndex10=0\n    local vowelCharCount10=0\n\
    \    local vowelCharIndex11=0\n    local vowelCharCount11=0\n    local vowelCharIndex12=0\n\
    \    local vowelCharCount12=0\n    local vowelCharIndex13=0\n    local vowelCharCount13=0\n\
    \    local vowelCharIndex14=0\n    local vowelCharCount14=0\n    local vowelCharIndex15=0\n\
    \    local vowelCharCount15=0\n    local vowelCharIndex16=0\n    local vowelCharCount16=0\n\
    \    local vowelCharIndex17=0\n    local vowelCharCount17=0\n    local vowelCharIndex18=0\n\
    \    local vowelCharCount18=0\n    local vowelCharIndex19=0\n    local vowelCharCount19=0\n\
    \    local vowelCharIndex20=0\n    local vowelCharCount20=0\n    local vowelCharIndex21=0\n\
    \    local vowelCharCount21=0\n    local vowelCharIndex22=0\n    local vowelCharCount22=0\n\
    \    local vowelCharIndex23=0\n    local vowelCharCount23=0\n    local vowelCharIndex24=0\n\
    \    local vowelCharCount24=0\n    local vowelCharIndex25=0\n    local vowelCharCount25=0\n\
    \    local vowelCharIndex26=0\n    local vowelCharCount26=0\n    local vowelCharIndex27=0\n\
    \    local vowelCharCount27=0\n    local vowelCharIndex28=0\n    local vowelCharCount28=0\n\
    \    local vowelCharIndex29=0\n    local vowelCharCount29=0\n    local vowelCharIndex30=0\n\
    \    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y A\"\n    local vowels_3=\"a e i o u y A E I\
    \ O U Y\"\n    local vowels_4=\"a e i o u y A E I O U Y A E I O U Y\"\n    local\
    \ vowels_5=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_6=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_7=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"a e i o u y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_10=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_11=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_12=\"a e i o u\
    \ y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_13=\"a e i o u y A E I\
    \ O \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1dr86saf.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1dr86saf.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentV\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_positions=$(echo $message | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjud2wh3y.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjud2wh3y.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=$(echo $message | tr [a-z] [A-Z] | tr [aeiou] [AEIOU] |\
    \ wc -c)\n    local vowel_count_2=$((vowel_count - 1))\n    local vowel_count_3=$((vowel_count\
    \ + 1))\n    local vowel_count_4=$((vowel_count + 2))\n    local vowel_count_5=$((vowel_count\
    \ + 3))\n    local vowel_count_6=$((vowel_count + 4))\n    local vowel_count_7=$((vowel_count\
    \ + 5))\n    local vowel_count_8=$((vowel_count + 6))\n    local vowel_count_9=$((vowel_count\
    \ + 7))\n    local vowel_count_10=$((vowel_count + 8))\n    local vowel_count_11=$((vowel_count\
    \ + 9))\n    local vowel_count_12=$((vowel_count + 10))\n    local vowel_count_13=$((vowel_count\
    \ + 11))\n    local vowel_count_14=$((vowel_count + 12))\n    local vowel_count_15=$((vowel_count\
    \ + 13))\n    local vowel_count_16=$((vowel_count + 14))\n    local vowel_count_17=$((vowel_count\
    \ + 15))\n    local vowel_count_18=$((vowel_count + 16))\n    local vowel_count_19=$((vowel_count\
    \ + 17))\n    local vowel_count_20=$((vowel_count + 18))\n    local vowel_count_21=$((vowel_count\
    \ + 19))\n    local vowel_count_22=$((vowel_count + 20))\n    local vowel_count_23=$((vowel_count\
    \ + 21))\n    local vowel_count_24=$((vowel_count + 22))\n    local vowel_count_25=$((vowel_count\
    \ + 23))\n    local vowel_count_26=$((vowel_count + 24))\n    local vowel_count_27=$((vowel_count\
    \ + 25))\n    local vowel_count_28=$((vowel_count + 26))\n    local vowel_count_29=$((vowel_count\
    \ + 27))\n    local vowel_count_30=$((vowel_count + 28))\n    local vowel_count_31=$((vowel_count\
    \ + 29))\n    local vowel_count_32=$((vowel_count + 30))\n    local vowel_count_33=$((vowel_count\
    \ + 31\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"\
    mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"\
    This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw\
    \ WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5xu2k70j.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5xu2k70j.sh: line 66: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ output=\"\"\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_count=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelCount2=0\n    local vowelIndex2=0\n    local vowelCount3=0\n    local vowelIndex3=0\n\
    \    local vowelCount4=0\n    local vowelIndex4=0\n    local vowelCount5=0\n \
    \   local vowelIndex5=0\n    local vowelCount6=0\n    local vowelIndex6=0\n  \
    \  local vowelCount7=0\n    local vowelIndex7=0\n    local vowelCount8=0\n   \
    \ local vowelIndex8=0\n    local vowelCount9=0\n    local vowelIndex9=0\n    local\
    \ vowelCount10=0\n    local vowelIndex10=0\n    local vowelCount11=0\n    local\
    \ vowelIndex11=0\n    local vowelCount12=0\n    local vowelIndex12=0\n    local\
    \ vowelCount13=0\n    local vowelIndex13=0\n    local vowelCount14=0\n    local\
    \ vowelIndex14=0\n    local vowelCount15=0\n    local vowelIndex15=0\n    local\
    \ vowelCount16=0\n    local vowelIndex16=0\n    local vowelCount17=0\n    local\
    \ vowelIndex17=0\n    local vowelCount18=0\n    local vowelIndex18=0\n    local\
    \ vowelCount19=0\n    local vowelIndex19=0\n    local vowelCount20=0\n    local\
    \ vowelIndex20=0\n    local vowelCount21=0\n    local vowelIndex21=0\n    local\
    \ vowelCount22=0\n    local vowelIndex22=0\n    local vowelCount23=0\n    local\
    \ vowelIndex23=0\n    local vowelCount24=0\n    local vowelIndex24=0\n    local\
    \ vowelCount25=0\n    local vowelIndex25=0\n    local vowelCount26=0\n    local\
    \ vowelIndex26=0\n    local vowelCount27=0\n    local vowelIndex27=0\n    local\
    \ vowelCount28=0\n    local vowelIndex28=0\n    local vowelCount29=0\n    local\
    \ vowelIndex29=0\n    local vowelCount30=0\n    local vowelIndex30=0\n    local\
    \ vowelCount31=0\n    local vowelIndex31=0\n    local vowelCount32=0\n    local\
    \ vowelIndex32=0\n    local vowelCount33=0\n    local vowelIndex33=0\n    local\
    \ vowelCount34=0\n    local vowelIndex34=0\n    local vowelCount35=0\n    local\
    \ vowelIndex35=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local lettersCount=$(echo\
    \ $letters | wc -w)\n    local vowelsIndex=0\n    local lettersIndex=0\n    local\
    \ encodedMessage=\"\"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\
    \"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n    local encodedVowelCount=0\n\
    \    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedVowelCount2=0\n    local encodedLetterCount2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedLetterIndex3=0\n    local encodedVowelCount3=0\n    local encodedLetterCount3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n    local encodedVowelCount4=0\n\
    \    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedVowelCount5=0\n    local encodedLetterCount5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedLetterIndex6=0\n    local encodedVowelCount6=0\n    local encodedLetterCount6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n    local encodedVowelCount7=0\n\
    \    local encodedLetterCount7=0\n    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n\
    \    local encodedVowelCount8=0\n    local encodedLetterCount8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedLetterIndex9=0\n    local encodedVowelCount9=0\n    local encodedLetterCount9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n    local\
    \ encodedVowelCount10=0\n    local encodedLetterCount10=0\n    local encodedVowelIndex11=0\n\
    \    local encodedLetterIndex11=0\n    local encodedVowelCount11=0\n    local\
    \ encodedLetterCount11=0\n    local encodedVowelIndex12=0\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local output=\"\"\n    local count=0\n    local vowel_position=0\n    local\
    \ vowel_position2=0\n    local vowel_position3=0\n    local vowel_position4=0\n\
    \    local vowel_position5=0\n    local vowel_position6=0\n    local vowel_position7=0\n\
    \    local vowel_position8=0\n    local vowel_position9=0\n    local vowel_position10=0\n\
    \    local vowel_position11=0\n    local vowel_position12=0\n    local vowel_position13=0\n\
    \    local vowel_position14=0\n    local vowel_position15=0\n    local vowel_position16=0\n\
    \    local vowel_position17=0\n    local vowel_position18=0\n    local vowel_position19=0\n\
    \    local vowel_position20=0\n    local vowel_position21=0\n    local vowel_position22=0\n\
    \    local vowel_position23=0\n    local vowel_position24=0\n    local vowel_position25=0\n\
    \    local vowel_position26=0\n    local vowel_position27=0\n    local vowel_position28=0\n\
    \    local vowel_position29=0\n    local vowel_position30=0\n    local vowel_position31=0\n\
    \    local vowel_position32=0\n    local vowel_position33=0\n    local vowel_position34=0\n\
    \    local vowel_position35=0\n    local vowel_position36=0\n    local vowel_position37=0\n\
    \    local vowel_position38=0\n    local vowel_position39=0\n    local vowel_position40=0\n\
    \    local vowel_position41=0\n    local vowel_position42=0\n    local vowel_position43=0\n\
    \    local vowel_position44=0\n    local vowel_position45=0\n    local vowel_position46=0\n\
    \    local vowel_position47=0\n    local vowel_position48=0\n    local vowel_position49=0\n\
    \    local vowel_position50=0\n    local vowel_position51=0\n    local vowel_position52=0\n\
    \    local vowel_position53=0\n    local vowel_position54=0\n    local vowel_position55=0\n\
    \    local vowel_position56=0\n    local vowel_position57=0\n    local vowel_position58=0\n\
    \    local vowel_position59=0\n    local vowel_position60=0\n    local vowel_position61\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y A E I O U Y\"\n    local vowels_3=\"a e i o\
    \ u y A E I O U Y A E I O U Y\"\n    local vowels_4=\"a e i o u y A E I O U Y\
    \ A E I O U Y A E I O U Y\"\n    local vowels_5=\"a e i o u y A E I O U Y A E\
    \ I O U Y A E I O U Y A E I O U Y\"\n    local vowels_6=\"a e i o u y A E I O\
    \ U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_7=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y\"\n    local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"a\
    \ e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y\"\n    local vowels_10=\"a e i o u y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y\"\n    local vowels_11=\"a e i o u y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y\"\n    local vowels_12=\"a e i o u y A E I O U Y A E I O U Y A\
    \ E I O U Y A \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr0g4vlsz.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmpr0g4vlsz.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local result=\"\"\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=0\n    local new_message=\"\"\n    local vowel_position=0\n\
    \    local vowel_letter=\"\"\n    local vowel_letter_position=0\n    local letter=\"\
    \"\n    local letter_position=0\n    local letter_index=0\n    local letter_index2=0\n\
    \    local letter_index3=0\n    local letter_index4=0\n    local letter_index5=0\n\
    \    local letter_index6=0\n    local letter_index7=0\n    local letter_index8=0\n\
    \    local letter_index9=0\n    local letter_index10=0\n    local letter_index11=0\n\
    \    local letter_index12=0\n    local letter_index13=0\n    local letter_index14=0\n\
    \    local letter_index15=0\n    local letter_index16=0\n    local letter_index17=0\n\
    \    local letter_index18=0\n    local letter_index19=0\n    local letter_index20=0\n\
    \    local letter_index21=0\n    local letter_index22=0\n    local letter_index23=0\n\
    \    local letter_index24=0\n    local letter_index25=0\n    local letter_index26=0\n\
    \    local letter_index27=0\n    local letter_index28=0\n    local letter_index29=0\n\
    \    local letter_index30=0\n    local letter_index31=0\n    local letter_index32=0\n\
    \    local letter_index33=0\n    local letter_index34=0\n    local letter_index35=0\n\
    \    local letter_index36=0\n    local letter_index37=0\n    local letter_index38=0\n\
    \    local letter_index39=0\n    local letter_index40=0\n    local letter_index41=0\n\
    \    local letter_index42=0\n    local letter_index43=0\n    local letter_index44=0\n\
    \    local letter_index45=0\n    local letter_index46=0\n    local letter_index47=0\n\
    \    local letter_index48=0\n    local letter_index49=0\n    local letter_index50=0\n\
    \    local letter_index51=0\n    local letter_index52=0\n    local letter_index53=0\n\
    \    local letter_index54=0\n    local letter_index55=0\n    local letter_index56=0\n\
    \    local letter_index57=0\n    local letter_index58=0\n    local letter_index59=0\n\
    \    local letter_index60=0\n    local letter_index61=0\n    local letter_index62=0\n\
    \    local letter_index63=0\n    local letter_index64=0\n    local letter\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i o u y\"\n   \
    \ local vowels_4=\"a e i o u y\"\n    local vowels_5=\"a e i o u y\"\n    local\
    \ vowels_6=\"a e i o u y\"\n    local vowels_7=\"a e i o u y\"\n    local vowels_8=\"\
    a e i o u y\"\n    local vowels_9=\"a e i o u y\"\n    local vowels_10=\"a e i\
    \ o u y\"\n    local vowels_11=\"a e i o u y\"\n    local vowels_12=\"a e i o\
    \ u y\"\n    local vowels_13=\"a e i o u y\"\n    local vowels_14=\"a e i o u\
    \ y\"\n    local vowels_15=\"a e i o u y\"\n    local vowels_16=\"a e i o u y\"\
    \n    local vowels_17=\"a e i o u y\"\n    local vowels_18=\"a e i o u y\"\n \
    \   local vowels_19=\"a e i o u y\"\n    local vowels_20=\"a e i o u y\"\n   \
    \ local vowels_21=\"a e i o u y\"\n    local vowels_22=\"a e i o u y\"\n    local\
    \ vowels_23=\"a e i o u y\"\n    local vowels_24=\"a e i o u y\"\n    local vowels_25=\"\
    a e i o u y\"\n    local vowels_26=\"a e i o u y\"\n    local vowels_27=\"a e\
    \ i o u y\"\n    local vowels_28=\"a e i o u y\"\n    local vowels_29=\"a e i\
    \ o u y\"\n    local vowels_30=\"a e i o u y\"\n    local vowels_31=\"a e i o\
    \ u y\"\n    local vowels_32=\"a e i o u y\"\n    local vowels_33=\"a e i o u\
    \ y\"\n    local vowels_34=\"a e i o u y\"\n    local vowels_35=\"a e i o u y\"\
    \n    local vowels_36=\"a e i o u y\"\n    local vowels_37=\"a e i o u y\"\n \
    \   local vowels_38=\"a e i o u y\"\n    local vowels_39=\"a e i o u y\"\n   \
    \ \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local vowels_2=\"a e i o u y AE AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI\
    \ AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI AI \n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1xr26fby.sh: line 30: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1xr26fby.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\n   \
    \ local result=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelPosition=0\n\
    \    local currentVowelCount=0\n    local currentVowelPositionInLetter=0\n   \
    \ local currentVowelPositionInVowel=0\n    local currentVowelPositionInVowelCount=0\n\
    \    local currentVowelPositionInVowelCount2=0\n    local currentVowelPositionInVowelCount3=0\n\
    \    local currentVowelPositionInVowelCount4=0\n    local currentVowelPositionInVowelCount5=0\n\
    \    local currentVowelPositionInVowelCount6=0\n    local currentVowelPositionInVowelCount7=0\n\
    \    local currentVowelPositionInVowelCount8=0\n    local currentVowelPositionInVowelCount9=0\n\
    \    local currentVowelPositionInVowelCount10=0\n    local currentVowelPositionInVowelCount11=0\n\
    \    local currentVowelPositionInVowelCount12=0\n    local currentVowelPositionInVowelCount13=0\n\
    \    local currentVowelPositionInVowelCount14=0\n    local currentVowelPositionInVowelCount15=0\n\
    \    local currentVowelPositionInVowelCount16=0\n    local currentVowelPositionInVowelCount17=0\n\
    \    local currentVowelPositionInVowelCount18=0\n    local currentVowelPositionInVowelCount19=0\n\
    \    local currentVowelPositionInVowelCount20=0\n    local currentVowelPositionInVowelCount21=0\n\
    \    local currentVowelPositionInVowelCount22=0\n    local currentVowelPositionInVowelCount23=0\n\
    \    local currentVowelPositionInVowelCount24=0\n    local currentVowelPositionInVowelCount25=0\n\
    \    local currentVowelPositionInVowelCount26=0\n    local currentVowelPositionInVowelCount27=0\n\
    \    local currentVowelPositionInVowelCount28=0\n    local currentVow\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local output=''\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local vowel_position\n    local vowel_position2\n    local vowel_position3\n\
    \    local vowel_position4\n    local vowel_position5\n    local vowel_position6\n\
    \    local vowel_position7\n    local vowel_position8\n    local vowel_position9\n\
    \    local vowel_position10\n    local vowel_position11\n    local vowel_position12\n\
    \    local vowel_position13\n    local vowel_position14\n    local vowel_position15\n\
    \    local vowel_position16\n    local vowel_position17\n    local vowel_position18\n\
    \    local vowel_position19\n    local vowel_position20\n    local vowel_position21\n\
    \    local vowel_position22\n    local vowel_position23\n    local vowel_position24\n\
    \    local vowel_position25\n    local vowel_position26\n    local vowel_position27\n\
    \    local vowel_position28\n    local vowel_position29\n    local vowel_position30\n\
    \    local vowel_position31\n    local vowel_position32\n    local vowel_position33\n\
    \    local vowel_position34\n    local vowel_position35\n    local vowel_position36\n\
    \    local vowel_position37\n    local vowel_position38\n    local vowel_position39\n\
    \    local vowel_position40\n    local vowel_position41\n    local vowel_position42\n\
    \    local vowel_position43\n    local vowel_position44\n    local vowel_position45\n\
    \    local vowel_position46\n    local vowel_position47\n    local vowel_position48\n\
    \    local vowel_position49\n    local vowel_position50\n    local vowel_position51\n\
    \    local vowel_position52\n    local vowel_position53\n    local vowel_position54\n\
    \    local vowel_position55\n    local vowel_position56\n    local vowel_position57\n\
    \    local vowel_position58\n    local vowel_position59\n    local vowel_position60\n\
    \    local vowel_position61\n    local vowel_position62\n    local vowel_position63\n\
    \    local vowel_position64\n    local vowel_position65\n    local vowel_position66\n\
    \    local vowel_position67\n    local vowel_position68\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOU\"\n    local vowels_3=\"AEIOUaeiou\"\n    local vowels_4=\"\
    AEIOUaeiouAEIOU\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_6=\"\
    AEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_9=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_18=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4k3yoh4.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmps4k3yoh4.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowelCount=0\n  \
    \  local letterCount=0\n    local newMessage=\"\"\n    local vowelPosition=0\n\
    \    local letterPosition=0\n    local newVowelPosition=0\n    local newLetterPosition=0\n\
    \    local newVowelCount=0\n    local newLetterCount=0\n    local newVowelPosition=0\n\
    \    local newLetterPosition=0\n    local newVowelCount=0\n    local newLetterCount=0\n\
    \    local newVowelPosition=0\n    local newLetterPosition=0\n    local newVowelCount=0\n\
    \    local newLetterCount=0\n    local newVowelPosition=0\n    local newLetterPosition=0\n\
    \    local newVowelCount=0\n    local newLetterCount=0\n    local newVowelPosition=0\n\
    \    local newLetterPosition=0\n    local newVowelCount=0\n    local newLetterCount=0\n\
    \    local newVowelPosition=0\n    local newLetterPosition=0\n    local newVowelCount=0\n\
    \    local newLetterCount=0\n    local newVowelPosition=0\n    local newLetterPosition=0\n\
    \    local newVowelCount=0\n    local newLetterCount=0\n    local newVowelPosition=0\n\
    \    local newLetterPosition=0\n    local newVowelCount=0\n    local newLetterCount=0\n\
    \    local newVowelPosition=0\n    local newLetterPosition=0\n    local newVowelCount=0\n\
    \    local newLetterCount=0\n    local newVowelPosition=0\n    local newLetterPosition=0\n\
    \    local newVowelCount=0\n    local newLetterCount=0\n    local newVowelPosition=0\n\
    \    local newLetterPosition=0\n    local newVowelCount=0\n    local newLetterCount=0\n\
    \    local newVowelPosition=0\n    local newLetterPosition=0\n    local newVowelCount=0\n\
    \    local newLetterCount=0\n    local newVowelPosition=0\n    local newLetterPosition=0\n\
    \    local newVowelCount=0\n    local newLetterCount=0\n    local newVowelPosition=0\n\
    \    local newLetterPosition=0\n    local newVowelCount=0\n    local newLetterCount\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ vowel_positions=$(echo $message | sed 's/[aeiouAEIOU]/ /g' | sed 's/ /\\n/g'\
    \ | sort -u)\n  local vowel_positions_sorted=$(echo $vowel_positions | sed 's/\
    \ /\\n/g' | sort -u)\n  local vowel_positions_sorted_reverse=$(echo $vowel_positions_sorted\
    \ | sed 's/ /\\n/g' | sort -r)\n  local vowel_positions_sorted_reverse_unique=$(echo\
    \ $vowel_positions_sorted_reverse | sed 's/ /\\n/g' | sort -u)\n  local vowel_positions_sorted_reverse_unique_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_unique | sed 's/ /\\n/g' | sort -u)\n  local\
    \ vowel_positions_sorted_reverse_unique_sorted_reverse=$(echo $vowel_positions_sorted_reverse_unique_sorted\
    \ | sed 's/ /\\n/g' | sort -r)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse | sed 's/ /\\n/g' | sort\
    \ -u)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique | sed 's/ /\\n/g'\
    \ | sort -u)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted | sed 's/\
    \ /\\n/g' | sort -r)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse\
    \ | sed 's/ /\\n/g' | sort -u)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\
    \ | sed 's/ /\\n/g' | sort -u)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\
    \ | sed 's/ /\\n/g' | sort -r)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique=$(echo\
    \ $vowel_positions_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique_sorted_reverse_unique\
    \ | sed 's/ /\\n/g' | sort -u)\n  local vowel_positions_sorted_reverse_unique_sorted_reverse_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowel_count=0\n \
    \   local letter_count=0\n    local new_message=\"\"\n    local vowel_position=0\n\
    \    local letter_position=0\n    local new_vowel=\"\"\n    local new_letter=\"\
    \"\n    local new_vowel_position=0\n    local new_letter_position=0\n    local\
    \ vowel_positions=()\n    local letter_positions=()\n    local vowel_positions_sorted=()\n\
    \    local letter_positions_sorted=()\n    local vowel_positions_sorted_reversed=()\n\
    \    local letter_positions_sorted_reversed=()\n    local vowel_positions_sorted_reversed_sorted=()\n\
    \    local letter_positions_sorted_reversed_sorted=()\n    local vowel_positions_sorted_reversed_sorted_reversed=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed=()\n    local vowel_positions_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted=()\n    local\
    \ vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed=()\n    local\
    \ letter_positions_sorted_reversed_sorted_reversed_sorted_reversed=()\n    local\
    \ vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local letter_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted=()\n\
    \    local vowel_positions_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed_sorted_reversed=()\n\
    \    local letter_positions_sorted_reversed_\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local output=\"\"\n    local count=0\n    local vowel_index=0\n    local\
    \ vowel_position=0\n    local vowel_position2=0\n    local vowel_position3=0\n\
    \    local vowel_position4=0\n    local vowel_position5=0\n    local vowel_position6=0\n\
    \    local vowel_position7=0\n    local vowel_position8=0\n    local vowel_position9=0\n\
    \    local vowel_position10=0\n    local vowel_position11=0\n    local vowel_position12=0\n\
    \    local vowel_position13=0\n    local vowel_position14=0\n    local vowel_position15=0\n\
    \    local vowel_position16=0\n    local vowel_position17=0\n    local vowel_position18=0\n\
    \    local vowel_position19=0\n    local vowel_position20=0\n    local vowel_position21=0\n\
    \    local vowel_position22=0\n    local vowel_position23=0\n    local vowel_position24=0\n\
    \    local vowel_position25=0\n    local vowel_position26=0\n    local vowel_position27=0\n\
    \    local vowel_position28=0\n    local vowel_position29=0\n    local vowel_position30=0\n\
    \    local vowel_position31=0\n    local vowel_position32=0\n    local vowel_position33=0\n\
    \    local vowel_position34=0\n    local vowel_position35=0\n    local vowel_position36=0\n\
    \    local vowel_position37=0\n    local vowel_position38=0\n    local vowel_position39=0\n\
    \    local vowel_position40=0\n    local vowel_position41=0\n    local vowel_position42=0\n\
    \    local vowel_position43=0\n    local vowel_position44=0\n    local vowel_position45=0\n\
    \    local vowel_position46=0\n    local vowel_position47=0\n    local vowel_position48=0\n\
    \    local vowel_position49=0\n    local vowel_position50=0\n    local vowel_position51=0\n\
    \    local vowel_position52=0\n    local vowel_position53=0\n    local vowel_position54=0\n\
    \    local vowel_position55=0\n    local vowel_position56=0\n    local vowel_position57=0\n\
    \    local vowel_position58=0\n    local vowel_position59=0\n    local vowel_position60=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\" \n\
    \  local output=\"\"\n  local i\n  local j\n  local k\n  local vowel\n  local\
    \ vowel_position\n  local letter\n  local letter_index\n  local vowel_letter\n\
    \  local vowel_letter_position\n  local vowel_letter_position_index\n  local vowel_letter_position_index2\n\
    \  local vowel_letter_position_index3\n  local vowel_letter_position_index4\n\
    \  local vowel_letter_position_index5\n  local vowel_letter_position_index6\n\
    \  local vowel_letter_position_index7\n  local vowel_letter_position_index8\n\
    \  local vowel_letter_position_index9\n  local vowel_letter_position_index10\n\
    \  local vowel_letter_position_index11\n  local vowel_letter_position_index12\n\
    \  local vowel_letter_position_index13\n  local vowel_letter_position_index14\n\
    \  local vowel_letter_position_index15\n  local vowel_letter_position_index16\n\
    \  local vowel_letter_position_index17\n  local vowel_letter_position_index18\n\
    \  local vowel_letter_position_index19\n  local vowel_letter_position_index20\n\
    \  local vowel_letter_position_index21\n  local vowel_letter_position_index22\n\
    \  local vowel_letter_position_index23\n  local vowel_letter_position_index24\n\
    \  local vowel_letter_position_index25\n  local vowel_letter_position_index26\n\
    \  local vowel_letter_position_index27\n  local vowel_letter_position_index28\n\
    \  local vowel_letter_position_index29\n  local vowel_letter_position_index30\n\
    \  local vowel_letter_position_index31\n  local vowel_letter_position_index32\n\
    \  local vowel_letter_position_index33\n  local vowel_letter_position_index34\n\
    \  local vowel_letter_position_index35\n  local vowel_letter_position_index36\n\
    \  local vowel_letter_position_index37\n  local vowel_letter_position_index38\n\
    \  local vowel_letter_position_index39\n  local vowel_letter_position_index40\n\
    \  local vowel_letter_position_index41\n  local vowel_letter_position_index42\n\
    \  local vowel_letter_position_index43\n  local vowel_letter_position_index44\n\
    \  local vowel_letter_position_index45\n  local vowel_letter_position_index46\n\
    \  local vowel_letter_position_index47\n  local vowel_letter_position_index48\n\
    \  local vowel_letter_position_index49\n  local vowel_letter_\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_position2=0\n\
    \    local new_vowel_position3=0\n    local new_vowel_position4=0\n    local new_vowel_position5=0\n\
    \    local new_vowel_position6=0\n    local new_vowel_position7=0\n    local new_vowel_position8=0\n\
    \    local new_vowel_position9=0\n    local new_vowel_position10=0\n    local\
    \ new_vowel_position11=0\n    local new_vowel_position12=0\n    local new_vowel_position13=0\n\
    \    local new_vowel_position14=0\n    local new_vowel_position15=0\n    local\
    \ new_vowel_position16=0\n    local new_vowel_position17=0\n    local new_vowel_position18=0\n\
    \    local new_vowel_position19=0\n    local new_vowel_position20=0\n    local\
    \ new_vowel_position21=0\n    local new_vowel_position22=0\n    local new_vowel_position23=0\n\
    \    local new_vowel_position24=0\n    local new_vowel_position25=0\n    local\
    \ new_vowel_position26=0\n    local new_vowel_position27=0\n    local new_vowel_position28=0\n\
    \    local new_vowel_position29=0\n    local new_vowel_position30=0\n    local\
    \ new_vowel_position31=0\n    local new_vowel_position32=0\n    local new_vowel_position33=0\n\
    \    local new_vowel_position34=0\n    local new_vowel_position35=0\n    local\
    \ new_vowel_position36=0\n    local new_vowel_position37=0\n    local new_vowel_position38=0\n\
    \    local new_vowel_position39=0\n    local new_vowel_position40=0\n    local\
    \ new_vowel_position41=0\n    local new_vowel_position42=0\n    local new_vowel_position43=0\n\
    \    local new_vowel_position44=0\n    local new_vowel_position45=0\n    local\
    \ new_vowel_position46=0\n    local new_vowel_position47=0\n    local new_vowel_position48=0\n\
    \    local new_vowel_position49=0\n    local new_vowel_position50=0\n    local\
    \ new_vowel_position51=0\n    local new_vowel_position52=0\n    local new_\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowel_positions=$(echo\
    \ $message | sed 's/[aeiouAEIOU]/&\\n/g')\n    local letter_positions=$(echo $message\
    \ | sed 's/[aeiou]/&\\n/g')\n    local letter_positions_sorted=$(echo $letter_positions\
    \ | sed 's/\\n/\\n/g' | sort -u)\n    local vowel_positions_sorted=$(echo $vowel_positions\
    \ | sed 's/\\n/\\n/g' | sort -u)\n    local vowel_positions_sorted_length=$(echo\
    \ $vowel_positions_sorted | wc -l)\n    local letter_positions_sorted_length=$(echo\
    \ $letter_positions_sorted | wc -l)\n    local vowel_positions_sorted_length_minus_1=$(echo\
    \ $vowel_positions_sorted_length-1 | bc)\n    local letter_positions_sorted_length_minus_1=$(echo\
    \ $letter_positions_sorted_length-1 | bc)\n    local vowel_positions_sorted_length_minus_1_minus_1=$(echo\
    \ $vowel_positions_sorted_length_minus_1-1 | bc)\n    local letter_positions_sorted_length_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_length_minus_1_minus_1-1 | bc)\n    local vowel_positions_sorted_length_minus_1_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_length_minus_1_minus_1_minus_1-1 | bc)\n    local vowel_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1-1 |\
    \ bc)\n    local vowel_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1-1\
    \ | bc)\n    local vowel_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_length_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1-1\
    \ | bc)\n    local vowel_positions_sorted_length_minus_1_\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n  local\
    \ output=\"\"\n  local vowel_count=0\n  local letter_count=0\n  local vowel_position=0\n\
    \  local letter_position=0\n  local letter_index=0\n  local letter_index2=0\n\
    \  local vowel_index=0\n  local vowel_index2=0\n  local letter_index3=0\n  local\
    \ vowel_index3=0\n  local letter_index4=0\n  local vowel_index4=0\n  local letter_index5=0\n\
    \  local vowel_index5=0\n  local letter_index6=0\n  local vowel_index6=0\n  local\
    \ letter_index7=0\n  local vowel_index7=0\n  local letter_index8=0\n  local vowel_index8=0\n\
    \  local letter_index9=0\n  local vowel_index9=0\n  local letter_index10=0\n \
    \ local vowel_index10=0\n  local letter_index11=0\n  local vowel_index11=0\n \
    \ local letter_index12=0\n  local vowel_index12=0\n  local letter_index13=0\n\
    \  local vowel_index13=0\n  local letter_index14=0\n  local vowel_index14=0\n\
    \  local letter_index15=0\n  local vowel_index15=0\n  local letter_index16=0\n\
    \  local vowel_index16=0\n  local letter_index17=0\n  local vowel_index17=0\n\
    \  local letter_index18=0\n  local vowel_index18=0\n  local letter_index19=0\n\
    \  local vowel_index19=0\n  local letter_index20=0\n  local vowel_index20=0\n\
    \  local letter_index21=0\n  local vowel_index21=0\n  local letter_index22=0\n\
    \  local vowel_index22=0\n  local letter_index23=0\n  local vowel_index23=0\n\
    \  local letter_index24=0\n  local vowel_index24=0\n  local letter_index25=0\n\
    \  local vowel_index25=0\n  local letter_index26=0\n  local vowel_index26=0\n\
    \  local letter_index27=0\n  local vowel_index27=0\n  local letter_index28=0\n\
    \  local vowel_index28=0\n  local letter_index29=0\n  local vowel_index29=0\n\
    \  local letter_index30=0\n  local vowel_index30=0\n  local letter_index31=0\n\
    \  local vowel_index31=0\n  \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local vowelPosition2=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterPosition2=0\n    local letterCount=0\n   \
    \ local letterPosition=0\n    local letterPosition2=0\n    local letterCount2=0\n\
    \    local letterPosition3=0\n    local letterPosition4=0\n    local letterCount3=0\n\
    \    local letterPosition5=0\n    local letterCount4=0\n    local letterPosition6=0\n\
    \    local letterCount5=0\n    local letterPosition7=0\n    local letterCount6=0\n\
    \    local letterPosition8=0\n    local letterCount7=0\n    local letterPosition9=0\n\
    \    local letterCount8=0\n    local letterPosition10=0\n    local letterCount9=0\n\
    \    local letterPosition11=0\n    local letterCount10=0\n    local letterPosition12=0\n\
    \    local letterCount11=0\n    local letterPosition13=0\n    local letterCount12=0\n\
    \    local letterPosition14=0\n    local letterCount13=0\n    local letterPosition15=0\n\
    \    local letterCount14=0\n    local letterPosition16=0\n    local letterCount15=0\n\
    \    local letterPosition17=0\n    local letterCount16=0\n    local letterPosition18=0\n\
    \    local letterCount17=0\n    local letterPosition19=0\n    local letterCount18=0\n\
    \    local letterPosition20=0\n    local letterCount19=0\n    local letterPosition21=0\n\
    \    local letterCount20=0\n    local letterPosition22=0\n    local letterCount21=0\n\
    \    local letterPosition23=0\n    local letterCount22=0\n    local letterPosition24=0\n\
    \    local letterCount23=0\n    local letterPosition25=0\n    local letterCount24=0\n\
    \    local letterPosition26=0\n    local letterCount25=0\n    local letterPosition27=0\n\
    \    local letterCount26=0\n    local letterPosition28=0\n    local letterCount27=0\n\
    \    local letterPosition29=0\n    local letterCount28=0\n    local letterPosition30=0\n\
    \    local letterCount29=0\n    local letterPosition31=0\n    local letterCount30=0\n\
    \    local letterPosition32=0\n    local letterCount31=0\n    local letterPosition33=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local vowelIndex=0\n    local letterToSwap=\"\"\n    local\
    \ vowelToSwap=\"\"\n    local swappedLetter=\"\"\n    local swappedVowel=\"\"\n\
    \    local letterToSwapIndex=0\n    local vowelToSwapIndex=0\n    local swappedLetterIndex=0\n\
    \    local swappedVowelIndex=0\n    local letterToSwapCount=0\n    local vowelToSwapCount=0\n\
    \    local swappedLetterCount=0\n    local swappedVowelCount=0\n    local letterToSwapIndexCount=0\n\
    \    local vowelToSwapIndexCount=0\n    local swappedLetterIndexCount=0\n    local\
    \ swappedVowelIndexCount=0\n    local letterToSwapCountIndex=0\n    local vowelToSwapCountIndex=0\n\
    \    local swappedLetterCountIndex=0\n    local swappedVowelCountIndex=0\n   \
    \ local letterToSwapIndexCountIndex=0\n    local vowelToSwapIndexCountIndex=0\n\
    \    local swappedLetterIndexCountIndex=0\n    local swappedVowelIndexCountIndex=0\n\
    \    local letterToSwapCountIndexCount=0\n    local vowelToSwapCountIndexCount=0\n\
    \    local swappedLetterCountIndexCount=0\n    local swappedVowelCountIndexCount=0\n\
    \    local letterToSwapIndexCountIndexCount=0\n    local vowelToSwapIndexCountIndexCount=0\n\
    \    local swappedLetterIndexCountIndexCount=0\n    local swappedVowelIndexCountIndexCount=0\n\
    \    local letterToSwapCountIndexCountIndex=0\n    local vowelToSwapCountIndexCountIndex=0\n\
    \    local swappedLetterCountIndexCountIndex=0\n    local swappedVowelCountIndexCountIndex=0\n\
    \    local letterToSwapIndexCountIndexCountIndex=0\n    local vowelToSwapIndexCountIndexCountIndex=0\n\
    \    local swappedLetterIndexCountIndexCountIndex=0\n    local swappedVowelIndexCountIndexCountIndex=0\n\
    \    local letterToSwapCountIndexCountIndexCount=0\n    local vowelToSwapCountIndexCountIndexCount=0\n\
    \    local swappedLetterCountIndexCountIndexCount\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local letter\n    local vowel\n    local letter2\n    local\
    \ vowel2\n    local letter3\n    local vowel3\n    local letter4\n    local vowel4\n\
    \    local letter5\n    local vowel5\n    local letter6\n    local vowel6\n  \
    \  local letter7\n    local vowel7\n    local letter8\n    local vowel8\n    local\
    \ letter9\n    local vowel9\n    local letter10\n    local vowel10\n    local\
    \ letter11\n    local vowel11\n    local letter12\n    local vowel12\n    local\
    \ letter13\n    local vowel13\n    local letter14\n    local vowel14\n    local\
    \ letter15\n    local vowel15\n    local letter16\n    local vowel16\n    local\
    \ letter17\n    local vowel17\n    local letter18\n    local vowel18\n    local\
    \ letter19\n    local vowel19\n    local letter20\n    local vowel20\n    local\
    \ letter21\n    local vowel21\n    local letter22\n    local vowel22\n    local\
    \ letter23\n    local vowel23\n    local letter24\n    local vowel24\n    local\
    \ letter25\n    local vowel25\n    local letter26\n    local vowel26\n    local\
    \ letter27\n    local vowel27\n    local letter28\n    local vowel28\n    local\
    \ letter29\n    local vowel29\n    local letter30\n    local vowel30\n    local\
    \ letter31\n    local vowel31\n    local letter32\n    local vowel32\n    local\
    \ letter33\n    local vowel33\n    local letter34\n    local vowel34\n    local\
    \ letter35\n    local vowel35\n    local letter36\n    local vowel36\n    local\
    \ letter37\n    local vowel37\n    local letter38\n    local vowel38\n    local\
    \ letter39\n    local vowel39\n    local letter40\n    local vowel40\n    local\
    \ letter41\n    local vowel41\n    local letter42\n    local vowel42\n    local\
    \ letter43\n    local vowel43\n    local letter44\n    local vowel44\n    local\
    \ letter45\n    local vowel45\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsIndex=0\n   \
    \ local encodedMessage=\"\"\n    local encodedMessageIndex=0\n    local encodedMessageIndex2=0\n\
    \    local encodedMessageIndex3=0\n    local encodedMessageIndex4=0\n    local\
    \ encodedMessageIndex5=0\n    local encodedMessageIndex6=0\n    local encodedMessageIndex7=0\n\
    \    local encodedMessageIndex8=0\n    local encodedMessageIndex9=0\n    local\
    \ encodedMessageIndex10=0\n    local encodedMessageIndex11=0\n    local encodedMessageIndex12=0\n\
    \    local encodedMessageIndex13=0\n    local encodedMessageIndex14=0\n    local\
    \ encodedMessageIndex15=0\n    local encodedMessageIndex16=0\n    local encodedMessageIndex17=0\n\
    \    local encodedMessageIndex18=0\n    local encodedMessageIndex19=0\n    local\
    \ encodedMessageIndex20=0\n    local encodedMessageIndex21=0\n    local encodedMessageIndex22=0\n\
    \    local encodedMessageIndex23=0\n    local encodedMessageIndex24=0\n    local\
    \ encodedMessageIndex25=0\n    local encodedMessageIndex26=0\n    local encodedMessageIndex27=0\n\
    \    local encodedMessageIndex28=0\n    local encodedMessageIndex29=0\n    local\
    \ encodedMessageIndex30=0\n    local encodedMessageIndex31=0\n    local encodedMessageIndex32=0\n\
    \    local encodedMessageIndex33=0\n    local encodedMessageIndex34=0\n    local\
    \ encodedMessageIndex35=0\n    local encodedMessageIndex36=0\n    local encodedMessageIndex37=0\n\
    \    local encodedMessageIndex38=0\n    local encodedMessageIndex39=0\n    local\
    \ encodedMessageIndex40=0\n    local encodedMessageIndex41=0\n    local encodedMessageIndex42=0\n\
    \    local encodedMessageIndex43=0\n    local encodedMessageIndex44=0\n    local\
    \ encodedMessageIndex45=0\n    local encodedMessageIndex46=0\n    local encodedMessageIndex47=0\n\
    \    local encodedMessageIndex48=0\n    local encodedMessageIndex49=0\n    local\
    \ encodedMessageIndex50=0\n    local encodedMessageIndex51=0\n    local encodedMessageIndex52=0\n\
    \    local encodedMessageIndex53=0\n    local encodedMessageIndex54=0\n    local\
    \ encodedMessageIndex55=0\n    local encodedMessageIndex56=0\n    local encodedMessageIndex57=0\n\
    \    local encodedMessageIndex58=0\n    local encodedMessageIndex\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n  local output=\"\
    \"\n  local vowelCount=0\n  local letterCount=0\n  local currentLetter=\"\"\n\
    \  local currentVowel=\"\"\n  local currentVowel2=\"\"\n  local currentVowel3=\"\
    \"\n  local currentVowel4=\"\"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\
    \"\n  local currentVowel7=\"\"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\
    \"\n  local currentVowel10=\"\"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\
    \"\n  local currentVowel13=\"\"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\
    \"\n  local currentVowel16=\"\"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\
    \"\n  local currentVowel19=\"\"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\
    \"\n  local currentVowel22=\"\"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\
    \"\n  local currentVowel25=\"\"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\
    \"\n  local currentVowel28=\"\"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\
    \"\n  local currentVowel31=\"\"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\
    \"\n  local currentVowel34=\"\"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\
    \"\n  local currentVowel37=\"\"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\
    \"\n  local currentVowel40=\"\"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\
    \"\n  local currentVowel43=\"\"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\
    \"\n  local currentVowel46=\"\"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\
    \"\n  local currentVowel49=\"\"\n  local \n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ output=''\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelIndex2=0\n\
    \  local vowelIndex3=0\n  local vowelIndex4=0\n  local vowelIndex5=0\n  local\
    \ vowelIndex6=0\n  local vowelIndex7=0\n  local vowelIndex8=0\n  local vowelIndex9=0\n\
    \  local vowelIndex10=0\n  local vowelIndex11=0\n  local vowelIndex12=0\n  local\
    \ vowelIndex13=0\n  local vowelIndex14=0\n  local vowelIndex15=0\n  local vowelIndex16=0\n\
    \  local vowelIndex17=0\n  local vowelIndex18=0\n  local vowelIndex19=0\n  local\
    \ vowelIndex20=0\n  local vowelIndex21=0\n  local vowelIndex22=0\n  local vowelIndex23=0\n\
    \  local vowelIndex24=0\n  local vowelIndex25=0\n  local vowelIndex26=0\n  local\
    \ vowelIndex27=0\n  local vowelIndex28=0\n  local vowelIndex29=0\n  local vowelIndex30=0\n\
    \  local vowelIndex31=0\n  local vowelIndex32=0\n  local vowelIndex33=0\n  local\
    \ vowelIndex34=0\n  local vowelIndex35=0\n  local vowelIndex36=0\n  local vowelIndex37=0\n\
    \  local vowelIndex38=0\n  local vowelIndex39=0\n  local vowelIndex40=0\n  local\
    \ vowelIndex41=0\n  local vowelIndex42=0\n  local vowelIndex43=0\n  local vowelIndex44=0\n\
    \  local vowelIndex45=0\n  local vowelIndex46=0\n  local vowelIndex47=0\n  local\
    \ vowelIndex48=0\n  local vowelIndex49=0\n  local vowelIndex50=0\n  local vowelIndex51=0\n\
    \  local vowelIndex52=0\n  local vowelIndex53=0\n  local vowelIndex54=0\n  local\
    \ vowelIndex55=0\n  local vowelIndex56=0\n  local vowelIndex57=0\n  local vowelIndex58=0\n\
    \  local vowelIndex59=0\n  local vowelIndex60=0\n  local vowelIndex61=0\n  local\
    \ vowelIndex62=0\n  local vowelIndex63=0\n  local vowelIndex64=0\n  local vowelIndex65=0\n\
    \  local vowelIndex66=0\n  local vowelIndex67=0\n  local vowelIndex68=0\n  local\
    \ vowelIndex69=0\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n \
    \   local lettersCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n\
    \    local encodedVowelIndex2=0\n    local encodedVowelIndex3=0\n    local encodedVowelIndex4=0\n\
    \    local encodedVowelIndex5=0\n    local encodedVowelIndex6=0\n    local encodedVowelIndex7=0\n\
    \    local encodedVowelIndex8=0\n    local encodedVowelIndex9=0\n    local encodedVowelIndex10=0\n\
    \    local encodedVowelIndex11=0\n    local encodedVowelIndex12=0\n    local encodedVowelIndex13=0\n\
    \    local encodedVowelIndex14=0\n    local encodedVowelIndex15=0\n    local encodedVowelIndex16=0\n\
    \    local encodedVowelIndex17=0\n    local encodedVowelIndex18=0\n    local encodedVowelIndex19=0\n\
    \    local encodedVowelIndex20=0\n    local encodedVowelIndex21=0\n    local encodedVowelIndex22=0\n\
    \    local encodedVowelIndex23=0\n    local encodedVowelIndex24=0\n    local encodedVowelIndex25=0\n\
    \    local encodedVowelIndex26=0\n    local encodedVowelIndex27=0\n    local encodedVowelIndex28=0\n\
    \    local encodedVowelIndex29=0\n    local encodedVowelIndex30=0\n    local encodedVowelIndex31=0\n\
    \    local encodedVowelIndex32=0\n    local encodedVowelIndex33=0\n    local encodedVowelIndex34=0\n\
    \    local encodedVowelIndex35=0\n    local encodedVowelIndex36=0\n    local encodedVowelIndex37=0\n\
    \    local encodedVowelIndex38=0\n    local encodedVowelIndex39=0\n    local encodedVowelIndex40=0\n\
    \    local encodedVowelIndex41=0\n    local encodedVowelIndex42=0\n    local encodedVowelIndex43=0\n\
    \    local encodedVowelIndex44=0\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local vowel_count=$(echo $message | tr [a-z] [A-Z] | tr [aeiouy] [AEIOUY] |\
    \ wc -l)\n  local vowel_count_2=$((vowel_count - 1))\n  local vowel_count_3=$((vowel_count\
    \ + 1))\n  local vowel_count_4=$((vowel_count_2 + 1))\n  local vowel_count_5=$((vowel_count_3\
    \ + 1))\n  local vowel_count_6=$((vowel_count_4 + 1))\n  local vowel_count_7=$((vowel_count_5\
    \ + 1))\n  local vowel_count_8=$((vowel_count_6 + 1))\n  local vowel_count_9=$((vowel_count_7\
    \ + 1))\n  local vowel_count_10=$((vowel_count_8 + 1))\n  local vowel_count_11=$((vowel_count_9\
    \ + 1))\n  local vowel_count_12=$((vowel_count_10 + 1))\n  local vowel_count_13=$((vowel_count_11\
    \ + 1))\n  local vowel_count_14=$((vowel_count_12 + 1))\n  local vowel_count_15=$((vowel_count_13\
    \ + 1))\n  local vowel_count_16=$((vowel_count_14 + 1))\n  local vowel_count_17=$((vowel_count_15\
    \ + 1))\n  local vowel_count_18=$((vowel_count_16 + 1))\n  local vowel_count_19=$((vowel_count_17\
    \ + 1))\n  local vowel_count_20=$((vowel_count_18 + 1))\n  local vowel_count_21=$((vowel_count_19\
    \ + 1))\n  local vowel_count_22=$((vowel_count_20 + 1))\n  local vowel_count_23=$((vowel_count_21\
    \ + 1))\n  local vowel_count_24=$((vowel_count_22 + 1))\n  local vowel_count_25=$((vowel_count_23\
    \ + 1))\n  local vowel_count_26=$((vowel_count_24 + 1))\n  local vowel_count_27=$((vowel_count_25\
    \ + 1))\n  local vowel_count_28=$((vowel_count_26 + 1))\n  local vowel_count_29=$((vowel_count_27\
    \ + 1))\n  local vowel_count_30=$((vowel_count_28 + 1))\n  local vowel_count_31=$((vowel_count_29\
    \ + 1))\n  local vowel_count_32=$((vowel_count_30 + 1))\n  local vowel_count_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowel_count=0\n    local vowel_positions=()\n    local new_message=\"\
    \"\n    local new_vowels=\"\"\n    local new_vowel_positions=()\n    local new_vowel_count=0\n\
    \    local new_vowel_positions_count=()\n    local new_vowel_positions_count_index=()\n\
    \    local new_vowel_positions_count_index_count=()\n    local new_vowel_positions_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count=()\n    local new_vowel_positions_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=()\n\
    \    local new_vowel_positions_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowelsCount=$(echo\
    \ $vowels | wc -w)\n    local lettersCount=$(echo $letters | wc -w)\n    local\
    \ vowelsIndex=0\n    local lettersIndex=0\n    local encodedMessage=\"\"\n   \
    \ local vowelsLetter=\"\"\n    local lettersLetter=\"\"\n    local vowelsLetterIndex=0\n\
    \    local lettersLetterIndex=0\n    local vowelsLetterCount=0\n    local lettersLetterCount=0\n\
    \    local vowelsLetterCountIndex=0\n    local lettersLetterCountIndex=0\n   \
    \ local vowelsLetterCountIndexIndex=0\n    local lettersLetterCountIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetterCountIndexIndexIndex=0\n\
    \    local vowelsLetterCountIndexIndexIndex=0\n    local lettersLetter\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ vowelIndex=0\n    local letterIndex=0\n    local vowelChar=\"\"\n    local letterChar=\"\
    \"\n    local vowelCount2=0\n    local letterCount2=0\n    local vowelIndex2=0\n\
    \    local letterIndex2=0\n    local vowelChar2=\"\"\n    local letterChar2=\"\
    \"\n    local vowelCount3=0\n    local letterCount3=0\n    local vowelIndex3=0\n\
    \    local letterIndex3=0\n    local vowelChar3=\"\"\n    local letterChar3=\"\
    \"\n    local vowelCount4=0\n    local letterCount4=0\n    local vowelIndex4=0\n\
    \    local letterIndex4=0\n    local vowelChar4=\"\"\n    local letterChar4=\"\
    \"\n    local vowelCount5=0\n    local letterCount5=0\n    local vowelIndex5=0\n\
    \    local letterIndex5=0\n    local vowelChar5=\"\"\n    local letterChar5=\"\
    \"\n    local vowelCount6=0\n    local letterCount6=0\n    local vowelIndex6=0\n\
    \    local letterIndex6=0\n    local vowelChar6=\"\"\n    local letterChar6=\"\
    \"\n    local vowelCount7=0\n    local letterCount7=0\n    local vowelIndex7=0\n\
    \    local letterIndex7=0\n    local vowelChar7=\"\"\n    local letterChar7=\"\
    \"\n    local vowelCount8=0\n    local letterCount8=0\n    local vowelIndex8=0\n\
    \    local letterIndex8=0\n    local vowelChar8=\"\"\n    local letterChar8=\"\
    \"\n    local vowelCount9=0\n    local letterCount9=0\n    local vowelIndex9=0\n\
    \    local letterIndex9=0\n    local vowelChar9=\"\"\n    local letterChar9=\"\
    \"\n    local vowelCount10=0\n    local letterCount10=0\n    local vowelIndex10=0\n\
    \    local letterIndex10=0\n    local vowelChar10=\"\"\n    local letterChar10=\"\
    \"\n    local vowelCount11=0\n    local letterCount11=0\n    local vowelIndex11=0\n\
    \    local letterIndex11=0\n    local vowelChar11=\"\"\n    local letterChar11=\"\
    \"\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=$(echo ${vowelsArray[@]} | wc -w)\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndexCount=0\n    local vowelsArrayIndexMax=$((vowelsArrayIndexCount+1))\n\
    \    local vowelsArrayIndexMin=$((vowelsArrayIndexCount-1))\n    local vowelsArrayIndexMaxIndex=$((vowelsArrayIndexMax-1))\n\
    \    local vowelsArrayIndexMinIndex=$((vowelsArrayIndexMin+1))\n    local vowelsArrayIndexMaxIndexIndex=$((vowelsArrayIndexMaxIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n   \
    \ local vowelsArrayIndexMaxIndexIndexIndex=$((vowelsArrayIndexMaxIndexIndex-1))\n\
    \    local vowelsArrayIndexMinIndexIndex=$((vowelsArrayIndexMinIndex+1))\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y A\"\n    local vowels_3=\"a e i o u y A E I\
    \ O U Y\"\n    local vowels_4=\"a e i o u y A E I O U Y A E I O U Y\"\n    local\
    \ vowels_5=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_6=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_7=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"a e i o u y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n  \
    \  local vowels_10=\"a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_11=\"\
    a e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_12=\"a e i o u\
    \ y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_13=\"a e i o u y A E I\
    \ O \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1dr86saf.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1dr86saf.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_count=0\n \
    \   local letter_count=0\n    local new_message=\"\"\n    local vowel_position=0\n\
    \    local letter_position=0\n    local vowel_letter=\"\"\n    local letter_letter=\"\
    \"\n    local new_letter=\"\"\n    local new_vowel=\"\"\n    local new_letters=\"\
    \"\n    local new_vowels=\"\"\n    local new_letters_letters=\"\"\n    local new_vowels_letters=\"\
    \"\n    local new_letters_vowels=\"\"\n    local new_vowels_vowels=\"\"\n    local\
    \ new_letters_letters_vowels=\"\"\n    local new_vowels_letters_vowels=\"\"\n\
    \    local new_letters_letters_vowels_letters=\"\"\n    local new_vowels_letters_vowels_letters=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels=\"\"\n    local new_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels_letters=\"\"\n    local\
    \ new_vowels_letters_vowels_letters_vowels_letters=\"\"\n    local new_letters_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_vowels_letters_vowels_letters_vowels_letters_vowels_letters=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters=\"\
    \"\n    local new_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters=\"\
    \"\n    local new_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_letters_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels=\"\
    \"\n    local new_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_vowels_letters_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentV\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowelsCount=0\n    local encodedMessage=\"\"\n    local encodedMessageCount=0\n\
    \    local encodedMessageCount2=0\n    local encodedMessageCount3=0\n    local\
    \ encodedMessageCount4=0\n    local encodedMessageCount5=0\n    local encodedMessageCount6=0\n\
    \    local encodedMessageCount7=0\n    local encodedMessageCount8=0\n    local\
    \ encodedMessageCount9=0\n    local encodedMessageCount10=0\n    local encodedMessageCount11=0\n\
    \    local encodedMessageCount12=0\n    local encodedMessageCount13=0\n    local\
    \ encodedMessageCount14=0\n    local encodedMessageCount15=0\n    local encodedMessageCount16=0\n\
    \    local encodedMessageCount17=0\n    local encodedMessageCount18=0\n    local\
    \ encodedMessageCount19=0\n    local encodedMessageCount20=0\n    local encodedMessageCount21=0\n\
    \    local encodedMessageCount22=0\n    local encodedMessageCount23=0\n    local\
    \ encodedMessageCount24=0\n    local encodedMessageCount25=0\n    local encodedMessageCount26=0\n\
    \    local encodedMessageCount27=0\n    local encodedMessageCount28=0\n    local\
    \ encodedMessageCount29=0\n    local encodedMessageCount30=0\n    local encodedMessageCount31=0\n\
    \    local encodedMessageCount32=0\n    local encodedMessageCount33=0\n    local\
    \ encodedMessageCount34=0\n    local encodedMessageCount35=0\n    local encodedMessageCount36=0\n\
    \    local encodedMessageCount37=0\n    local encodedMessageCount38=0\n    local\
    \ encodedMessageCount39=0\n    local encodedMessageCount40=0\n    local encodedMessageCount41=0\n\
    \    local encodedMessageCount42=0\n    local encodedMessageCount43=0\n    local\
    \ encodedMessageCount44=0\n    local encodedMessageCount45=0\n    local encodedMessageCount46=0\n\
    \    local encodedMessageCount47=0\n    local encodedMessageCount48=0\n    local\
    \ encodedMessageCount49=0\n    local encodedMessageCount50=0\n    local encodedMessageCount51=0\n\
    \    local encodedMessageCount52=0\n    local encodedMessageCount53=0\n    local\
    \ encodedMessageCount54=0\n    local encodedMessageCount55=0\n    local encodedMessageCount56=0\n\
    \    local encodedMessageCount57=0\n    local encodedMessageCount58=0\n    local\
    \ encodedMessageCount59=0\n    local encodedMessageCount60=0\n    local encoded\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_count=0\n\
    \    local new_vowel_position2=0\n    local new_vowel_count2=0\n    local new_vowel_position3=0\n\
    \    local new_vowel_count3=0\n    local new_vowel_position4=0\n    local new_vowel_count4=0\n\
    \    local new_vowel_position5=0\n    local new_vowel_count5=0\n    local new_vowel_position6=0\n\
    \    local new_vowel_count6=0\n    local new_vowel_position7=0\n    local new_vowel_count7=0\n\
    \    local new_vowel_position8=0\n    local new_vowel_count8=0\n    local new_vowel_position9=0\n\
    \    local new_vowel_count9=0\n    local new_vowel_position10=0\n    local new_vowel_count10=0\n\
    \    local new_vowel_position11=0\n    local new_vowel_count11=0\n    local new_vowel_position12=0\n\
    \    local new_vowel_count12=0\n    local new_vowel_position13=0\n    local new_vowel_count13=0\n\
    \    local new_vowel_position14=0\n    local new_vowel_count14=0\n    local new_vowel_position15=0\n\
    \    local new_vowel_count15=0\n    local new_vowel_position16=0\n    local new_vowel_count16=0\n\
    \    local new_vowel_position17=0\n    local new_vowel_count17=0\n    local new_vowel_position18=0\n\
    \    local new_vowel_count18=0\n    local new_vowel_position19=0\n    local new_vowel_count19=0\n\
    \    local new_vowel_position20=0\n    local new_vowel_count20=0\n    local new_vowel_position21=0\n\
    \    local new_vowel_count21=0\n    local new_vowel_position22=0\n    local new_vowel_count22=0\n\
    \    local new_vowel_position23=0\n    local new_vowel_count23=0\n    local new_vowel_position24=0\n\
    \    local new_vowel_count24=0\n    local new_vowel_position25=0\n    local new_vowel_count25=0\n\
    \    local new_vowel_position26=0\n    local new_vowel_count26=0\n    local new_vowel_position27=0\n\
    \    local new_vowel_count27=0\n    local new_vowel_position28=0\n    local new_vowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowel_positions=$(echo $message | sed -e 's/[aeiouy]/\\n/g' | sed -e\
    \ 's/^/0/' | sed -e 's/$/0/' | sort -n | uniq -c)\n    local letter_positions=$(echo\
    \ $message | sed -e 's/[aeiouy]/\\n/g' | sed -e 's/^/0/' | sed -e 's/$/0/' | sort\
    \ -n | uniq -c)\n    local vowel_positions_sorted=$(echo $vowel_positions | sed\
    \ -e 's/^/0/' | sed -e 's/$/0/' | sort -n)\n    local letter_positions_sorted=$(echo\
    \ $letter_positions | sed -e 's/^/0/' | sed -e 's/$/0/' | sort -n)\n    local\
    \ vowel_positions_sorted_reverse=$(echo $vowel_positions_sorted | sed -e 's/^/0/'\
    \ | sed -e 's/$/0/' | sort -r)\n    local letter_positions_sorted_reverse=$(echo\
    \ $letter_positions_sorted | sed -e 's/^/0/' | sed -e 's/$/0/' | sort -r)\n  \
    \  local vowel_positions_sorted_reverse_count=$(echo $vowel_positions_sorted_reverse\
    \ | wc -l)\n    local letter_positions_sorted_reverse_count=$(echo $letter_positions_sorted_reverse\
    \ | wc -l)\n    local vowel_positions_sorted_reverse_count_minus_1=$(echo $vowel_positions_sorted_reverse_count\
    \ | awk '{print $1 - 1}')\n    local letter_positions_sorted_reverse_count_minus_1=$(echo\
    \ $letter_positions_sorted_reverse_count | awk '{print $1 - 1}')\n    local vowel_positions_sorted_reverse_count_minus_1_minus_1=$(echo\
    \ $vowel_positions_sorted_reverse_count_minus_1 | awk '{print $1 - 1}')\n    local\
    \ letter_positions_sorted_reverse_count_minus_1_minus_1=$(echo $letter_positions_sorted_reverse_count_minus_1\
    \ | awk '{print $1 - 1}')\n    local vowel_positions_sorted_reverse_count_minus_1_minus_1_minus_1=$(echo\
    \ $vowel_positions_sorted_reverse_count_minus_1_minus_1 | awk '{print $1 - 1}')\n\
    \    local letter_positions_sorted_reverse_count_minus_1_minus_1_minus_1_minus_1=$(echo\
    \ $letter_positions_sorted_reverse_count_minus_1_minus_\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuo9pf1cz.sh: line 31: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuo9pf1cz.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"aeiouAEIOU\"\n  \
    \  local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $msg | tr a-z $vowels | tr A-Z $letters | tr ' ' '_')\n    local vowel_positions_sorted=$(echo\
    \ $vowel_positions | tr _ $'\\n' | sort -u)\n    local vowel_positions_sorted_reverse=$(echo\
    \ $vowel_positions_sorted | rev | tr _ $'\\n' | sort -u)\n    local vowel_positions_sorted_reverse_count=$(echo\
    \ $vowel_positions_sorted_reverse | wc -l)\n    local vowel_positions_sorted_reverse_position=$(echo\
    \ $vowel_positions_sorted_reverse | head -$vowel_positions_sorted_reverse_count)\n\
    \    local vowel_positions_sorted_reverse_position_2=$(echo $vowel_positions_sorted_reverse\
    \ | tail -1)\n    local vowel_positions_sorted_reverse_position_2_count=$(echo\
    \ $vowel_positions_sorted_reverse_position_2 | wc -l)\n    local vowel_positions_sorted_reverse_position_2_position=$(echo\
    \ $vowel_positions_sorted_reverse_position_2 | head -$vowel_positions_sorted_reverse_position_2_count)\n\
    \    local vowel_positions_sorted_reverse_position_2_position_2=$(echo $vowel_positions_sorted_reverse_position_2\
    \ | tail -1)\n    local vowel_positions_sorted_reverse_position_2_position_2_count=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2 | wc -l)\n    local vowel_positions_sorted_reverse_position_2_position_2_position=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2 | head -$vowel_positions_sorted_reverse_position_2_position_2_count)\n\
    \    local vowel_positions_sorted_reverse_position_2_position_2_position_2=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2 | tail -1)\n    local\
    \ vowel_positions_sorted_reverse_position_2_position_2_position_2_count=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2_position_2 | wc -l)\n\
    \    local vowel_positions_sorted_reverse_position_2_position_2_position_2_position=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2_position_2 | head -$vowel_positions_sorted_reverse_position_2_position_2_position_2_count)\n\
    \    local vowel_positions_sorted_reverse_position_2_position_2_position_2_position_2=$(echo\
    \ $vowel_positions_sorted_reverse_position_2_position_2_position_2 | tail -1)\n\
    \    local vowel_positions_sorted_reverse_position_2_position_2_position_2_position_2_count=\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=${#vowelsArray[@]}\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndex2=0\n    local vowelsArrayIndex3=0\n    local vowelsArrayIndex4=0\n\
    \    local vowelsArrayIndex5=0\n    local vowelsArrayIndex6=0\n    local vowelsArrayIndex7=0\n\
    \    local vowelsArrayIndex8=0\n    local vowelsArrayIndex9=0\n    local vowelsArrayIndex10=0\n\
    \    local vowelsArrayIndex11=0\n    local vowelsArrayIndex12=0\n    local vowelsArrayIndex13=0\n\
    \    local vowelsArrayIndex14=0\n    local vowelsArrayIndex15=0\n    local vowelsArrayIndex16=0\n\
    \    local vowelsArrayIndex17=0\n    local vowelsArrayIndex18=0\n    local vowelsArrayIndex19=0\n\
    \    local vowelsArrayIndex20=0\n    local vowelsArrayIndex21=0\n    local vowelsArrayIndex22=0\n\
    \    local vowelsArrayIndex23=0\n    local vowelsArrayIndex24=0\n    local vowelsArrayIndex25=0\n\
    \    local vowelsArrayIndex26=0\n    local vowelsArrayIndex27=0\n    local vowelsArrayIndex28=0\n\
    \    local vowelsArrayIndex29=0\n    local vowelsArrayIndex30=0\n    local vowelsArrayIndex31=0\n\
    \    local vowelsArrayIndex32=0\n    local vowelsArrayIndex33=0\n    local vowelsArrayIndex34=0\n\
    \    local vowelsArrayIndex35=0\n    local vowelsArrayIndex36=0\n    local vowelsArrayIndex37=0\n\
    \    local vowelsArrayIndex38=0\n    local vowelsArrayIndex39=0\n    local vowelsArrayIndex40=0\n\
    \    local vowelsArrayIndex41=0\n    local vowelsArrayIndex42=0\n    local vowelsArrayIndex43=0\n\
    \    local vowelsArrayIndex44=0\n    local vowelsArrayIndex45=0\n    local vowelsArrayIndex46=0\n\
    \    local vowelsArrayIndex47=0\n    local vowelsArrayIndex48=0\n    local vowelsArrayIndex49=0\n\
    \    local vowelsArrayIndex50=0\n    local vowelsArrayIndex51=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i o u y\" \n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsMap=\"a e i o\
    \ u y A E I O U Y\"\n    local vowelsMapCount=$(echo $vowelsMap | wc -w)\n   \
    \ local vowelsMapIndex=0\n    local vowelsMapIndexCount=0\n    local vowelsMapIndexCount2=0\n\
    \    local vowelsMapIndexCount3=0\n    local vowelsMapIndexCount4=0\n    local\
    \ vowelsMapIndexCount5=0\n    local vowelsMapIndexCount6=0\n    local vowelsMapIndexCount7=0\n\
    \    local vowelsMapIndexCount8=0\n    local vowelsMapIndexCount9=0\n    local\
    \ vowelsMapIndexCount10=0\n    local vowelsMapIndexCount11=0\n    local vowelsMapIndexCount12=0\n\
    \    local vowelsMapIndexCount13=0\n    local vowelsMapIndexCount14=0\n    local\
    \ vowelsMapIndexCount15=0\n    local vowelsMapIndexCount16=0\n    local vowelsMapIndexCount17=0\n\
    \    local vowelsMapIndexCount18=0\n    local vowelsMapIndexCount19=0\n    local\
    \ vowelsMapIndexCount20=0\n    local vowelsMapIndexCount21=0\n    local vowelsMapIndexCount22=0\n\
    \    local vowelsMapIndexCount23=0\n    local vowelsMapIndexCount24=0\n    local\
    \ vowelsMapIndexCount25=0\n    local vowelsMapIndexCount26=0\n    local vowelsMapIndexCount27=0\n\
    \    local vowelsMapIndexCount28=0\n    local vowelsMapIndexCount29=0\n    local\
    \ vowelsMapIndexCount30=0\n    local vowelsMapIndexCount31=0\n    local vowelsMapIndexCount32=0\n\
    \    local vowelsMapIndexCount33=0\n    local vowelsMapIndexCount34=0\n    local\
    \ vowelsMapIndexCount35=0\n    local vowelsMapIndexCount36=0\n    local vowelsMapIndexCount37=0\n\
    \    local vowelsMapIndexCount38=0\n    local vowelsMapIndexCount39=0\n    local\
    \ vowelsMapIndexCount40=0\n    local vowelsMapIndexCount41=0\n    local vowelsMapIndexCount42=0\n\
    \    local vowelsMapIndexCount43=0\n    local vowelsMapIndex\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsIndex=0\n    local\
    \ vowelsIndex2=0\n    local vowelsIndex3=0\n    local vowelsIndex4=0\n    local\
    \ vowelsIndex5=0\n    local vowelsIndex6=0\n    local vowelsIndex7=0\n    local\
    \ vowelsIndex8=0\n    local vowelsIndex9=0\n    local vowelsIndex10=0\n    local\
    \ vowelsIndex11=0\n    local vowelsIndex12=0\n    local vowelsIndex13=0\n    local\
    \ vowelsIndex14=0\n    local vowelsIndex15=0\n    local vowelsIndex16=0\n    local\
    \ vowelsIndex17=0\n    local vowelsIndex18=0\n    local vowelsIndex19=0\n    local\
    \ vowelsIndex20=0\n    local vowelsIndex21=0\n    local vowelsIndex22=0\n    local\
    \ vowelsIndex23=0\n    local vowelsIndex24=0\n    local vowelsIndex25=0\n    local\
    \ vowelsIndex26=0\n    local vowelsIndex27=0\n    local vowelsIndex28=0\n    local\
    \ vowelsIndex29=0\n    local vowelsIndex30=0\n    local vowelsIndex31=0\n    local\
    \ vowelsIndex32=0\n    local vowelsIndex33=0\n    local vowelsIndex34=0\n    local\
    \ vowelsIndex35=0\n    local vowelsIndex36=0\n    local vowelsIndex37=0\n    local\
    \ vowelsIndex38=0\n    local vowelsIndex39=0\n    local vowelsIndex40=0\n    local\
    \ vowelsIndex41=0\n    local vowelsIndex42=0\n    local vowelsIndex43=0\n    local\
    \ vowelsIndex44=0\n    local vowelsIndex45=0\n    local vowelsIndex46=0\n    local\
    \ vowelsIndex47=0\n    local vowelsIndex48=0\n    local vowelsIndex49=0\n    local\
    \ vowelsIndex50=0\n    local vowelsIndex51=0\n    local vowelsIndex52=0\n    local\
    \ vowelsIndex53=0\n    local vowelsIndex54=0\n    local vowelsIndex55=0\n    local\
    \ vowelsIndex56=0\n    local vowelsIndex57=0\n    local vowelsIndex58=0\n    local\
    \ vowelsIndex59=0\n    local vowelsIndex60=0\n    local \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowel\n    local vowel_position\n    local letter\n\
    \    local letter_index\n    local letter_index2\n    local letter_index3\n  \
    \  local letter_index4\n    local letter_index5\n    local letter_index6\n   \
    \ local letter_index7\n    local letter_index8\n    local letter_index9\n    local\
    \ letter_index10\n    local letter_index11\n    local letter_index12\n    local\
    \ letter_index13\n    local letter_index14\n    local letter_index15\n    local\
    \ letter_index16\n    local letter_index17\n    local letter_index18\n    local\
    \ letter_index19\n    local letter_index20\n    local letter_index21\n    local\
    \ letter_index22\n    local letter_index23\n    local letter_index24\n    local\
    \ letter_index25\n    local letter_index26\n    local letter_index27\n    local\
    \ letter_index28\n    local letter_index29\n    local letter_index30\n    local\
    \ letter_index31\n    local letter_index32\n    local letter_index33\n    local\
    \ letter_index34\n    local letter_index35\n    local letter_index36\n    local\
    \ letter_index37\n    local letter_index38\n    local letter_index39\n    local\
    \ letter_index40\n    local letter_index41\n    local letter_index42\n    local\
    \ letter_index43\n    local letter_index44\n    local letter_index45\n    local\
    \ letter_index46\n    local letter_index47\n    local letter_index48\n    local\
    \ letter_index49\n    local letter_index50\n    local letter_index51\n    local\
    \ letter_index52\n    local letter_index53\n    local letter_index54\n    local\
    \ letter_index55\n    local letter_index56\n    local letter_index57\n    local\
    \ letter_index58\n    local letter_index59\n    local letter_index60\n    local\
    \ letter_index61\n    local letter_index62\n    local letter_index63\n    local\
    \ letter_index64\n    local letter_index65\n    local letter_index66\n    local\
    \ letter_index67\n    local letter_index68\n    local letter_index69\n    local\
    \ letter_index70\n    local letter_index71\n    local letter_index72\n    local\
    \ letter_index73\n    local letter_index74\n    local letter_index75\n    local\
    \ letter_index76\n    local letter_index77\n    local letter_index78\n    local\
    \ letter_index79\n    local letter\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local vowelChar=\"\"\n    local letterChar=\"\"\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentLetter2=\"\"\n    local currentVowel3=\"\"\n    local currentLetter3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentLetter4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentLetter5=\"\"\n    local currentVowel6=\"\"\n    local currentLetter6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentLetter7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentLetter8=\"\"\n    local currentVowel9=\"\"\n    local currentLetter9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentLetter10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentLetter11=\"\"\n    local currentVowel12=\"\"\n    local currentLetter12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentLetter13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentLetter14=\"\"\n    local currentVowel15=\"\"\n    local currentLetter15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentLetter16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentLetter17=\"\"\n    local currentVowel18=\"\"\n    local currentLetter18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentLetter19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentLetter20=\"\"\n    local currentVowel21=\"\"\n    local currentLetter21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentLetter22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentLetter23=\"\"\n    local currentVowel24=\"\"\n    local currentLetter24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentLetter25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentLetter26=\"\"\n    local currentVowel27=\"\"\n    local currentLetter27=\"\
    \"\n    local currentVowel28\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local msg=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowel_positions=$(echo $msg\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4qy296tw.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4qy296tw.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_position2=0\n\
    \    local new_vowel_position3=0\n    local new_vowel_position4=0\n    local new_vowel_position5=0\n\
    \    local new_vowel_position6=0\n    local new_vowel_position7=0\n    local new_vowel_position8=0\n\
    \    local new_vowel_position9=0\n    local new_vowel_position10=0\n    local\
    \ new_vowel_position11=0\n    local new_vowel_position12=0\n    local new_vowel_position13=0\n\
    \    local new_vowel_position14=0\n    local new_vowel_position15=0\n    local\
    \ new_vowel_position16=0\n    local new_vowel_position17=0\n    local new_vowel_position18=0\n\
    \    local new_vowel_position19=0\n    local new_vowel_position20=0\n    local\
    \ new_vowel_position21=0\n    local new_vowel_position22=0\n    local new_vowel_position23=0\n\
    \    local new_vowel_position24=0\n    local new_vowel_position25=0\n    local\
    \ new_vowel_position26=0\n    local new_vowel_position27=0\n    local new_vowel_position28=0\n\
    \    local new_vowel_position29=0\n    local new_vowel_position30=0\n    local\
    \ new_vowel_position31=0\n    local new_vowel_position32=0\n    local new_vowel_position33=0\n\
    \    local new_vowel_position34=0\n    local new_vowel_position35=0\n    local\
    \ new_vowel_position36=0\n    local new_vowel_position37=0\n    local new_vowel_position38=0\n\
    \    local new_vowel_position39=0\n    local new_vowel_position40=0\n    local\
    \ new_vowel_position41=0\n    local new_vowel_position42=0\n    local new_vowel_position43=0\n\
    \    local new_vowel_position44=0\n    local new_vowel_position45=0\n    local\
    \ new_vowel_position46=0\n    local new_vowel_position47=0\n    local new_vowel_position48=0\n\
    \    local new_vowel_position49=0\n    local new_vowel_position50=0\n    local\
    \ new_vowel_position51=0\n    local new_vowel_position52=0\n    local new_\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"A E I O U Y\"\n    local vowel_positions=$(echo $message\
    \ | tr ' ' '\\n' | sed 's/^/0/' | sort -n | uniq -c | sort -n | tail -n 1)\n \
    \   local letter_positions=$(echo $message | tr ' ' '\\n' | sed 's/^/0/' | sort\
    \ -n | uniq -c | sort -n | head -n 1)\n    local vowel_position=$(echo $vowel_positions\
    \ | cut -d ' ' -f 1)\n    local letter_position=$(echo $letter_positions | cut\
    \ -d ' ' -f 1)\n    local vowel_letter=$(echo $vowels | sed \"s/$vowels/$letter_position/g\"\
    )\n    local letter_letter=$(echo $letters | sed \"s/$letters/$vowel_position/g\"\
    )\n    echo $message | sed \"s/$vowel_position/$vowel_letter/g\" | sed \"s/$letter_position/$letter_letter/g\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount=0\n    local letterPosition=0\n    local\
    \ letterIndex=0\n    local letterPosition=0\n    local letterCount=0\n    local\
    \ letterPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letterPosition=0\n    local letterIndex=0\n    local\
    \ letterPosition=0\n    local letterCount\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU]//g'\
    \ | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi42rvkm7.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpi42rvkm7.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelIndex=0\n    local currentVowelPositionInLetter=0\n\
    \    local currentVowelInLetter=\"\"\n    local currentVowelInLetterPosition=0\n\
    \    local currentVowelInLetterIndex=0\n    local currentVowelInLetterPositionInLetter=0\n\
    \    local currentVowelInLetterIndexInLetter=0\n    local currentVowelInLetterPositionInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetter=0\n    local currentVowelInLetterPositionInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetter=0\n    local currentVowelInLetterPositionInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetterInLetter=0\n    local\
    \ currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetter=0\n   \
    \ local currentVowelInLetterIndexInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterIndexInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetterInLetter=0\n\
    \    local currentVowelInLetterPositionInLetterInLetterInLetterInLetterInLetter\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=''\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$(($i+1)):1}\n  \
    \      if [[ ${letter} == ${vowels} ]]; then\n            letter=${nextLetter}\n\
    \        fi\n        result+=\"${letter}\"\n    done\n    echo \"$result\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowel_count=$(echo $message | sed 's/[AEIOUaeiou]//g' | wc -c)\n  \
    \  local vowel_positions=$(echo $message | sed 's/[AEIOUaeiou]//g' | awk '{print\
    \ $1}')\n    local vowel_positions_count=$(echo $message | sed 's/[AEIOUaeiou]//g'\
    \ | awk '{print $2}')\n    local vowel_positions_sum=$(echo $message | sed 's/[AEIOUaeiou]//g'\
    \ | awk '{print $1}' | awk '{print $2}')\n    local vowel_positions_sum_count=$(echo\
    \ $message | sed 's/[AEIOUaeiou]//g' | awk '{print $1}' | awk '{print $2}' | awk\
    \ '{print $3}')\n    local vowel_positions_sum_count_sum=$(echo $message | sed\
    \ 's/[AEIOUaeiou]//g' | awk '{print $1}' | awk '{print $2}' | awk '{print $3}'\
    \ | awk '{print $4}')\n    local vowel_positions_sum_count_sum_count=$(echo $message\
    \ | sed 's/[AEIOUaeiou]//g' | awk '{print $1}' | awk '{print $2}' | awk '{print\
    \ $3}' | awk '{print $4}' | awk '{print $5}')\n    local vowel_positions_sum_count_sum_count_sum=$(echo\
    \ $message | sed 's/[AEIOUaeiou]//g' | awk '{print $1}' | awk '{print $2}' | awk\
    \ '{print $3}' | awk '{print $4}' | awk '{print $5}' | awk '{print $6}')\n   \
    \ local vowel_positions_sum_count_sum_count_sum_count=$(echo $message | sed 's/[AEIOUaeiou]//g'\
    \ | awk '{print $1}' | awk '{print $2}' | awk '{print $3}' | awk '{print $4}'\
    \ | awk '{print $5}' | awk '{print $6}' | awk '{print $7}')\n    local vowel_positions_sum_count_sum_count_sum_count_sum=$(echo\
    \ $message | sed 's/[AEIOUaeiou]//g' | awk '{print $1}' | awk '{print $2}' | awk\
    \ '{print $3}' | awk '{print $4}' | awk '{print $5}' | awk '{print $6}' | awk\
    \ '{print $7}' | awk '{\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbsh82t6p.sh: line 26: unexpected EOF while looking for matching
    `''''

    /tmp/tmpbsh82t6p.sh: line 43: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i o u y\"\n \
    \   local vowels_2=\"a e i o u y A E I O U Y\"\n    local vowels_3=\"a e i o u\
    \ y A E I O U Y A E I O U Y\"\n    local vowels_4=\"a e i o u y A E I O U Y A\
    \ E I O U Y A E I O U Y\"\n    local vowels_5=\"a e i o u y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y\"\n    local vowels_6=\"a e i o u y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_7=\"a\
    \ e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y\"\n    local vowels_8=\"a e i o u y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y\"\n    local vowels_9=\"a\
    \ e i o u y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y\"\n    local vowels_10=\"a e i o u y A E I O U\
    \ Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A\
    \ E I O U Y A E I O U Y\"\n    local vowels_11=\"a e i o u y A E I O U Y A E I\
    \ O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U Y A E I O U\
    \ Y A E I O U Y\"\n    local vowels_12=\"a e i o u y A E I O U Y A E I O U Y A\
    \ E I O U Y A \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1z82ak4b.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1z82ak4b.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i o u y\"\n \
    \   local vowel_count=0\n    local vowel_positions=()\n    local new_msg=\"\"\n\
    \    local new_vowels=\"\"\n    local new_vowel_count=0\n    local new_vowel_positions=()\n\
    \    local new_vowel_positions_count=()\n    local new_vowel_positions_count_max=2\n\
    \    local new_vowel_positions_count_min=1\n    local new_vowel_positions_count_step=1\n\
    \    local new_vowel_positions_count_max=$(( $new_vowel_positions_count_max -\
    \ $new_vowel_positions_count_min ))\n    local new_vowel_positions_count_min=$((\
    \ $new_vowel_positions_count_min + $new_vowel_positions_count_step ))\n    local\
    \ new_vowel_positions_count_step=$(( $new_vowel_positions_count_step + 1 ))\n\
    \    local new_vowel_positions_count_min=$(( $new_vowel_positions_count_min +\
    \ 1 ))\n    local new_vowel_positions_count_step=$(( $new_vowel_positions_count_step\
    \ + 1 ))\n    local new_vowel_positions_count_max=$(( $new_vowel_positions_count_max\
    \ + 1 ))\n    local new_vowel_positions_count_min=$(( $new_vowel_positions_count_min\
    \ - 1 ))\n    local new_vowel_positions_count_step=$(( $new_vowel_positions_count_step\
    \ - 1 ))\n    local new_vowel_positions_count_max=$(( $new_vowel_positions_count_max\
    \ - 1 ))\n    local new_vowel_positions_count_min=$(( $new_vowel_positions_count_min\
    \ + 1 ))\n    local new_vowel_positions_count_step=$(( $new_vowel_positions_count_step\
    \ + 1 ))\n    local new_vowel_positions_count_max=$(( $new_vowel_positions_count_max\
    \ + 1 ))\n    local new_vowel_positions_count_min=$(( $new_vowel_positions_count_min\
    \ - 1 ))\n    local new_vowel_positions_count_step=$(( $new_vowel_positions_count_step\
    \ - 1 ))\n    local new_vowel_positions_count_max=$(( $new_vowel_positions_count_max\
    \ - 1 ))\n    local new_vowel_positions_count_min=$(( $new_vowel_positions_count_min\
    \ + 1 ))\n    local new_vowel_positions_count_step=$(( $new_vowel_positions_count_step\
    \ + 1 ))\n    local new_vowel_positions_count_max=$((\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcdw05zds.sh: line 44: unexpected EOF while looking for matching
    `)''

    /tmp/tmpcdw05zds.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y A E I O U Y\"\n    local new_message=\"\"\n\
    \    local vowel_positions=\"\"\n    local vowel_positions_2=\"\"\n    local vowel_positions_3=\"\
    \"\n    local vowel_positions_4=\"\"\n    local vowel_positions_5=\"\"\n    local\
    \ vowel_positions_6=\"\"\n    local vowel_positions_7=\"\"\n    local vowel_positions_8=\"\
    \"\n    local vowel_positions_9=\"\"\n    local vowel_positions_10=\"\"\n    local\
    \ vowel_positions_11=\"\"\n    local vowel_positions_12=\"\"\n    local vowel_positions_13=\"\
    \"\n    local vowel_positions_14=\"\"\n    local vowel_positions_15=\"\"\n   \
    \ local vowel_positions_16=\"\"\n    local vowel_positions_17=\"\"\n    local\
    \ vowel_positions_18=\"\"\n    local vowel_positions_19=\"\"\n    local vowel_positions_20=\"\
    \"\n    local vowel_positions_21=\"\"\n    local vowel_positions_22=\"\"\n   \
    \ local vowel_positions_23=\"\"\n    local vowel_positions_24=\"\"\n    local\
    \ vowel_positions_25=\"\"\n    local vowel_positions_26=\"\"\n    local vowel_positions_27=\"\
    \"\n    local vowel_positions_28=\"\"\n    local vowel_positions_29=\"\"\n   \
    \ local vowel_positions_30=\"\"\n    local vowel_positions_31=\"\"\n    local\
    \ vowel_positions_32=\"\"\n    local vowel_positions_33=\"\"\n    local vowel_positions_34=\"\
    \"\n    local vowel_positions_35=\"\"\n    local vowel_positions_36=\"\"\n   \
    \ local vowel_positions_37=\"\"\n    local vowel_positions_38=\"\"\n    local\
    \ vowel_positions_39=\"\"\n    local vowel_positions_40=\"\"\n    local vowel_positions_41=\"\
    \"\n    local vowel_positions_42=\"\"\n    local vowel_positions_43=\"\"\n   \
    \ local vowel_positions_44=\"\"\n    local vowel_positions_45=\"\"\n    local\
    \ vowel_positions_46=\"\"\n    local vowel_positions_47=\"\"\n    local vowel_positions_48=\"\
    \"\n    local vowel_positions_49=\"\"\n    local vowel_positions_50=\"\"\n   \
    \ local vowel_positions_51=\"\"\n    local vowel_positions_52=\"\"\n    local\
    \ \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"a e i o u y\"\n \
    \ local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n  local\
    \ letters_2=\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n  local vowels_2=\"\
    A E I O U Y\"\n  local letters_3=\"A B C D E F G H I J K L M N O P Q R S T U V\
    \ W X Y Z\"\n  local vowels_3=\"A E I O U Y\"\n  local letters_4=\"A B C D E F\
    \ G H I J K L M N O P Q R S T U V W X Y Z\"\n  local vowels_4=\"A E I O U Y\"\n\
    \  local letters_5=\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n \
    \ local vowels_5=\"A E I O U Y\"\n  local letters_6=\"A B C D E F G H I J K L\
    \ M N O P Q R S T U V W X Y Z\"\n  local vowels_6=\"A E I O U Y\"\n  local letters_7=\"\
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n  local vowels_7=\"A E\
    \ I O U Y\"\n  local letters_8=\"A B C D E F G H I J K L M N O P Q R S T U V W\
    \ X Y Z\"\n  local vowels_8=\"A E I O U Y\"\n  local letters_9=\"A B C D E F G\
    \ H I J K L M N O P Q R S T U V W X Y Z\"\n  local vowels_9=\"A E I O U Y\"\n\
    \  local letters_10=\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n\
    \  local vowels_10=\"A E I O U Y\"\n  local letters_11=\"A B C D E F G H I J K\
    \ L M N O P\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbkh1l0a4.sh: line 49: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbkh1l0a4.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ vowel_positions=$(echo $message | tr [a-z] [A-Z])\n  local vowel_positions_sorted=$(echo\
    \ $vowel_positions | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_2=$(echo\
    \ $vowel_positions_sorted | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_3=$(echo\
    \ $vowel_positions_sorted_2 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_4=$(echo\
    \ $vowel_positions_sorted_3 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_5=$(echo\
    \ $vowel_positions_sorted_4 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_6=$(echo\
    \ $vowel_positions_sorted_5 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_7=$(echo\
    \ $vowel_positions_sorted_6 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_8=$(echo\
    \ $vowel_positions_sorted_7 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_9=$(echo\
    \ $vowel_positions_sorted_8 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_10=$(echo\
    \ $vowel_positions_sorted_9 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_11=$(echo\
    \ $vowel_positions_sorted_10 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_12=$(echo\
    \ $vowel_positions_sorted_11 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_13=$(echo\
    \ $vowel_positions_sorted_12 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_14=$(echo\
    \ $vowel_positions_sorted_13 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_15=$(echo\
    \ $vowel_positions_sorted_14 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_16=$(echo\
    \ $vowel_positions_sorted_15 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_17=$(echo\
    \ $vowel_positions_sorted_16 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_18=$(echo\
    \ $vowel_positions_sorted_17 | tr ' ' '\\n' | sort -u)\n  local vowel_positions_sorted_19=$(echo\
    \ $vowel_positions_sorted_18\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp16ei7mbc.sh: line 36: unexpected EOF while looking for matching
    `)''

    /tmp/tmp16ei7mbc.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowel_positions=$(echo $message | tr [a-z] [A-Z])\n    local vowel_positions_sorted=$(echo\
    \ $vowel_positions | tr ' ' '\\n' | sort -u)\n    local vowel_positions_sorted_2=$(echo\
    \ $vowel_positions_sorted | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local\
    \ vowel_positions_sorted_3=$(echo $vowel_positions_sorted_2 | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' ')\n    local vowel_positions_sorted_4=$(echo $vowel_positions_sorted_3\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_5=$(echo\
    \ $vowel_positions_sorted_4 | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local\
    \ vowel_positions_sorted_6=$(echo $vowel_positions_sorted_5 | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' ')\n    local vowel_positions_sorted_7=$(echo $vowel_positions_sorted_6\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_8=$(echo\
    \ $vowel_positions_sorted_7 | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local\
    \ vowel_positions_sorted_9=$(echo $vowel_positions_sorted_8 | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' ')\n    local vowel_positions_sorted_10=$(echo $vowel_positions_sorted_9\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_11=$(echo\
    \ $vowel_positions_sorted_10 | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local\
    \ vowel_positions_sorted_12=$(echo $vowel_positions_sorted_11 | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_13=$(echo $vowel_positions_sorted_12\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_14=$(echo\
    \ $vowel_positions_sorted_13 | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local\
    \ vowel_positions_sorted_15=$(echo $vowel_positions_sorted_14 | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' ')\n    local vowel_positions_sorted_16=$(echo $\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp22xuslp_.sh: line 33: unexpected EOF while looking for matching
    `)''

    /tmp/tmp22xuslp_.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ vowel_count=$(echo $message | sed 's/\\(.\\)/\\1/' | wc -c)\n  local vowel_positions=$(echo\
    \ $message | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/'\
    \ | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\\
    (.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\\
    1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed\
    \ 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\\
    )/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' |\
    \ sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\\
    (.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\\
    1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed\
    \ 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\\
    )/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' |\
    \ sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\\
    (.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\\
    1/' | sed 's/\\(.\\)/\\1/' | sed 's/\\(.\\)/\\1/' | sed '\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5dxi7rl4.sh: line 18: unexpected EOF while looking for matching
    `''''

    /tmp/tmp5dxi7rl4.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local vowel_count=0\n  local letter_count=0\n\
    \  local new_message=\"\"\n  local vowel_letter=\"\"\n  local letter_letter=\"\
    \"\n  local new_vowel=\"\"\n  local new_letter=\"\"\n  local new_vowel_letter=\"\
    \"\n  local new_letter_letter=\"\"\n  local new_vowel_letter2=\"\"\n  local new_letter_letter2=\"\
    \"\n  local new_vowel_letter3=\"\"\n  local new_letter_letter3=\"\"\n  local new_vowel_letter4=\"\
    \"\n  local new_letter_letter4=\"\"\n  local new_vowel_letter5=\"\"\n  local new_letter_letter5=\"\
    \"\n  local new_vowel_letter6=\"\"\n  local new_letter_letter6=\"\"\n  local new_vowel_letter7=\"\
    \"\n  local new_letter_letter7=\"\"\n  local new_vowel_letter8=\"\"\n  local new_letter_letter8=\"\
    \"\n  local new_vowel_letter9=\"\"\n  local new_letter_letter9=\"\"\n  local new_vowel_letter10=\"\
    \"\n  local new_letter_letter10=\"\"\n  local new_vowel_letter11=\"\"\n  local\
    \ new_letter_letter11=\"\"\n  local new_vowel_letter12=\"\"\n  local new_letter_letter12=\"\
    \"\n  local new_vowel_letter13=\"\"\n  local new_letter_letter13=\"\"\n  local\
    \ new_vowel_letter14=\"\"\n  local new_letter_letter14=\"\"\n  local new_vowel_letter15=\"\
    \"\n  local new_letter_letter15=\"\"\n  local new_vowel_letter16=\"\"\n  local\
    \ new_letter_letter16=\"\"\n  local new_vowel_letter17=\"\"\n  local new_letter_letter17=\"\
    \"\n  local new_vowel_letter18=\"\"\n  local new_letter_letter18=\"\"\n  local\
    \ new_vowel_letter19=\"\"\n  local new_letter_letter19=\"\"\n  local new_vowel_letter20=\"\
    \"\n  local new_letter_letter20=\"\"\n  local new_vowel_letter21=\"\"\n  local\
    \ new_letter_letter21=\"\"\n  local new_vowel_letter22=\"\"\n  local new_letter_letter22=\"\
    \"\n  local new_vowel_letter23=\"\"\n  local new_letter_letter23=\"\"\n  local\
    \ new_vowel_letter24=\"\"\n  local new_letter_letter24=\"\"\n  local new_vowel_letter25=\"\
    \"\n  local new_letter_letter25=\"\"\n  local new_vowel_letter26=\"\"\n  local\
    \ new_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"\
    mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"\
    This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw\
    \ WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_positions=$(echo $message | tr a-z A-Z | tr A-Z a-z | tr a-z\
    \ A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z)\n    local\
    \ new_message=\"\"\n    local new_vowels=\"\"\n    local new_vowel_positions=\"\
    \"\n    local new_vowel_positions_array=()\n    local new_vowel_positions_array_length=${#new_vowel_positions_array[@]}\n\
    \    local vowel_positions_array=()\n    local vowel_positions_array_length=${#vowel_positions_array[@]}\n\
    \    local vowel_positions_array_index=0\n    local vowel_positions_array_element=0\n\
    \    local vowel_positions_array_element_length=0\n    local vowel_positions_array_element_index=0\n\
    \    local vowel_positions_array_element_value=0\n    local vowel_positions_array_element_value_length=0\n\
    \    local vowel_positions_array_element_value_length_index=0\n    local vowel_positions_array_element_value_length_value=0\n\
    \    local vowel_positions_array_element_value_length_value_index=0\n    local\
    \ vowel_positions_array_element_value_length_value_length=0\n    local vowel_positions_array_element_value_length_value_length_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value=0\n \
    \   local vowel_positions_array_element_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length_value=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length_value_length=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length_value_index=0\n\
    \    local vowel_positions_array_element_value_length_value_length_value_length_value_length\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_count=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | sed 's/[aeiouAEIOU]//g' | sed 's/[aeiouAEIOU][aeiouAEIOU]//g' | sed\
    \ 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g' | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g' |\
    \ sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU]//g'\
    \ | sed 's/[aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAEIOU][aeiouAE\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7p_m20rq.sh: line 18: unexpected EOF while looking for matching
    `''''

    /tmp/tmp7p_m20rq.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local count=0\n    local vowel_count=0\n    local\
    \ letter_count=0\n    local vowel_letter=\"\"\n    local letter_letter=\"\"\n\
    \    local vowel_letter_count=0\n    local letter_letter_count=0\n    local vowel_letter_letter=\"\
    \"\n    local letter_letter_letter=\"\"\n    local vowel_letter_letter_count=0\n\
    \    local letter_letter_letter_count=0\n    local vowel_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_count=0\n    local vowel_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_count=0\n    local vowel_letter_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_letter_count=0\n    local vowel_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local letter_letter_letter_letter_letter_letter_letter=\"\"\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter_count=0\n    local letter_letter_letter_letter_letter_letter_letter_count=0\n\
    \    local vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n    local\
    \ letter_letter_letter_letter_letter_letter_letter=\"\"\n    local vowel_letter_letter_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_letter_letter_count=0\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_letter_letter_count=0\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_letter_letter_count=0\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_letter_letter_letter_letter_letter_letter=\"\
    \"\n    local vowel_letter_letter_letter_letter_letter_letter_letter_count=0\n\
    \    local letter_letter_letter_letter_letter_letter_letter_count=0\n    local\
    \ vowel_letter_letter_letter_letter_letter_letter_letter=\"\"\n    local letter_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowel\n    local letter\n    local count\n    local i\n    local j\n \
    \   local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local letter\n    local letter2\n    local letter3\n    local letter4\n \
    \   local letter5\n    local letter6\n    local letter7\n    local letter8\n \
    \   local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local letter91\n    local letter92\n\
    \    local letter93\n    local letter94\n    local letter95\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n \
    \   local lettersCount=0\n    local result=\"\"\n    local letter\n    local vowel\n\
    \    local vowel2\n    local letter2\n    local letter3\n    local letter4\n \
    \   local letter5\n    local letter6\n    local letter7\n    local letter8\n \
    \   local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowel_count=0\n    local vowel_index=0\n    local\
    \ vowel_letter=''\n    local vowel_letter_2=''\n    local letter_index=0\n   \
    \ local letter_count=0\n    local letter_letter=''\n    local letter_letter_2=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_2=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_3=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_4=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_5=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_6=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_7=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_8=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_9=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_10=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_11=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_12=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_13=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_14=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_15=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_16=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_17=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_18=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_19=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_20=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_21=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_22=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_23=''\n\
    \    local letter_index=0\n    local letter_count=0\n    local letter_letter_24=''\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_count=0\n\
    \    local new_vowel_position_count=0\n    local new_vowel_position_count_2=0\n\
    \    local new_vowel_position_count_3=0\n    local new_vowel_position_count_4=0\n\
    \    local new_vowel_position_count_5=0\n    local new_vowel_position_count_6=0\n\
    \    local new_vowel_position_count_7=0\n    local new_vowel_position_count_8=0\n\
    \    local new_vowel_position_count_9=0\n    local new_vowel_position_count_10=0\n\
    \    local new_vowel_position_count_11=0\n    local new_vowel_position_count_12=0\n\
    \    local new_vowel_position_count_13=0\n    local new_vowel_position_count_14=0\n\
    \    local new_vowel_position_count_15=0\n    local new_vowel_position_count_16=0\n\
    \    local new_vowel_position_count_17=0\n    local new_vowel_position_count_18=0\n\
    \    local new_vowel_position_count_19=0\n    local new_vowel_position_count_20=0\n\
    \    local new_vowel_position_count_21=0\n    local new_vowel_position_count_22=0\n\
    \    local new_vowel_position_count_23=0\n    local new_vowel_position_count_24=0\n\
    \    local new_vowel_position_count_25=0\n    local new_vowel_position_count_26=0\n\
    \    local new_vowel_position_count_27=0\n    local new_vowel_position_count_28=0\n\
    \    local new_vowel_position_count_29=0\n    local new_vowel_position_count_30=0\n\
    \    local new_vowel_position_count_31=0\n    local new_vowel_position_count_32=0\n\
    \    local new_vowel_position_count_33=0\n    local new_vowel_position_count_34=0\n\
    \    local new_vowel_position_count_35=0\n    local new_vowel_position_count_36=0\n\
    \    local new_vowel_position_count_37=0\n    local new_vowel_position_count_38=0\n\
    \    local new_vowel_position_count_39=0\n    local new_vowel_position_count_40=0\n\
    \    local new_vowel_position_count_41=0\n    local new_vowel_position_count_42=0\n\
    \    local new_vowel_position_count_43=0\n    local new_vowel_position_count_44=0\n\
    \    local new_vowel_position_count_45=0\n    local new_vowel_position_\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local output=\"\"\n    local vowel_count=0\n    local vowel_position=0\n\
    \    local vowel_letter=\"\"\n    local letter=\"\"\n    local letter_index=0\n\
    \    local letter_index2=0\n    local letter_index3=0\n    local letter_index4=0\n\
    \    local letter_index5=0\n    local letter_index6=0\n    local letter_index7=0\n\
    \    local letter_index8=0\n    local letter_index9=0\n    local letter_index10=0\n\
    \    local letter_index11=0\n    local letter_index12=0\n    local letter_index13=0\n\
    \    local letter_index14=0\n    local letter_index15=0\n    local letter_index16=0\n\
    \    local letter_index17=0\n    local letter_index18=0\n    local letter_index19=0\n\
    \    local letter_index20=0\n    local letter_index21=0\n    local letter_index22=0\n\
    \    local letter_index23=0\n    local letter_index24=0\n    local letter_index25=0\n\
    \    local letter_index26=0\n    local letter_index27=0\n    local letter_index28=0\n\
    \    local letter_index29=0\n    local letter_index30=0\n    local letter_index31=0\n\
    \    local letter_index32=0\n    local letter_index33=0\n    local letter_index34=0\n\
    \    local letter_index35=0\n    local letter_index36=0\n    local letter_index37=0\n\
    \    local letter_index38=0\n    local letter_index39=0\n    local letter_index40=0\n\
    \    local letter_index41=0\n    local letter_index42=0\n    local letter_index43=0\n\
    \    local letter_index44=0\n    local letter_index45=0\n    local letter_index46=0\n\
    \    local letter_index47=0\n    local letter_index48=0\n    local letter_index49=0\n\
    \    local letter_index50=0\n    local letter_index51=0\n    local letter_index52=0\n\
    \    local letter_index53=0\n    local letter_index54=0\n    local letter_index55=0\n\
    \    local letter_index56=0\n    local letter_index57=0\n    local letter_index58=0\n\
    \    local letter_index59=0\n    local letter_index60=0\n    local letter_index61=0\n\
    \    local letter_index62=0\n    local letter_index63=0\n    local letter_index64=0\n\
    \    local letter_index65=0\n    local letter_index66=0\n    local letter_index\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local letter_index=0\n    local vowel_index=0\n\
    \    local letters_index=0\n    local vowels_index=0\n    local new_message=\"\
    \"\n    local new_vowels=\"\"\n    local new_letters=\"\"\n    local new_vowel_positions=\"\
    \"\n    local new_letter_positions=\"\"\n    local new_letter_index=0\n    local\
    \ new_vowel_index=0\n    local new_letters_index=0\n    local new_vowels_index=0\n\
    \    local vowel_positions_index=0\n    local letter_positions_index=0\n    local\
    \ letter_index=0\n    local vowel_index=0\n    local letters_index=0\n    local\
    \ vowels_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letters_index=0\n    local new_vowels_index=0\n    local vowel_positions_index=0\n\
    \    local letter_positions_index=0\n    local letter_index=0\n    local vowel_index=0\n\
    \    local letters_index=0\n    local vowels_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letters_index=0\n    local new_vowels_index=0\n\
    \    local vowel_positions_index=0\n    local letter_positions_index=0\n    local\
    \ letter_index=0\n    local vowel_index=0\n    local letters_index=0\n    local\
    \ vowels_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letters_index=0\n    local new_vowels_index=0\n    local vowel_positions_index=0\n\
    \    local letter_positions_index=0\n    local letter_index=0\n    local vowel_index=0\n\
    \    local letters_index=0\n    local vowels_index=0\n    local new_letter_index=0\n\
    \    local new_vowel_index=0\n    local new_letters_index=0\n    local new_vowels_index=0\n\
    \    local vowel_positions_index=0\n    local letter_positions_index=0\n    local\
    \ letter_index=0\n    local vowel_index=0\n    local letters_index=0\n    local\
    \ vowels_index=0\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_letters_index=0\n    local new_vowels_index=0\n    local vowel_position\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local msg=$1\n    local vowels=\"a e i o u y\"\n \
    \   local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n  \
    \  local letters_2=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n \
    \   local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i o u y a\"\n   \
    \ local vowels_4=\"a e i o u y a e\"\n    local vowels_5=\"a e i o u y a e i\"\
    \n    local vowels_6=\"a e i o u y a e i o\"\n    local vowels_7=\"a e i o u y\
    \ a e i o u\"\n    local vowels_8=\"a e i o u y a e i o u y\"\n    local vowels_9=\"\
    a e i o u y a e i o u y a\"\n    local vowels_10=\"a e i o u y a e i o u y a e\"\
    \n    local vowels_11=\"a e i o u y a e i o u y a e i\"\n    local vowels_12=\"\
    a e i o u y a e i o u y a e i o\"\n    local vowels_13=\"a e i o u y a e i o u\
    \ y a e i o u\"\n    local vowels_14=\"a e i o u y a e i o u y a e i o u y\"\n\
    \    local vowels_15=\"a e i o u y a e i o u y a e i o u y a e\"\n    local vowels_16=\"\
    a e i o u y a e i o u y a e i o u y a e i\"\n    local vowels_17=\"a e i o u y\
    \ a e i o u y a e i o u y a e i o\"\n    local vowels_18=\"a e i o u y a e i o\
    \ u y a e i o u y a e i o u\"\n    local vowels_19=\"a e i o u y a e i o u y a\
    \ e i o u y a e i o u y a\"\n    local vowels_20=\"a e i o u y a e i o u y a e\
    \ i o u y a e i \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppeahw2p6.sh: line 50: unexpected EOF while looking for matching
    `"''

    /tmp/tmppeahw2p6.sh: line 54: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \ \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ vowelIndex=0\n    local letterIndex=0\n    local currentLetter=\"\"\n    local\
    \ currentVowel=\"\"\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelIndex=0\n\
    \    local currentLetterIndex=0\n    local currentVowelIndex=0\n    local currentLetterIndex=0\n\
    \    local currentVowelIndex=0\n    local currentLetterIndex=0\n    local current\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowel\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ vowelIndex=0\n    local letterIndex=0\n    local vowelChar\n    local letterChar\n\
    \    local vowelChar2\n    local letterChar2\n    local vowelChar3\n    local\
    \ letterChar3\n    local vowelChar4\n    local letterChar4\n    local vowelChar5\n\
    \    local letterChar5\n    local vowelChar6\n    local letterChar6\n    local\
    \ vowelChar7\n    local letterChar7\n    local vowelChar8\n    local letterChar8\n\
    \    local vowelChar9\n    local letterChar9\n    local vowelChar10\n    local\
    \ letterChar10\n    local vowelChar11\n    local letterChar11\n    local vowelChar12\n\
    \    local letterChar12\n    local vowelChar13\n    local letterChar13\n    local\
    \ vowelChar14\n    local letterChar14\n    local vowelChar15\n    local letterChar15\n\
    \    local vowelChar16\n    local letterChar16\n    local vowelChar17\n    local\
    \ letterChar17\n    local vowelChar18\n    local letterChar18\n    local vowelChar19\n\
    \    local letterChar19\n    local vowelChar20\n    local letterChar20\n    local\
    \ vowelChar21\n    local letterChar21\n    local vowelChar22\n    local letterChar22\n\
    \    local vowelChar23\n    local letterChar23\n    local vowelChar24\n    local\
    \ letterChar24\n    local vowelChar25\n    local letterChar25\n    local vowelChar26\n\
    \    local letterChar26\n    local vowelChar27\n    local letterChar27\n    local\
    \ vowelChar28\n    local letterChar28\n    local vowelChar29\n    local letterChar29\n\
    \    local vowelChar30\n    local letterChar30\n    local vowelChar31\n    local\
    \ letterChar31\n    local vowelChar32\n    local letterChar32\n    local vowelChar33\n\
    \    local letterChar33\n    local vowelChar34\n    local letterChar34\n    local\
    \ vowelChar35\n    local letterChar35\n    local vowelChar36\n    local letterChar36\n\
    \    local vowelChar37\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local result=\"\"\n  local vowelCount=0\n\
    \  local letterCount=0\n  local currentLetter=\"\"\n  local currentVowel=\"\"\n\
    \  local currentVowel2=\"\"\n  local currentVowel3=\"\"\n  local currentVowel4=\"\
    \"\n  local currentVowel5=\"\"\n  local currentVowel6=\"\"\n  local currentVowel7=\"\
    \"\n  local currentVowel8=\"\"\n  local currentVowel9=\"\"\n  local currentVowel10=\"\
    \"\n  local currentVowel11=\"\"\n  local currentVowel12=\"\"\n  local currentVowel13=\"\
    \"\n  local currentVowel14=\"\"\n  local currentVowel15=\"\"\n  local currentVowel16=\"\
    \"\n  local currentVowel17=\"\"\n  local currentVowel18=\"\"\n  local currentVowel19=\"\
    \"\n  local currentVowel20=\"\"\n  local currentVowel21=\"\"\n  local currentVowel22=\"\
    \"\n  local currentVowel23=\"\"\n  local currentVowel24=\"\"\n  local currentVowel25=\"\
    \"\n  local currentVowel26=\"\"\n  local currentVowel27=\"\"\n  local currentVowel28=\"\
    \"\n  local currentVowel29=\"\"\n  local currentVowel30=\"\"\n  local currentVowel31=\"\
    \"\n  local currentVowel32=\"\"\n  local currentVowel33=\"\"\n  local currentVowel34=\"\
    \"\n  local currentVowel35=\"\"\n  local currentVowel36=\"\"\n  local currentVowel37=\"\
    \"\n  local currentVowel38=\"\"\n  local currentVowel39=\"\"\n  local currentVowel40=\"\
    \"\n  local currentVowel41=\"\"\n  local currentVowel42=\"\"\n  local currentVowel43=\"\
    \"\n  local currentVowel44=\"\"\n  local currentVowel45=\"\"\n  local currentVowel46=\"\
    \"\n  local currentVowel47=\"\"\n  local currentVowel48=\"\"\n  local currentVowel49=\"\
    \"\n  local currentVowel50=\"\"\n  local currentV\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n  \
    \  local letterCount=0\n    local encodedMessage=\"\"\n    local vowelIndex=0\n\
    \    local letterIndex=0\n    local encodedLetterIndex=0\n    local vowelChar=\"\
    \"\n    local letterChar=\"\"\n    local encodedLetterChar=\"\"\n    local vowelCountChar=\"\
    \"\n    local letterCountChar=\"\"\n    local encodedMessageChar=\"\"\n    local\
    \ vowelIndexChar=\"\"\n    local letterIndexChar=\"\"\n    local encodedLetterIndexChar=\"\
    \"\n    local vowelCharChar=\"\"\n    local letterCharChar=\"\"\n    local encodedLetterCharChar=\"\
    \"\n    local vowelCountCharChar=\"\"\n    local letterCountCharChar=\"\"\n  \
    \  local encodedMessageCharChar=\"\"\n    local vowelIndexCharChar=\"\"\n    local\
    \ letterIndexCharChar=\"\"\n    local encodedLetterIndexCharChar=\"\"\n    local\
    \ vowelCharCharChar=\"\"\n    local letterCharCharChar=\"\"\n    local encodedLetterCharCharChar=\"\
    \"\n    local vowelCountCharCharChar=\"\"\n    local letterCountCharCharChar=\"\
    \"\n    local encodedMessageCharCharChar=\"\"\n    local vowelIndexCharCharChar=\"\
    \"\n    local letterIndexCharCharChar=\"\"\n    local encodedLetterIndexCharCharChar=\"\
    \"\n    local vowelCharCharCharChar=\"\"\n    local letterCharCharCharChar=\"\"\
    \n    local encodedLetterCharCharCharChar=\"\"\n    local vowelCountCharCharCharChar=\"\
    \"\n    local letterCountCharCharCharChar=\"\"\n    local encodedMessageCharCharCharChar=\"\
    \"\n    local vowelIndexCharCharCharChar=\"\"\n    local letterIndexCharCharCharChar=\"\
    \"\n    local encodedLetterIndexCharCharCharChar=\"\"\n    local vowelCharCharCharCharChar=\"\
    \"\n    local letterCharCharCharCharChar=\"\"\n    local encodedLetterCharCharCharCharChar=\"\
    \"\n    local vowelCountCharCharCharCharChar=\"\"\n    local letterCountCharCharCharCharChar=\"\
    \"\n    local encodedMessageCharCharCharCharChar=\"\"\n    local vowelIndexCharCharCharCharChar=\"\
    \"\n    local letterIndexCharCharCharCharChar=\"\"\n    local encodedLetterIndexCharCharCharCharChar=\"\
    \"\n    local vowelCharCharCharCharChar=\"\"\n    local letterCharCharCharCharChar=\"\
    \"\n    local encodedLetterCharCharCharCharChar=\"\"\n    local vowelCountCharCharCharCharCharChar\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n  \
    \  local letterCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n\
    \    local encodedVowelCount=0\n    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n\
    \    local encodedVowelIndex1=0\n    local encodedVowelCount2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedLetterIndex1=0\n    local encodedLetterCount1=0\n    local encodedVowelIndex3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedVowelCount3=0\n    local encodedLetterIndex3=0\n\
    \    local encodedLetterIndex4=0\n    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n\
    \    local encodedVowelIndex6=0\n    local encodedVowelCount5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedLetterIndex6=0\n    local encodedLetterCount6=0\n    local encodedVowelIndex7=0\n\
    \    local encodedVowelIndex8=0\n    local encodedVowelCount7=0\n    local encodedLetterIndex7=0\n\
    \    local encodedLetterIndex8=0\n    local encodedLetterCount8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedVowelCount9=0\n    local encodedLetterIndex9=0\n\
    \    local encodedLetterIndex10=0\n    local encodedLetterCount10=0\n    local\
    \ encodedVowelIndex11=0\n    local encodedVowelIndex12=0\n    local encodedVowelCount11=0\n\
    \    local encodedLetterIndex11=0\n    local encodedLetterIndex12=0\n    local\
    \ encodedLetterCount12=0\n    local encodedVowelIndex13=0\n    local encodedVowelIndex14=0\n\
    \    local encodedVowelCount13=0\n    local encodedLetterIndex13=0\n    local\
    \ encodedLetterIndex14=0\n    local encodedLetterCount14=0\n    local encodedVowelIndex15=0\n\
    \    local encodedVowelIndex16=0\n    local encodedVowelCount15=0\n    local encodedLetterIndex15\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n \
    \   local lettersCount=0\n    local newMessage=\"\"\n    local newLetter=\"\"\n\
    \    local newVowel=\"\"\n    local newVowelCount=0\n    local newLetterCount=0\n\
    \    local newVowelLetter=\"\"\n    local newVowelLetterCount=0\n    local newVowelLetterCount2=0\n\
    \    local newVowelLetterCount3=0\n    local newVowelLetterCount4=0\n    local\
    \ newVowelLetterCount5=0\n    local newVowelLetterCount6=0\n    local newVowelLetterCount7=0\n\
    \    local newVowelLetterCount8=0\n    local newVowelLetterCount9=0\n    local\
    \ newVowelLetterCount10=0\n    local newVowelLetterCount11=0\n    local newVowelLetterCount12=0\n\
    \    local newVowelLetterCount13=0\n    local newVowelLetterCount14=0\n    local\
    \ newVowelLetterCount15=0\n    local newVowelLetterCount16=0\n    local newVowelLetterCount17=0\n\
    \    local newVowelLetterCount18=0\n    local newVowelLetterCount19=0\n    local\
    \ newVowelLetterCount20=0\n    local newVowelLetterCount21=0\n    local newVowelLetterCount22=0\n\
    \    local newVowelLetterCount23=0\n    local newVowelLetterCount24=0\n    local\
    \ newVowelLetterCount25=0\n    local newVowelLetterCount26=0\n    local newVowelLetterCount27=0\n\
    \    local newVowelLetterCount28=0\n    local newVowelLetterCount29=0\n    local\
    \ newVowelLetterCount30=0\n    local newVowelLetterCount31=0\n    local newVowelLetterCount32=0\n\
    \    local newVowelLetterCount33=0\n    local newVowelLetterCount34=0\n    local\
    \ newVowelLetterCount35=0\n    local newVowelLetterCount36=0\n    local newVowelLetterCount37=0\n\
    \    local newVowelLetterCount38=0\n    local new\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowelsCount=0\n    local lettersCount=0\n    local encodedMessage=\"\
    \"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\"\n    local encodedVowel2=\"\
    \"\n    local encodedVowel3=\"\"\n    local encodedVowel4=\"\"\n    local encodedVowel5=\"\
    \"\n    local encodedVowel6=\"\"\n    local encodedVowel7=\"\"\n    local encodedVowel8=\"\
    \"\n    local encodedVowel9=\"\"\n    local encodedVowel10=\"\"\n    local encodedVowel11=\"\
    \"\n    local encodedVowel12=\"\"\n    local encodedVowel13=\"\"\n    local encodedVowel14=\"\
    \"\n    local encodedVowel15=\"\"\n    local encodedVowel16=\"\"\n    local encodedVowel17=\"\
    \"\n    local encodedVowel18=\"\"\n    local encodedVowel19=\"\"\n    local encodedVowel20=\"\
    \"\n    local encodedVowel21=\"\"\n    local encodedVowel22=\"\"\n    local encodedVowel23=\"\
    \"\n    local encodedVowel24=\"\"\n    local encodedVowel25=\"\"\n    local encodedVowel26=\"\
    \"\n    local encodedVowel27=\"\"\n    local encodedVowel28=\"\"\n    local encodedVowel29=\"\
    \"\n    local encodedVowel30=\"\"\n    local encodedVowel31=\"\"\n    local encodedVowel32=\"\
    \"\n    local encodedVowel33=\"\"\n    local encodedVowel34=\"\"\n    local encodedVowel35=\"\
    \"\n    local encodedVowel36=\"\"\n    local encodedVowel37=\"\"\n    local encodedVowel38=\"\
    \"\n    local encodedVowel39=\"\"\n    local encodedVowel40=\"\"\n    local encodedVowel41=\"\
    \"\n    local encodedVowel42=\"\"\n    local encodedVowel43=\"\"\n    local encodedVowel44=\"\
    \"\n    local encodedVowel45=\"\"\n    local encodedVowel46=\"\"\n    local encodedVowel47=\"\
    \"\n    local encodedVowel48=\"\"\n    local encodedVowel49\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local currentLetter=\"\"\n    local currentVowel=\"\"\n \
    \   local currentVowelIndex=0\n    local currentLetterIndex=0\n    local currentVowelCount=0\n\
    \    local currentLetterCount=0\n    local currentVowelIndex2=0\n    local currentLetterIndex2=0\n\
    \    local currentVowelCount2=0\n    local currentLetterCount2=0\n    local currentVowelIndex3=0\n\
    \    local currentLetterIndex3=0\n    local currentVowelCount3=0\n    local currentLetterCount3=0\n\
    \    local currentVowelIndex4=0\n    local currentLetterIndex4=0\n    local currentVowelCount4=0\n\
    \    local currentLetterCount4=0\n    local currentVowelIndex5=0\n    local currentLetterIndex5=0\n\
    \    local currentVowelCount5=0\n    local currentLetterCount5=0\n    local currentVowelIndex6=0\n\
    \    local currentLetterIndex6=0\n    local currentVowelCount6=0\n    local currentLetterCount6=0\n\
    \    local currentVowelIndex7=0\n    local currentLetterIndex7=0\n    local currentVowelCount7=0\n\
    \    local currentLetterCount7=0\n    local currentVowelIndex8=0\n    local currentLetterIndex8=0\n\
    \    local currentVowelCount8=0\n    local currentLetterCount8=0\n    local currentVowelIndex9=0\n\
    \    local currentLetterIndex9=0\n    local currentVowelCount9=0\n    local currentLetterCount9=0\n\
    \    local currentVowelIndex10=0\n    local currentLetterIndex10=0\n    local\
    \ currentVowelCount10=0\n    local currentLetterCount10=0\n    local currentVowelIndex11=0\n\
    \    local currentLetterIndex11=0\n    local currentVowelCount11=0\n    local\
    \ currentLetterCount11=0\n    local currentVowelIndex12=0\n    local currentLetterIndex12=0\n\
    \    local currentVowelCount12=0\n    local currentLetterCount12=0\n    local\
    \ currentVowelIndex\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=$(echo $message | sed 's/[aeiou]/\\n/g' | wc -l)\n    local\
    \ vowel_positions=$(echo $message | sed 's/[aeiou]/\\n/g' | awk '{print $1}')\n\
    \    local vowel_positions_count=$(echo $message | sed 's/[aeiou]/\\n/g' | awk\
    \ '{print $2}')\n    local vowel_positions_sum=$(echo $message | sed 's/[aeiou]/\\\
    n/g' | awk '{print $3}')\n    local vowel_positions_sum_2=$(echo $message | sed\
    \ 's/[aeiou]/\\n/g' | awk '{print $4}')\n    local vowel_positions_sum_3=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $5}')\n    local vowel_positions_sum_4=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $6}')\n    local vowel_positions_sum_5=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $7}')\n    local vowel_positions_sum_6=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $8}')\n    local vowel_positions_sum_7=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $9}')\n    local vowel_positions_sum_8=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $10}')\n    local vowel_positions_sum_9=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $11}')\n    local vowel_positions_sum_10=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $12}')\n    local vowel_positions_sum_11=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $13}')\n    local vowel_positions_sum_12=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $14}')\n    local vowel_positions_sum_13=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $15}')\n    local vowel_positions_sum_14=$(echo\
    \ $message | sed 's/[aeiou]/\\n/g' | awk '{print $16}')\n    local vowel_positions_sum_15=$(echo\
    \ $message | \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7iye6ilk.sh: line 34: unexpected EOF while looking for matching
    `)''

    /tmp/tmp7iye6ilk.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n  \
    \  local letterCount=0\n    local encodedMessage=\"\"\n    local vowelIndex=0\n\
    \    local letterIndex=0\n    local encodedLetter=\"\"\n    local encodedVowel=\"\
    \"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n    local encodedVowelCount=0\n\
    \    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedVowelCount2=0\n    local encodedLetterCount2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedLetterIndex3=0\n    local encodedVowelCount3=0\n    local encodedLetterCount3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n    local encodedVowelCount4=0\n\
    \    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedVowelCount5=0\n    local encodedLetterCount5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedLetterIndex6=0\n    local encodedVowelCount6=0\n    local encodedLetterCount6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n    local encodedVowelCount7=0\n\
    \    local encodedLetterCount7=0\n    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n\
    \    local encodedVowelCount8=0\n    local encodedLetterCount8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedLetterIndex9=0\n    local encodedVowelCount9=0\n    local encodedLetterCount9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n    local\
    \ encodedVowelCount10=0\n    local encodedLetterCount10=0\n    local encodedVowelIndex11=0\n\
    \    local encodedLetterIndex11=0\n    local encodedVowelCount11=0\n    local\
    \ encodedLetterCount11=0\n    local encodedVowelIndex12=0\n    local encodedLetterIndex12=0\n\
    \    local encodedVowelCount12=0\n    local encodedLetterCount12=0\n    local\
    \ encodedVowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local count=0\n    local vowel\n    local letter\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local i\n    local j\n    local vowel\n    local letter\n\
    \    local count\n    local letter2\n    local letter3\n    local letter4\n  \
    \  local letter5\n    local letter6\n    local letter7\n    local letter8\n  \
    \  local letter9\n    local letter10\n    local letter11\n    local letter12\n\
    \    local letter13\n    local letter14\n    local letter15\n    local letter16\n\
    \    local letter17\n    local letter18\n    local letter19\n    local letter20\n\
    \    local letter21\n    local letter22\n    local letter23\n    local letter24\n\
    \    local letter25\n    local letter26\n    local letter27\n    local letter28\n\
    \    local letter29\n    local letter30\n    local letter31\n    local letter32\n\
    \    local letter33\n    local letter34\n    local letter35\n    local letter36\n\
    \    local letter37\n    local letter38\n    local letter39\n    local letter40\n\
    \    local letter41\n    local letter42\n    local letter43\n    local letter44\n\
    \    local letter45\n    local letter46\n    local letter47\n    local letter48\n\
    \    local letter49\n    local letter50\n    local letter51\n    local letter52\n\
    \    local letter53\n    local letter54\n    local letter55\n    local letter56\n\
    \    local letter57\n    local letter58\n    local letter59\n    local letter60\n\
    \    local letter61\n    local letter62\n    local letter63\n    local letter64\n\
    \    local letter65\n    local letter66\n    local letter67\n    local letter68\n\
    \    local letter69\n    local letter70\n    local letter71\n    local letter72\n\
    \    local letter73\n    local letter74\n    local letter75\n    local letter76\n\
    \    local letter77\n    local letter78\n    local letter79\n    local letter80\n\
    \    local letter81\n    local letter82\n    local letter83\n    local letter84\n\
    \    local letter85\n    local letter86\n    local letter87\n    local letter88\n\
    \    local letter89\n    local letter90\n    local letter91\n    local letter92\n\
    \    local letter93\n    local letter94\n    local letter95\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        if [[ \"${letter}\" == \"a\" ]]; then\n    \
    \        letter=${vowels:0:1}\n        elif [[ \"${letter}\" == \"e\" ]]; then\n\
    \            letter=${vowels:1:1}\n        elif [[ \"${letter}\" == \"i\" ]];\
    \ then\n            letter=${vowels:2:1}\n        elif [[ \"${letter}\" == \"\
    o\" ]]; then\n            letter=${vowels:3:1}\n        elif [[ \"${letter}\"\
    \ == \"u\" ]]; then\n            letter=${vowels:4:1}\n        elif [[ \"${letter}\"\
    \ == \"y\" ]]; then\n            letter=${vowels:5:1}\n        fi\n        output+=\"\
    ${letter}\"\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowel_count=0\n    local vowel_position=0\n    local new_message=\"\
    \"\n    local new_vowel=\"\"\n    local new_vowel_position=0\n    local new_vowel_count=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    \    local new_vowel_position=0\n    local new_vowel_position=0\n    local new_vowel_position=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ output=\"\"\n  local vowel_count=0\n  local vowel_index=0\n  local vowel_letter=\"\
    \"\n  local letter_index=0\n  local letter_letter=\"\"\n  local letter_index2=0\n\
    \  local letter_letter2=\"\"\n  local letter_index3=0\n  local letter_letter3=\"\
    \"\n  local letter_index4=0\n  local letter_letter4=\"\"\n  local letter_index5=0\n\
    \  local letter_letter5=\"\"\n  local letter_index6=0\n  local letter_letter6=\"\
    \"\n  local letter_index7=0\n  local letter_letter7=\"\"\n  local letter_index8=0\n\
    \  local letter_letter8=\"\"\n  local letter_index9=0\n  local letter_letter9=\"\
    \"\n  local letter_index10=0\n  local letter_letter10=\"\"\n  local letter_index11=0\n\
    \  local letter_letter11=\"\"\n  local letter_index12=0\n  local letter_letter12=\"\
    \"\n  local letter_index13=0\n  local letter_letter13=\"\"\n  local letter_index14=0\n\
    \  local letter_letter14=\"\"\n  local letter_index15=0\n  local letter_letter15=\"\
    \"\n  local letter_index16=0\n  local letter_letter16=\"\"\n  local letter_index17=0\n\
    \  local letter_letter17=\"\"\n  local letter_index18=0\n  local letter_letter18=\"\
    \"\n  local letter_index19=0\n  local letter_letter19=\"\"\n  local letter_index20=0\n\
    \  local letter_letter20=\"\"\n  local letter_index21=0\n  local letter_letter21=\"\
    \"\n  local letter_index22=0\n  local letter_letter22=\"\"\n  local letter_index23=0\n\
    \  local letter_letter23=\"\"\n  local letter_index24=0\n  local letter_letter24=\"\
    \"\n  local letter_index25=0\n  local letter_letter25=\"\"\n  local letter_index26=0\n\
    \  local letter_letter26=\"\"\n  local letter_index27=0\n  local letter_letter27=\"\
    \"\n  local letter_index28=0\n  local letter_letter28=\"\"\n  local letter_index29=0\n\
    \  local letter_letter29=\"\"\n  local letter_index30=0\n  local letter_letter30=\"\
    \"\n  local letter_index31=0\n  local letter_letter31=\"\"\n  local letter_index32=0\n\
    \  local letter_letter32=\"\"\n  local letter_index33=0\n  local letter_letter33=\"\
    \"\n  local letter_index34=0\n  local letter_letter\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local result=\"\"\n    local vowelIndex=0\n    local alphabetIndex=0\n  \
    \  local letterIndex=0\n    local letterCount=0\n    local vowelCount=0\n    local\
    \ vowelIndex2=0\n    local alphabetIndex2=0\n    local letterIndex2=0\n    local\
    \ letterCount2=0\n    local vowelCount2=0\n    local vowelIndex3=0\n    local\
    \ alphabetIndex3=0\n    local letterIndex3=0\n    local letterCount3=0\n    local\
    \ vowelCount3=0\n    local vowelIndex4=0\n    local alphabetIndex4=0\n    local\
    \ letterIndex4=0\n    local letterCount4=0\n    local vowelCount4=0\n    local\
    \ vowelIndex5=0\n    local alphabetIndex5=0\n    local letterIndex5=0\n    local\
    \ letterCount5=0\n    local vowelCount5=0\n    local vowelIndex6=0\n    local\
    \ alphabetIndex6=0\n    local letterIndex6=0\n    local letterCount6=0\n    local\
    \ vowelCount6=0\n    local vowelIndex7=0\n    local alphabetIndex7=0\n    local\
    \ letterIndex7=0\n    local letterCount7=0\n    local vowelCount7=0\n    local\
    \ vowelIndex8=0\n    local alphabetIndex8=0\n    local letterIndex8=0\n    local\
    \ letterCount8=0\n    local vowelCount8=0\n    local vowelIndex9=0\n    local\
    \ alphabetIndex9=0\n    local letterIndex9=0\n    local letterCount9=0\n    local\
    \ vowelCount9=0\n    local vowelIndex10=0\n    local alphabetIndex10=0\n    local\
    \ letterIndex10=0\n    local letterCount10=0\n    local vowelCount10=0\n    local\
    \ vowelIndex11=0\n    local alphabetIndex11=0\n    local letterIndex11=0\n   \
    \ local letterCount11=0\n    local vowelCount11=0\n    local vowelIndex12=0\n\
    \    local alphabetIndex12=0\n    local letterIndex12=0\n    local letterCount12=0\n\
    \    local vowelCount12=0\n    local vowelIndex13=0\n    local alphabetIndex13=0\n\
    \    local letterIndex13=0\n    local letterCount13=0\n    local vowelCount13=0\n\
    \    local vowelIndex14=0\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local i\n    local j\n    local k\n    local l\n    local m\n    local n\n \
    \   local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    \n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local count=0\n    local vowel\n    local letter\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    local currentVowel\n    local currentVowelIndex\n    local currentVowelCount\n\
    \    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local vowels_2=\"a e i o u y\"\n    local vowels_3=\"a e i o u y\"\n   \
    \ local vowels_4=\"a e i o u y\"\n    local vowels_5=\"a e i o u y\"\n    local\
    \ vowels_6=\"a e i o u y\"\n    local vowels_7=\"a e i o u y\"\n    local vowels_8=\"\
    a e i o u y\"\n    local vowels_9=\"a e i o u y\"\n    local vowels_10=\"a e i\
    \ o u y\"\n    local vowels_11=\"a e i o u y\"\n    local vowels_12=\"a e i o\
    \ u y\"\n    local vowels_13=\"a e i o u y\"\n    local vowels_14=\"a e i o u\
    \ y\"\n    local vowels_15=\"a e i o u y\"\n    local vowels_16=\"a e i o u y\"\
    \n    local vowels_17=\"a e i o u y\"\n    local vowels_18=\"a e i o u y\"\n \
    \   local vowels_19=\"a e i o u y\"\n    local vowels_20=\"a e i o u y\"\n   \
    \ local vowels_21=\"a e i o u y\"\n    local vowels_22=\"a e i o u y\"\n    local\
    \ vowels_23=\"a e i o u y\"\n    local vowels_24=\"a e i o u y\"\n    local vowels_25=\"\
    a e i o u y\"\n    local vowels_26=\"a e i o u y\"\n    local vowels_27=\"a e\
    \ i o u y\"\n    local vowels_28=\"a e i o u y\"\n    local vowels_29=\"a e i\
    \ o u y\"\n    local vowels_30=\"a e i o u y\"\n    local vowels_31=\"a e i o\
    \ u y\"\n    local vowels_32=\"a e i o u y\"\n    local vowels_33=\"a e i o u\
    \ y\"\n    local vowels_34=\"a e i o u y\"\n    local vowels_35=\"a e i o u y\"\
    \n    local vowels_36=\"a e i o u y\"\n    local vowels_37=\"a e i o u y\"\n \
    \   local vowels_38=\"a e i o u y\"\n    local vowels_39=\"a e i o u y\"\n   \
    \ \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelPosition=0\n\
    \    local currentLetterPosition=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowelPositionIndex=0\n    local currentLetterPositionIndex=0\n\
    \    local currentVowelPositionIndex=0\n    local currentLetterIndex=0\n    local\
    \ currentVowelIndex=0\n    local currentVowel\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\n   \
    \ local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n    local\
    \ vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n    local\
    \ currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\"\
    \n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z | tr A-Z a-z | tr a-z A-Z |\
    \ tr A-Z a-z)\n    local vowel_positions_array=(${vowel_positions//,/ })\n   \
    \ local vowel_positions_array_length=${#vowel_positions_array[@]}\n    local vowel_positions_array_index=0\n\
    \    local vowel_positions_array_element\n    local vowel_positions_array_element_index\n\
    \    local vowel_positions_array_element_value\n    local vowel_positions_array_element_value_length\n\
    \    local vowel_positions_array_element_value_length_index\n    local vowel_positions_array_element_value_length_value\n\
    \    local vowel_positions_array_element_value_length_value_index\n    local vowel_positions_array_element_value_length_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_index\n    local\
    \ vowel_positions_array_element_value_length_value_value_value\n    local vowel_positions_array_element_value_length_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_value\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_value_value_index\n\
    \    local vowel_positions_array_element_value_length_value_value_value_value_value_value_value_value_value_index\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelCount=0\n  \
    \  local letterCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n\
    \    local encodedVowelCount=0\n    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n\
    \    local encodedLetterIndex2=0\n    local encodedVowelCount2=0\n    local encodedLetterCount2=0\n\
    \    local encodedVowelIndex3=0\n    local encodedLetterIndex3=0\n    local encodedVowelCount3=0\n\
    \    local encodedLetterCount3=0\n    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n\
    \    local encodedVowelCount4=0\n    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n\
    \    local encodedLetterIndex5=0\n    local encodedVowelCount5=0\n    local encodedLetterCount5=0\n\
    \    local encodedVowelIndex6=0\n    local encodedLetterIndex6=0\n    local encodedVowelCount6=0\n\
    \    local encodedLetterCount6=0\n    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n\
    \    local encodedVowelCount7=0\n    local encodedLetterCount7=0\n    local encodedVowelIndex8=0\n\
    \    local encodedLetterIndex8=0\n    local encodedVowelCount8=0\n    local encodedLetterCount8=0\n\
    \    local encodedVowelIndex9=0\n    local encodedLetterIndex9=0\n    local encodedVowelCount9=0\n\
    \    local encodedLetterCount9=0\n    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n\
    \    local encodedVowelCount10=0\n    local encodedLetterCount10=0\n    local\
    \ encodedVowelIndex11=0\n    local encodedLetterIndex11=0\n    local encodedVowelCount11=0\n\
    \    local encodedLetterCount11=0\n    local encodedVowelIndex12=0\n    local\
    \ encodedLetterIndex12=0\n    local encodedVowelCount12=0\n    local encodedLetterCount12=0\n\
    \    local encodedVowelIndex13=0\n    local encodedLetterIndex13=0\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\n   \
    \ local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowelsCount=0\n    local\
    \ lettersCount=0\n    local encodedMessage=\"\"\n    local vowelsIndex=0\n   \
    \ local lettersIndex=0\n    local encodedLetter=\"\"\n    local encodedVowel=\"\
    \"\n    local encodedLetterIndex=0\n    local encodedVowelIndex=0\n    local encodedVowelCount=0\n\
    \    local encodedLetterCount=0\n    local encodedVowelIndex2=0\n    local encodedLetterIndex2=0\n\
    \    local encodedVowelCount2=0\n    local encodedLetterCount2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedLetterIndex3=0\n    local encodedVowelCount3=0\n    local encodedLetterCount3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedLetterIndex4=0\n    local encodedVowelCount4=0\n\
    \    local encodedLetterCount4=0\n    local encodedVowelIndex5=0\n    local encodedLetterIndex5=0\n\
    \    local encodedVowelCount5=0\n    local encodedLetterCount5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedLetterIndex6=0\n    local encodedVowelCount6=0\n    local encodedLetterCount6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedLetterIndex7=0\n    local encodedVowelCount7=0\n\
    \    local encodedLetterCount7=0\n    local encodedVowelIndex8=0\n    local encodedLetterIndex8=0\n\
    \    local encodedVowelCount8=0\n    local encodedLetterCount8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedLetterIndex9=0\n    local encodedVowelCount9=0\n    local encodedLetterCount9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedLetterIndex10=0\n    local\
    \ encodedVowelCount10=0\n    local encodedLetterCount10=0\n    local encodedVowelIndex11=0\n\
    \    local encodedLetterIndex11=0\n    local encodedVowelCount11=0\n    local\
    \ encodedLetterCount11=0\n    local encodedVowelIndex12=0\n    local encodedLetterIndex12=0\n\
    \    local encodedVowelCount12=0\n    local encodedLetterCount12=0\n    local\
    \ encodedV\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowelsCount=0\n    local vowelsIndex=0\n    local vowelsIndex2=0\n\
    \    local encodedMessage=\"\"\n    local encodedMessageIndex=0\n    local encodedMessageIndex2=0\n\
    \    local encodedMessageIndex3=0\n    local encodedMessageIndex4=0\n    local\
    \ encodedMessageIndex5=0\n    local encodedMessageIndex6=0\n    local encodedMessageIndex7=0\n\
    \    local encodedMessageIndex8=0\n    local encodedMessageIndex9=0\n    local\
    \ encodedMessageIndex10=0\n    local encodedMessageIndex11=0\n    local encodedMessageIndex12=0\n\
    \    local encodedMessageIndex13=0\n    local encodedMessageIndex14=0\n    local\
    \ encodedMessageIndex15=0\n    local encodedMessageIndex16=0\n    local encodedMessageIndex17=0\n\
    \    local encodedMessageIndex18=0\n    local encodedMessageIndex19=0\n    local\
    \ encodedMessageIndex20=0\n    local encodedMessageIndex21=0\n    local encodedMessageIndex22=0\n\
    \    local encodedMessageIndex23=0\n    local encodedMessageIndex24=0\n    local\
    \ encodedMessageIndex25=0\n    local encodedMessageIndex26=0\n    local encodedMessageIndex27=0\n\
    \    local encodedMessageIndex28=0\n    local encodedMessageIndex29=0\n    local\
    \ encodedMessageIndex30=0\n    local encodedMessageIndex31=0\n    local encodedMessageIndex32=0\n\
    \    local encodedMessageIndex33=0\n    local encodedMessageIndex34=0\n    local\
    \ encodedMessageIndex35=0\n    local encodedMessageIndex36=0\n    local encodedMessageIndex37=0\n\
    \    local encodedMessageIndex38=0\n    local encodedMessageIndex39=0\n    local\
    \ encodedMessageIndex40=0\n    local encodedMessageIndex41=0\n    local encodedMessageIndex42=0\n\
    \    local encodedMessageIndex43=0\n    local encodedMessageIndex44=0\n    local\
    \ encodedMessageIndex45=0\n    local encodedMessageIndex46=0\n    local encodedMessageIndex47=0\n\
    \    local encodedMessageIndex48=0\n    local encodedMessageIndex49=0\n    local\
    \ encodedMessageIndex50=0\n    local encodedMessageIndex51=0\n    local encodedMessageIndex52=0\n\
    \    local encodedMessageIndex53=0\n    local encodedMessageIndex54=0\n    local\
    \ encodedMessageIndex55=0\n    local encodedMessageIndex56=0\n    local encodedMessageIndex57=0\n\
    \    local encodedMessageIndex58=0\n    local encodedMessage\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local nextLetter=${message:$((i+1)):1}\n   \
    \     if [[ \"$letter\" =~ $vowels ]]; then\n            letter=${letter:0:1}\n\
    \            nextLetter=${nextLetter:0:1}\n        fi\n        output+=$letter\n\
    \        output+=$nextLetter\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOU\"\n   \
    \ local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n    local\
    \ vowel\n    local letter\n    local count\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"AEIOUaeiou\"\n  local\
    \ letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n  local output=\"\
    \"\n  local vowelCount=0\n  local letterCount=0\n  local vowelIndex=0\n  local\
    \ letterIndex=0\n  local vowelChar\n  local letterChar\n  local vowelChar2\n \
    \ local letterChar2\n  local vowelChar3\n  local letterChar3\n  local vowelChar4\n\
    \  local letterChar4\n  local vowelChar5\n  local letterChar5\n  local vowelChar6\n\
    \  local letterChar6\n  local vowelChar7\n  local letterChar7\n  local vowelChar8\n\
    \  local letterChar8\n  local vowelChar9\n  local letterChar9\n  local vowelChar10\n\
    \  local letterChar10\n  local vowelChar11\n  local letterChar11\n  local vowelChar12\n\
    \  local letterChar12\n  local vowelChar13\n  local letterChar13\n  local vowelChar14\n\
    \  local letterChar14\n  local vowelChar15\n  local letterChar15\n  local vowelChar16\n\
    \  local letterChar16\n  local vowelChar17\n  local letterChar17\n  local vowelChar18\n\
    \  local letterChar18\n  local vowelChar19\n  local letterChar19\n  local vowelChar20\n\
    \  local letterChar20\n  local vowelChar21\n  local letterChar21\n  local vowelChar22\n\
    \  local letterChar22\n  local vowelChar23\n  local letterChar23\n  local vowelChar24\n\
    \  local letterChar24\n  local vowelChar25\n  local letterChar25\n  local vowelChar26\n\
    \  local letterChar26\n  local vowelChar27\n  local letterChar27\n  local vowelChar28\n\
    \  local letterChar28\n  local vowelChar29\n  local letterChar29\n  local vowelChar30\n\
    \  local letterChar30\n  local vowelChar31\n  local letterChar31\n  local vowelChar32\n\
    \  local letterChar32\n  local vowelChar33\n  local letterChar33\n  local vowelChar34\n\
    \  local letterChar34\n  local vowelChar35\n  local letterChar35\n  local vowelChar36\n\
    \  local letterChar36\n  local vowelChar37\n\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowel\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local output=''\n    local vowel_index=0\n    local vowel_position=0\n  \
    \  local vowel_position2=0\n    local vowel_position3=0\n    local vowel_position4=0\n\
    \    local vowel_position5=0\n    local vowel_position6=0\n    local vowel_position7=0\n\
    \    local vowel_position8=0\n    local vowel_position9=0\n    local vowel_position10=0\n\
    \    local vowel_position11=0\n    local vowel_position12=0\n    local vowel_position13=0\n\
    \    local vowel_position14=0\n    local vowel_position15=0\n    local vowel_position16=0\n\
    \    local vowel_position17=0\n    local vowel_position18=0\n    local vowel_position19=0\n\
    \    local vowel_position20=0\n    local vowel_position21=0\n    local vowel_position22=0\n\
    \    local vowel_position23=0\n    local vowel_position24=0\n    local vowel_position25=0\n\
    \    local vowel_position26=0\n    local vowel_position27=0\n    local vowel_position28=0\n\
    \    local vowel_position29=0\n    local vowel_position30=0\n    local vowel_position31=0\n\
    \    local vowel_position32=0\n    local vowel_position33=0\n    local vowel_position34=0\n\
    \    local vowel_position35=0\n    local vowel_position36=0\n    local vowel_position37=0\n\
    \    local vowel_position38=0\n    local vowel_position39=0\n    local vowel_position40=0\n\
    \    local vowel_position41=0\n    local vowel_position42=0\n    local vowel_position43=0\n\
    \    local vowel_position44=0\n    local vowel_position45=0\n    local vowel_position46=0\n\
    \    local vowel_position47=0\n    local vowel_position48=0\n    local vowel_position49=0\n\
    \    local vowel_position50=0\n    local vowel_position51=0\n    local vowel_position52=0\n\
    \    local vowel_position53=0\n    local vowel_position54=0\n    local vowel_position55=0\n\
    \    local vowel_position56=0\n    local vowel_position57=0\n    local vowel_position58=0\n\
    \    local vowel_position59=0\n    local vowel_position60=0\n    local vowel_position\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=$(echo\
    \ $message | sed 's/[aeiouAEIOU]/\\n/g' | sed 's/[aeiou]/\\n/g' | sed 's/^/\\\
    n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g'\
    \ | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed\
    \ 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\\
    n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g'\
    \ | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed\
    \ 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\\
    n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\\
    n/g' | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g'\
    \ | sed 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed\
    \ 's/\\n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\\
    n//g' | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g'\
    \ | sed 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed\
    \ 's/^/\\n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed 's/\\n//g' | sed 's/^/\\\
    n/g' | sed 's/$/\\n/g' | sed 's/\\n/\\n/g' | sed '\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2pib77b_.sh: line 18: unexpected EOF while looking for matching
    `''''

    /tmp/tmp2pib77b_.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n  \
    \  local count=0\n    local vowelCount=0\n    local currentVowel\n    local currentLetter\n\
    \    local currentLetterCount\n    local currentLetterIndex\n    local currentLetterIndex2\n\
    \    local currentLetterIndex3\n    local currentLetterIndex4\n    local currentLetterIndex5\n\
    \    local currentLetterIndex6\n    local currentLetterIndex7\n    local currentLetterIndex8\n\
    \    local currentLetterIndex9\n    local currentLetterIndex10\n    local currentLetterIndex11\n\
    \    local currentLetterIndex12\n    local currentLetterIndex13\n    local currentLetterIndex14\n\
    \    local currentLetterIndex15\n    local currentLetterIndex16\n    local currentLetterIndex17\n\
    \    local currentLetterIndex18\n    local currentLetterIndex19\n    local currentLetterIndex20\n\
    \    local currentLetterIndex21\n    local currentLetterIndex22\n    local currentLetterIndex23\n\
    \    local currentLetterIndex24\n    local currentLetterIndex25\n    local currentLetterIndex26\n\
    \    local currentLetterIndex27\n    local currentLetterIndex28\n    local currentLetterIndex29\n\
    \    local currentLetterIndex30\n    local currentLetterIndex31\n    local currentLetterIndex32\n\
    \    local currentLetterIndex33\n    local currentLetterIndex34\n    local currentLetterIndex35\n\
    \    local currentLetterIndex36\n    local currentLetterIndex37\n    local currentLetterIndex38\n\
    \    local currentLetterIndex39\n    local currentLetterIndex40\n    local currentLetterIndex41\n\
    \    local currentLetterIndex42\n    local currentLetterIndex43\n    local currentLetterIndex44\n\
    \    local currentLetterIndex45\n    local currentLetterIndex46\n    local currentLetterIndex47\n\
    \    local currentLetterIndex48\n    local currentLetterIndex49\n    local currentLetterIndex50\n\
    \    local currentLetterIndex51\n    local currentLetterIndex52\n    local currentLetterIndex53\n\
    \    local currentLetterIndex54\n    local currentLetterIndex55\n    local currentLetterIndex56\n\
    \    local currentLetterIndex57\n    local currentLetterIndex58\n    local currentLetterIndex59\n\
    \    local currentLetterIndex60\n    local currentLetterIndex61\n    local currentLetterIndex62\n\
    \    local currentLetterIndex63\n    local \n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiou\"\n    local\
    \ vowels_4=\"AEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiou\"\n    local vowels_6=\"\
    AEIOUaeiou\"\n    local vowels_7=\"AEIOUaeiou\"\n    local vowels_8=\"AEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiou\"\n    local vowels_10=\"AEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiou\"\n    local vowels_12=\"AEIOUaeiou\"\n    local vowels_13=\"\
    AEIOUaeiou\"\n    local vowels_14=\"AEIOUaeiou\"\n    local vowels_15=\"AEIOUaeiou\"\
    \n    local vowels_16=\"AEIOUaeiou\"\n    local vowels_17=\"AEIOUaeiou\"\n   \
    \ local vowels_18=\"AEIOUaeiou\"\n    local vowels_19=\"AEIOUaeiou\"\n    local\
    \ vowels_20=\"AEIOUaeiou\"\n    local vowels_21=\"AEIOUaeiou\"\n    local vowels_22=\"\
    AEIOUaeiou\"\n    local vowels_23=\"AEIOUaeiou\"\n    local vowels_24=\"AEIOUaeiou\"\
    \n    local vowels_25=\"AEIOUaeiou\"\n    local vowels_26=\"AEIOUaeiou\"\n   \
    \ local vowels_27=\"AEIOUaeiou\"\n    local vowels_28=\"AEIOUaeiou\"\n    local\
    \ vowels_29=\"AEIOUaeiou\"\n    local vowels_30=\"AEIOUaeiou\"\n    local vowels_31=\"\
    AEIOUaeiou\"\n    local vowels_32=\"AEIOUaeiou\"\n    local vowels_33=\"AEIOUaeiou\"\
    \n    local vowels_34=\"AEIOUaeiou\"\n    local vowels_35=\"AEIOUaeiou\"\n   \
    \ local vowels_36=\"AEIOUaeiou\"\n    local vowels_37=\"AEIOUaeiou\"\n    local\
    \ vowels_38=\"AEIOUaeiou\"\n    local vowels_39=\"AEIOUaeiou\"\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowelsCount=0\n    local lettersCount=0\n    local encodedMessage=\"\
    \"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n\
    \    local encodedVowelIndex=0\n    local encodedVowelIndex2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedVowelIndex5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedVowelIndex8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedVowelIndex11=0\n    local encodedVowelIndex12=0\n\
    \    local encodedVowelIndex13=0\n    local encodedVowelIndex14=0\n    local encodedVowelIndex15=0\n\
    \    local encodedVowelIndex16=0\n    local encodedVowelIndex17=0\n    local encodedVowelIndex18=0\n\
    \    local encodedVowelIndex19=0\n    local encodedVowelIndex20=0\n    local encodedVowelIndex21=0\n\
    \    local encodedVowelIndex22=0\n    local encodedVowelIndex23=0\n    local encodedVowelIndex24=0\n\
    \    local encodedVowelIndex25=0\n    local encodedVowelIndex26=0\n    local encodedVowelIndex27=0\n\
    \    local encodedVowelIndex28=0\n    local encodedVowelIndex29=0\n    local encodedVowelIndex30=0\n\
    \    local encodedVowelIndex31=0\n    local encodedVowelIndex32=0\n    local encodedVowelIndex33=0\n\
    \    local encodedVowelIndex34=0\n    local encodedVowelIndex35=0\n    local encodedVowelIndex36=0\n\
    \    local encodedVowelIndex37=0\n    local encodedVowelIndex38=0\n    local encodedVowelIndex39=0\n\
    \    local encodedVowelIndex40=0\n    local encodedVowelIndex41=0\n    local encodedVowelIndex42=0\n\
    \    local encodedV\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n \
    \   local lettersCount=0\n    local encodedMessage=\"\"\n    local vowelIndex\n\
    \    local letterIndex\n    local letter\n    local vowel\n    local encodedLetter\n\
    \    local encodedVowel\n    local encodedLetterIndex\n    local encodedVowelIndex\n\
    \    local encodedLetterCount\n    local encodedVowelCount\n    local encodedVowelIndex2\n\
    \    local encodedLetterIndex2\n    local encodedVowelIndex2\n    local encodedLetterCount2\n\
    \    local encodedVowelCount2\n    local encodedVowelIndex3\n    local encodedLetterIndex3\n\
    \    local encodedVowelIndex3\n    local encodedLetterCount3\n    local encodedVowelCount3\n\
    \    local encodedVowelIndex4\n    local encodedLetterIndex4\n    local encodedVowelIndex4\n\
    \    local encodedLetterCount4\n    local encodedVowelCount4\n    local encodedVowelIndex5\n\
    \    local encodedLetterIndex5\n    local encodedVowelIndex5\n    local encodedLetterCount5\n\
    \    local encodedVowelCount5\n    local encodedVowelIndex6\n    local encodedLetterIndex6\n\
    \    local encodedVowelIndex6\n    local encodedLetterCount6\n    local encodedVowelCount6\n\
    \    local encodedVowelIndex7\n    local encodedLetterIndex7\n    local encodedVowelIndex7\n\
    \    local encodedLetterCount7\n    local encodedVowelCount7\n    local encodedVowelIndex8\n\
    \    local encodedLetterIndex8\n    local encodedVowelIndex8\n    local encodedLetterCount8\n\
    \    local encodedVowelCount8\n    local encodedVowelIndex9\n    local encodedLetterIndex9\n\
    \    local encodedVowelIndex9\n    local encodedLetterCount9\n    local encodedVowelCount9\n\
    \    local encodedVowelIndex10\n    local encodedLetterIndex10\n    local encodedVowelIndex10\n\
    \    local encodedLetterCount10\n    local encodedVowelCount10\n    local encodedVowelIndex11\n\
    \    local encodedLetterIndex11\n    local encodedVowelIndex11\n    local encodedLetterCount11\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelIndex=0\n    local letterIndex=0\n    local currentLetter\n    local\
    \ currentVowel\n    local currentVowelIndex\n    local currentLetterIndex\n  \
    \  local currentVowelIndex2\n    local currentLetterIndex2\n    local currentVowelIndex3\n\
    \    local currentLetterIndex3\n    local currentVowelIndex4\n    local currentLetterIndex4\n\
    \    local currentVowelIndex5\n    local currentLetterIndex5\n    local currentVowelIndex6\n\
    \    local currentLetterIndex6\n    local currentVowelIndex7\n    local currentLetterIndex7\n\
    \    local currentVowelIndex8\n    local currentLetterIndex8\n    local currentVowelIndex9\n\
    \    local currentLetterIndex9\n    local currentVowelIndex10\n    local currentLetterIndex10\n\
    \    local currentVowelIndex11\n    local currentLetterIndex11\n    local currentVowelIndex12\n\
    \    local currentLetterIndex12\n    local currentVowelIndex13\n    local currentLetterIndex13\n\
    \    local currentVowelIndex14\n    local currentLetterIndex14\n    local currentVowelIndex15\n\
    \    local currentLetterIndex15\n    local currentVowelIndex16\n    local currentLetterIndex16\n\
    \    local currentVowelIndex17\n    local currentLetterIndex17\n    local currentVowelIndex18\n\
    \    local currentLetterIndex18\n    local currentVowelIndex19\n    local currentLetterIndex19\n\
    \    local currentVowelIndex20\n    local currentLetterIndex20\n    local currentVowelIndex21\n\
    \    local currentLetterIndex21\n    local currentVowelIndex22\n    local currentLetterIndex22\n\
    \    local currentVowelIndex23\n    local currentLetterIndex23\n    local currentVowelIndex24\n\
    \    local currentLetterIndex24\n    local currentVowelIndex25\n    local currentLetterIndex25\n\
    \    local currentVowelIndex26\n    local currentLetterIndex26\n    local currentVowelIndex27\n\
    \    local currentLetterIndex27\n    local currentVowelIndex28\n    local currentLetterIndex28\n\
    \    local current\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ output=\"\"\n  local vowelCount=0\n  local vowelIndex=0\n  local vowelIndex2=0\n\
    \  local vowelIndex3=0\n  local vowelIndex4=0\n  local vowelIndex5=0\n  local\
    \ vowelIndex6=0\n  local vowelIndex7=0\n  local vowelIndex8=0\n  local vowelIndex9=0\n\
    \  local vowelIndex10=0\n  local vowelIndex11=0\n  local vowelIndex12=0\n  local\
    \ vowelIndex13=0\n  local vowelIndex14=0\n  local vowelIndex15=0\n  local vowelIndex16=0\n\
    \  local vowelIndex17=0\n  local vowelIndex18=0\n  local vowelIndex19=0\n  local\
    \ vowelIndex20=0\n  local vowelIndex21=0\n  local vowelIndex22=0\n  local vowelIndex23=0\n\
    \  local vowelIndex24=0\n  local vowelIndex25=0\n  local vowelIndex26=0\n  local\
    \ vowelIndex27=0\n  local vowelIndex28=0\n  local vowelIndex29=0\n  local vowelIndex30=0\n\
    \  local vowelIndex31=0\n  local vowelIndex32=0\n  local vowelIndex33=0\n  local\
    \ vowelIndex34=0\n  local vowelIndex35=0\n  local vowelIndex36=0\n  local vowelIndex37=0\n\
    \  local vowelIndex38=0\n  local vowelIndex39=0\n  local vowelIndex40=0\n  local\
    \ vowelIndex41=0\n  local vowelIndex42=0\n  local vowelIndex43=0\n  local vowelIndex44=0\n\
    \  local vowelIndex45=0\n  local vowelIndex46=0\n  local vowelIndex47=0\n  local\
    \ vowelIndex48=0\n  local vowelIndex49=0\n  local vowelIndex50=0\n  local vowelIndex51=0\n\
    \  local vowelIndex52=0\n  local vowelIndex53=0\n  local vowelIndex54=0\n  local\
    \ vowelIndex55=0\n  local vowelIndex56=0\n  local vowelIndex57=0\n  local vowelIndex58=0\n\
    \  local vowelIndex59=0\n  local vowelIndex60=0\n  local vowelIndex61=0\n  local\
    \ vowelIndex62=0\n  local vowelIndex63=0\n  local vowelIndex64=0\n  local vowelIndex65=0\n\
    \  local vowelIndex66=0\n  local vowelIndex67=0\n  local vowelIndex68=0\n  local\
    \ vowelIndex69=0\n  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOU\"\n    local vowels_3=\"AEIOUaeiou\"\n    local vowels_4=\"\
    AEIOUaeiouAEIOU\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_6=\"\
    AEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_7=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_9=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_18=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps4k3yoh4.sh: line 46: unexpected EOF while looking for matching
    `"''

    /tmp/tmps4k3yoh4.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowel_positions=$(echo $message | tr ' ' '\\n' | sort | uniq -c | sort\
    \ -nr | head -n 2)\n    local vowel_positions_array=($vowel_positions)\n    local\
    \ vowel_positions_array_length=${#vowel_positions_array[@]}\n    local vowel_positions_array_elements=${vowel_positions_array_length}\n\
    \    local vowel_positions_array_elements_length=${#vowel_positions_array[@]}\n\
    \    local vowel_positions_array_elements_position=0\n    local vowel_positions_array_elements_position_length=$((${vowel_positions_array_elements_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_length=$((${vowel_positions_array_elements_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_length=$((${vowel_positions_array_elements_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_position_position_length}\
    \ - 1))\n    local vowel_positions_array_elements_position_position_position_position_position_position_position_length=$((${vowel_positions_array_elements_position_position_position_position_\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl444sx8b.sh: line 34: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl444sx8b.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n        local letter2=${letters:$((i+1)):1}\n\
    \        local output=\"${output}${letter2:1}${letter:1}${vowel:1}\"\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ letterIndex=0\n    local vowelIndex=0\n    local vowelChar=\"\"\n    local letterChar=\"\
    \"\n    local outputChar=\"\"\n    local outputCharCount=0\n    local outputCharIndex=0\n\
    \    local outputCharCountIndex=0\n    local outputCharIndex2=0\n    local outputCharCountIndex2=0\n\
    \    local outputCharIndex3=0\n    local outputCharCountIndex3=0\n    local outputCharIndex4=0\n\
    \    local outputCharCountIndex4=0\n    local outputCharIndex5=0\n    local outputCharCountIndex5=0\n\
    \    local outputCharIndex6=0\n    local outputCharCountIndex6=0\n    local outputCharIndex7=0\n\
    \    local outputCharCountIndex7=0\n    local outputCharIndex8=0\n    local outputCharCountIndex8=0\n\
    \    local outputCharIndex9=0\n    local outputCharCountIndex9=0\n    local outputCharIndex10=0\n\
    \    local outputCharCountIndex10=0\n    local outputCharIndex11=0\n    local\
    \ outputCharCountIndex11=0\n    local outputCharIndex12=0\n    local outputCharCountIndex12=0\n\
    \    local outputCharIndex13=0\n    local outputCharCountIndex13=0\n    local\
    \ outputCharIndex14=0\n    local outputCharCountIndex14=0\n    local outputCharIndex15=0\n\
    \    local outputCharCountIndex15=0\n    local outputCharIndex16=0\n    local\
    \ outputCharCountIndex16=0\n    local outputCharIndex17=0\n    local outputCharCountIndex17=0\n\
    \    local outputCharIndex18=0\n    local outputCharCountIndex18=0\n    local\
    \ outputCharIndex19=0\n    local outputCharCountIndex19=0\n    local outputCharIndex20=0\n\
    \    local outputCharCountIndex20=0\n    local outputCharIndex21=0\n    local\
    \ outputCharCountIndex21=0\n    local outputCharIndex22=0\n    local outputCharCountIndex22=0\n\
    \    local outputCharIndex23=0\n    local outputCharCountIndex23=0\n    local\
    \ outputCharIndex24=0\n    local outputCharCountIndex24=0\n    local output\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowelsCount=0\n    local lettersCount=0\n    local encodedMessage=\"\
    \"\n    local encodedLetter=\"\"\n    local encodedVowel=\"\"\n    local encodedLetterIndex=0\n\
    \    local encodedVowelIndex=0\n    local encodedVowelIndex2=0\n    local encodedVowelIndex3=0\n\
    \    local encodedVowelIndex4=0\n    local encodedVowelIndex5=0\n    local encodedVowelIndex6=0\n\
    \    local encodedVowelIndex7=0\n    local encodedVowelIndex8=0\n    local encodedVowelIndex9=0\n\
    \    local encodedVowelIndex10=0\n    local encodedVowelIndex11=0\n    local encodedVowelIndex12=0\n\
    \    local encodedVowelIndex13=0\n    local encodedVowelIndex14=0\n    local encodedVowelIndex15=0\n\
    \    local encodedVowelIndex16=0\n    local encodedVowelIndex17=0\n    local encodedVowelIndex18=0\n\
    \    local encodedVowelIndex19=0\n    local encodedVowelIndex20=0\n    local encodedVowelIndex21=0\n\
    \    local encodedVowelIndex22=0\n    local encodedVowelIndex23=0\n    local encodedVowelIndex24=0\n\
    \    local encodedVowelIndex25=0\n    local encodedVowelIndex26=0\n    local encodedVowelIndex27=0\n\
    \    local encodedVowelIndex28=0\n    local encodedVowelIndex29=0\n    local encodedVowelIndex30=0\n\
    \    local encodedVowelIndex31=0\n    local encodedVowelIndex32=0\n    local encodedVowelIndex33=0\n\
    \    local encodedVowelIndex34=0\n    local encodedVowelIndex35=0\n    local encodedVowelIndex36=0\n\
    \    local encodedVowelIndex37=0\n    local encodedVowelIndex38=0\n    local encodedVowelIndex39=0\n\
    \    local encodedVowelIndex40=0\n    local encodedVowelIndex41=0\n    local encodedVowelIndex42=0\n\
    \    local encodedV\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowelCount=0\n    local vowelPosition=0\n    local\
    \ currentLetter\n    local currentVowel\n    local currentVowelPosition\n    local\
    \ currentVowelPosition2\n    local currentVowelPosition3\n    local currentVowelPosition4\n\
    \    local currentVowelPosition5\n    local currentVowelPosition6\n    local currentVowelPosition7\n\
    \    local currentVowelPosition8\n    local currentVowelPosition9\n    local currentVowelPosition10\n\
    \    local currentVowelPosition11\n    local currentVowelPosition12\n    local\
    \ currentVowelPosition13\n    local currentVowelPosition14\n    local currentVowelPosition15\n\
    \    local currentVowelPosition16\n    local currentVowelPosition17\n    local\
    \ currentVowelPosition18\n    local currentVowelPosition19\n    local currentVowelPosition20\n\
    \    local currentVowelPosition21\n    local currentVowelPosition22\n    local\
    \ currentVowelPosition23\n    local currentVowelPosition24\n    local currentVowelPosition25\n\
    \    local currentVowelPosition26\n    local currentVowelPosition27\n    local\
    \ currentVowelPosition28\n    local currentVowelPosition29\n    local currentVowelPosition30\n\
    \    local currentVowelPosition31\n    local currentVowelPosition32\n    local\
    \ currentVowelPosition33\n    local currentVowelPosition34\n    local currentVowelPosition35\n\
    \    local currentVowelPosition36\n    local currentVowelPosition37\n    local\
    \ currentVowelPosition38\n    local currentVowelPosition39\n    local currentVowelPosition40\n\
    \    local currentVowelPosition41\n    local currentVowelPosition42\n    local\
    \ currentVowelPosition43\n    local currentVowelPosition44\n    local currentVowelPosition45\n\
    \    local currentVowelPosition46\n    local currentVowelPosition47\n    local\
    \ currentVowelPosition48\n    local currentVowelPosition49\n    local currentVowelPosition50\n\
    \    local currentVowelPosition51\n    local currentVowelPosition52\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentVowel\n    local currentLetter\n    local currentLetterIndex\n    local\
    \ currentLetterCount\n    local currentLetterIndex2\n    local currentLetterCount2\n\
    \    local currentLetterIndex3\n    local currentLetterCount3\n    local currentLetterIndex4\n\
    \    local currentLetterCount4\n    local currentLetterIndex5\n    local currentLetterCount5\n\
    \    local currentLetterIndex6\n    local currentLetterCount6\n    local currentLetterIndex7\n\
    \    local currentLetterCount7\n    local currentLetterIndex8\n    local currentLetterCount8\n\
    \    local currentLetterIndex9\n    local currentLetterCount9\n    local currentLetterIndex10\n\
    \    local currentLetterCount10\n    local currentLetterIndex11\n    local currentLetterCount11\n\
    \    local currentLetterIndex12\n    local currentLetterCount12\n    local currentLetterIndex13\n\
    \    local currentLetterCount13\n    local currentLetterIndex14\n    local currentLetterCount14\n\
    \    local currentLetterIndex15\n    local currentLetterCount15\n    local currentLetterIndex16\n\
    \    local currentLetterCount16\n    local currentLetterIndex17\n    local currentLetterCount17\n\
    \    local currentLetterIndex18\n    local currentLetterCount18\n    local currentLetterIndex19\n\
    \    local currentLetterCount19\n    local currentLetterIndex20\n    local currentLetterCount20\n\
    \    local currentLetterIndex21\n    local currentLetterCount21\n    local currentLetterIndex22\n\
    \    local currentLetterCount22\n    local currentLetterIndex23\n    local currentLetterCount23\n\
    \    local currentLetterIndex24\n    local currentLetterCount24\n    local currentLetterIndex25\n\
    \    local currentLetterCount25\n    local currentLetterIndex26\n    local currentLetterCount26\n\
    \    local currentLetterIndex27\n    local currentLetterCount27\n    local currentLetterIndex28\n\
    \    local currentLetterCount28\n    local currentLetterIndex29\n    local currentLetterCount29\n\
    \    local currentLetterIndex30\n    local currentLetterCount30\n    local currentLetterIndex31\n\
    \    local currentLetterCount31\n    local currentLetterIndex32\n    local currentLetterCount32\n\
    \    local currentLetterIndex33\n    local currentLetterCount33\n    local currentLetterIndex34\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local letterIndex=0\n    local letterPosition=0\n    local\
    \ letterCount=0\n    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    local letterPosition=0\n\
    \    local letter=\"\"\n    local letterCount=0\n    \n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowelsCount=0\n \
    \   local lettersCount=0\n    local encodedMessage=\"\"\n    local encodedLetter=\"\
    \"\n    local encodedVowel=\"\"\n    local encodedLetterCount=0\n    local encodedVowelCount=0\n\
    \    local encodedVowel2=\"\"\n    local encodedVowel3=\"\"\n    local encodedVowel4=\"\
    \"\n    local encodedVowel5=\"\"\n    local encodedVowel6=\"\"\n    local encodedVowel7=\"\
    \"\n    local encodedVowel8=\"\"\n    local encodedVowel9=\"\"\n    local encodedVowel10=\"\
    \"\n    local encodedVowel11=\"\"\n    local encodedVowel12=\"\"\n    local encodedVowel13=\"\
    \"\n    local encodedVowel14=\"\"\n    local encodedVowel15=\"\"\n    local encodedVowel16=\"\
    \"\n    local encodedVowel17=\"\"\n    local encodedVowel18=\"\"\n    local encodedVowel19=\"\
    \"\n    local encodedVowel20=\"\"\n    local encodedVowel21=\"\"\n    local encodedVowel22=\"\
    \"\n    local encodedVowel23=\"\"\n    local encodedVowel24=\"\"\n    local encodedVowel25=\"\
    \"\n    local encodedVowel26=\"\"\n    local encodedVowel27=\"\"\n    local encodedVowel28=\"\
    \"\n    local encodedVowel29=\"\"\n    local encodedVowel30=\"\"\n    local encodedVowel31=\"\
    \"\n    local encodedVowel32=\"\"\n    local encodedVowel33=\"\"\n    local encodedVowel34=\"\
    \"\n    local encodedVowel35=\"\"\n    local encodedVowel36=\"\"\n    local encodedVowel37=\"\
    \"\n    local encodedVowel38=\"\"\n    local encodedVowel39=\"\"\n    local encodedVowel40=\"\
    \"\n    local encodedVowel41=\"\"\n    local encodedVowel42=\"\"\n    local encodedVowel43=\"\
    \"\n    local encodedVowel44=\"\"\n    local encodedVowel45=\"\"\n    local encodedVowel46=\"\
    \"\n    local encodedVowel47=\"\"\n    local encodedVowel48=\"\"\n    local encodedVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local i\n    local j\n    local k\n    local vowel\n\
    \    local vowel2\n    local vowel3\n    local vowel4\n    local vowel5\n    local\
    \ vowel6\n    local vowel7\n    local vowel8\n    local vowel9\n    local vowel10\n\
    \    local vowel11\n    local vowel12\n    local vowel13\n    local vowel14\n\
    \    local vowel15\n    local vowel16\n    local vowel17\n    local vowel18\n\
    \    local vowel19\n    local vowel20\n    local vowel21\n    local vowel22\n\
    \    local vowel23\n    local vowel24\n    local vowel25\n    local vowel26\n\
    \    local vowel27\n    local vowel28\n    local vowel29\n    local vowel30\n\
    \    local vowel31\n    local vowel32\n    local vowel33\n    local vowel34\n\
    \    local vowel35\n    local vowel36\n    local vowel37\n    local vowel38\n\
    \    local vowel39\n    local vowel40\n    local vowel41\n    local vowel42\n\
    \    local vowel43\n    local vowel44\n    local vowel45\n    local vowel46\n\
    \    local vowel47\n    local vowel48\n    local vowel49\n    local vowel50\n\
    \    local vowel51\n    local vowel52\n    local vowel53\n    local vowel54\n\
    \    local vowel55\n    local vowel56\n    local vowel57\n    local vowel58\n\
    \    local vowel59\n    local vowel60\n    local vowel61\n    local vowel62\n\
    \    local vowel63\n    local vowel64\n    local vowel65\n    local vowel66\n\
    \    local vowel67\n    local vowel68\n    local vowel69\n    local vowel70\n\
    \    local vowel71\n    local vowel72\n    local vowel73\n    local vowel74\n\
    \    local vowel75\n    local vowel76\n    local vowel77\n    local vowel78\n\
    \    local vowel79\n    local vowel80\n    local vowel81\n    local vowel82\n\
    \    local vowel83\n    local vowel84\n    local vowel85\n    local vowel86\n\
    \    local vowel87\n    local vowel88\n    local vowel89\n    local vowel90\n\
    \    local vowel91\n    local vowel92\n    local vowel93\n    local vowel94\n\
    \    local vowel95\n    local vowel96\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelIndex=0\n    local vowelCount=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter\n    local letterCount2\n\
    \    local letter2\n    local letterIndex2\n    local letter2Index\n    local\
    \ letter2Count\n    local letter2Count2\n    local letter2Index2\n    local letter2Index2\n\
    \    local letter2Count2\n    local letter2Count2\n    local letter2Index2\n \
    \   local letter2Index2\n    local letter2Count2\n    local letter2Index2\n  \
    \  local letter2Count2\n    local letter2Index2\n    local letter2Count2\n   \
    \ local letter2Index2\n    local letter2Count2\n    local letter2Index2\n    local\
    \ letter2Count2\n    local letter2Index2\n    local letter2Count2\n    local letter2Index2\n\
    \    local letter2Count2\n    local letter2Index2\n    local letter2Count2\n \
    \   local letter2Index2\n    local letter2Count2\n    local letter2Index2\n  \
    \  local letter2Count2\n    local letter2Index2\n    local letter2Count2\n   \
    \ local letter2Index2\n    local letter2Count2\n    local letter2Index2\n    local\
    \ letter2Count2\n    local letter2Index2\n    local letter2Count2\n    local letter2Index2\n\
    \    local letter2Count2\n    local letter2Index2\n    local letter2Count2\n \
    \   local letter2Index2\n    local letter2Count2\n    local letter2Index2\n  \
    \  local letter2Count2\n    local letter2Index2\n    local letter2Count2\n   \
    \ local letter2Index2\n    local letter2Count2\n    local letter2Index2\n    local\
    \ letter2Count2\n    local letter2Index2\n    local letter2Count2\n    local letter2Index2\n\
    \    local letter2Count2\n    local letter2Index2\n    local letter2Count2\n \
    \   local letter2Index2\n    local letter2Count2\n    local letter2Index2\n  \
    \  local letter2Count2\n    local letter2Index2\n    local letter2Count2\n   \
    \ local letter2Index2\n    local letter2Count2\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter=''\n    local currentVowel=''\n   \
    \ local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    \    local currentVowelPosition=0\n    local currentVowelCount=0\n    local currentVowelIndex=0\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local result=\"\"\n  local vowelCount=0\n\
    \  local letterCount=0\n  local letterIndex=0\n  local vowelIndex=0\n  local letter\n\
    \  local vowel\n  local letter2\n  local vowel2\n  local letter3\n  local vowel3\n\
    \  local letter4\n  local vowel4\n  local letter5\n  local vowel5\n  local letter6\n\
    \  local vowel6\n  local letter7\n  local vowel7\n  local letter8\n  local vowel8\n\
    \  local letter9\n  local vowel9\n  local letter10\n  local vowel10\n  local letter11\n\
    \  local vowel11\n  local letter12\n  local vowel12\n  local letter13\n  local\
    \ vowel13\n  local letter14\n  local vowel14\n  local letter15\n  local vowel15\n\
    \  local letter16\n  local vowel16\n  local letter17\n  local vowel17\n  local\
    \ letter18\n  local vowel18\n  local letter19\n  local vowel19\n  local letter20\n\
    \  local vowel20\n  local letter21\n  local vowel21\n  local letter22\n  local\
    \ vowel22\n  local letter23\n  local vowel23\n  local letter24\n  local vowel24\n\
    \  local letter25\n  local vowel25\n  local letter26\n  local vowel26\n  local\
    \ letter27\n  local vowel27\n  local letter28\n  local vowel28\n  local letter29\n\
    \  local vowel29\n  local letter30\n  local vowel30\n  local letter31\n  local\
    \ vowel31\n  local letter32\n  local vowel32\n  local letter33\n  local vowel33\n\
    \  local letter34\n  local vowel34\n  local letter35\n  local vowel35\n  local\
    \ letter36\n  local vowel36\n  local letter37\n  local vowel37\n  local letter38\n\
    \  local vowel38\n  local letter39\n  local vowel39\n  local letter40\n  local\
    \ vowel40\n  local letter41\n  local vowel41\n  local letter42\n  local vowel42\n\
    \  local letter43\n  local vowel43\n  local letter44\n  local vowel44\n  local\
    \ letter45\n  local vowel45\n  \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local vowel_positions=\"\
    \"\n    local letter_positions=\"\"\n    local new_message=\"\"\n    local vowel_position=\"\
    \"\n    local letter_position=\"\"\n    local vowel_letter=\"\"\n    local letter_letter=\"\
    \"\n    local vowel_letter2=\"\"\n    local letter_letter2=\"\"\n    local vowel_letter3=\"\
    \"\n    local letter_letter3=\"\"\n    local vowel_letter4=\"\"\n    local letter_letter4=\"\
    \"\n    local vowel_letter5=\"\"\n    local letter_letter5=\"\"\n    local vowel_letter6=\"\
    \"\n    local letter_letter6=\"\"\n    local vowel_letter7=\"\"\n    local letter_letter7=\"\
    \"\n    local vowel_letter8=\"\"\n    local letter_letter8=\"\"\n    local vowel_letter9=\"\
    \"\n    local letter_letter9=\"\"\n    local vowel_letter10=\"\"\n    local letter_letter10=\"\
    \"\n    local vowel_letter11=\"\"\n    local letter_letter11=\"\"\n    local vowel_letter12=\"\
    \"\n    local letter_letter12=\"\"\n    local vowel_letter13=\"\"\n    local letter_letter13=\"\
    \"\n    local vowel_letter14=\"\"\n    local letter_letter14=\"\"\n    local vowel_letter15=\"\
    \"\n    local letter_letter15=\"\"\n    local vowel_letter16=\"\"\n    local letter_letter16=\"\
    \"\n    local vowel_letter17=\"\"\n    local letter_letter17=\"\"\n    local vowel_letter18=\"\
    \"\n    local letter_letter18=\"\"\n    local vowel_letter19=\"\"\n    local letter_letter19=\"\
    \"\n    local vowel_letter20=\"\"\n    local letter_letter20=\"\"\n    local vowel_letter21=\"\
    \"\n    local letter_letter21=\"\"\n    local vowel_letter22=\"\"\n    local letter_letter22=\"\
    \"\n    local vowel_letter23=\"\"\n    local letter_letter23=\"\"\n    local vowel_letter24=\"\
    \"\n    local letter_letter24=\"\"\n    local vowel_letter25=\"\"\n    local letter_letter25=\"\
    \"\n    local vowel_letter26=\"\"\n    local letter_letter26=\"\"\n    local vowel_letter27=\"\
    \"\n    local letter_letter27=\"\"\n    local vowel_letter28=\"\"\n    local letter_letter28=\"\
    \"\n    local vowel_letter29=\"\"\n    local letter_letter29=\"\"\n    local vowel_letter30=\"\
    \"\n    local letter_\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local letters_2=\"bcdfghjklmnpqrstvwxyz\"\
    \n  local vowels_2=\"AEIOUaeiou\"\n  local vowels_3=\"AEIOUaeiou\"\n  local vowels_4=\"\
    AEIOUaeiou\"\n  local vowels_5=\"AEIOUaeiou\"\n  local vowels_6=\"AEIOUaeiou\"\
    \n  local vowels_7=\"AEIOUaeiou\"\n  local vowels_8=\"AEIOUaeiou\"\n  local vowels_9=\"\
    AEIOUaeiou\"\n  local vowels_10=\"AEIOUaeiou\"\n  local vowels_11=\"AEIOUaeiou\"\
    \n  local vowels_12=\"AEIOUaeiou\"\n  local vowels_13=\"AEIOUaeiou\"\n  local\
    \ vowels_14=\"AEIOUaeiou\"\n  local vowels_15=\"AEIOUaeiou\"\n  local vowels_16=\"\
    AEIOUaeiou\"\n  local vowels_17=\"AEIOUaeiou\"\n  local vowels_18=\"AEIOUaeiou\"\
    \n  local vowels_19=\"AEIOUaeiou\"\n  local vowels_20=\"AEIOUaeiou\"\n  local\
    \ vowels_21=\"AEIOUaeiou\"\n  local vowels_22=\"AEIOUaeiou\"\n  local vowels_23=\"\
    AEIOUaeiou\"\n  local vowels_24=\"AEIOUaeiou\"\n  local vowels_25=\"AEIOUaeiou\"\
    \n  local vowels_26=\"AEIOUaeiou\"\n  local vowels_27=\"AEIOUaeiou\"\n  local\
    \ vowels_28=\"AEIOUaeiou\"\n  local vowels_29=\"AEIOUaeiou\"\n  local vowels_30=\"\
    AEIOUaeiou\"\n  local vowels_31=\"AEIOUaeiou\"\n  local vowels_32=\"AEIOUaeiou\"\
    \n  local vowels_33=\"AEIOUaeiou\"\n  local vowels_34=\"AEIOUaeiou\"\n  local\
    \ vowels_35=\"AEIOUaeiou\"\n  local vowels_36=\"AEIOUaeiou\"\n  local vowels_37\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ vowelsCount=$(echo $vowels | wc -w)\n  local vowelsIndex=0\n  local newMessage=\"\
    \"\n  local newMessageIndex=0\n  local newVowelsIndex=0\n  local newVowelsCount=0\n\
    \  local newVowelsChar=\"\"\n  local newVowelsCharIndex=0\n  local newVowelsCharCount=0\n\
    \  local newVowelsCharCountIndex=0\n  local newVowelsCharCountIndexIndex=0\n \
    \ local newVowelsCharCountIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowelsCharCountIndexIndexIndex=0\n\
    \  local newVowelsCharCountIndexIndexIndex=0\n  local newVowels\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsArray=($vowels)\n\
    \    local vowelsArrayCount=${#vowelsArray[@]}\n    local vowelsArrayIndex=0\n\
    \    local vowelsArrayIndex2=0\n    local vowelsArrayIndex3=0\n    local vowelsArrayIndex4=0\n\
    \    local vowelsArrayIndex5=0\n    local vowelsArrayIndex6=0\n    local vowelsArrayIndex7=0\n\
    \    local vowelsArrayIndex8=0\n    local vowelsArrayIndex9=0\n    local vowelsArrayIndex10=0\n\
    \    local vowelsArrayIndex11=0\n    local vowelsArrayIndex12=0\n    local vowelsArrayIndex13=0\n\
    \    local vowelsArrayIndex14=0\n    local vowelsArrayIndex15=0\n    local vowelsArrayIndex16=0\n\
    \    local vowelsArrayIndex17=0\n    local vowelsArrayIndex18=0\n    local vowelsArrayIndex19=0\n\
    \    local vowelsArrayIndex20=0\n    local vowelsArrayIndex21=0\n    local vowelsArrayIndex22=0\n\
    \    local vowelsArrayIndex23=0\n    local vowelsArrayIndex24=0\n    local vowelsArrayIndex25=0\n\
    \    local vowelsArrayIndex26=0\n    local vowelsArrayIndex27=0\n    local vowelsArrayIndex28=0\n\
    \    local vowelsArrayIndex29=0\n    local vowelsArrayIndex30=0\n    local vowelsArrayIndex31=0\n\
    \    local vowelsArrayIndex32=0\n    local vowelsArrayIndex33=0\n    local vowelsArrayIndex34=0\n\
    \    local vowelsArrayIndex35=0\n    local vowelsArrayIndex36=0\n    local vowelsArrayIndex37=0\n\
    \    local vowelsArrayIndex38=0\n    local vowelsArrayIndex39=0\n    local vowelsArrayIndex40=0\n\
    \    local vowelsArrayIndex41=0\n    local vowelsArrayIndex42=0\n    local vowelsArrayIndex43=0\n\
    \    local vowelsArrayIndex44=0\n    local vowelsArrayIndex45=0\n    local vowelsArrayIndex46=0\n\
    \    local vowelsArrayIndex47=0\n    local vowelsArrayIndex48=0\n    local vowelsArrayIndex49=0\n\
    \    local vowelsArrayIndex50=0\n    local vowelsArrayIndex51=0\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local vowel_count=0\n    local vowel_count_2=0\n    local new_message=\"\"\
    \n    local new_vowel=\"\"\n    local new_vowel_2=\"\"\n    local new_vowel_3=\"\
    \"\n    local new_vowel_4=\"\"\n    local new_vowel_5=\"\"\n    local new_vowel_6=\"\
    \"\n    local new_vowel_7=\"\"\n    local new_vowel_8=\"\"\n    local new_vowel_9=\"\
    \"\n    local new_vowel_10=\"\"\n    local new_vowel_11=\"\"\n    local new_vowel_12=\"\
    \"\n    local new_vowel_13=\"\"\n    local new_vowel_14=\"\"\n    local new_vowel_15=\"\
    \"\n    local new_vowel_16=\"\"\n    local new_vowel_17=\"\"\n    local new_vowel_18=\"\
    \"\n    local new_vowel_19=\"\"\n    local new_vowel_20=\"\"\n    local new_vowel_21=\"\
    \"\n    local new_vowel_22=\"\"\n    local new_vowel_23=\"\"\n    local new_vowel_24=\"\
    \"\n    local new_vowel_25=\"\"\n    local new_vowel_26=\"\"\n    local new_vowel_27=\"\
    \"\n    local new_vowel_28=\"\"\n    local new_vowel_29=\"\"\n    local new_vowel_30=\"\
    \"\n    local new_vowel_31=\"\"\n    local new_vowel_32=\"\"\n    local new_vowel_33=\"\
    \"\n    local new_vowel_34=\"\"\n    local new_vowel_35=\"\"\n    local new_vowel_36=\"\
    \"\n    local new_vowel_37=\"\"\n    local new_vowel_38=\"\"\n    local new_vowel_39=\"\
    \"\n    local new_vowel_40=\"\"\n    local new_vowel_41=\"\"\n    local new_vowel_42=\"\
    \"\n    local new_vowel_43=\"\"\n    local new_vowel_44=\"\"\n    local new_vowel_45=\"\
    \"\n    local new_vowel_46=\"\"\n    local new_vowel_47=\"\"\n    local new_vowel_48=\"\
    \"\n    local new_vowel_49=\"\"\n    local new_vowel_50=\"\"\n    local new_vowel_51=\"\
    \"\n    local new_vowel_52=\"\"\n    local new_vowel_53=\"\"\n    local new_vowel_54=\"\
    \"\n    local new_vowel_55=\"\"\n    local new_vowel_56=\"\"\n    local new_vowel_57=\"\
    \"\n    local new_vowel_58=\"\"\n    local new_vowel_59=\"\"\n    local new_vowel_60=\"\
    \"\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"A E I O U Y\"\n    local output=\"\"\n    for (( i=0; i<${#message};\
    \ i++ )); do\n        local letter=${message:$i:1}\n        local vowel=${vowels:$i:1}\n\
    \        local letter2=${letters:$((i+1)):1}\n        local output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${output:$output:1} \n    \
    \    output=${output:$output:1} \n        output=${output:$output:1} \n      \
    \  output=${output:$output:1} \n        output=${output:$output:1} \n        output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${output:$output:1} \n    \
    \    output=${output:$output:1} \n        output=${output:$output:1} \n      \
    \  output=${output:$output:1} \n        output=${output:$output:1} \n        output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${output:$output:1} \n    \
    \    output=${output:$output:1} \n        output=${output:$output:1} \n      \
    \  output=${output:$output:1} \n        output=${output:$output:1} \n        output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${output:$output:1} \n    \
    \    output=${output:$output:1} \n        output=${output:$output:1} \n      \
    \  output=${output:$output:1} \n        output=${output:$output:1} \n        output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${output:$output:1} \n    \
    \    output=${output:$output:1} \n        output=${output:$output:1} \n      \
    \  output=${output:$output:1} \n        output=${output:$output:1} \n        output=${output:$output:1}\
    \ \n        output=${output:$output:1} \n        output=${output:$output:1} \n\
    \        output=${output:$output:1} \n        output=${output:$output:1} \n  \
    \      output=${output:$output:1} \n        output=${\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_3fpjmn2.sh: line 101: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowelsCount=$(echo $vowels | wc -w)\n    local vowelsIndex=$(echo $vowels\
    \ | awk '{print $1}')\n    local vowelsIndex2=$(echo $vowels | awk '{print $2}')\n\
    \    local vowelsIndex3=$(echo $vowels | awk '{print $3}')\n    local vowelsIndex4=$(echo\
    \ $vowels | awk '{print $4}')\n    local vowelsIndex5=$(echo $vowels | awk '{print\
    \ $5}')\n    local vowelsIndex6=$(echo $vowels | awk '{print $6}')\n    local\
    \ vowelsIndex7=$(echo $vowels | awk '{print $7}')\n    local vowelsIndex8=$(echo\
    \ $vowels | awk '{print $8}')\n    local vowelsIndex9=$(echo $vowels | awk '{print\
    \ $9}')\n    local vowelsIndex10=$(echo $vowels | awk '{print $10}')\n    local\
    \ vowelsIndex11=$(echo $vowels | awk '{print $11}')\n    local vowelsIndex12=$(echo\
    \ $vowels | awk '{print $12}')\n    local vowelsIndex13=$(echo $vowels | awk '{print\
    \ $13}')\n    local vowelsIndex14=$(echo $vowels | awk '{print $14}')\n    local\
    \ vowelsIndex15=$(echo $vowels | awk '{print $15}')\n    local vowelsIndex16=$(echo\
    \ $vowels | awk '{print $16}')\n    local vowelsIndex17=$(echo $vowels | awk '{print\
    \ $17}')\n    local vowelsIndex18=$(echo $vowels | awk '{print $18}')\n    local\
    \ vowelsIndex19=$(echo $vowels | awk '{print $19}')\n    local vowelsIndex20=$(echo\
    \ $vowels | awk '{print $20}')\n    local vowelsIndex21=$(echo $vowels | awk '{print\
    \ $21}')\n    local vowelsIndex22=$(echo $vowels | awk '{print $22}')\n    local\
    \ vowelsIndex23=$(echo $vowels | awk '{print $23}')\n    local vowelsIndex24=$(echo\
    \ $vowels | awk '{print $24}')\n    local vowelsIndex25=$(echo $vowels | awk '{print\
    \ $25}')\n    local vowelsIndex26=$(echo $vowels | awk '{print $26}')\n    local\
    \ vowelsIndex27=$(echo $vowels | awk '{print $27}')\n    local vowelsIndex28=$(echo\
    \ $vowels | awk '{print $28}')\n    local vowelsIndex29\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local letters=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n\
    \    local vowel_count=0\n    local letter_count=0\n    local new_message=\"\"\
    \n    local vowel_position=0\n    local letter_position=0\n    local new_letter=\"\
    \"\n    local new_vowel=\"\"\n    local new_letter_index=0\n    local new_vowel_index=0\n\
    \    local new_vowel_position=0\n    local new_letter_position=0\n    local new_vowel_letter=\"\
    \"\n    local new_letter_vowel=\"\"\n    local new_letter_vowel_index=0\n    local\
    \ new_letter_vowel_position=0\n    local new_letter_vowel_letter=\"\"\n    local\
    \ new_letter_vowel_letter_index=0\n    local new_letter_vowel_letter_position=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \    local new_letter_vowel_letter_position_index=0\n    local new_letter_vowel_letter_position_index=0\n\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local result=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=''\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelPosition=0\n    local currentLetter\n    local previousLetter\n    local\
    \ currentVowel\n    local previousVowel\n    local currentVowelPosition\n    local\
    \ previousVowelPosition\n    local currentVowelPosition2\n    local previousVowelPosition2\n\
    \    local currentVowelPosition3\n    local previousVowelPosition3\n    local\
    \ currentVowelPosition4\n    local previousVowelPosition4\n    local currentVowelPosition5\n\
    \    local previousVowelPosition5\n    local currentVowelPosition6\n    local\
    \ previousVowelPosition6\n    local currentVowelPosition7\n    local previousVowelPosition7\n\
    \    local currentVowelPosition8\n    local previousVowelPosition8\n    local\
    \ currentVowelPosition9\n    local previousVowelPosition9\n    local currentVowelPosition10\n\
    \    local previousVowelPosition10\n    local currentVowelPosition11\n    local\
    \ previousVowelPosition11\n    local currentVowelPosition12\n    local previousVowelPosition12\n\
    \    local currentVowelPosition13\n    local previousVowelPosition13\n    local\
    \ currentVowelPosition14\n    local previousVowelPosition14\n    local currentVowelPosition15\n\
    \    local previousVowelPosition15\n    local currentVowelPosition16\n    local\
    \ previousVowelPosition16\n    local currentVowelPosition17\n    local previousVowelPosition17\n\
    \    local currentVowelPosition18\n    local previousVowelPosition18\n    local\
    \ currentVowelPosition19\n    local previousVowelPosition19\n    local currentVowelPosition20\n\
    \    local previousVowelPosition20\n    local currentVowelPosition21\n    local\
    \ previousVowelPosition21\n    local currentVowelPosition22\n    local previousVowelPosition22\n\
    \    local currentVowelPosition23\n    local previousVowelPosition23\n    local\
    \ currentVowelPosition24\n    local previousVowelPosition24\n    local currentVowelPosition25\n\
    \    local previousVowelPosition25\n\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local currentLetter=\"\"\n\
    \    local currentVowel=\"\"\n    local currentVowel2=\"\"\n    local currentVowel3=\"\
    \"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\"\n    local currentVowel6=\"\
    \"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\"\n    local currentVowel9=\"\
    \"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\"\n    local currentVowel12=\"\
    \"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\"\n    local currentVowel15=\"\
    \"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\"\n    local currentVowel18=\"\
    \"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\"\n    local currentVowel21=\"\
    \"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\"\n    local currentVowel24=\"\
    \"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\"\n    local currentVowel27=\"\
    \"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\"\n    local currentVowel30=\"\
    \"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\"\n    local currentVowel33=\"\
    \"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\"\n    local currentVowel36=\"\
    \"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\"\n    local currentVowel39=\"\
    \"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\"\n    local currentVowel42=\"\
    \"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\"\n    local currentVowel45=\"\
    \"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\"\n    local currentVowel48=\"\
    \"\n    local currentVowel49=\"\"\n    local currentVowel50=\"\"\n    local currentVowel\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local msg=$1\n  local vowels=\"a e i o u y\"\n  local\
    \ vowel_positions=$(echo $msg | tr ' ' '\\n' | sort | uniq -u | sort -n)\n  local\
    \ vowel_positions_sorted=$(echo $vowel_positions | tr ' ' '\\n' | sort -n)\n \
    \ local vowel_positions_sorted_reverse=$(echo $vowel_positions_sorted | rev |\
    \ tr ' ' '\\n' | sort -n)\n  local vowel_positions_sorted_reverse_count=$(echo\
    \ $vowel_positions_sorted_reverse | wc -l)\n  local vowel_positions_sorted_reverse_last=$(echo\
    \ $vowel_positions_sorted_reverse | tail -1)\n  local vowel_positions_sorted_reverse_last_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | wc -l)\n  local vowel_positions_sorted_reverse_last_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -1)\n  local vowel_positions_sorted_reverse_last_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -2)\n  local vowel_positions_sorted_reverse_last_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -3)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -4)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -5)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -6)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -7)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev | grep $vowel_positions_sorted_reverse_last\
    \ | tail -8)\n  local vowel_positions_sorted_reverse_last_position_position_position_position_position_position_position_position=$(echo\
    \ $vowel_positions_sorted_reverse | rev\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbs2kkzqs.sh: line 31: unexpected EOF while looking for matching
    `)''

    /tmp/tmpbs2kkzqs.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local i\n    local j\n    local k\n    local l\n \
    \   local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"a e i o u y\"\
    \n    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowelIndex=0\n\
    \    local currentVowelCount=0\n    local currentVowelIndex2=0\n    local currentVowelCount2=0\n\
    \    local currentVowelIndex3=0\n    local currentVowelCount3=0\n    local currentVowelIndex4=0\n\
    \    local currentVowelCount4=0\n    local currentVowelIndex5=0\n    local currentVowelCount5=0\n\
    \    local currentVowelIndex6=0\n    local currentVowelCount6=0\n    local currentVowelIndex7=0\n\
    \    local currentVowelCount7=0\n    local currentVowelIndex8=0\n    local currentVowelCount8=0\n\
    \    local currentVowelIndex9=0\n    local currentVowelCount9=0\n    local currentVowelIndex10=0\n\
    \    local currentVowelCount10=0\n    local currentVowelIndex11=0\n    local currentVowelCount11=0\n\
    \    local currentVowelIndex12=0\n    local currentVowelCount12=0\n    local currentVowelIndex13=0\n\
    \    local currentVowelCount13=0\n    local currentVowelIndex14=0\n    local currentVowelCount14=0\n\
    \    local currentVowelIndex15=0\n    local currentVowelCount15=0\n    local currentVowelIndex16=0\n\
    \    local currentVowelCount16=0\n    local currentVowelIndex17=0\n    local currentVowelCount17=0\n\
    \    local currentVowelIndex18=0\n    local currentVowelCount18=0\n    local currentVowelIndex19=0\n\
    \    local currentVowelCount19=0\n    local currentVowelIndex20=0\n    local currentVowelCount20=0\n\
    \    local currentVowelIndex21=0\n    local currentVowelCount21=0\n    local currentVowelIndex22=0\n\
    \    local currentVowelCount22=0\n    local currentVowelIndex23=0\n    local currentVowelCount23=0\n\
    \    local currentVowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local output=\"\"\n    local count=0\n    local vowelCount=0\n    local letterCount=0\n\
    \    local letterIndex=0\n    local vowelIndex=0\n    local letterChar\n    local\
    \ vowelChar\n    local outputChar\n    local i\n    local j\n    local k\n   \
    \ local l\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local letterCount=0\n    local\
    \ currentLetter=\"\"\n    local currentVowel=\"\"\n    local currentVowel2=\"\"\
    \n    local currentVowel3=\"\"\n    local currentVowel4=\"\"\n    local currentVowel5=\"\
    \"\n    local currentVowel6=\"\"\n    local currentVowel7=\"\"\n    local currentVowel8=\"\
    \"\n    local currentVowel9=\"\"\n    local currentVowel10=\"\"\n    local currentVowel11=\"\
    \"\n    local currentVowel12=\"\"\n    local currentVowel13=\"\"\n    local currentVowel14=\"\
    \"\n    local currentVowel15=\"\"\n    local currentVowel16=\"\"\n    local currentVowel17=\"\
    \"\n    local currentVowel18=\"\"\n    local currentVowel19=\"\"\n    local currentVowel20=\"\
    \"\n    local currentVowel21=\"\"\n    local currentVowel22=\"\"\n    local currentVowel23=\"\
    \"\n    local currentVowel24=\"\"\n    local currentVowel25=\"\"\n    local currentVowel26=\"\
    \"\n    local currentVowel27=\"\"\n    local currentVowel28=\"\"\n    local currentVowel29=\"\
    \"\n    local currentVowel30=\"\"\n    local currentVowel31=\"\"\n    local currentVowel32=\"\
    \"\n    local currentVowel33=\"\"\n    local currentVowel34=\"\"\n    local currentVowel35=\"\
    \"\n    local currentVowel36=\"\"\n    local currentVowel37=\"\"\n    local currentVowel38=\"\
    \"\n    local currentVowel39=\"\"\n    local currentVowel40=\"\"\n    local currentVowel41=\"\
    \"\n    local currentVowel42=\"\"\n    local currentVowel43=\"\"\n    local currentVowel44=\"\
    \"\n    local currentVowel45=\"\"\n    local currentVowel46=\"\"\n    local currentVowel47=\"\
    \"\n    local currentVowel48=\"\"\n    local currentVowel49=\"\"\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local result=\"\"\n   \
    \ local vowel\n    local letter\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local vowels_2=\"AEIOUaeiou\"\n    local vowels_3=\"AEIOUaeiouAEIOU\"\n \
    \   local vowels_4=\"AEIOUaeiouAEIOUaeiou\"\n    local vowels_5=\"AEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_6=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowels_7=\"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local vowels_8=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_9=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_10=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local\
    \ vowels_11=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\n    local\
    \ vowels_12=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n\
    \    local vowels_13=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_14=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_15=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    \n    local vowels_16=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    \n    local vowels_17=\"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq20445q2.sh: line 45: unexpected EOF while looking for matching
    `"''

    /tmp/tmpq20445q2.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelPosition=0\n  \
    \  local vowelPosition2=0\n    local vowelPosition3=0\n    local vowelPosition4=0\n\
    \    local vowelPosition5=0\n    local vowelPosition6=0\n    local vowelPosition7=0\n\
    \    local vowelPosition8=0\n    local vowelPosition9=0\n    local vowelPosition10=0\n\
    \    local vowelPosition11=0\n    local vowelPosition12=0\n    local vowelPosition13=0\n\
    \    local vowelPosition14=0\n    local vowelPosition15=0\n    local vowelPosition16=0\n\
    \    local vowelPosition17=0\n    local vowelPosition18=0\n    local vowelPosition19=0\n\
    \    local vowelPosition20=0\n    local vowelPosition21=0\n    local vowelPosition22=0\n\
    \    local vowelPosition23=0\n    local vowelPosition24=0\n    local vowelPosition25=0\n\
    \    local vowelPosition26=0\n    local vowelPosition27=0\n    local vowelPosition28=0\n\
    \    local vowelPosition29=0\n    local vowelPosition30=0\n    local vowelPosition31=0\n\
    \    local vowelPosition32=0\n    local vowelPosition33=0\n    local vowelPosition34=0\n\
    \    local vowelPosition35=0\n    local vowelPosition36=0\n    local vowelPosition37=0\n\
    \    local vowelPosition38=0\n    local vowelPosition39=0\n    local vowelPosition40=0\n\
    \    local vowelPosition41=0\n    local vowelPosition42=0\n    local vowelPosition43=0\n\
    \    local vowelPosition44=0\n    local vowelPosition45=0\n    local vowelPosition46=0\n\
    \    local vowelPosition47=0\n    local vowelPosition48=0\n    local vowelPosition49=0\n\
    \    local vowelPosition50=0\n    local vowelPosition51=0\n    local vowelPosition52=0\n\
    \    local vowelPosition53=0\n    local vowelPosition54=0\n    local vowelPosition55=0\n\
    \    local vowelPosition56=0\n    local vowelPosition57=0\n    local vowelPosition58=0\n\
    \    local vowelPosition59=0\n    local vowelPosition60=0\n    local vowelPosition61=0\n\
    \    local vowelPosition62=0\n    local vowelPosition63=0\n    local vowelPosition64=0\n\
    \    local vowelPosition65=0\n    local vowelPosition66=0\n    local vowelPosition67=0\n\
    \    local vowelPosition68=0\n    local vowelPosition69=0\n    local \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyz\"\n    local output=\"\"\n   \
    \ local vowelCount=0\n    local letterCount=0\n    local letterIndex=0\n    local\
    \ vowelIndex=0\n    local letter\n    local vowel\n    local letter2\n    local\
    \ vowel2\n    local letter3\n    local vowel3\n    local letter4\n    local vowel4\n\
    \    local letter5\n    local vowel5\n    local letter6\n    local vowel6\n  \
    \  local letter7\n    local vowel7\n    local letter8\n    local vowel8\n    local\
    \ letter9\n    local vowel9\n    local letter10\n    local vowel10\n    local\
    \ letter11\n    local vowel11\n    local letter12\n    local vowel12\n    local\
    \ letter13\n    local vowel13\n    local letter14\n    local vowel14\n    local\
    \ letter15\n    local vowel15\n    local letter16\n    local vowel16\n    local\
    \ letter17\n    local vowel17\n    local letter18\n    local vowel18\n    local\
    \ letter19\n    local vowel19\n    local letter20\n    local vowel20\n    local\
    \ letter21\n    local vowel21\n    local letter22\n    local vowel22\n    local\
    \ letter23\n    local vowel23\n    local letter24\n    local vowel24\n    local\
    \ letter25\n    local vowel25\n    local letter26\n    local vowel26\n    local\
    \ letter27\n    local vowel27\n    local letter28\n    local vowel28\n    local\
    \ letter29\n    local vowel29\n    local letter30\n    local vowel30\n    local\
    \ letter31\n    local vowel31\n    local letter32\n    local vowel32\n    local\
    \ letter33\n    local vowel33\n    local letter34\n    local vowel34\n    local\
    \ letter35\n    local vowel35\n    local letter36\n    local vowel36\n    local\
    \ letter37\n    local vowel37\n    local letter38\n    local vowel38\n    local\
    \ letter39\n    local vowel39\n    local letter40\n    local vowel40\n    local\
    \ letter41\n    local vowel41\n    local letter42\n    local vowel42\n    local\
    \ letter43\n    local vowel43\n    local letter44\n    local vowel44\n    local\
    \ letter45\n    local vowel45\n    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n  local message=$1\n  local vowels=\"aeiouAEIOU\"\n  local\
    \ letters=\"abcdefghijklmnopqrstuvwxyz\"\n  local output=\"\"\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\n\
    \    local result=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ letterIndex=0\n    local letterCount=0\n    local letter=\"\"\n    local letter2=\"\
    \"\n    local letter3=\"\"\n    local letter4=\"\"\n    local letter5=\"\"\n \
    \   local letter6=\"\"\n    local letter7=\"\"\n    local letter8=\"\"\n    local\
    \ letter9=\"\"\n    local letter10=\"\"\n    local letter11=\"\"\n    local letter12=\"\
    \"\n    local letter13=\"\"\n    local letter14=\"\"\n    local letter15=\"\"\n\
    \    local letter16=\"\"\n    local letter17=\"\"\n    local letter18=\"\"\n \
    \   local letter19=\"\"\n    local letter20=\"\"\n    local letter21=\"\"\n  \
    \  local letter22=\"\"\n    local letter23=\"\"\n    local letter24=\"\"\n   \
    \ local letter25=\"\"\n    local letter26=\"\"\n    local letter27=\"\"\n    local\
    \ letter28=\"\"\n    local letter29=\"\"\n    local letter30=\"\"\n    local letter31=\"\
    \"\n    local letter32=\"\"\n    local letter33=\"\"\n    local letter34=\"\"\n\
    \    local letter35=\"\"\n    local letter36=\"\"\n    local letter37=\"\"\n \
    \   local letter38=\"\"\n    local letter39=\"\"\n    local letter40=\"\"\n  \
    \  local letter41=\"\"\n    local letter42=\"\"\n    local letter43=\"\"\n   \
    \ local letter44=\"\"\n    local letter45=\"\"\n    local letter46=\"\"\n    local\
    \ letter47=\"\"\n    local letter48=\"\"\n    local letter49=\"\"\n    local letter50=\"\
    \"\n    local letter51=\"\"\n    local letter52=\"\"\n    local letter53=\"\"\n\
    \    local letter54=\"\"\n    local letter55=\"\"\n    local letter56=\"\"\n \
    \   local letter57=\"\"\n    local letter58=\"\"\n    local letter59=\"\"\n  \
    \  local letter60=\"\"\n    local letter61=\"\"\n    local letter62=\"\"\n   \
    \ local letter63=\"\"\n    local letter64=\"\"\n    local letter65=\"\"\n    local\
    \ letter66=\"\"\n    local letter67=\"\"\n    local letter68=\"\"\n    local letter69=\"\
    \"\n    local letter70=\"\"\n    local letter71=\"\"\n    local letter72=\"\"\n\
    \    local letter73=\"\"\n    local letter74=\"\"\n    local letter75=\"\"\n \
    \   local letter76=\"\"\n    local letter77=\"\"\n    local letter78=\"\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> encode('test')\n\
    # 'TGST'\n# >>> encode('This is a message')\n# 'tHKS KS C MGSSCGG'\n#\n# $1 is\
    \ a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUaeiou\"\n\
    \    local output=\"\"\n    local vowelCount=0\n    local vowelIndex=0\n    local\
    \ vowelIndex2=0\n    local vowelIndex3=0\n    local vowelIndex4=0\n    local vowelIndex5=0\n\
    \    local vowelIndex6=0\n    local vowelIndex7=0\n    local vowelIndex8=0\n \
    \   local vowelIndex9=0\n    local vowelIndex10=0\n    local vowelIndex11=0\n\
    \    local vowelIndex12=0\n    local vowelIndex13=0\n    local vowelIndex14=0\n\
    \    local vowelIndex15=0\n    local vowelIndex16=0\n    local vowelIndex17=0\n\
    \    local vowelIndex18=0\n    local vowelIndex19=0\n    local vowelIndex20=0\n\
    \    local vowelIndex21=0\n    local vowelIndex22=0\n    local vowelIndex23=0\n\
    \    local vowelIndex24=0\n    local vowelIndex25=0\n    local vowelIndex26=0\n\
    \    local vowelIndex27=0\n    local vowelIndex28=0\n    local vowelIndex29=0\n\
    \    local vowelIndex30=0\n    local vowelIndex31=0\n    local vowelIndex32=0\n\
    \    local vowelIndex33=0\n    local vowelIndex34=0\n    local vowelIndex35=0\n\
    \    local vowelIndex36=0\n    local vowelIndex37=0\n    local vowelIndex38=0\n\
    \    local vowelIndex39=0\n    local vowelIndex40=0\n    local vowelIndex41=0\n\
    \    local vowelIndex42=0\n    local vowelIndex43=0\n    local vowelIndex44=0\n\
    \    local vowelIndex45=0\n    local vowelIndex46=0\n    local vowelIndex47=0\n\
    \    local vowelIndex48=0\n    local vowelIndex49=0\n    local vowelIndex50=0\n\
    \    local vowelIndex51=0\n    local vowelIndex52=0\n    local vowelIndex53=0\n\
    \    local vowelIndex54=0\n    local vowelIndex55=0\n    local vowelIndex56=0\n\
    \    local vowelIndex57=0\n    local vowelIndex58=0\n    local vowelIndex59=0\n\
    \    local vowelIndex60=0\n    local vowelIndex61=0\n    local vowelIndex62=0\n\
    \    local vowelIndex63=0\n    local vowelIndex64=0\n    local vowelIndex65=0\n\
    \    local vowelIndex66=0\n    local vowelIndex67=0\n    local vowelIndex68=0\n\
    \    local vowelIndex69=0\n    local \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026854

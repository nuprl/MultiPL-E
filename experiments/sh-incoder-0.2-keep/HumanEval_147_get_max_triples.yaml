name: HumanEval_147_get_max_triples
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a positive integer n. You have to create an\
  \ integer array a of length n.\n# For each i (1 \u2264 i \u2264 n), the value of\
  \ a[i] = i * i - i + 1.\n# Return the number of triples (a[i], a[j], a[k]) of a\
  \ where i < j < k, \n# and a[i] + a[j] + a[k] is a multiple of 3.\n# Example :\n\
  # Input: n = 5\n# Output: 1\n# Explanation: \n# a = [1, 3, 7, 13, 21]\n# The only\
  \ valid triple is (1, 7, 13).\n#\n# $1 is an integer\nget_max_triples() {\n"
tests: "}\n\ncandidate() {\n    get_max_triples \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\") = \"1\" ]]\n    [[ $(candidate \"6\") = \"4\" ]]\n  \
  \  [[ $(candidate \"10\") = \"36\" ]]\n    [[ $(candidate \"100\") = \"53361\" ]]\n\
  }\n\nrun_test"
completions: ["  local n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n\
    \  a=$( seq 1 $n )\n  for i in $a; do\n    for j in $a; do\n      for k in $a;\
    \ do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          count=$((\
    \ $count + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", " \
    \ local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n\
    \  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n    do\n     \
    \ echo -n $i\n    done))\n  local i\n  local j\n  local k\n  local triples=0\n\
    \  for ((i=1; i<=$n; i++))\n  do\n    for ((j=1; j<=$n; j++))\n    do\n      for\
    \ ((k=1; k<=$n; k++))\n      do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} % 3\
    \ == 0 ))\n        then\n          triples=$((triples + 1))\n        fi\n    \
    \  done\n    done\n  done\n  echo $triples", "  local n=$1\n  local a=($(for ((i=1;\
    \ i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local i\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( $i > $j && $j > $k )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n  local count=0\n\
    \  local triples=0\n  local triple\n  for ((i=1; i<=$n; i++)) ; do\n    for ((j=1;\
    \ j<=$n; j++)) ; do\n      for ((k=1; k<=$n; k++)) ; do\n        triple=$((i*i-1)+j+k)\n\
    \        if (( triple == $((a[i]+a[j]+a[k])) )) ; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n \
    \   local a=($(seq 1 $n))\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ count=0\n    while [ $i -lt $n ]; do\n        if [ $i -eq $j ]; then\n     \
    \       (( count++ ))\n        fi\n        if [ $i -eq $k ]; then\n          \
    \  (( count++ ))\n        fi\n        if [ $i -le $j ] && [ $i -le $k ]; then\n\
    \            (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n\
    \  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k -a $i -le\
    \ $k ]; then\n          count=$((count+1))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++));\
    \ do echo $((i*i - i + 1)); done))\n  local count=0\n  local i\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( i*i - i + 1 + j*j + k )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a\n  local i\n  local j\n  local k\n  local count\n  a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $i*$i-$i+1; done))\n  for i in \"${a[@]}\"; do\n    for j in\
    \ \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i < $j && $j\
    \ < $k && $i < $k )); then\n          count=$(( $count + 1 ))\n        fi\n  \
    \    done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq 1\
    \ $n))\n  local i\n  local j\n  local k\n  local count\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( $i > $j && $i > $k )); then\n          count=$(( $count + 1 ))\n        fi\n\
    \      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local i\n  local j\n  local k\n  local count\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( $i < $j && $j < $k && $i + $j + $k == $n )); then\n          count=$(( $count\
    \ + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n \
    \ for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && k == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || k == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j || i == k || j == k || k == k )); then\n   \
    \       continue\n        fi\n        if (( i == j && j == k && k == k )); then\n\
    \          continue\n        fi\n        if (( i == j && j == k && k == k ));\
    \ then\n          continue\n        fi\n        if (( i == j && j == k && k ==\
    \ k )); then\n          continue\n        fi\n        if (( i == j || i == k ||\
    \ j == k || k == k )); then\n          continue\n        fi\n        if (( i ==\
    \ j && j == k && k == k )); then\n          continue\n        fi\n        if ((\
    \ i == j && j == k && k == k )); then\n          continue\n        fi\n      \
    \  if (( i == j && j == k && k == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k || k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j || i == k || j == k || k == k )); then", " \
    \ local n=$1\n  local a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local\
    \ count\n  local max_count\n  local max_triple\n  \n  for i in \"${a[@]}\"; do\n\
    \    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i\
    \ == $j && $j == $k )); then\n          count=$(( $count + 1 ))\n        fi\n\
    \      done\n    done\n  done\n  \n  max_count=$(( $count / 3 ))\n  max_triple=$((\
    \ $max_count * 3 ))\n  \n  echo $max_triple", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n    ))\n  local i\n  local j\n\
    \  local k\n  local count\n  for i in \"${a[@]}\"\n  do\n    for j in \"${a[@]}\"\
    \n    do\n      for k in \"${a[@]}\"\n      do\n        if (( $i + $j + $k % 3\
    \ == 0 ))\n        then\n          count=$(( $count + 1 ))\n        fi\n     \
    \ done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq 1 $n))\n\
    \  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    local j\n    for\
    \ j in \"${a[@]}\"; do\n      local k\n      for k in \"${a[@]}\"; do\n      \
    \  if (( i*i + j*j + k*k == i*i*i*k )); then\n          count=$(( $count + 1 ))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          let count=$count+1\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)) ; do echo -n $i*$i-$i+1 '\\t' ; done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if (( i*i+j*j+k*k == i*i*j*k )); then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1)+i+1));\
    \ done))\n  local i\n  local j\n  local k\n  local count=0\n  for ((i=0; i<$n;\
    \ i++)); do\n    for ((j=0; j<$n; j++)); do\n      for ((k=0; k<$n; k++)); do\n\
    \        if (( $i == $j && $j == $k )); then\n          continue\n        fi\n\
    \        if (( $a[ $i ] == $a[ $j ] && $a[ $j ] == $a[ $k ] )); then\n       \
    \   count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local count=0\n  local triples=0\n  local triple\n  for ((i=1; i<=$n;\
    \ i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n\
    \        triple=$((${a[i]}+${a[j]}+${a[k]}))\n        if ((triple%3==0)); then\n\
    \          count=$((count+1))\n          triples=$((triples+1))\n        fi\n\
    \      done\n    done\n  done\n  echo $count\n  echo $triples", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i - i + 1)); done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n\
    \          let count=$count+1\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ; do echo -n \"\
    a[\"$i\"]=\"; done))\n  local count=0\n  local i\n  for i in $(seq 1 $n); do\n\
    \    local j\n    for j in $(seq 1 $n); do\n      local k\n      for k in $(seq\
    \ 1 $n); do\n        if (( ${a[$i]} + ${a[$j]} + ${a[$k]} % 3 == 0 )); then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ; do echo -n \"\
    a[\"$i\"]=\"; done))\n  local count=0\n  local i\n  local j\n  local k\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i < j && j < k && k < i )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-i+1))\n    done))\n\
    \  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i*j+k == i*i*k )); then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a\n  a=($(for ((i=1; i<=$n; i++)); do echo $((i\
    \ * i - i + 1)); done))\n  local i\n  local j\n  local k\n  local count\n  for\
    \ i in \"${!a[@]}\"; do\n    for j in \"${!a[@]}\"; do\n      for k in \"${!a[@]}\"\
    ; do\n        if (( i < j && j < k && k < i )); then\n          count=$((count\
    \ + 1))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a\n  local i\n  local j\n  local k\n  local count\n  a=($(for ((i=1;\
    \ i<=$n; i++)); do echo $((i*i - i + 1)); done))\n  count=0\n  for ((i=1; i<=$n;\
    \ i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n\
    \        if (( ${a[i]} + ${a[j]} + ${a[k]} ) % 3 == 0 ); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a\n  local i\n  local j\n  local k\n  local count\n  a=($(for ((i=1; i<=$n;\
    \ i++))\n  do\n    echo $((i*i - i + 1))\n  done))\n  count=0\n  for ((i=1; i<=$n;\
    \ i++))\n  do\n    for ((j=1; j<=$n; j++))\n    do\n      for ((k=1; k<=$n; k++))\n\
    \      do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} % 3 == 0 ))\n        then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  a=$( seq\
    \ 1 $n )\n  for i in $(seq 1 $n); do\n    for j in $(seq 1 $n); do\n      for\
    \ k in $(seq 1 $n); do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n\
    \          if [[ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr $( expr\
    \ $( expr $( expr $( expr", "  local n=$1\n  local a\n  local i\n  local j\n \
    \ local k\n  local count\n  a=($(for ((i=1; i<=$n; i++)); do echo $i*$i-$i+1;\
    \ done))\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n        \
    \  count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "    local n=$1\n    local a=($(seq 1 $n))\n    local count=0\n    local i\n   \
    \ local j\n    local k\n    local sum\n    local count1\n    local count2\n  \
    \  local count3\n    local count4\n    local count5\n    local count6\n    local\
    \ count7\n    local count8\n    local count9\n    local count10\n    local count11\n\
    \    local count12\n    local count13\n    local count14\n    local count15\n\
    \    local count16\n    local count17\n    local count18\n    local count19\n\
    \    local count20\n    local count21\n    local count22\n    local count23\n\
    \    local count24\n    local count25\n    local count26\n    local count27\n\
    \    local count28\n    local count29\n    local count30\n    local count31\n\
    \    local count32\n    local count33\n    local count34\n    local count35\n\
    \    local count36\n    local count37\n    local count38\n    local count39\n\
    \    local count40\n    local count41\n    local count42\n    local count43\n\
    \    local count44\n    local count45\n    local count46\n    local count47\n\
    \    local count48\n    local count49\n    local count50\n    local count51\n\
    \    local count52\n    local count53\n    local count54\n    local count55\n\
    \    local count56\n    local count57\n    local count58\n    local count59\n\
    \    local count60\n    local count61\n    local count62\n    local count63\n\
    \    local count64\n    local count65\n    local count66\n    local count67\n\
    \    local count68\n    local count69\n    local count70\n    local count71\n\
    \    local count72\n    local count73\n    local count74\n    local count75\n\
    \    local count76\n    local count77\n    local count78\n    local count79\n\
    \    local count80\n    local count81\n    local count82\n    local count83\n\
    \    local count84\n    local count85\n    local count86\n    local count87\n\
    \    local count88\n    local count89\n    local count90\n    local count91\n\
    \    local count92\n    local count93\n    local count94\n    local count95\n",
  "  local n=$1\n  local a\n  a=($(for ((i=1; i<=$n; i++)); do echo $((i*i - i + 1));\
    \ done))\n  local count=0\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i*i - i + 1 + j*j + k ));\
    \ then\n          count=$((count+1))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n \
    \ local count\n  local max_triple\n  local count2\n  local count3\n  local count4\n\
    \  local count5\n  local count6\n  local count7\n  local count8\n  local count9\n\
    \  local count10\n  local count11\n  local count12\n  local count13\n  local count14\n\
    \  local count15\n  local count16\n  local count17\n  local count18\n  local count19\n\
    \  local count20\n  local count21\n  local count22\n  local count23\n  local count24\n\
    \  local count25\n  local count26\n  local count27\n  local count28\n  local count29\n\
    \  local count30\n  local count31\n  local count32\n  local count33\n  local count34\n\
    \  local count35\n  local count36\n  local count37\n  local count38\n  local count39\n\
    \  local count40\n  local count41\n  local count42\n  local count43\n  local count44\n\
    \  local count45\n  local count46\n  local count47\n  local count48\n  local count49\n\
    \  local count50\n  local count51\n  local count52\n  local count53\n  local count54\n\
    \  local count55\n  local count56\n  local count57\n  local count58\n  local count59\n\
    \  local count60\n  local count61\n  local count62\n  local count63\n  local count64\n\
    \  local count65\n  local count66\n  local count67\n  local count68\n  local count69\n\
    \  local count70\n  local count71\n  local count72\n  local count73\n  local count74\n\
    \  local count75\n  local count76\n  local count77\n  local count78\n  local count79\n\
    \  local count80\n  local count81\n  local count82\n  local count83\n  local count84\n\
    \  local count85\n  local count86\n  local count87\n  local count88\n  local count89\n\
    \  local count90\n  local count91\n  local count92\n  local count93\n  local count94\n\
    \  local count95\n  local count96\n  local count97\n  ", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n", "  local\
    \ n=$1\n  local a\n  a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-1))\n\
    \    done))\n  local i\n  local j\n  local k\n  local sum\n  local count\n  for\
    \ i in \"${!a[@]}\"; do\n    sum=$((${a[i]}+${a[i+1]}+${a[i+2]}))\n    if [ $((sum\
    \ % 3)) -eq 0 ]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n\
    \  local count=0\n  local triples=0\n  local triple\n  for ((i=1; i<=$n; i++));\
    \ do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n   \
    \     if (( ${a[i]} + ${a[j]} + ${a[k]} % 3 == 0 )); then\n          triples=$((triples\
    \ + 1))\n          triple=$((${a[i]} + ${a[j]} + ${a[k]}))\n        fi\n     \
    \ done\n    done\n  done\n  echo $triples", "  local n=$1\n  local a=($(seq 1\
    \ $n))\n  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i == j && i == k\
    \ )); then\n          continue\n        fi\n        if (( i == j && j == k ));\
    \ then\n          continue\n        fi\n        if (( i == j && k == i )); then\n\
    \          continue\n        fi\n        if (( j == k && i == k )); then\n   \
    \       continue\n        fi\n        if (( j == k && j == k )); then\n      \
    \    continue\n        fi\n        if (( j == k && k == i )); then\n         \
    \ continue\n        fi\n        if (( i == k && i == k )); then\n          continue\n\
    \        fi\n        if (( i == k && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == k && k == i )); then\n          continue\n      \
    \  fi\n        if (( j == k && i == k )); then\n          continue\n        fi\n\
    \        if (( j == k && j == k )); then\n          continue\n        fi\n   \
    \     if (( j == k && k == i )); then\n          continue\n        fi\n      \
    \  if (( i == k && i == k )); then\n          continue\n        fi\n        if\
    \ (( i == k && j == k )); then\n          continue\n        fi\n        if ((\
    \ i == k && k == i )); then\n          continue\n        fi\n        if (( j ==\
    \ k && i == k )); then\n          continue\n        fi\n        if (( j == k &&\
    \ j == k )); then\n          continue\n        fi\n        if (( j == k && k ==\
    \ i )); then\n          continue\n        fi\n        if (( i == k && i == k ));\
    \ then\n          continue\n        fi\n        if (( i == k && j == k )); then\n\
    \          continue\n        fi\n        if (( i == k && k == i )); then\n   \
    \       continue\n        fi\n        if (( j == k && i == k )); then\n      \
    \    continue\n        fi\n        if (( j == k && j == k )); then\n         \
    \ continue\n        fi\n        if (( j == k && k == i )); then\n          continue\n\
    \        fi\n        if (( i == k && i == k )", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo -n \"$i\"; done))\n  local count=0\n  local i\n\
    \  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( ${i}+${j}+${k} % 3 == 0 )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"a[\"$i\"]=\"\n      echo\
    \ $((i*i-i+1))\n    done))\n  local result=0\n  local i\n  for i in \"${a[@]}\"\
    \n  do\n    local j\n    for j in \"${a[@]}\"\n    do\n      local k\n      for\
    \ k in \"${a[@]}\"\n      do\n        if (( $i > $j > $k )); then\n          result=$((result+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $result", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"a[\"$i\"]=\"\n      echo\
    \ -n \"$i\"\n    ))\n  local count=0\n  local triples=0\n  local triple\n  for\
    \ ((i=1; i<=$n; i++))\n  do\n    for ((j=1; j<=$n; j++))\n    do\n      for ((k=1;\
    \ k<=$n; k++))\n      do\n        triple=$(a[$i]+$a[j]+$a[k])\n        if ((triple%3==0));\
    \ then\n          triples=$((triples+1))\n        fi\n      done\n    done\n \
    \ done\n  echo \"$triples\"", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++));\
    \ do echo $((i * i - i + 1)); done))\n  local count=0\n  local i\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( i + j + k == $((i * i * i)) )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local i=0\n  local j=0\n  local k=0\n  local sum=0\n  local\
    \ count=0\n  while [ $i -lt $n ]; do\n    sum=$(( $sum + $a[i] ))\n    i=$(( $i\
    \ + 1 ))\n  done\n  while [ $j -lt $n ]; do\n    sum=$(( $sum + $a[j] ))\n   \
    \ j=$(( $j + 1 ))\n  done\n  while [ $k -lt $n ]; do\n    sum=$(( $sum + $a[k]\
    \ ))\n    k=$(( $k + 1 ))\n  done\n  while [ $i -le $n ]; do\n    sum=$(( $sum\
    \ + $a[i] ))\n    i=$(( $i + 1 ))\n  done\n  while [ $j -le $n ]; do\n    sum=$((\
    \ $sum + $a[j] ))\n    j=$(( $j + 1 ))\n  done\n  while [ $k -le $n ]; do\n  \
    \  sum=$(( $sum + $a[k] ))\n    k=$(( $k + 1 ))\n  done\n  while [ $sum -gt 0\
    \ ]; do\n    count=$(( $count + 1 ))\n    sum=$(( $sum - $a[ $(( $count - 1 ))\
    \ ] ))\n  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $((i*i-1))+$((i+1))+$((i+2)); done))\n  local count=0\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( $i > $j && $j > $k )); then\n          let count++\n     \
    \   fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n    local\
    \ a\n    local i\n    local j\n    local k\n    local count\n    local max\n \
    \   local max1\n    local max2\n    local max3\n    local max4\n    local max5\n\
    \    local max6\n    local max7\n    local max8\n    local max9\n    local max10\n\
    \    local max11\n    local max12\n    local max13\n    local max14\n    local\
    \ max15\n    local max16\n    local max17\n    local max18\n    local max19\n\
    \    local max20\n    local max21\n    local max22\n    local max23\n    local\
    \ max24\n    local max25\n    local max26\n    local max27\n    local max28\n\
    \    local max29\n    local max30\n    local max31\n    local max32\n    local\
    \ max33\n    local max34\n    local max35\n    local max36\n    local max37\n\
    \    local max38\n    local max39\n    local max40\n    local max41\n    local\
    \ max42\n    local max43\n    local max44\n    local max45\n    local max46\n\
    \    local max47\n    local max48\n    local max49\n    local max50\n    local\
    \ max51\n    local max52\n    local max53\n    local max54\n    local max55\n\
    \    local max56\n    local max57\n    local max58\n    local max59\n    local\
    \ max60\n    local max61\n    local max62\n    local max63\n    local max64\n\
    \    local max65\n    local max66\n    local max67\n    local max68\n    local\
    \ max69\n    local max70\n    local max71\n    local max72\n    local max73\n\
    \    local max74\n    local max75\n    local max76\n    local max77\n    local\
    \ max78\n    local max79\n    local max80\n    local max81\n    local max82\n\
    \    local max83\n    local max84\n    local max85\n    local max86\n    local\
    \ max87\n    local max88\n    local max89\n    local max90\n    local max91\n\
    \    local max92\n    local max93\n    local max94\n    local max95\n    local\
    \ max96\n    local ", "  local n=$1\n  local a\n  local i\n  local j\n  local\
    \ k\n  local count\n  a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-i+1)) ; done\
    \ ))\n  count=0\n  for ((i=1; i<=$n; i++)) ; do\n    for ((j=1; j<=$n; j++)) ;\
    \ do\n      for ((k=1; k<=$n; k++)) ; do\n        if (( ${a[i]} + ${a[j]} + ${a[k]}\
    \ )) && \\\n          (( ${a[j]} + ${a[k]} + ${a[k]} )) && \\\n          (( ${a[k]}\
    \ + ${a[k]} + ${a[k]} )) ; then\n          count=$(( ${count} + 1 ))\n       \
    \ fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local triples=0\n\
    \  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le\
    \ $k ]; then\n          triples=$((triples + 1))\n          count=$((count + 1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)); do echo \"$i\"; done))\n  local j=0\n  local k=0\n\
    \  local sum=0\n  local count=0\n  local triples=0\n  local triple\n  local i\n\
    \  for i in \"${a[@]}\"; do\n    triple=`echo \"$i\" | bc`\n    sum=$((sum + triple))\n\
    \    count=$((count + 1))\n  done\n  if ((sum % 3 == 0)); then\n    triples=$((triples\
    \ + 1))\n  fi\n  for i in \"${a[@]}\"; do\n    triple=`echo \"$i\" | bc`\n   \
    \ sum=$((sum - triple))\n    count=$((count - 1))\n  done\n  if ((sum % 3 == 0));\
    \ then\n    triples=$((triples + 1))\n  fi\n  for i in \"${a[@]}\"; do\n    triple=`echo\
    \ \"$i\" | bc`\n    sum=$((sum + triple))\n    count=$((count + 1))\n  done\n\
    \  if ((sum % 3 == 0)); then\n    triples=$((triples + 1))\n  fi\n  for i in \"\
    ${a[@]}\"; do\n    triple=`echo \"$i\" | bc`\n    sum=$((sum - triple))\n    count=$((count\
    \ - 1))\n  done\n  if ((sum % 3 == 0)); then\n    triples=$((triples + 1))\n \
    \ fi\n  for i in \"${a[@]}\"; do\n    triple=`echo \"$i\" | bc`\n    sum=$((sum\
    \ + triple))\n    count=$((count + 1))\n  done\n  if ((sum % 3 == 0)); then\n\
    \    triples=$((triples + 1))\n  fi\n  for i in \"${a[@]}\"; do\n    triple=`echo\
    \ \"$i\" | bc`\n    sum=$((sum - triple))\n    count=$((count - 1))\n  done\n\
    \  if ((sum % 3 == 0)); then\n    triples=$((triples + 1))\n  fi\n  for i in \"\
    ${a[@]}\"; do\n    triple=`echo \"$i\" | bc`\n    sum=$((sum + triple))\n    count=$((count\
    \ + 1))\n  done\n  if ((sum % 3 == 0)); then\n    triples=$((triples + 1))\n \
    \ fi\n  for i in \"${a[@]}\"; do\n    triple=`echo \"$", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)); do echo $((i*i - i + 1)); done))\n  local count=0\n\
    \  local triple=0\n  local triples=0\n  local triples_sum=0\n  local triples_sum2=0\n\
    \  local triples_sum3=0\n  local triples_sum4=0\n  local triples_sum5=0\n  local\
    \ triples_sum6=0\n  local triples_sum7=0\n  local triples_sum8=0\n  local triples_sum9=0\n\
    \  local triples_sum10=0\n  local triples_sum11=0\n  local triples_sum12=0\n \
    \ local triples_sum13=0\n  local triples_sum14=0\n  local triples_sum15=0\n  local\
    \ triples_sum16=0\n  local triples_sum17=0\n  local triples_sum18=0\n  local triples_sum19=0\n\
    \  local triples_sum20=0\n  local triples_sum21=0\n  local triples_sum22=0\n \
    \ local triples_sum23=0\n  local triples_sum24=0\n  local triples_sum25=0\n  local\
    \ triples_sum26=0\n  local triples_sum27=0\n  local triples_sum28=0\n  local triples_sum29=0\n\
    \  local triples_sum30=0\n  local triples_sum31=0\n  local triples_sum32=0\n \
    \ local triples_sum33=0\n  local triples_sum34=0\n  local triples_sum35=0\n  local\
    \ triples_sum36=0\n  local triples_sum37=0\n  local triples_sum38=0\n  local triples_sum39=0\n\
    \  local triples_sum40=0\n  local triples_sum41=0\n  local triples_sum42=0\n \
    \ local triples_sum43=0\n  local triples_sum44=0\n  local triples_sum45=0\n  local\
    \ triples_sum46=0\n  local triples_sum47=0\n  local triples_sum48=0\n  local triples_sum49=0\n\
    \  local triples_sum50=0\n  local triples_sum51=0\n  local triples_sum52=0\n \
    \ local triples_sum53=0\n  local triples_sum54=0\n  local triples_sum55=0\n  local\
    \ triples_sum56=0\n  local triples_sum57=0\n  local triples_sum58=0\n  local ",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n\
    \    done))\n  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ [ $i -le $j -a $j -le $k ]; then\n          if [[ $((i*i*i)) -eq $((j*j*j))\
    \ -a $((i*i*i)) -eq $((k*k*k)) ]]; then\n            count=$((count+1))\n    \
    \      fi\n        fi\n      done\n    done\n  done\n  echo $count", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n  for i in \"${a[@]}\"\
    ; do\n    local j\n    for j in \"${a[@]}\"; do\n      local k\n      for k in\
    \ \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n  local count=0\n\
    \  local i\n  local j\n  local k\n  for i in \"${!a[@]}\"; do\n    for j in \"\
    ${!a[@]}\"; do\n      for k in \"${!a[@]}\"; do\n        if [ \"$i\" -le \"$j\"\
    \ -a \"$j\" -le \"$k\" -a \"$i\" -le \"$k\" ]; then\n          if [ \"$a\" \"\
    $j\" \"$k\" -eq \"$((i*i-1)+i+1)\" ]; then\n            count=$((count+1))\n \
    \         fi\n        fi\n      done\n    done\n  done\n  echo $count", "  local\
    \ n=$1\n  local a\n  local i\n  local j\n  local k\n  a=$( seq 1 $n )\n  for i\
    \ in $(seq 1 $n); do\n    for j in $(seq 1 $n); do\n      for k in $(seq 1 $n);\
    \ do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          if [[\
    \ ${a[$i]} -eq ${a[$j]} && ${a[$j]} -eq ${a[$k]} ]]; then\n            echo \"\
    $i $j $k\"\n          fi\n        fi\n      done\n    done\n  done", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count\n\
    \  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n", "    local n=$1\n    local a=($(seq 1 $n))\n    local i\n    local\
    \ j\n    local k\n    local count\n    local sum\n    local triple\n    local\
    \ triples=0\n    local triples_sum\n    local triples_sum2\n    local triples_sum3\n\
    \    local triples_sum4\n    local triples_sum5\n    local triples_sum6\n    local\
    \ triples_sum7\n    local triples_sum8\n    local triples_sum9\n    local triples_sum10\n\
    \    local triples_sum11\n    local triples_sum12\n    local triples_sum13\n \
    \   local triples_sum14\n    local triples_sum15\n    local triples_sum16\n  \
    \  local triples_sum17\n    local triples_sum18\n    local triples_sum19\n   \
    \ local triples_sum20\n    local triples_sum21\n    local triples_sum22\n    local\
    \ triples_sum23\n    local triples_sum24\n    local triples_sum25\n    local triples_sum26\n\
    \    local triples_sum27\n    local triples_sum28\n    local triples_sum29\n \
    \   local triples_sum30\n    local triples_sum31\n    local triples_sum32\n  \
    \  local triples_sum33\n    local triples_sum34\n    local triples_sum35\n   \
    \ local triples_sum36\n    local triples_sum37\n    local triples_sum38\n    local\
    \ triples_sum39\n    local triples_sum40\n    local triples_sum41\n    local triples_sum42\n\
    \    local triples_sum43\n    local triples_sum44\n    local triples_sum45\n \
    \   local triples_sum46\n    local triples_sum47\n    local triples_sum48\n  \
    \  local triples_sum49\n    local triples_sum50\n    local triples_sum51\n   \
    \ local triples_sum52\n    local triples_sum53\n    local triples_sum54\n    local\
    \ triples_sum55\n    local triples_sum56\n    local triples_sum57\n    local triples_sum58\n\
    \    local triples_sum59\n    local triples_sum60\n    local triples_sum61\n \
    \   local triples_sum62\n    local triples_sum63\n    local triples_sum64\n  \
    \  local triples_sum65\n    local triples_sum66\n    local triples_sum", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n  local\
    \ k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in\
    \ \"${a[@]}\"; do\n        if (( i == j && i == k )); then\n          continue\n\
    \        fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == j || i == k || j == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          ", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-1))\n    done))\n\
    \  local count=0\n  local triple=0\n  local triples=0\n  local triples_sum=0\n\
    \  local triples_sums=0\n  local triples_sums_sum=0\n  local triples_sums_sums=0\n\
    \  local triples_sums_sums_sum=0\n  local triples_sums_sums_sums=0\n  local triples_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums=0\n  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums=0\n  local\
    \ triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum=0\n  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums=0\n\
    \  local triples_sums_sums_sums_sums_sums_sums_sums_", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"$i\"\n    done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"\n  do\n    local j\n    for j in\
    \ \"${a[@]}\"\n    do\n      local k\n      for k in \"${a[@]}\"\n      do\n \
    \       if [ \"$i\" -eq \"$j\" -a \"$j\" -eq \"$k\" -a \"$i\" -eq \"$k\" ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "    local n=$1\n    local a\n    local i\n    local j\n    local k\n\
    \    local count\n    local max_count\n    local max_triple\n    \n    a=()\n\
    \    \n    for i in $(seq 1 $n); do\n        a+=($i*$i-$i+1)\n    done\n    \n\
    \    max_count=0\n    max_triple=()\n    \n    for i in $(seq 0 $((n-1)/2)); do\n\
    \        j=$((i*2))\n        for k in $(seq 0 $((n-1)/2)); do\n            if\
    \ [ $((i*2)+k) -lt $((n-1)) ]; then\n                count=0\n               \
    \ for j in $(seq 0 $((n-1)/2)); do\n                    if [ $((i*2)+j) -lt $((n-1))\
    \ ]; then\n                        count=$((count+a[$((i*2)+j)]))\n          \
    \          fi\n                done\n                if [ $((i*2)+k) -lt $((n-1))\
    \ ]; then\n                    count=$((count+a[$((i*2)+k)]))\n              \
    \  fi\n                if [ $count -gt $max_count ]; then\n                  \
    \  max_count=$count\n                    max_triple=()\n                fi\n \
    \               if [ $count -eq $max_count ]; then\n                    max_triple+=($((i*2)+k))\n\
    \                fi\n            fi\n        done\n    done\n    \n    echo ${#max_triple[@]}",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n\
    \  local count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"\
    ; do\n    if [ $i -le $j ]; then\n      count=$((count+1))\n      if [ $i -le\
    \ $k ]; then\n        count=$((count+1))\n      fi\n    fi\n    j=$((j+1))\n \
    \   k=$((k+1))\n  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1;\
    \ i<=$n; i++))\n    do\n      echo -n \"$i\"\n    ))\n  local i\n  local j\n \
    \ local k\n  local count\n  local triple\n  local triples=0\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        triple=$((i*i)+(i*j)+(i*k))\n\
    \        if (( triple % 3 == 0 )); then\n          triples=$((triples+1))\n  \
    \      fi\n      done\n    done\n  done\n  echo $triples", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n  local count=0\n\
    \  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n    count=$((count+i))\n\
    \    j=$((j+i))\n    k=$((k+i))\n  done\n  echo $((count+j+k))", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1)); done))\n  local\
    \ count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n \
    \   local j=0\n    local k=0\n    while ((j<i)) && [ \"$((k<i))\" -eq 0 ]; do\n\
    \      ((k++))\n    done\n    if ((j<i)) ; then\n      ((j++))\n    fi\n    if\
    \ ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i)) ; then\n      ((j++))\n\
    \    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i)) ; then\n\
    \      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i))\
    \ ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n\
    \    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n\
    \    fi\n    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n\
    \      ((k++))\n    fi\n    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i))\
    \ ; then\n      ((k++))\n    fi\n    if ((j<i)) ; then\n      ((j++))\n    fi\n\
    \    if ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i)) ; then\n      ((j++))\n\
    \    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i)) ; then\n\
    \      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n    if ((j<i))\
    \ ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n    fi\n\
    \    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n      ((k++))\n\
    \    fi\n    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i)) ; then\n\
    \      ((k++))\n    fi\n    if ((j<i)) ; then\n      ((j++))\n    fi\n    if ((k<i))\
    \ ; then\n", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local i=0\n  local j=0\n\
    \  local k=0\n  local triples=0\n  while [ $i -lt $n ]; do\n    local j=$((i+1))\n\
    \    local k=$((j+1))\n    local sum=$((i*i-i+j*j+k*k))\n    if [ $sum -eq 0 ];\
    \ then\n      triples=$((triples + 1))\n      i=$((i+1))\n      j=$((j+1))\n \
    \     k=$((k+1))\n      continue\n    fi\n    local sum=$((i*i-i+j*j+k*k))\n \
    \   if [ $sum -eq 3 ]; then\n      triples=$((triples + 1))\n      i=$((i+1))\n\
    \      j=$((j+1))\n      k=$((k+1))\n      continue\n    fi\n    i=$((i+1))\n\
    \    j=$((j+1))\n    k=$((k+1))\n  done\n  echo $triples", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"$i\"\n    done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"\n  do\n    local j\n    for j in\
    \ \"${a[@]}\"\n    do\n      local k\n      for k in \"${a[@]}\"\n      do\n \
    \       if [ $i -le $j -a $j -le $k ]\n        then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count=0\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( $i > $j && $j > $k )); then\n          if (( $i + $j + $k == $i\
    \ * $i - $i + $j * $j - $j + $k * $k )); then\n            count=$(( $count +\
    \ 1 ))\n          fi\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i = 1; i <= n; i++)) ; do echo $((i * i - i +\
    \ 1)); done))\n  local count=0\n  local triples=0\n  local triple\n  for ((i =\
    \ 1; i <= n; i++)) ; do\n    for ((j = 1; j <= i; j++)) ; do\n      for ((k =\
    \ 1; k <= j; k++)) ; do\n        if (( a[i] < a[j] && a[j] < a[k]) && ( a[i] <\
    \ a[j] + a[k]) ) ; then\n          triples=$((triples + 1))\n        fi\n    \
    \  done\n    done\n  done\n  echo $triples", "    local n=$1\n    local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i - i + 1)); done))\n    local count=0\n \
    \   local j=0\n    local k=0\n    local sum=0\n    local i\n    local j\n    local\
    \ k\n    local sum\n    local i\n    local j\n    local k\n    local sum\n   \
    \ local i\n    local j\n    local k\n    local sum\n    local i\n    local j\n\
    \    local k\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local sum\n    local i\n   \
    \ local j\n    local k\n    local sum\n    local i\n    local j\n    local k\n\
    \    local sum\n    local i\n    local j\n    local k\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local sum\n    local i\n    local j\n    local k\n    local sum\n   \
    \ local i\n    local j\n    local k\n    local sum\n    local i\n    local j\n\
    \    local k\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local sum\n    local i\n   \
    \ local j\n    local k\n    local sum\n    local i\n    local j\n    local k\n\
    \    local sum\n    local i\n    local j\n    local k\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local sum\n    local i\n    local j\n    local k\n    local sum\n   \
    \ local i\n    local j\n    local k\n    local sum\n    local i\n    local j\n\
    \    local k\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ sum\n    local i\n    local j\n    local k\n    local sum\n    local i\n   \
    \ local j\n    local k\n    local sum\n    local i\n    local j\n    local k\n\
    \    local sum\n    local i\n    local j\n    local k\n    ", "    local n=$1\n\
    \    local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n  \
    \  local count=0\n    local i\n    local j\n    local k\n    local sum\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local ",
  "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i * i - i + 1)); done))\n  count=0\n  for ((i=1;\
    \ i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++));\
    \ do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} )) % 3 == 0 then\n          ((\
    \ count++ ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local\
    \ n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=($(for\
    \ ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n  count=0\n  for ((i=1;\
    \ i<=$n; i++)) ; do\n    for ((j=1; j<=$n; j++)) ; do\n      for ((k=1; k<=$n;\
    \ k++)) ; do\n        if (( $i == $j && $j == $k && $i == $a[ $k ]) )\n      \
    \  then\n          count=$((count+1))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n \
    \ local count\n  a=$( seq 1 $n )\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le\
    \ $k -a $i -le $k ]; then\n          count=$(( $count + 1 ))\n        fi\n   \
    \   done\n    done\n  done\n  echo $count", "  local n=$1\n  local a\n  local\
    \ i\n  local j\n  local k\n  a=($(for ((i=1; i<=$n; i++))\n    do\n      echo\
    \ -n \"$i\"\n    done))\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i == j && i == k )); then\n\
    \          echo \"$i $j $k\"\n        fi\n      done\n    done\n  done", "  local\
    \ n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-1))\n\
    \    done))\n  local count=0\n  local i\n  for i in \"${a[@]}\"\n  do\n    local\
    \ j\n    for j in \"${a[@]}\"\n    do\n      local k\n      for k in \"${a[@]}\"\
    \n      do\n        if (( i*i+j*j+k*k == i*i*j*k ))\n        then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n \
    \   local a=($(for ((i=1; i<=$n; i++))\n    do\n        echo $((i*i-1))\n    done))\n\
    \    local count=0\n    local i\n    local j\n    local k\n    for ((i=1; i<=$n;\
    \ i++))\n    do\n        for ((j=1; j<=$n; j++))\n        do\n            for\
    \ ((k=1; k<=$n; k++))\n            do\n                if (( ${a[i]} + ${a[j]}\
    \ + ${a[k]} ) % 3 == 0)\n                then\n                    count=$((count+1))\n\
    \                fi\n            done\n        done\n    done\n    echo $count",
  "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n\
    \  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        if (( i == j && i == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k )); then\n          continue\n   \
    \     fi\n        if (( i == j && k == i )); then\n          continue\n      \
    \  fi\n        if (( j == k && i == k )); then\n          continue\n        fi\n\
    \        if (( j == k && j == k )); then\n          continue\n        fi\n   \
    \     if (( i == k && j == k )); then\n          continue\n        fi\n      \
    \  if (( i == k && i == k )); then\n          continue\n        fi\n        if\
    \ (( j == k && i == k )); then\n          continue\n        fi\n        if ((\
    \ j == k && j == k )); then\n          continue\n        fi\n        if (( i ==\
    \ k && i == k )); then\n          continue\n        fi\n        if (( i == k &&\
    \ i == k )); then\n          continue\n        fi\n        if (( j == k && i ==\
    \ k )); then\n          continue\n        fi\n        if (( j == k && j == k ));\
    \ then\n          continue\n        fi\n        if (( i == k && i == k )); then\n\
    \          continue\n        fi\n        if (( i == k && i == k )); then\n   \
    \       continue\n        fi\n        if (( j == k && i == k )); then\n      \
    \    continue\n        fi\n        if (( j == k && j == k )); then\n         \
    \ continue\n        fi\n        if (( i == k && i == k )); then\n          continue\n\
    \        fi\n        if (( i == k && i == k )); then\n          continue\n   \
    \     fi\n        if (( j == k && i == k )); then\n          continue\n      \
    \  fi\n        if (( j == k && j == k )); then\n          continue\n        fi\n\
    \        if (( i == k && i == k )); then\n          continue\n        fi\n   \
    \     if (( i == k && i == k )); then\n          continue\n        fi\n      \
    \  if (( j == k && i == k )); then\n          continue\n        fi\n        if\
    \ (( j == k && j == k ", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++));\
    \ do echo $((i*i-1))+$((i+1))+$((i+2)); done))\n  local count=0\n  local j=0\n\
    \  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n    if [ $((j<k)) ]; then\n\
    \      if [ $((j+i)%3) == 0 ]; then\n        ((count++))\n      fi\n    fi\n \
    \   j=$((j+i))\n    k=$((k+i))\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1))+$((i+1))+$((i+2)); done))\n\
    \  local count=0\n  local triples=0\n  local triple\n  local i\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( $i > $j && $j > $k )); then\n          triple=$(( $i * $i - $j\
    \ + $k ))\n          triples=$(( $triples + $triple ))\n        fi\n      done\n\
    \    done\n  done\n  echo $triples", "    local n=$1\n    local a=($(for ((i=1;\
    \ i<=$n; i++))\n    do\n        echo $((i*i-1))\n    done))\n    local count=0\n\
    \    local i\n    local j\n    local k\n    for ((i=1; i<=$n; i++))\n    do\n\
    \        for ((j=1; j<=$n; j++))\n        do\n            for ((k=1; k<=$n; k++))\n\
    \            do\n                if (( ${a[i]} + ${a[j]} + ${a[k]} ) % 3 == 0)\n\
    \                then\n                    count=$((count+1))\n              \
    \  fi\n            done\n        done\n    done\n    echo $count", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n    done))\n\
    \  local i\n  local j\n  local k\n  local sum\n  local count\n  local triple\n\
    \  local count2\n  local count3\n  local count4\n  local count5\n  local count6\n\
    \  local count7\n  local count8\n  local count9\n  local count10\n  local count11\n\
    \  local count12\n  local count13\n  local count14\n  local count15\n  local count16\n\
    \  local count17\n  local count18\n  local count19\n  local count20\n  local count21\n\
    \  local count22\n  local count23\n  local count24\n  local count25\n  local count26\n\
    \  local count27\n  local count28\n  local count29\n  local count30\n  local count31\n\
    \  local count32\n  local count33\n  local count34\n  local count35\n  local count36\n\
    \  local count37\n  local count38\n  local count39\n  local count40\n  local count41\n\
    \  local count42\n  local count43\n  local count44\n  local count45\n  local count46\n\
    \  local count47\n  local count48\n  local count49\n  local count50\n  local count51\n\
    \  local count52\n  local count53\n  local count54\n  local count55\n  local count56\n\
    \  local count57\n  local count58\n  local count59\n  local count60\n  local count61\n\
    \  local count62\n  local count63\n  local count64\n  local count65\n  local count66\n\
    \  local count67\n  local count68\n  local count69\n  local count70\n  local count71\n\
    \  local count72\n  local count73\n  local count74\n  local count75\n  local count76\n\
    \  local count77\n  local count78\n  local count79\n  local count80\n  local count81\n\
    \  local count82\n  local count83\n  local count84\n  local count85\n  local count86\n\
    \  local count87\n  local count88\n  local count89\n  local count90\n  local count91\n\
    \  local count92", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n\
    \  local count\n  a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1)); done))\n\
    \  count=0\n  for ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n \
    \     for ((k=1; k<=$n; k++)); do\n        if (( $i == $j && $j == $k )); then\n\
    \          continue\n        fi\n        if (( $a[ $i ] == $a[ $j ] && $a[ $j\
    \ ] == $a[ $k ]) && $a[ $i ] + $a[ $j ] + $a[ $k ] % 3 == 0); then\n         \
    \ count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"\
    ${a[@]}\"; do\n    count=$((count + 1))\n    j=$((j + 1))\n    k=$((k + 1))\n\
    \  done\n  echo $((count * 3 - 1))", "  local n=$1\n  local a=($(seq 1 $n))\n\
    \  local count=0\n  local triples=0\n  local i\n  for i in $(seq 1 $n); do\n \
    \   for j in $(seq 1 $n); do\n      for k in $(seq 1 $n); do\n        if [ $i\
    \ -le $j -a $j -le $k -a $i -le $k ]; then\n          triples=$((triples + $(a[$i]+$(a[$j]+$(a[$k])))))\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1));\
    \ done))\n  local count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"\
    ${a[@]}\"; do\n    j=$((i+1))\n    k=$((j+1))\n    if [ $((i*i-i+1)) == $((j*j-k))\
    \  ]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n  for i in \"${a[@]}\"\
    ; do\n    local j\n    for j in \"${a[@]}\"; do\n      local k\n      for k in\
    \ \"${a[@]}\"; do\n        if (( i == j && j == k )); then\n          count=$((\
    \ $count + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", " \
    \ local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local count=0\n  local i\n  local j\n  local k\n  for ((i=1; i<=$n;\
    \ i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n\
    \        if (( $i == $j && $j == $k )); then\n          continue\n        fi\n\
    \        if (( $a[ $i ] + $a[ $j ] + $a[ $k ] )); then\n          count=$(( $count\
    \ + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n \
    \ for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i*i + j*j + k*k == i*i*i*i )); then\n          count=$(( $count\
    \ + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)); do echo -n \"$i\"; done))\n  local count=0\n\
    \  local triples=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i == j && i == k )); then\n\
    \          continue\n        fi\n        if (( i == j || i == k || j == k ));\
    \ then\n          continue\n        fi\n        if (( i == j && j == k )); then\n\
    \          continue\n        fi\n        if (( i == j || i == k || j == k ));\
    \ then\n          continue\n        fi\n        if (( i == j && k == i )); then\n\
    \          continue\n        fi\n        if (( i == j || i == k || k == i ));\
    \ then\n          continue\n        fi\n        if (( j == k && i == i )); then\n\
    \          continue\n        fi\n        if (( j == k || i == k || k == i ));\
    \ then\n          continue\n        fi\n        if (( j == k && k == i )); then\n\
    \          continue\n        fi\n        if (( j == k || k == i )); then\n   \
    \       continue\n        fi\n        if (( i == j && k == i )); then\n      \
    \    continue\n        fi\n        if (( j == k && i == i )); then\n         \
    \ continue\n        fi\n        if (( j == k || i == k || k == i )); then\n  \
    \        continue\n        fi\n        if (( i == j && j == k )); then\n     \
    \     continue\n        fi\n        if (( i == j || i == k || j == k )); then\n\
    \          continue\n        fi\n        if (( i == j && k == i )); then\n   \
    \       continue\n        fi\n        if (( i == j || i == k || k == i )); then\n\
    \          continue\n        fi\n        if (( j == k && i == i )); then\n   \
    \       continue\n        fi\n        if (( j == k || i == k || k == i )); then\n\
    \          continue\n        fi\n        if (( j == k && k == i )); then\n   \
    \       continue\n        fi\n        if (( j == k || k == i )); then\n      \
    \    continue\n        fi\n        if (( i == j && k == i )); then\n         \
    \ continue\n        fi", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n\
    \  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i < $j && $j < $k\
    \ && $i < $k )); then\n          count=$(( $count + 1 ))\n        fi\n      done\n\
    \    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if (( i*i + j*j + k*k % 3 == 0 )); then\n\
    \          ((count++))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=($(for\
    \ ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n    done))\n  count=0\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( $i + $j + $k % 3 == 0 )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)) ; do echo -n \"$i\" ; done))\n  local count=0\n\
    \  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i == j && i == k\
    \ )); then\n          continue\n        fi\n        if (( i == j || i == k ||\
    \ j == k )); then\n          continue\n        fi\n        if (( i == j && j ==\
    \ k )); then\n          continue\n        fi\n        if (( i == j || i == k ||\
    \ j == k )); then\n          continue\n        fi\n        if (( i == j && k ==\
    \ k )); then\n          continue\n        fi\n        if (( i == j || i == k ||\
    \ k == k )); then\n          continue\n        fi\n        if (( i == j && j ==\
    \ k && k == k )); then\n          continue\n        fi\n        if (( i == j &&\
    \ j == k || i == j && k == k || i == k && j == k )); then\n          continue\n\
    \        fi\n        if (( i == j || i == k || j == k || k == k )); then\n   \
    \       continue\n        fi\n        if (( i == j && j == k && k == k )); then\n\
    \          continue\n        fi\n        if (( i == j && j == k || i == j && k\
    \ == k || i == k && j == k )); then\n          continue\n        fi\n        if\
    \ (( i == j || i == k || j == k || k == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if (( i == j && j == k || i == j && k == k || i == k && j\
    \ == k )); then\n          continue\n        fi\n        if (( i == j || i ==\
    \ k || j == k || k == k )); then\n          continue\n        fi\n        if ((\
    \ i == j && j == k && k == k )); then\n          continue\n        fi\n      \
    \  if (( i == j && j == k || i == j && k == k || i == k && j == k )); then\n \
    \         continue\n        fi\n        if (( i == j || i == k || ", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count\n\
    \  local max\n  local triple\n  local triple2\n  local triple3\n  local triple4\n\
    \  local triple5\n  local triple6\n  local triple7\n  local triple8\n  local triple9\n\
    \  local triple10\n  local triple11\n  local triple12\n  local triple13\n  local\
    \ triple14\n  local triple15\n  local triple16\n  local triple17\n  local triple18\n\
    \  local triple19\n  local triple20\n  local triple21\n  local triple22\n  local\
    \ triple23\n  local triple24\n  local triple25\n  local triple26\n  local triple27\n\
    \  local triple28\n  local triple29\n  local triple30\n  local triple31\n  local\
    \ triple32\n  local triple33\n  local triple34\n  local triple35\n  local triple36\n\
    \  local triple37\n  local triple38\n  local triple39\n  local triple40\n  local\
    \ triple41\n  local triple42\n  local triple43\n  local triple44\n  local triple45\n\
    \  local triple46\n  local triple47\n  local triple48\n  local triple49\n  local\
    \ triple50\n  local triple51\n  local triple52\n  local triple53\n  local triple54\n\
    \  local triple55\n  local triple56\n  local triple57\n  local triple58\n  local\
    \ triple59\n  local triple60\n  local triple61\n  local triple62\n  local triple63\n\
    \  local triple64\n  local triple65\n  local triple66\n  local triple67\n  local\
    \ triple68\n  local triple69\n  local triple70\n  local triple71\n  local triple72\n\
    \  local triple73\n  local triple74\n  local triple75\n  local triple76\n  local\
    \ triple77\n  local triple78\n  local triple79\n  local triple80\n  local triple81\n\
    \  local triple82\n  local triple83\n  local triple84\n  local triple85\n  local\
    \ triple86\n  local triple87\n  local triple88\n  local triple89\n  local triple90\n\
    \  local triple91\n  local triple92\n  local triple93\n  local triple94\n  local\
    \ triple95\n  local ", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do\
    \ echo $((i*i-1))+$((i+1))+$((i+2)); done))\n  local count=0\n  local i\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( $i > $j && $i > $k )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"a[\"$i\"]=\"\n      echo\
    \ -n $((i * i - i + 1))\n      echo -n \" \"\n    done))\n  local count=0\n  local\
    \ j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"\n  do\n    j=$((i+1))\n\
    \    k=$((j+1))\n    if [ $((i * i - i + 1)) == $((j * j - j + k)) ]\n    then\n\
    \      count=$((count+1))\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ a\n  local i\n  local j\n  local k\n  local count\n  a=$( seq 1 $n )\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          count=$((\
    \ $count + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", " \
    \   local n=$1\n    local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1))+$((i+1))+$((i+2));\
    \ done))\n    local count=0\n    local triples=0\n    local triple\n    local\
    \ i\n    local j\n    local k\n    local triple\n    local count\n    local i\n\
    \    local j\n    local k\n    local triple\n    local count\n    local i\n  \
    \  local j\n    local k\n    local triple\n    local count\n    local i\n    local\
    \ j\n    local k\n    local triple\n    local count\n    local i\n    local j\n\
    \    local k\n    local triple\n    local count\n    local i\n    local j\n  \
    \  local k\n    local triple\n    local count\n    local i\n    local j\n    local\
    \ k\n    local triple\n    local count\n    local i\n    local j\n    local k\n\
    \    local triple\n    local count\n    local i\n    local j\n    local k\n  \
    \  local triple\n    local count\n    local i\n    local j\n    local k\n    local\
    \ triple\n    local count\n    local i\n    local j\n    local k\n    local triple\n\
    \    local count\n    local i\n    local j\n    local k\n    local triple\n  \
    \  local count\n    local i\n    local j\n    local k\n    local triple\n    local\
    \ count\n    local i\n    local j\n    local k\n    local triple\n    local count\n\
    \    local i\n    local j\n    local k\n    local triple\n    local count\n  \
    \  local i\n    local j\n    local k\n    local triple\n    local count\n    local\
    \ i\n    local j\n    local k\n    local triple\n    local count\n    local i\n\
    \    local j\n    local k\n    local triple\n    local count\n    local i\n  \
    \  local j\n    local k\n    local triple\n    local count\n    local i\n    local\
    \ j\n    local k\n    local triple\n    local count\n    local i\n    local j\n\
    \    local k\n    local triple\n    local count\n    local i\n    local j\n  \
    \  local k\n    local triple\n    local count\n    local i\n    local j\n    local\
    \ k\n    local triple\n    ", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++));\
    \ do echo $((i*i-i+1)); done))\n  local count=0\n  local triples=0\n  local triple\n\
    \  for ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1;\
    \ k<=$n; k++)); do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} % 3 == 0 )); then\n\
    \          triples=$((triples + 1))\n          triple=$((${a[i]} + ${a[j]} + ${a[k]}))\n\
    \          count=$((count + 1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count\n  echo $triples", "  local n=$1\n  local a\n  local i\n  local j\n \
    \ local k\n  local count\n  a=($(for ((i=1; i<=$n; i++)); do echo $i*$i-$i+1;\
    \ done))\n  count=0\n  for ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++));\
    \ do\n      for ((k=1; k<=$n; k++)); do\n        if (( ${a[i]} + ${a[j]} + ${a[k]}\
    \ ) % 3 == 0 ) ; then\n          count=$((count+1))\n        fi\n      done\n\
    \    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local i\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( i*j+k == i*i+k )); then\n          count=$((count+1))\n       \
    \ fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local\
    \ triples=0\n  local triple\n  local i\n  local j\n  local k\n  for i in \"${!a[@]}\"\
    ; do\n    for j in \"${!a[@]}\"; do\n      for k in \"${!a[@]}\"; do\n       \
    \ if [ $i -le $j -a $j -le $k ]; then\n          triple=$(( $a[i] + $a[j] + $a[k]\
    \ ))\n          triples=$(( $triples + $triple ))\n        fi\n      done\n  \
    \  done\n  done\n  echo $triples", "  local n=$1\n  local a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $((i*i-1))+$((i+1)); done))\n  local count=0\n  local triples=0\n\
    \  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        if (( i + j + k )); then\n          triples=$((triples\
    \ + 1))\n        fi\n      done\n    done\n  done\n  echo \"$triples\"", "  local\
    \ n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n \
    \ local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i = 1; i <= n; i++)); do echo $((i\
    \ * i - i + 1)); done))\n  local count=0\n  local i\n  local j\n  local k\n  for\
    \ ((i = 1; i <= n; i++)); do\n    for ((j = 1; j <= n; j++)); do\n      for ((k\
    \ = 1; k <= n; k++)); do\n        if (( a[i] < a[j] && a[i] < a[k] )); then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n\
    \  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if (( i*i + j*j + k*k == i*i*i*i ));\
    \ then\n          count=$(( $count + 1 ))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local\
    \ k\n  local count\n  a=$( seq 1 $n )\n  for i in $a; do\n    for j in $a; do\n\
    \      for k in $a; do\n        if [ $i -le $j -a $j -le $k -a $k -le $i ]; then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n \
    \ local count\n  a=($(for ((i=1; i<=$n; i++)); do echo \"$i\"; done))\n  count=0\n\
    \  for ((i=0; i<$n; i++)); do\n    for ((j=0; j<$n; j++)); do\n      for ((k=0;\
    \ k<$n; k++)); do\n        if (( $i == $j && $j == $k )); then\n          continue\n\
    \        fi\n        if (( $a[ $i ] + $a[ $j ] + $a[ $k ] )); then\n         \
    \ count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=$(\
    \ seq 1 $n )\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n     \
    \ for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ];\
    \ then\n          count=$(( $count + 1 ))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local\
    \ k\n  a=$( seq 1 $n )\n  for i in $(seq 1 $n); do\n    for j in $(seq 1 $n);\
    \ do\n      for k in $(seq 1 $n); do\n        if [ $i -le $j -a $j -le $k -a $i\
    \ -le $k ]; then\n          if [[ $(a[i]+a[j]+a[k]) -eq 3 ]]; then\n         \
    \   echo $(( $i + $j + $k ))\n          fi\n        fi\n      done\n    done\n\
    \  done", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo -n $i*$i-$i+1;\
    \ done))\n  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ [ $i -le $j -a $j -le $k ]; then\n          let count=$count+1\n        fi\n\
    \      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo \"$i\"; done))\n  local count=0\n  local j=0\n\
    \  local k=0\n  local sum=0\n  local i\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    if [ $((sum % 3)) -eq 0 ]; then\n      count=$((count+1))\n      j=$((j+1))\n\
    \    fi\n    if [ $((sum % 3)) -eq 1 ]; then\n      k=$((k+1))\n    fi\n  done\n\
    \  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $((i*i-i+1)); done))\n  local count=0\n  local i\n  local j\n  local k\n  for\
    \ ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n;\
    \ k++)); do\n        if (( a[i] < a[j] && a[i] < a[k] )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n \
    \   local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n    local\
    \ count=0\n    local j=0\n    local k=0\n    while [ $j -le $n ]; do\n       \
    \ local i\n        i=$((j+1))\n        if [ $i -eq $n ]; then\n            i=$((j-1))\n\
    \        fi\n        if [ $i -le $n ]; then\n            local j\n           \
    \ j=$((k+1))\n            if [ $j -le $n ]; then\n                j=$((k-1))\n\
    \            fi\n            if [ $j -le $n ]; then\n                local k\n\
    \                k=$((j+1))\n                if [ $k -le $n ]; then\n        \
    \            k=$((k-1))\n                fi\n                if [ $k -le $n ];\
    \ then\n                    count=$((count+1))\n                fi\n         \
    \   fi\n        fi\n    done\n    echo $count", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local j=0\n  local k=0\n\
    \  local sum=0\n  local count=0\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count+1))\n  done\n  for i in \"${a[@]}\"; do\n    sum=$((sum+i))\n\
    \    count=$((count-1))\n  done\n  for i in \"${a[@", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local\
    \ i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in\
    \ \"${a[@]}\"; do\n        if (( $i + $j + $k == $((i*i*i)) )); then\n       \
    \   count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n\
    \    ))\n  local j=0\n  local k=0\n  local sum=0\n  local count=0\n  for i in\
    \ \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n  for i in \"${a[@]}\"\n  do\n\
    \    count=$((count + 1))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum\
    \ - i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n\
    \  for i in \"${a[@]}\"\n  do\n    sum=$((sum - i))\n  done\n  for i in \"${a[@]}\"\
    \n  do\n    sum=$((sum + i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum\
    \ - i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n\
    \  for i in \"${a[@]}\"\n  do\n    sum=$((sum - i))\n  done\n  for i in \"${a[@]}\"\
    \n  do\n    sum=$((sum + i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum\
    \ - i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n\
    \  for i in \"${a[@]}\"\n  do\n    sum=$((sum - i))\n  done\n  for i in \"${a[@]}\"\
    \n  do\n    sum=$((sum + i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum\
    \ - i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n\
    \  for i in \"${a[@]}\"\n  do\n    sum=$((sum - i))\n  done\n  for i in \"${a[@]}\"\
    \n  do\n    sum=$((sum + i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum\
    \ - i))\n  done\n  for i in \"${a[@]}\"\n  do\n    sum=$((sum + i))\n  done\n\
    \  for i in \"${a[@]}\"\n  do\n    sum=$((sum - i))\n", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count\n  local max\n\
    \  local triple\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n  \
    \    for k in \"${a[@]}\"; do\n        triple=$((i * i - i + 1))\n        if ((\
    \ $triple % 3 == 0 )); then\n          count=$(( $count + 1 ))\n        fi\n \
    \     done\n    done\n  done\n  max=$(( $count > $max ? $count : $max ))\n  echo\
    \ $max", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local i\n\
    \  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j && j == k )); then\n          continue\n        fi\n   \
    \     if (( i == j && k == i )); then\n          continue\n        fi\n      \
    \  if (( j == k && i == j )); then\n          continue\n        fi\n        if\
    \ (( j == k && j == k )); then\n          continue\n        fi\n        if ((\
    \ j == k && k == i )); then\n          continue\n        fi\n        if (( i ==\
    \ k && i == j )); then\n          continue\n        fi\n        if (( i == k &&\
    \ j == k )); then\n          continue\n        fi\n        if (( i == k && k ==\
    \ i )); then\n          continue\n        fi\n        if (( j == k && i == k ));\
    \ then\n          continue\n        fi\n        if (( j == k && j == k )); then\n\
    \          continue\n        fi\n        if (( j == k && k == i )); then\n   \
    \       continue\n        fi\n        if (( i == k && i == k )); then\n      \
    \    continue\n        fi\n        if (( i == k && i == k )); then\n         \
    \ continue\n        fi\n        if (( i == k && i == k )); then\n          continue\n\
    \        fi\n        if (( i == k && i == k )); then\n          continue\n   \
    \     fi\n        if (( i == k && i == k )); then\n          continue\n      \
    \  fi\n        if (( i == k && i == k )); then\n          continue\n        fi\n\
    \        if (( i == k && i == k )); then\n          continue\n        fi\n   \
    \     if (( i == k && i == k )); then\n          continue\n        fi\n      \
    \  if (( i == k && i == k )); then\n          continue\n        fi\n        if\
    \ (( i == k && i == k )); then\n          continue\n        fi\n        if ((\
    \ i == k && i == k )); then\n          continue\n        fi\n        if (( i ==\
    \ k && i == k )); then\n          continue\n        fi\n        if (( i == k &&\
    \ i == k )); then\n          continue\n        fi", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++))\n    do\n      echo $((i*i - i + 1))\n    done))\n  local\
    \ count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for\
    \ j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i < $j\
    \ && $j < $k && $i < $k )); then\n          count=$((count+1))\n        fi\n \
    \     done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n    done))\n  local count=0\n\
    \  local i\n  for i in \"${a[@]}\"; do\n    local j\n    for j in \"${a[@]}\"\
    ; do\n      local k\n      for k in \"${a[@]}\"; do\n        if (( i*i - i + j\
    \ + k == 0 )); then\n          count=$((count+1))\n        fi\n      done\n  \
    \  done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local\
    \ i\n  local j\n  local k\n  local count\n  for i in $(seq 1 $n); do\n    for\
    \ j in $(seq 1 $n); do\n      for k in $(seq 1 $n); do\n        if [ $i -le $j\
    \ -a $j -le $k -a $i -le $k ]; then\n          count=$(( $count + 1 ))\n     \
    \   fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local i\n  local j\n  local k\n  local count\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n \
    \   local a=($(seq 1 $n))\n    local count=0\n    local i\n    local j\n    local\
    \ k\n    local sum\n    local count1\n    local count2\n    local count3\n   \
    \ local count4\n    local count5\n    local count6\n    local count7\n    local\
    \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
    \    local count13\n    local count14\n    local count15\n    local count16\n\
    \    local count17\n    local count18\n    local count19\n    local count20\n\
    \    local count21\n    local count22\n    local count23\n    local count24\n\
    \    local count25\n    local count26\n    local count27\n    local count28\n\
    \    local count29\n    local count30\n    local count31\n    local count32\n\
    \    local count33\n    local count34\n    local count35\n    local count36\n\
    \    local count37\n    local count38\n    local count39\n    local count40\n\
    \    local count41\n    local count42\n    local count43\n    local count44\n\
    \    local count45\n    local count46\n    local count47\n    local count48\n\
    \    local count49\n    local count50\n    local count51\n    local count52\n\
    \    local count53\n    local count54\n    local count55\n    local count56\n\
    \    local count57\n    local count58\n    local count59\n    local count60\n\
    \    local count61\n    local count62\n    local count63\n    local count64\n\
    \    local count65\n    local count66\n    local count67\n    local count68\n\
    \    local count69\n    local count70\n    local count71\n    local count72\n\
    \    local count73\n    local count74\n    local count75\n    local count76\n\
    \    local count77\n    local count78\n    local count79\n    local count80\n\
    \    local count81\n    local count82\n    local count83\n    local count84\n\
    \    local count85\n    local count86\n    local count87\n    local count88\n\
    \    local count89\n    local count90\n    local count91\n    local count92\n\
    \    local count93\n    local count94\n    local count95\n", "  local n=$1\n \
    \ local a=($(for ((i=1; i<=$n; i++)); do echo $i; done))\n  local count=0\n  local\
    \ i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in\
    \ \"${a[@]}\"; do\n        if (( i*i - i + j + k )); then\n          count=$((\
    \ count+1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "    local\
    \ n=$1\n    local a=($(seq 1 $n))\n    local count=0\n    local i\n    local j\n\
    \    local k\n    \n    for ((i=1; i<=$n; i++))\n    do\n        for ((j=1; j<=$n;\
    \ j++))\n        do\n            for ((k=1; k<=$n; k++))\n            do\n   \
    \             if (( ${a[i]} + ${a[j]} + ${a[k]} ))\n                then\n   \
    \                 count=$(( $count + 1 ))\n                fi\n            done\n\
    \        done\n    done\n    echo $count", "  local n=$1\n  local a\n  a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i - i + 1)); done))\n  local count=0\n  local\
    \ i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in\
    \ \"${a[@]}\"; do\n        if (( $i + $j + $k == $((i*i*i)) )); then\n       \
    \   count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local\
    \ count\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k\
    \ in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $((i*i-i+1)); done))\n  local count=0\n  local triples=0\n  local triple\n \
    \ for ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1;\
    \ k<=$n; k++)); do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} % 3 == 0 )); then\n\
    \          triples=$((triples + 1))\n          triple=$((${a[i]} + ${a[j]} + ${a[k]}))\n\
    \        fi\n      done\n    done\n  done\n  echo $triples", "  local n=$1\n \
    \ local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1))+$((i+1))+$((i+2)); done))\n\
    \  local count=0\n  local triple=0\n  local triples=0\n  local triples_sum=0\n\
    \  local triples_sum2=0\n  local triples_sum3=0\n  local triples_sum4=0\n  local\
    \ triples_sum5=0\n  local triples_sum6=0\n  local triples_sum7=0\n  local triples_sum8=0\n\
    \  local triples_sum9=0\n  local triples_sum10=0\n  local triples_sum11=0\n  local\
    \ triples_sum12=0\n  local triples_sum13=0\n  local triples_sum14=0\n  local triples_sum15=0\n\
    \  local triples_sum16=0\n  local triples_sum17=0\n  local triples_sum18=0\n \
    \ local triples_sum19=0\n  local triples_sum20=0\n  local triples_sum21=0\n  local\
    \ triples_sum22=0\n  local triples_sum23=0\n  local triples_sum24=0\n  local triples_sum25=0\n\
    \  local triples_sum26=0\n  local triples_sum27=0\n  local triples_sum28=0\n \
    \ local triples_sum29=0\n  local triples_sum30=0\n  local triples_sum31=0\n  local\
    \ triples_sum32=0\n  local triples_sum33=0\n  local triples_sum34=0\n  local triples_sum35=0\n\
    \  local triples_sum36=0\n  local triples_sum37=0\n  local triples_sum38=0\n \
    \ local triples_sum39=0\n  local triples_sum40=0\n  local triples_sum41=0\n  local\
    \ triples_sum42=0\n  local triples_sum43=0\n  local triples_sum44=0\n  local triples_sum45=0\n\
    \  local triples_sum46=0\n  local triples_sum47=0\n  local triples_sum48=0\n \
    \ local triples_sum49=0\n  local triples_sum50=0\n  local triples_sum51=0\n  local\
    \ triples_sum52=0\n  local triples_sum53=0\n  local triples_sum54=0\n  local triples_sum55=0\n\
    \  local triples_sum56=0\n  local triples_sum57=0\n  ", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-1))\n    done))\n  local\
    \ count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n \
    \   if [ $i -le $n ]; then\n      j=$((i+1))\n      k=$((j+1))\n      if [ $j\
    \ -le $n ]; then\n        if [ $k -le $n ]; then\n          count=$((count+1))\n\
    \        fi\n      fi\n    fi\n  done\n  echo $count", "  local n=$1\n  local\
    \ a\n  local i\n  local j\n  local k\n  local count\n  a=$( seq 1 $n )\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if [ $i -le $j -a $j -le $k ]; then\n          count=$(( $count\
    \ + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a\n  a=($(for ((i=1; i<=$n; i++)) ; do echo $((i * i - i + 1)); done))\n\
    \  local count=0\n  for i in ${a[@]} ; do\n    for j in ${a[@]} ; do\n      for\
    \ k in ${a[@]} ; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ] ; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "    local n=$1\n    local a=($(seq 1 $n))\n    local count=0\n   \
    \ local i\n    local j\n    local k\n    for i in \"${a[@]}\"; do\n        for\
    \ j in \"${a[@]}\"; do\n            for k in \"${a[@]}\"; do\n               \
    \ if (( i < j < k )); then\n                    count=$(( $count + 1 ))\n    \
    \            fi\n            done\n        done\n    done\n    echo \"$count\"",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-1)+i+1) ; done))\n\
    \  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i*i+j*j+k*k == i*i*i*k ));\
    \ then\n          (( count++ ))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i\
    \ * i - i + 1)); done))\n  local i\n  local j\n  local k\n  local sum\n  local\
    \ count\n  local triple\n  local count1\n  local count2\n  local count3\n  for\
    \ i in \"${!a[@]}\"; do\n    sum=$(( ${a[i]} + ${a[j]} + ${a[k]} ))\n    count=$((\
    \ ${sum} % 3 ))\n    if [[ $count -eq 0 ]]; then\n      triple=$(( ${a[i]} + ${a[j]}\
    \ + ${a[k]} ))\n      count1=$(( ${triple} % 3 ))\n      count2=$(( ${triple}\
    \ % 3 ))\n      count3=$(( ${triple} % 3 ))\n      if [[ $count1 -eq 0 ]]; then\n\
    \        echo $triple\n      fi\n    fi\n  done", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local i=0\n  local j=0\n\
    \  local k=0\n  local triples=0\n  while [ $i -lt $n ]; do\n    local tmp=$((\
    \ a[i] + (a[j] + a[k]) ))\n    if [ $tmp -eq 3 ]; then\n      triples=$((triples\
    \ + 1))\n      i=$((i+1))\n      j=$((j+1))\n      k=$((k+1))\n    elif [ $tmp\
    \ -eq 0 ]; then\n      i=$((i+1))\n      j=$((j+1))\n      k=$((k+1))\n    elif\
    \ [ $tmp -eq 1 ]; then\n      i=$((i+1))\n      k=$((k+1))\n    else\n      i=$((i+1))\n\
    \      j=$((j+1))\n    fi\n  done\n  echo $triples", "  local n=$1\n  local a\n\
    \  local i\n  local j\n  local k\n  a=$( seq 1 $n )\n  for i in $(seq 1 $n); do\n\
    \    for j in $(seq 1 $n); do\n      for k in $(seq 1 $n); do\n        if [ $i\
    \ -le $j ] && [ $j -le $k ] && [ $i -le $k ]; then\n          if [[ $(( $a[i]\
    \ + $a[j] + $a[k] )) -eq 3 ]]; then\n            echo $(( $a[i] + $a[j] + $a[k]\
    \ ))\n          fi\n        fi\n      done\n    done\n  done", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)) ; do echo -n \"a[\"$i\"]=\"; done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"; do\n    local j\n    for j in \"\
    ${a[@]}\"; do\n      local k\n      for k in \"${a[@]}\"; do\n        if [ $i\
    \ -le $j -a $j -le $k ] ; then\n          count=$((count+1))\n        fi\n   \
    \   done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1;\
    \ i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local i\n  local\
    \ j\n  local k\n  for ((i=1; i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n\
    \      for ((k=1; k<=$n; k++)); do\n        if (( ${a[i]} + ${a[j]} + ${a[k]}\
    \ )) % 3 == 0 then\n          count=$((count+1))\n        fi\n      done\n   \
    \ done\n  done\n  echo $count", "    local n=$1\n    local a=($(for ((i=1; i<=$n;\
    \ i++))\n    do\n        echo $((i*i-i+1))\n    done))\n    local count=0\n  \
    \  local j=0\n    local k=0\n    local i\n    local j\n    local k\n    local\
    \ sum\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n    local\
    \ sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n    local\
    \ sum10\n    local sum11\n    local sum12\n    local sum13\n    local sum14\n\
    \    local sum15\n    local sum16\n    local sum17\n    local sum18\n    local\
    \ sum19\n    local sum20\n    local sum21\n    local sum22\n    local sum23\n\
    \    local sum24\n    local sum25\n    local sum26\n    local sum27\n    local\
    \ sum28\n    local sum29\n    local sum30\n    local sum31\n    local sum32\n\
    \    local sum33\n    local sum34\n    local sum35\n    local sum36\n    local\
    \ sum37\n    local sum38\n    local sum39\n    local sum40\n    local sum41\n\
    \    local sum42\n    local sum43\n    local sum44\n    local sum45\n    local\
    \ sum46\n    local sum47\n    local sum48\n    local sum49\n    local sum50\n\
    \    local sum51\n    local sum52\n    local sum53\n    local sum54\n    local\
    \ sum55\n    local sum56\n    local sum57\n    local sum58\n    local sum59\n\
    \    local sum60\n    local sum61\n    local sum62\n    local sum63\n    local\
    \ sum64\n    local sum65\n    local sum66\n    local sum67\n    local sum68\n\
    \    local sum69\n    local sum70\n    local sum71\n    local sum72\n    local\
    \ sum73\n    local sum74\n    local sum75\n    local sum76\n    local sum77\n\
    \    local sum78\n    local sum79\n    local sum80\n    local sum81\n    local\
    \ sum82\n    local sum83\n    local sum84\n    local sum85\n    local sum86\n\
    \    local sum87\n    local sum88\n    local sum89\n    ", "  local n=$1\n  local\
    \ a\n  local i\n  local j\n  local k\n  local count\n  a=($(for ((i=1; i<=$n;\
    \ i++)); do echo $((i*i - i + 1)); done))\n  count=0\n  for ((i=0; i<$n; i++));\
    \ do\n    for ((j=0; j<$n; j++)); do\n      for ((k=0; k<$n; k++)); do\n     \
    \   if (( ${a[i]} + ${a[j]} + ${a[k]} ) % 3 == 0 ) ; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i = 1; i <= n; i++)) ; do echo $((i * i - i + 1)); done))\n  local\
    \ count=0\n  for i in ${a[@]}; do\n    for j in ${a[@]}; do\n      for k in ${a[@]};\
    \ do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ] ; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo $((i*i-1))\n    done))\n  local\
    \ j=0\n  local k=0\n  local sum=0\n  local count=0\n  for i in \"${a[@]}\"; do\n\
    \    sum=$((sum+i))\n    if [ $((sum%3)) -eq 0 ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  echo $count", "  local n=$1\n  local a\n  local i\n  local\
    \ j\n  local k\n  local count\n  a=($(for ((i=1; i<=$n; i++)) ; do echo \"$i\"\
    \ ; done))\n  count=0\n  for ((i=0; i<$n; i++)) ; do\n    for ((j=0; j<$n; j++))\
    \ ; do\n      for ((k=0; k<$n; k++)) ; do\n        if (( $i == $j && $j == $k\
    \ )) ; then\n          continue\n        fi\n        if (( $i == $j && $j != $k\
    \ )) ; then\n          continue\n        fi\n        if (( $i != $j && $j == $k\
    \ )) ; then\n          continue\n        fi\n        if (( $i != $j && $j != $k\
    \ )) ; then\n          continue\n        fi\n        if (( $a[ $i ] == $a[ $j\
    \ ] && $a[ $i ] == $a[ $k ]) ) ; then\n          count=$(( $count + 1 ))\n   \
    \     fi\n        if (( $a[ $i ] != $a[ $j ] && $a[ $i ] != $a[ $k ]) ) ; then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n \
    \ local count\n  a=$( seq 1 $n )\n  for i in $a; do\n    for j in $a; do\n   \
    \   for k in $a; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n\
    \          count=$(expr $i + $j + $k + $i * $j * $k - $i * $j * $k + $i * $k *\
    \ $j + $j * $k * $i - $i * $k * $j + $j * $k * $k - $i * $j * $k * $k + $i * $k\
    \ * $j + $j * $k * $k + $i * $j * $k * $k + $i * $j * $k * $k + $j * $k * $k *\
    \ $i - $i * $j * $k * $k * $j + $j * $k * $k * $k - $i * $j * $k * $k * $k + $i\
    \ * $j * $k * $k * $k + $j * $k * $k * $k * $i - $i * $j * $k * $k * $k * $j +\
    \ $j * $k * $k * $k * $k - $i * $j * $k * $k * $k * $k + $i * $j * $k * $k * $k\
    \ * $k + $j * $k * $k * $k * $k * $i - $i * $j * $k * $k * $k * $j * $k + $j *\
    \ $k * $k * $k * $k * $k - $i * $j * $k * $k * $k * $k * $k + $i * $j * $k * $k\
    \ * $k * $k * $k + $j * $k * $k * $k * $k * $k * $i - $i * $j * $k * $k * $k *\
    \ $j * $k * $k + $j * $k * $k * $k * $k * $k * $k - $i * $j * $k * $k * $k * $k\
    \ * $k * $k + $i * $j * $k * $k * $k * $k * $k * $k", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++))\n  do\n    echo -n \"$i\"\n  done))\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local sum=0\n  while [ $i -lt $n ]; do\n    sum=$((sum +\
    \ $a[i]))\n    i=$((i+1))\n  done\n  while [ $j -lt $n ]; do\n    sum=$((sum +\
    \ $a[j]))\n    j=$((j+1))\n  done\n  while [ $k -lt $n ]; do\n    sum=$((sum +\
    \ $a[k]))\n    k=$((k+1))\n  done\n  echo $((sum % 3))", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if [ $i -le $j -a $j -le $k -a $i -le $k ]; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count=0\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( $i < $j && $j < $k && $i < $k )); then\n          count=$(( $count\
    \ + 1 ))\n        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-i+1)); done))\n  local\
    \ count=0\n  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n \
    \   if [ $((j+k)) -eq $((i+j)) ]; then\n      count=$((count+1))\n    fi\n   \
    \ j=$((j+1))\n    k=$((k+1))\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( i == j && i == k )); then\n          continue\n        fi\n        if ((\
    \ i == j || i == k || j == k )); then\n          continue\n        fi\n      \
    \  if (( i == j && j == k )); then\n          continue\n        fi\n        if\
    \ (( i == j || i == k || j == k )); then\n          continue\n        fi\n   \
    \     if (( i == j && k == k )); then\n          continue\n        fi\n      \
    \  if (( i == j || i == k || k == k )); then\n          continue\n        fi\n\
    \        if (( i == j && j == k && k == k )); then\n          continue\n     \
    \   fi\n        if (( i == j || i == k || j == k || k == k )); then\n        \
    \  continue\n        fi\n        if (( i == j && j == k && k == k )); then\n \
    \         continue\n        fi\n        if (( i == j && k == k && j == k )); then\n\
    \          continue\n        fi\n        if (( i == j && j == k && k == k ));\
    \ then\n          continue\n        fi\n        if (( i == j && j == k && k ==\
    \ k )); then\n          continue\n        fi\n        if (( i == j && j == k &&\
    \ k == k )); then\n          continue\n        fi\n        if (( i == j && j ==\
    \ k && k == k )); then\n          continue\n        fi\n        if (( i == j &&\
    \ j == k && k == k )); then\n          continue\n        fi\n        if (( i ==\
    \ j && j == k && k == k )); then\n          continue\n        fi\n        if ((\
    \ i == j && j == k && k == k )); then\n          continue\n        fi\n      \
    \  if (( i == j && j == k && k == k )); then\n          continue\n        fi\n\
    \        if (( i == j && j == k && k == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k && k == k )); then\n          continue\n\
    \        fi\n        if ((", "  local n=$1\n  local a=($(seq 1 $n))\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i*i-i+1)); done))\n  local count=0\n  local\
    \ triples=0\n  local i\n  for i in \"${a[@]}\"; do\n    triples=$((triples + $i))\n\
    \  done\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k\
    \ in \"${a[@]}\"; do\n        if (( $i == $j && $j == $k )); then\n          triples=$((triples\
    \ + $i))\n        fi\n      done\n    done\n  done\n  echo $triples", "  local\
    \ n=$1\n  local a=($(seq 1 $n))\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ sum=0\n  while [ $i -lt $n ]; do\n    sum=$(( $sum + $a[i] ))\n    i=$(( $i\
    \ + 1 ))\n  done\n  while [ $j -lt $n ]; do\n    sum=$(( $sum + $a[j] ))\n   \
    \ j=$(( $j + 1 ))\n  done\n  while [ $k -lt $n ]; do\n    sum=$(( $sum + $a[k]\
    \ ))\n    k=$(( $k + 1 ))\n  done\n  echo $(( $sum % 3 ))", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1)+i+1); done))\n  local count=0\n\
    \  local j=0\n  local k=0\n  local i\n  for i in \"${a[@]}\"; do\n    count=$((count+1))\n\
    \    k=$(echo $((i*i-1)+i+1))\n    j=$((k+1))\n    if [ $((i*i-1)+i+1) -eq $((k+1))\
    \ ]; then\n      count=$((count+1))\n      j=$((k+1))\n    fi\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local b=($(seq 1 $n))\n \
    \ local c=($(seq 1 $n))\n  local i\n  local j\n  local k\n  local count\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      for k in \"${c[@]}\"\
    ; do\n        if (( i + j + k == $((i * i * i + j * j + k * k)) )) ; then\n  \
    \        count=$((count + 1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a\n  local i\n  local j\n  local k\n  a=$( seq\
    \ 1 $n )\n  for i in $(seq 1 $n); do\n    for j in $(seq 1 $n); do\n      for\
    \ k in $(seq 1 $n); do\n        if [ $i -le $j ] && [ $j -le $k ] && [ $i -le\
    \ $k ]; then\n          if [[ $a[ $i ] -eq $a[ $j ] ]] && [[ $a[ $i ] -eq $a[\
    \ $k ] ]]; then\n            echo $(( $a[ $i ] + $a[ $j ] + $a[ $k ] ))\n    \
    \      fi\n        fi\n      done\n    done\n  done", "  local n=$1\n  local a=($(for\
    \ ((i=1; i<=$n; i++)); do echo -n \"$i\"; done))\n  local count=0\n  local j=0\n\
    \  local k=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n  \
    \  j=$((i+1))\n    for k in \"${a[@]}\"; do\n      j=$((k+1))\n      if (( i*i\
    \ - j*j - k*k )); then\n        ((count++))\n      fi\n    done\n  done\n  echo\
    \ $count", "    local n=$1\n    local a=($(seq 1 $n))\n    local i\n    local\
    \ j\n    local k\n    local count=0\n    local max=0\n    local max1\n    local\
    \ max2\n    local max3\n    local max4\n    local max5\n    local max6\n    local\
    \ max7\n    local max8\n    local max9\n    local max10\n    local max11\n   \
    \ local max12\n    local max13\n    local max14\n    local max15\n    local max16\n\
    \    local max17\n    local max18\n    local max19\n    local max20\n    local\
    \ max21\n    local max22\n    local max23\n    local max24\n    local max25\n\
    \    local max26\n    local max27\n    local max28\n    local max29\n    local\
    \ max30\n    local max31\n    local max32\n    local max33\n    local max34\n\
    \    local max35\n    local max36\n    local max37\n    local max38\n    local\
    \ max39\n    local max40\n    local max41\n    local max42\n    local max43\n\
    \    local max44\n    local max45\n    local max46\n    local max47\n    local\
    \ max48\n    local max49\n    local max50\n    local max51\n    local max52\n\
    \    local max53\n    local max54\n    local max55\n    local max56\n    local\
    \ max57\n    local max58\n    local max59\n    local max60\n    local max61\n\
    \    local max62\n    local max63\n    local max64\n    local max65\n    local\
    \ max66\n    local max67\n    local max68\n    local max69\n    local max70\n\
    \    local max71\n    local max72\n    local max73\n    local max74\n    local\
    \ max75\n    local max76\n    local max77\n    local max78\n    local max79\n\
    \    local max80\n    local max81\n    local max82\n    local max83\n    local\
    \ max84\n    local max85\n    local max86\n    local max87\n    local max88\n\
    \    local max89\n    local max90\n    local max91\n    local max92\n    local\
    \ max93\n    local max94\n    local max95", "  local n=$1\n  local a\n  local\
    \ i\n  local j\n  local k\n  local count\n  a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $i; done))\n  count=0\n  for ((i=0; i<$n; i++)); do\n    for ((j=0; j<$n; j++));\
    \ do\n      for ((k=0; k<$n; k++)); do\n        if (( $i == $j && $j == $k ));\
    \ then\n          continue\n        fi\n        if (( $i == $j || $j == $k ||\
    \ $i == $k )); then\n          continue\n        fi\n        if (( $a[ $i ] +\
    \ $a[ $j ] + $a[ $k ] )); then\n          count=$((count+1))\n        fi\n   \
    \   done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(for ((i\
    \ = 1; i <= n; i++)) ; do echo -n \"$i\" ; done))\n  local count=0\n  local i\n\
    \  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n\
    \      for k in \"${a[@]}\"; do\n        if (( i == j && i == k )) ; then\n  \
    \        continue\n        fi\n        if (( i == j && j == k )) ; then\n    \
    \      continue\n        fi\n        if (( j == k )) ; then\n          continue\n\
    \        fi\n        if (( i == k )) ; then\n          continue\n        fi\n\
    \        if (( i == j && j == k )) ; then\n          continue\n        fi\n  \
    \      if (( i == j && i == k )) ; then\n          continue\n        fi\n    \
    \    if (( j == k )) ; then\n          continue\n        fi\n        if (( i ==\
    \ k )) ; then\n          continue\n        fi\n        if (( i == j && j == k\
    \ )) ; then\n          continue\n        fi\n        if (( i == j && i == k ))\
    \ ; then\n          continue\n        fi\n        if (( j == k )) ; then\n   \
    \       continue\n        fi\n        if (( i == k )) ; then\n          continue\n\
    \        fi\n        if (( i == j && j == k )) ; then\n          continue\n  \
    \      fi\n        if (( i == j && i == k )) ; then\n          continue\n    \
    \    fi\n        if (( j == k )) ; then\n          continue\n        fi\n    \
    \    if (( i == k )) ; then\n          continue\n        fi\n        if (( i ==\
    \ j && j == k )) ; then\n          continue\n        fi\n        if (( i == j\
    \ && i == k )) ; then\n          continue\n        fi\n        if (( j == k ))\
    \ ; then\n          continue\n        fi\n        if (( i == k )) ; then\n   \
    \       continue\n        fi\n        if (( i == j && j == k )) ; then\n     \
    \     continue\n        fi\n        if (( i == j && i == k )) ; then\n       \
    \   continue\n        fi\n        if (( j == k )) ; then\n          continue\n\
    \        fi\n        if (( i == k )) ; then\n          continue\n        fi\n\
    \        if (( i == j && j == k )) ; then\n          continue\n        fi\n  \
    \      if (( i == j && i == k )) ; then\n          continue\n        fi\n    \
    \    if (( j == k )) ; then\n          continue\n        fi\n        if (( i ==\
    \ k )) ; then\n", "  local n=$1\n  local a=($(seq 1 $n))\n  local count=0\n  local\
    \ i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( $i > $j && $i > $k )); then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local triples=0\n  while [ $i -lt $n ]; do\n    local j=$((i+1))\n\
    \    local k=$((j+1))\n    local sum=$((i*i+j*j+k*k))\n    if [ $sum -eq $((3*k))\
    \ ]; then\n      triples=$((triples+1))\n    fi\n    i=$j\n  done\n  echo $triples",
  "  local n=$1\n  local a=($(seq 1 $n))\n  local i=0\n  local j=0\n  local k=0\n\
    \  local sum=0\n  while [ $i -lt $n ]; do\n    sum=$((sum + $a[i]))\n    i=$((i\
    \ + 1))\n  done\n  while [ $j -lt $n ]; do\n    sum=$((sum + $a[j]))\n    j=$((j\
    \ + 1))\n  done\n  while [ $k -lt $n ]; do\n    sum=$((sum + $a[k]))\n    k=$((k\
    \ + 1))\n  done\n  sum=$((sum % 3))\n  echo $sum", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( $i < $j && $j < $k && $i < $k )); then\n          count=$(( $count + 1 ))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "    local n=$1\n \
    \   local a=($(for ((i=1; i<=$n; i++)) ; do echo $((i*i-i+1)) ; done))\n    local\
    \ count=0\n    local triple=0\n    local triple1=0\n    local triple2=0\n    local\
    \ triple3=0\n    local triple4=0\n    local triple5=0\n    local triple6=0\n \
    \   local triple7=0\n    local triple8=0\n    local triple9=0\n    local triple10=0\n\
    \    local triple11=0\n    local triple12=0\n    local triple13=0\n    local triple14=0\n\
    \    local triple15=0\n    local triple16=0\n    local triple17=0\n    local triple18=0\n\
    \    local triple19=0\n    local triple20=0\n    local triple21=0\n    local triple22=0\n\
    \    local triple23=0\n    local triple24=0\n    local triple25=0\n    local triple26=0\n\
    \    local triple27=0\n    local triple28=0\n    local triple29=0\n    local triple30=0\n\
    \    local triple31=0\n    local triple32=0\n    local triple33=0\n    local triple34=0\n\
    \    local triple35=0\n    local triple36=0\n    local triple37=0\n    local triple38=0\n\
    \    local triple39=0\n    local triple40=0\n    local triple41=0\n    local triple42=0\n\
    \    local triple43=0\n    local triple44=0\n    local triple45=0\n    local triple46=0\n\
    \    local triple47=0\n    local triple48=0\n    local triple49=0\n    local triple50=0\n\
    \    local triple51=0\n    local triple52=0\n    local triple53=0\n    local triple54=0\n\
    \    local triple55=0\n    local triple56=0\n    local triple57=0\n    local triple58=0\n\
    \    local triple59=0\n    local triple60=0\n    local triple61=0\n    local triple62=0\n\
    \    local triple63=0\n    local triple64=0\n    local triple65=0\n    local triple66=0\n\
    \    local triple67=0\n    local triple68=0\n    local triple69=0\n    local triple70=0\n\
    \    local triple71=0\n    local triple72=0\n    local triple73=0\n    local triple74=0\n\
    \    local triple75=0\n    local triple76=0\n    local triple77=0\n    local triple78=0\n\
    \    local ", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i*i-1))$((i*i)+i)$((i*i)+i+1);\
    \ done))\n  local count=0\n  for i in ${a[@]}; do\n    for j in ${a[@]}; do\n\
    \      for k in ${a[@]}; do\n        if [ $i -le $j -a $j -le $k ]; then\n   \
    \       let count+=1\n        fi\n      done\n    done\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i = 1; i <= n; i++)) ; do echo -n $i ; done |\
    \ sort -n))\n  local i\n  local j\n  local k\n  local count\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( i + j + k % 3 == 0 )); then\n          count=$(( count + 1 ))\n        fi\n\
    \      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n \
    \ local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n", "  local\
    \ n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $i; done))\n  local count=0\n\
    \  local i\n  local j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le\
    \ $k ]; then\n          count=$((count+1))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ;\
    \ do echo -n \"$i\" ; done))\n  local count=0\n  local i\n  local j\n  local k\n\
    \  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"\
    ; do\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && i == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || j == k )); then\n          continue\n     \
    \   fi\n        if (( i == j && j == k )); then\n          continue\n        fi\n\
    \        if (( i == j || i == k || ", "  local n=$1\n  local a=($(for ((i=1; i<=$n;\
    \ i++)) ; do echo -n \"$i\" ; done))\n  local count=0\n  local i\n  local j\n\
    \  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for\
    \ k in \"${a[@]}\"; do\n        if (( i*i - i + j*j - k*k == 0 )); then\n    \
    \      count=$(( count+1 ))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(seq 1 $n))\n  local i\n  local j\n  local\
    \ k\n  local count\n  local triple\n  for i in \"${a[@]}\"; do\n    for j in \"\
    ${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( $i == $j && $j ==\
    \ $k )); then\n          triple=$(( $i * $i - $i + $j * $j - $j + $k * $k - $k\
    \ + 1 ))\n          count=$(( $count + 1 ))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++))\n\
    \    do\n      echo -n \"a[\"$i\"]=\"\n      echo -n \"$((i*i-i+1))\"\n    done))\n\
    \  local count=0\n  local i\n  for i in \"${a[@]}\"\n  do\n    local j\n    for\
    \ j in \"${a[@]}\"\n    do\n      local k\n      for k in \"${a[@]}\"\n      do\n\
    \        if [ \"$i\" -eq \"$j\" -a \"$j\" -eq \"$k\" -a \"$i\" -eq \"$k\" ]; then\n\
    \          count=$((count+1))\n        fi\n      done\n    done\n  done\n  echo\
    \ $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i *\
    \ i - i + 1)); done))\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  while [ $i -lt $n ]; do\n    local count=0\n    local j=0\n    local k=0\n\
    \    while [ $j -lt $n ]; do\n      local k=0\n      while [ $k -lt $n ]; do\n\
    \        local count=0\n        if [ $(( $i + $j + $k )) -eq $(( $i * $i * $i\
    \ )) ]; then\n          count=$(( $count + 1 ))\n        fi\n        (( k++ ))\n\
    \      done\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n  echo $count",
  "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1));\
    \ done))\n  local count=0\n  local triple=0\n  local triples=0\n  local triples_sum=0\n\
    \  local triples_sum2=0\n  local triples_sum3=0\n  local triples_sum4=0\n  local\
    \ triples_sum5=0\n  local triples_sum6=0\n  local triples_sum7=0\n  local triples_sum8=0\n\
    \  local triples_sum9=0\n  local triples_sum10=0\n  local triples_sum11=0\n  local\
    \ triples_sum12=0\n  local triples_sum13=0\n  local triples_sum14=0\n  local triples_sum15=0\n\
    \  local triples_sum16=0\n  local triples_sum17=0\n  local triples_sum18=0\n \
    \ local triples_sum19=0\n  local triples_sum20=0\n  local triples_sum21=0\n  local\
    \ triples_sum22=0\n  local triples_sum23=0\n  local triples_sum24=0\n  local triples_sum25=0\n\
    \  local triples_sum26=0\n  local triples_sum27=0\n  local triples_sum28=0\n \
    \ local triples_sum29=0\n  local triples_sum30=0\n  local triples_sum31=0\n  local\
    \ triples_sum32=0\n  local triples_sum33=0\n  local triples_sum34=0\n  local triples_sum35=0\n\
    \  local triples_sum36=0\n  local triples_sum37=0\n  local triples_sum38=0\n \
    \ local triples_sum39=0\n  local triples_sum40=0\n  local triples_sum41=0\n  local\
    \ triples_sum42=0\n  local triples_sum43=0\n  local triples_sum44=0\n  local triples_sum45=0\n\
    \  local triples_sum46=0\n  local triples_sum47=0\n  local triples_sum48=0\n \
    \ local triples_sum49=0\n  local triples_sum50=0\n  local triples_sum51=0\n  local\
    \ triples_sum52=0\n  local triples_sum53=0\n  local triples_sum54=0\n  local triples_sum55=0\n\
    \  local triples_sum56=0\n  local triples_sum57=0\n  local triples_sum58=0\n \
    \ local ", "    local n=$1\n    local a=($(for ((i=1; i<=$n; i++)); do echo $((i\
    \ * i - i + 1)); done))\n    local count=0\n    local triples=0\n    local triple\n\
    \    local i\n    local j\n    local k\n    local triple\n    local count\n  \
    \  local i\n    local j\n    local k\n    local triple\n    local count\n    local\
    \ i\n    local j\n    local k\n    local triple\n    local count\n    local i\n\
    \    local j\n    local k\n    local triple\n    local count\n    local i\n  \
    \  local j\n    local k\n    local triple\n    local count\n    local i\n    local\
    \ j\n    local k\n    local triple\n    local count\n    local i\n    local j\n\
    \    local k\n    local triple\n    local count\n    local i\n    local j\n  \
    \  local k\n    local triple\n    local count\n    local i\n    local j\n    local\
    \ k\n    local triple\n    local count\n    local i\n    local j\n    local k\n\
    \    local triple\n    local count\n    local i\n    local j\n    local k\n  \
    \  local triple\n    local count\n    local i\n    local j\n    local k\n    local\
    \ triple\n    local count\n    local i\n    local j\n    local k\n    local triple\n\
    \    local count\n    local i\n    local j\n    local k\n    local triple\n  \
    \  local count\n    local i\n    local j\n    local k\n    local triple\n    local\
    \ count\n    local i\n    local j\n    local k\n    local triple\n    local count\n\
    \    local i\n    local j\n    local k\n    local triple\n    local count\n  \
    \  local i\n    local j\n    local k\n    local triple\n    local count\n    local\
    \ i\n    local j\n    local k\n    local triple\n    local count\n    local i\n\
    \    local j\n    local k\n    local triple\n    local count\n    local i\n  \
    \  local j\n    local k\n    local triple\n    local count\n    local i\n    local\
    \ j\n    local k\n    local triple\n    local count\n    local i\n    local j\n\
    \    local k\n    local triple\n    local count\n    local i\n    local ", " \
    \ local n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=$(\
    \ seq 1 $n )\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n     \
    \ for k in \"${a[@]}\"; do\n        if [ $i -le $j -a $j -le $k -a $i -le $k ];\
    \ then\n          count=$(( $count + 1 ))\n        fi\n      done\n    done\n\
    \  done\n  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)) ;\
    \ do echo -n \"$i\" ; done))\n  local count=0\n  local i\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( i*i + j*j + k*k == i*i*i*i )); then\n          count=$((count+1))\n     \
    \   fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local count=0\n  local i\n  local j\n  local k\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if\
    \ (( i == j && i == k )); then\n          continue\n        fi\n        if ((\
    \ i == j && j == k )); then\n          continue\n        fi\n        if (( j ==\
    \ k )); then\n          continue\n        fi\n        if (( i == k )); then\n\
    \          continue\n        fi\n        if (( i == j && j == k )); then\n   \
    \       continue\n        fi\n        if (( i == j && i == k )); then\n      \
    \    continue\n        fi\n        if (( j == k )); then\n          continue\n\
    \        fi\n        if (( j == i )); then\n          continue\n        fi\n \
    \       if (( j == i && i == k )); then\n          continue\n        fi\n    \
    \    if (( j == i && j == k )); then\n          continue\n        fi\n       \
    \ if (( i == k && j == i )); then\n          continue\n        fi\n        if\
    \ (( i == k && i == j )); then\n          continue\n        fi\n        if ((\
    \ i == k && j == i )); then\n          continue\n        fi\n        if (( j ==\
    \ k && i == i )); then\n          continue\n        fi\n        if (( j == k &&\
    \ i == i )); then\n          continue\n        fi\n        if (( j == k && j ==\
    \ i )); then\n          continue\n        fi\n        if (( i == j && j == k &&\
    \ i == i )); then\n          continue\n        fi\n        if (( i == j && j ==\
    \ k && j == i )); then\n          continue\n        fi\n        if (( i == j &&\
    \ j == k && i == i )); then\n          continue\n        fi\n        if (( j ==\
    \ j && i == k && i == i )); then\n          continue\n        fi\n        if ((\
    \ j == j && i == k && j == i )); then\n          continue\n        fi\n      \
    \  if (( j == j && i == k && i == i )); then\n          continue\n        fi\n\
    \        if (( j == j && j == k && i == i )); then\n          continue\n     \
    \   fi\n        if (( j == j && j == k && j == i )", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    local j\n\
    \    for j in \"${a[@]}\"; do\n      local k\n      for k in \"${a[@]}\"; do\n\
    \        if [ $i -le $j -a $j -le $k ]; then\n          let count=$count+1\n \
    \       fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n $i\n    done))\n  local\
    \ i\n  local j\n  local k\n  local count\n  local max\n  local count1\n  local\
    \ count2\n  local count3\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i == j && i == k )); then\n\
    \          count=$(( $count + 1 ))\n        fi\n      done\n    done\n  done\n\
    \  max=$(( $count > 0 ? $count : 1 ))\n  count1=$(( $count > 0 ? $count : 1 ))\n\
    \  count2=$(( $count > 0 ? $count : 1 ))\n  count3=$(( $count > 0 ? $count : 1\
    \ ))\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in\
    \ \"${a[@]}\"; do\n        if (( i == j && j == k )); then\n          count=$((\
    \ $count + 1 ))\n        fi\n      done\n    done\n  done\n  max=$(( $count >\
    \ 0 ? $count : 1 ))\n  count1=$(( $count > 0 ? $count : 1 ))\n  count2=$(( $count\
    \ > 0 ? $count : 1 ))\n  count3=$(( $count > 0 ? $count : 1 ))\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n\
    \        if (( i == j && k == n )); then\n          count=$(( $count + 1 ))\n\
    \        fi\n      done\n    done\n  done\n  max=$(( $count > 0 ? $count : 1 ))\n\
    \  count1=$(( $count > 0 ? $count : 1 ))\n  count2=$(( $count > 0 ? $count : 1\
    \ ))\n  count3=$(( $count > 0 ? $count : 1 ))\n  for i in \"${a[@]}\"; do\n  \
    \  for j in \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i ==\
    \ j && k == n )); then\n          count=$(( $count + 1 ))\n        fi\n      done\n\
    \    done\n  done\n  max=$(( $count > ", "  local n=$1\n  local a=($(for ((i =\
    \ 1; i <= n; i++)) ; do echo -n $i; done))\n  local count=0\n  local i\n  local\
    \ j\n  local k\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"; do\n   \
    \   for k in \"${a[@]}\"; do\n        if (( i == j && i == k )) ; then\n     \
    \     continue\n        fi\n        if (( i == j && j == k )) ; then\n       \
    \   continue\n        fi\n        if (( i == j && i != k )) ; then\n         \
    \ continue\n        fi\n        if (( j == k )) ; then\n          continue\n \
    \       fi\n        if (( i != j && i == k )) ; then\n          continue\n   \
    \     fi\n        if (( i != j && j == k )) ; then\n          continue\n     \
    \   fi\n        if (( i != j && i != k )) ; then\n          continue\n       \
    \ fi\n        if (( i == j && j != k )) ; then\n          continue\n        fi\n\
    \        if (( j == k )) ; then\n          continue\n        fi\n        if ((\
    \ i != j && j != k )) ; then\n          continue\n        fi\n        if (( i\
    \ == j && i != k && j != k )) ; then\n          continue\n        fi\n       \
    \ if (( i != j && i == k && j != k )) ; then\n          continue\n        fi\n\
    \        if (( i != j && j == k && j != k )) ; then\n          continue\n    \
    \    fi\n        if (( i != j && i != k && j != k )) ; then\n          continue\n\
    \        fi\n        if (( i == j && j != k && i != k )) ; then\n          continue\n\
    \        fi\n        if (( j == k && i != k && i != j )) ; then\n          continue\n\
    \        fi\n        if (( j == k && i != k && j != k )) ; then\n          continue\n\
    \        fi\n        if (( j == k && j != k && i != k )) ; then\n          continue\n\
    \        fi\n        if (( i != j && j != k && i != k )) ; then\n          continue\n\
    \        fi\n        if (( i == j && i != k && j != k )) ; then\n          continue\n\
    \        fi\n        if (( i != j && i == k && j != k )) ; then\n          continue\n\
    \        fi\n        if (( i != j && j == k && j != k )) ; then\n          continue\n\
    \        fi\n        if (( i != j && i != k && j != k )) ; then\n", "  local n=$1\n\
    \  local a=($(for ((i=1; i<=$n; i++)); do echo \"$i\"; done))\n  local i\n  local\
    \ j\n  local k\n  local count=0\n  for i in \"${a[@]}\"; do\n    for j in \"${a[@]}\"\
    ; do\n      for k in \"${a[@]}\"; do\n        if (( i < j && j < k && k < i ));\
    \ then\n          count=$((count+1))\n        fi\n      done\n    done\n  done\n\
    \  echo $count", "  local n=$1\n  local a=($(for ((i=1; i<=$n; i++)); do echo\
    \ $((i*i-i+1)); done))\n  local count=0\n  local j=0\n  local k=0\n  local i\n\
    \  for i in \"${a[@]}\"; do\n    count=$((count+i))\n    j=$((j+i))\n    k=$((k+i))\n\
    \  done\n  echo $((count+j+k))", "  local n=$1\n  local a=($(for ((i=1; i<=$n;\
    \ i++)) ; do echo $((i*i-i+1)); done))\n  local count=0\n  local i\n  local j\n\
    \  local k\n  for i in \"${!a[@]}\"; do\n    for j in \"${!a[@]}\"; do\n     \
    \ for k in \"${!a[@]}\"; do\n        if [ $i -le $j -a $j -le $k ]; then\n   \
    \       if [[ $((${a[i]}+${a[j]}+${a[k]})) -eq 3 ]]; then\n            count=$((count+1))\n\
    \          fi\n        fi\n      done\n    done\n  done\n  echo $count", "  local\
    \ n=$1\n  local a\n  local i\n  local j\n  local k\n  local count\n  a=($(for\
    \ ((i=1; i<=$n; i++)); do echo $((i * i - i + 1)); done))\n  count=0\n  for ((i=1;\
    \ i<=$n; i++)); do\n    for ((j=1; j<=$n; j++)); do\n      for ((k=1; k<=$n; k++));\
    \ do\n        if (( ${a[i]} + ${a[j]} + ${a[k]} % 3 == 0 )); then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++)); do echo $((i * i - i + 1)); done))\n  local count=0\n\
    \  local i\n  local j\n  local k\n  for ((i=1; i<=$n; i++)); do\n    for ((j=1;\
    \ j<=$n; j++)); do\n      for ((k=1; k<=$n; k++)); do\n        if (( $i + $j +\
    \ $k == $((i * i * i + j * j + k * k)) )) ; then\n          count=$((count+1))\n\
    \        fi\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local\
    \ a=($(for ((i=1; i<=$n; i++))\n    do\n      echo -n \"$i\"\n    done))\n  local\
    \ count=0\n  local i\n  for i in \"${a[@]}\"; do\n    local j\n    for j in \"\
    ${a[@]}\"; do\n      local k\n      for k in \"${a[@]}\"; do\n        (( count+=1\
    \ ))\n      done\n    done\n  done\n  echo $count", "  local n=$1\n  local a=($(seq\
    \ 1 $n))\n  local count=0\n  local i\n  for i in \"${a[@]}\"; do\n    for j in\
    \ \"${a[@]}\"; do\n      for k in \"${a[@]}\"; do\n        if (( i + j + k ==\
    \ $((i * i * i)) )) && \\\n          (( i == $((j + k)) )) && \\\n          ((\
    \ i == $((k + j)) )) && \\\n          (( i == $((k + j + i)) )) && \\\n      \
    \    (( i == $((j + k + i)) )) && \\\n          (( i == $((k + j + i + j)) ))\
    \ && \\\n          (( i == $((k + j + i + j + k)) )) && \\\n          (( i ==\
    \ $((j + k + i + j + k)) )) && \\\n          (( i == $((k + j + i + j + k + j))\
    \ )) && \\\n          (( i == $((k + j + i + j + k + j + k)) )) && \\\n      \
    \    (( i == $((j + k + i + j + k + j + k + j)) )) && \\\n          (( i == $((k\
    \ + j + i + j + k + j + k + j + k)) )) && \\\n          (( i == $((j + k + i +\
    \ j + k + j + k + j + k + j)) )) && \\\n          (( i == $((k + j + i + j + k\
    \ + j + k + j + k + j + k)) )) && \\\n          (( i == $((j + k + i + j + k +\
    \ j + k + j + k + j + k + j)) )) && \\\n          (( i == $((k + j + i + j + k\
    \ + j + k + j + k + j + k + j)) )) && \\\n          (( i == $((j + k + i + j +\
    \ k + j + k + j + k + j + k + j + k)) )) && \\\n          (( i == $((k + j + i\
    \ + j + k + j + k + j + k + j + k + j + k + j)) )) && \\\n          (( i == $((j\
    \ + k + i + j + k + j + k + j + k + j + k + j + k"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [ ${guesses[i]} == ${scores[i]} ]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpjwiutc0s.sh: line 22: [: too many arguments

    /tmp/tmpjwiutc0s.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_7f09or9.sh: line 24: [: too many arguments

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjh23af8h.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx4dgggrg.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ -eq ${guess} ]]; then\n            diff=0\n        else\n            diff=$((\
    \ ${guess} - ${score} ))\n        fi\n        guesses[i]=${diff}\n    done\n}\n\
    \ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9f6lhfh.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpl9f6lhfh.sh: line 27: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error in expression
    (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses result\n  scores=$1\n  guesses=$2\n\
    \  result=()\n  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score=${scores[i]}\n\
    \    local guess=${guesses[i]}\n    local diff\n    diff=$(( guess - score ))\n\
    \    if [[ ${diff} -eq 0 ]]; then\n      result[i]=0\n    else\n      result[i]=$((\
    \ diff ))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8bgp7qh5.sh: line 24: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses score\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ -eq ${guess} ]]; then\n            result[i]=0\n        else\n            result[i]=${score}-${guess}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps1eklokk.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [ ${guesses[i]}\
    \ == ${scores[i]} ]; then\n            result[i]=0\n        else\n           \
    \ result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpge7y3mjj.sh: line 24: [: too many arguments

    /tmp/tmpge7y3mjj.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpgjn3q8tt.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [ ${guesses[i]} == ${scores[i]} ]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn0ioqwi0.sh: line 25: [: too many arguments

    /tmp/tmpn0ioqwi0.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k l m n o p q r s t u v w x y z\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        for ((j=0; j<${#guesses[@]}; j++)); do\n\
    \            k=${#scores[@]}\n            l=${#guesses[@]}\n            m=0\n\
    \            n=0\n            o=0\n            p=0\n            q=0\n        \
    \    r=0\n            s=0\n            t=0\n            u=0\n            v=0\n\
    \            w=0\n            x=0\n            y=0\n            z=0\n        \
    \    if ((${#scores[@]} > ${#guesses[@]})); then\n                ((k--))\n  \
    \          fi\n            if ((${#guesses[@]} > ${#scores[@]})); then\n     \
    \           ((l--))\n            fi\n            if ((${#scores[@]} < ${#guesses[@]}));\
    \ then\n                ((m++))\n            fi\n            if ((${#guesses[@]}\
    \ < ${#scores[@]})); then\n                ((n++))\n            fi\n         \
    \   if ((${#scores[@]} > ${#guesses[@]})); then\n                ((o++))\n   \
    \         fi\n            if ((${#guesses[@]} > ${#scores[@]})); then\n      \
    \          ((p++))\n            fi\n            if ((${#scores[@]} < ${#guesses[@]}));\
    \ then\n                ((q++))\n            fi\n            if ((${#guesses[@]}\
    \ < ${#scores[@]})); then\n                ((r++))\n            fi\n         \
    \   if ((${#scores[@]} > ${#guesses[@]})); then\n                ((s++))\n   \
    \         fi\n            if ((${#guesses[@]} > ${#scores[@]})); then\n      \
    \          ((t++))\n            fi\n            if ((${#scores[@]} < ${#guesses[@]}));\
    \ then\n                ((u++))\n            fi\n            if ((${#guesses[@]}\
    \ < ${#scores[@]})); then\n                ((v++))\n            fi\n         \
    \   if ((${#scores[@]} > ${#guesses[@]})); then\n                ((w++))\n   \
    \         \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4jwf98l8.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmp4jwf98l8.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k l m n o p q r s t u v w x y z\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        for ((j=0; j<${#guesses[@]}; j++)); do\n\
    \            if [[ ${guesses[$j]} -eq ${scores[$i]} ]]; then\n               \
    \ result[$i]=$((${result[$i]} + 0))\n            else\n                o=$((${result[$i]}\
    \ + abs(${guesses[$j]} - ${scores[$i]})))\n                result[$i]=$((${result[$i]}\
    \ + abs(${guesses[$j]} - ${scores[$i]})))\n            fi\n        done\n    done\n\
    \    for ((k=0; k<${#result[@]}; k++)); do\n        if [[ ${result[$k]} -eq 0\
    \ ]]; then\n            result[$k]=0\n        fi\n    done\n    for ((l=0; l<${#result[@]};\
    \ l++)); do\n        if [[ ${result[$l]} -eq 0 ]]; then\n            result[$l]=$((${result[$l]}\
    \ + 0))\n        fi\n    done\n    for ((m=0; m<${#result[@]}; m++)); do\n   \
    \     if [[ ${result[$m]} -eq 0 ]]; then\n            result[$m]=$((${result[$m]}\
    \ + 0))\n        fi\n    done\n    for ((n=0; n<${#result[@]}; n++)); do\n   \
    \     if [[ ${result[$n]} -eq 0 ]]; then\n            result[$n]=$((${result[$n]}\
    \ + 0))\n        fi\n    done\n    for ((o=0; o<${#result[@]}; o++)); do\n   \
    \     if [[ ${result[$o]} -eq 0 ]]; then\n            result[$o]=$((${result[$o]}\
    \ + 0))\n        fi\n    done\n    for ((p=0; p<${#result[@]}; p++)); do\n   \
    \     if [[ ${result[$p]} -eq 0 ]]; then\n            result[$p]=$((${result[$p]}\
    \ + 0))\n        fi\n    done\n    for ((q=0; q<${#result[@]}; q++)); do\n   \
    \     if [[ ${result[$q]} -eq 0 \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdnmyvqxg.sh: line 62: syntax error in conditional expression

    /tmp/tmpdnmyvqxg.sh: line 63: syntax error near `}''

    /tmp/tmpdnmyvqxg.sh: line 63: `}''

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local score\n    local guess\n    local diff\n    local i\n    local j\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcwfwmvsd.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n          \
    \  result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpibd1celt.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  local i\n  for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n    local score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n\
    \    if [[ ${guess} == ${score} ]]; then\n      result[i]=0\n    else\n      result[i]=${guess}\
    \ - ${score}\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsjzh__1y.sh: line 30: `result[i]'': not a valid identifier

    /tmp/tmpsjzh__1y.sh: line 30: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]}-${scores[i]}\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffabs\n    local diffdiff\n    local\
    \ diffdiffabs\n    local diffdiffabs\n    local diffdiffabs\n    local diffdiffdiff\n\
    \    local diffdiffdiffabs\n    local diffdiffdiffabs\n    local diffdiffdiffdiff\n\
    \    local diffdiffdiffdiffabs\n    local diffdiffdiffdiffabs\n    local diffdiffdiffdiffdiff\n\
    \    local diffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffabs\n  \
    \  local diffdiffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n \
    \   local diffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffabs\n   \
    \ local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n    local\
    \ diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffdiff\n\
    \    local diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n    local\
    \ diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n \
    \   local diffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffabs\n   \
    \ local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n    local\
    \ diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n \
    \   local diffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiffabs\n   \
    \ local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n    local\
    \ diffdiffdiffdiffdiffdiffabs\n    local diffdiffdiffdiffdiffdiff\n    local diffdiffdiffdiffdiffabs\n\
    \    local diffdiffdiffdiffdiffdiffabs\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k l m n o p q r s t\n    local -a scores\n    local\
    \ -a guesses\n    local -a result\n    local -a scores\n    local -a guesses\n\
    \    local -a result\n    local -a scores\n    local -a guesses\n    local -a\
    \ result\n    local -a scores\n    local -a guesses\n    local -a result\n   \
    \ local -a scores\n    local -a guesses\n    local -a result\n    local -a scores\n\
    \    local -a guesses\n    local -a result\n    local -a scores\n    local -a\
    \ guesses\n    local -a result\n    local -a scores\n    local -a guesses\n  \
    \  local -a result\n    local -a scores\n    local -a guesses\n    local -a result\n\
    \    local -a scores\n    local -a guesses\n    local -a result\n    local -a\
    \ scores\n    local -a guesses\n    local -a result\n    local -a scores\n   \
    \ local -a guesses\n    local -a result\n    local -a scores\n    local -a guesses\n\
    \    local -a result\n    local -a scores\n    local -a guesses\n    local -a\
    \ result\n    local -a scores\n    local -a guesses\n    local -a result\n   \
    \ local -a scores\n    local -a guesses\n    local -a result\n    local -a scores\n\
    \    local -a guesses\n    local -a result\n    local -a scores\n    local -a\
    \ guesses\n    local -a result\n    local -a scores\n    local -a guesses\n  \
    \  local -a result\n    local -a scores\n    local -a guesses\n    local -a result\n\
    \    local -a scores\n    local -a guesses\n    local -a result\n    local -a\
    \ scores\n    local -a guesses\n    local -a result\n    local -a scores\n   \
    \ local -a guesses\n    local -a result\n    local -a scores\n    local -a guesses\n\
    \    local -a result\n    local -a scores\n    local -a guesses\n    local -a\
    \ \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate\
    \ \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"\
    1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3\
    \ 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgu9rslvd.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpgu9rslvd.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${#guesses[@]}\n\
    \    done\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_kziq40p.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpnv46_x_n.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[$i]} == ${scores[$i]} ]]; then\n            result[$i]=0\n\
    \        else\n            result[$i]=${abs(${guesses[$i]} - ${scores[$i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbakiptar.sh: line 25: ${abs(${guesses[$i]} - ${scores[$i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  local i\n  for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n    local score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n\
    \    if [[ ${guess} -eq ${score} ]]; then\n      result[i]=0\n    else\n     \
    \ result[i]=${guess} - ${score}\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeshxssja.sh: line 27: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpeshxssja.sh: line 30: `result[i]'': not a valid identifier

    /tmp/tmpeshxssja.sh: line 30: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ score\n    local guess\n    local diff\n    local diff2\n    local diff3\n \
    \   local diff4\n    local diff5\n    local diff6\n    local diff7\n    local\
    \ diff8\n    local diff9\n    local diff10\n    local diff11\n    local diff12\n\
    \    local diff13\n    local diff14\n    local diff15\n    local diff16\n    local\
    \ diff17\n    local diff18\n    local diff19\n    local diff20\n    local diff21\n\
    \    local diff22\n    local diff23\n    local diff24\n    local diff25\n    local\
    \ diff26\n    local diff27\n    local diff28\n    local diff29\n    local diff30\n\
    \    local diff31\n    local diff32\n    local diff33\n    local diff34\n    local\
    \ diff35\n    local diff36\n    local diff37\n    local diff38\n    local diff39\n\
    \    local diff40\n    local diff41\n    local diff42\n    local diff43\n    local\
    \ diff44\n    local diff45\n    local diff46\n    local diff47\n    local diff48\n\
    \    local diff49\n    local diff50\n    local diff51\n    local diff52\n    local\
    \ diff53\n    local diff54\n    local diff55\n    local diff56\n    local diff57\n\
    \    local diff58\n    local diff59\n    local diff60\n    local diff61\n    local\
    \ diff62\n    local diff63\n    local diff64\n    local diff65\n    local diff66\n\
    \    local diff67\n    local diff68\n    local diff69\n    local diff70\n    local\
    \ diff71\n    local diff72\n    local diff73\n    local diff74\n    local diff75\n\
    \    local diff76\n    local diff77\n    local diff78\n    local diff79\n    local\
    \ diff80\n    local diff81\n    local diff82\n    local diff83\n    local diff84\n\
    \    local diff85\n    local diff86\n    local diff87\n    local diff88\n    local\
    \ diff89\n    local diff90\n    local diff91\n    local diff92\n    local diff93\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[$i]} == ${scores[$i]} ]]; then\n            result[$i]=0\n\
    \        else\n            result[$i]=${abs(${guesses[$i]} - ${scores[$i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmporg0kbm9.sh: line 25: ${abs(${guesses[$i]} - ${scores[$i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=${guesses[i]}\n        if [[ ${guesses[i]} != ${scores[i]}\
    \ ]]; then\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmp1is92761.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]}\
    \ - 1))); do\n        result[$i]=$((${scores[$i]} - ${guesses[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmcj017zv.sh: line 23: 1 2 3 4 5 1 - 1 2 3 4 2 -2: syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ i j diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        local score\n        score=${scores[i]}\n        local guess\n      \
    \  guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${guess} - ${score}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgtb4w8hb.sh: line 29: `result[i]'': not a valid identifier

    /tmp/tmpgtb4w8hb.sh: line 29: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp63btnvi1.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i\n    for ((i=0; i<${#scores[@]}; i++)); do\n     \
    \   result[i]=0\n    done\n    for ((i=0; i<${#guesses[@]}; i++)); do\n      \
    \  if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n   \
    \     else\n            result[i]=${guesses[i]} - ${scores[i]}\n        fi\n \
    \   done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcgpdpt5g.sh: line 28: `result[i]'': not a valid identifier

    /tmp/tmpcgpdpt5g.sh: line 28: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=$( IFS=' '; echo \"${scores[*]}\" | sort -u | tr '\\n' ' '\
    \ )\n  result=$( IFS=' '; echo \"${guesses[*]}\" | sort -u | tr '\\n' ' ' )\n\
    \  result=$( IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$(\
    \ IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS='\
    \ '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo\
    \ \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\"\
    \ | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort\
    \ -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort -u |\
    \ tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\\
    n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' '\
    \ )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n \
    \ result=$( IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$(\
    \ IFS=' '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS='\
    \ '; echo \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo\
    \ \"${result[*]}\" | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\"\
    \ | sort -u | tr '\\n' ' ' )\n  result=$( IFS=' '; echo \"${result[*]}\" | sort\
    \ -u | tr '\\n' ' ' )\n  \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  for (( i=0; i<${#scores[@]}; i++ )); do\n    local score\n\
    \    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n    if [[ ${score}\
    \ -eq ${guess} ]]; then\n      result[i]=0\n    else\n      result[i]=${score}-${guess}\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxlcx402_.sh: line 26: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local\
    \ score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n  \
    \  local diff\n    diff=$((${guess} - ${score}))\n    if [[ ${diff} -eq 0 ]];\
    \ then\n      result[i]=0\n    else\n      result[i]=${diff}\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkhrpcwrr.sh: line 27: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpgjn3q8tt.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        local score\n        score=${scores[i]}\n        local guess\n      \
    \  guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${guess}-${score}\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local score\n    local guess\n    local diff\n    local i\n    local j\n\
    \    local k\n    local len\n    local result\n    local total\n    local score\n\
    \    local guess\n    local diff\n    local i\n    local j\n    local k\n    local\
    \ len\n    local result\n    local total\n    local score\n    local guess\n \
    \   local diff\n    local i\n    local j\n    local k\n    local len\n    local\
    \ result\n    local total\n    local score\n    local guess\n    local diff\n\
    \    local i\n    local j\n    local k\n    local len\n    local result\n    local\
    \ total\n    local score\n    local guess\n    local diff\n    local i\n    local\
    \ j\n    local k\n    local len\n    local result\n    local total\n    local\
    \ score\n    local guess\n    local diff\n    local i\n    local j\n    local\
    \ k\n    local len\n    local result\n    local total\n    local score\n    local\
    \ guess\n    local diff\n    local i\n    local j\n    local k\n    local len\n\
    \    local result\n    local total\n    local score\n    local guess\n    local\
    \ diff\n    local i\n    local j\n    local k\n    local len\n    local result\n\
    \    local total\n    local score\n    local guess\n    local diff\n    local\
    \ i\n    local j\n    local k\n    local len\n    local result\n    local total\n\
    \    local score\n    local guess\n    local diff\n    local i\n    local j\n\
    \    local k\n    local len\n    local result\n    local total\n    local score\n\
    \    local guess\n    local diff\n    local i\n    local j\n    local k\n    local\
    \ len\n    local result\n    local total\n    local score\n    local guess\n \
    \   local diff\n    local i\n    local j\n    local k\n    local len\n    local\
    \ result\n    local total\n    local score\n    local guess\n    local diff\n\
    \    local i\n    local j\n    local k\n    local len\n    local result\n    local\
    \ total\n    local score\n    local guess\n    local diff\n    local i\n    local\
    \ j\n    local k\n    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses result\n  scores=$1\n  guesses=$2\n\
    \  result=()\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score=${scores[i]}\n\
    \    local guess=${guesses[i]}\n    local diff\n    if [[ $guess -eq 0 ]]; then\n\
    \      diff=0\n    elif [[ $guess -gt $score ]]; then\n      diff=$guess\n   \
    \ else\n      diff=$score\n    fi\n    result[i]=$diff\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4wst6l51.sh: line 24: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmp4wst6l51.sh: line 26: [[: 1 2 3 4 2 -2: syntax error in expression (error
    token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]} - ${scores[i]}\n        fi\n\
    \    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvo4__w34.sh: line 25: `result[i]'': not a valid identifier

    /tmp/tmpvo4__w34.sh: line 25: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local score\n    local guess\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        diff=$(( ${diff} + ${guesses[$i]} - ${scores[$i]} ))\n    done\n    echo\
    \ $diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqtdsrsk0.sh: line 22: 0 + 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [ ${guesses[i]} == ${scores[i]} ]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpa1ltf3dg.sh: line 25: [: too many arguments

    /tmp/tmpa1ltf3dg.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=$( IFS=' '; echo \"${scores[@]}\" | sort -n | uniq -c | sort\
    \ -n | awk '{print $2}' )\n  result=$( IFS=' '; echo \"${guesses[@]}\" | sort\
    \ -n | uniq -c | sort -n | awk '{print $2}' )\n  result=$( IFS=' '; echo \"${result[@]}\"\
    \ | sort -n | uniq -c | sort -n | awk '{print $2}' )\n  result=$( IFS=' '; echo\
    \ \"${result[@]}\" | sort -n | uniq -c | sort -n | awk '{print $1}' )\n  result=$(\
    \ IFS=' '; echo \"${result[@]}\" | sort -n | uniq -c | sort -n | awk '{print $1}'\
    \ )\n  result=$( IFS=' '; echo \"${result[@]}\" | sort -n | uniq -c | sort -n\
    \ | awk '{print $1}' )\n  result=$( IFS=' '; echo \"${result[@]}\" | sort -n |\
    \ uniq -c | sort -n | awk '{print $1}' )\n  result=$( IFS=' '; echo \"${result[@]}\"\
    \ | sort -n | uniq -c | sort -n | awk '{print $1}' )\n  result=$( IFS=' '; echo\
    \ \"${result[@]}\" | sort -n | uniq -c | sort -n | awk '{print $1}' )\n  result=$(\
    \ IFS=' '; echo \"${result[@]}\" | sort -n | uniq -c | sort -n | awk '{print $1}'\
    \ )\n  result=$( IFS=' '; echo \"${result[@]}\" | sort -n | uniq -c | sort -n\
    \ | awk '{print $1}' )\n  result=$( IFS=' '; echo \"${result[@]}\" | sort -n |\
    \ uniq -c | sort -n | awk '{print $1}' )\n  result=$( IFS=' '; echo \"${result[@]}\"\
    \ | sort -n | uniq -c | sort -n | awk '{print $1}' )\n  result=$( IFS=' '; echo\
    \ \"${result[@]}\" | sort -n | uniq -c | sort -n | awk '{print $\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp92zwo6v3.sh: line 33: unexpected EOF while looking for matching
    `''''

    /tmp/tmp92zwo6v3.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [ ${guesses[i]} == ${scores[i]} ]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]} - ${scores[i]}\n        fi\n\
    \    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpego6z5hn.sh: line 22: [: too many arguments

    /tmp/tmpego6z5hn.sh: line 25: `result[i]'': not a valid identifier

    /tmp/tmpego6z5hn.sh: line 25: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ i result\n  result=()\n  for ((i=0; i<${#scores[@]}; i++)); do\n    local score=${scores[i]}\n\
    \    local guess=${guesses[i]}\n    local diff\n    diff=$(( guess - score ))\n\
    \    if [[ ${diff} -eq 0 ]]; then\n      result[i]=0\n    elif [[ ${diff} -lt\
    \ 0 ]]; then\n      result[i]=${diff}\n    else\n      result[i]=${diff}\n   \
    \ fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxs3_p35_.sh: line 25: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  local i\n  for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n    local score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n\
    \    local diff\n    diff=$(echo \"$guess - $score\" | bc)\n    if [ $diff -eq\
    \ 0 ]; then\n      result[i]=0\n    else\n      result[i]=$diff\n    fi\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmpd9p6goni.sh: line 29: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses result\n  scores=$1\n  guesses=$2\n\
    \  result=()\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local score=${scores[i]}\n\
    \    local guess=${guesses[i]}\n    local diff\n    if [[ ${guess} == ${score}\
    \ ]]; then\n      diff=0\n    else\n      diff=$(echo \"${guess} - ${score}\"\
    \ | bc)\n    fi\n    result[i]=${diff}\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local score\n    local guess\n    local diff\n    local i\n    local j\n\
    \    local result\n    local diffs\n    local diff\n    local diffs\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses score\n  scores=$1\n  guesses=$2\n\
    \  local result\n  result=()\n  for (( i=0; i<${#scores[@]}; i++ )); do\n    score=${scores[i]}\n\
    \    guess=${guesses[i]}\n    if [[ ${guess} == ${score} ]]; then\n      result[i]=0\n\
    \    else\n      result[i]=${guess}-${score}\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i diff score\n    diff=0\n    for ((i=0; i<${#scores[@]}; i++)); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ -eq ${guess} ]]; then\n            diff=0\n        else\n            diff=$((${diff}+abs(${guess}-${score})))\n\
    \        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_29duffe.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmp_29duffe.sh: line 27: 0+abs(1 2 3 4 2 -2-1 2 3 4 5 1): syntax error in
    expression (error token is "(1 2 3 4 2 -2-1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ i j diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[$i]} == ${scores[$i]} ]]; then\n            result[$i]=0\n\
    \        else\n            result[$i]=${abs(${guesses[$i]} - ${scores[$i]})}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbakiptar.sh: line 25: ${abs(${guesses[$i]} - ${scores[$i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k l m\n    i=${#scores[@]}\n    j=${#guesses[@]}\n\
    \    for ((k=0; k<i; k++))\n    do\n        for ((l=0; l<j; l++))\n        do\n\
    \            if ((guesses[l]==scores[k]))\n            then\n                m=0\n\
    \            else\n                m=$((${guesses[l]} - ${scores[k]}))\n     \
    \       fi\n            result[k]=${result[k]}${m}\n        done\n    done\n}\n\
    \ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkey3zfue.sh: line 27: ((: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpkey3zfue.sh: line 31: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j\n    for ((i=0; i<${#scores[@]}; i++)); do\n   \
    \     for ((j=0; j<${#guesses[@]}; j++)); do\n            if [[ ${guesses[j]}\
    \ -eq ${scores[i]} ]]; then\n                result[i]=$((${result[i]} + 0))\n\
    \            else\n                result[i]=$((${result[i]} + (${guesses[j]}\
    \ - ${scores[i]})))\n            fi\n        done\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq3dwffmd.sh: line 23: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpq3dwffmd.sh: line 26: + (1 2 3 4 2 -2 - 1 2 3 4 5 1): missing `)'' (error
    token is "2 3 4 2 -2 - 1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i score guess diff diffs\n    diffs=()\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        score=${scores[i]}\n        guess=${guesses[i]}\n      \
    \  if [[ ${score} == ${guess} ]]; then\n            diff=0\n        else\n   \
    \         diff=`expr $guess - $score`\n        fi\n        diffs+=(${diff})\n\
    \    done\n    echo ${diffs[*]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20182\u2019\n"
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j\n    local result\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diff\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${guesses[i]} - ${scores[i]}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz57pzl9y.sh: line 26: `result[i]'': not a valid identifier

    /tmp/tmpz57pzl9y.sh: line 26: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i score guess diff\n    diff=0\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ -eq ${guess} ]]; then\n            diff=0\n        else\n            diff=$((${guess}\
    \ - ${score}))\n        fi\n        guesses[i]=${diff}\n    done\n    echo \"\
    ${guesses}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwnsuwshg.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpwnsuwshg.sh: line 27: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses i j diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ i j diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpnv46_x_n.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${guess}\
    \ == ${score} ]]; then\n            diff=0\n        else\n            diff=$((\
    \ abs(${guess} - ${score}) ))\n        fi\n        scores[i]=${diff}\n    done\n\
    \    echo \"${scores[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpek_628m9.sh: line 27: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax
    error in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k l m n o p q r s t\n    local -a scores\n    local\
    \ -a guesses\n    local -a result\n    scores=( $( IFS=$'\\n' read -d '' -r -a\
    \ scores ) )\n    guesses=( $( IFS=$'\\n' read -d '' -r -a guesses ) )\n    for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n        for (( j=0; j<${#guesses[@]}; j++\
    \ )); do\n            if (( ${scores[i]} < ${guesses[j]} )) ; then\n         \
    \       result[i]=$(( ${scores[i]} - ${guesses[j]} ))\n            else\n    \
    \            result[i]=$(( ${guesses[j]} - ${scores[i]} ))\n            fi\n \
    \       done\n    done\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${result[i]} < 0 ? ${result[i]} : ${result[i]} ))\n    done\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${result[i]} > 0 ? ${result[i]}\
    \ : ${result[i]} ))\n    done\n    for (( i=0; i<${#scores[@]}; i++ )); do\n \
    \       result[i]=$(( ${result[i]} > 0 ? ${result[i]} : ${result[i]} ))\n    done\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${result[i]}\
    \ > 0 ? ${result[i]} : ${result[i]} ))\n    done\n    for (( i=0; i<${#scores[@]};\
    \ i++ )); do\n        result[i]=$(( ${result[i]} > 0 ? ${result[i]} : ${result[i]}\
    \ ))\n    done\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${result[i]} > 0 ? ${result[i]} : ${result[i]} ))\n    done\n    for (( i=0;\
    \ i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${result[i]} > 0 ? ${result[i]}\
    \ : ${result[i]} ))\n    done\n    for (( i=0; i<${#scores[@]}; i++ )); do\n \
    \       result[i]=$(( ${result[i]} > 0 ? ${result[i]} : ${result[i]} \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0dmtlxd8.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0dmtlxd8.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]}\
    \ - 1))); do\n        local score\n        score=${scores[i]}\n        local guess\n\
    \        guess=${guesses[i]}\n        if [[ $guess == $score ]]; then\n      \
    \      result[i]=0\n        else\n            result[i]=$((${guess} - ${score}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkeoy2rri.sh: line 30: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    local\
    \ score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n  \
    \  if [[ $guess == $score ]]; then\n      result[i]=0\n    else\n      result[i]=$((\
    \ abs($guess - $score)))\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9g6njcc_.sh: line 29: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1): syntax error
    in expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpnv46_x_n.sh: line 28: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [ ${guesses[i]} == ${scores[i]} ]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]}-${scores[i]}\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxno3vhi8.sh: line 25: [: too many arguments

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i result\n    for ((i=0; i<${#scores[@]}; i++)); do\n        result=$((${guesses[i]}-${scores[i]}))\n\
    \        if (( ${result} < 0 )); then\n            result=$((${result}+${#scores[i]}))\n\
    \        fi\n        guesses[i]=${result}\n    done\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp40mdbiot.sh: line 21: 1 2 3 4 2 -2-1 2 3 4 5 1: syntax error in
    expression (error token is "2 3 4 2 -2-1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  local i\n  for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n    local score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n\
    \    local diff\n    diff=$((${guess} - ${score}))\n    if [[ ${diff} -gt 0 ]];\
    \ then\n      result[i]=${diff}\n    elif [[ ${diff} -lt 0 ]]; then\n      result[i]=${diff}\n\
    \    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp85nvdzp_.sh: line 28: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]}\
    \ - 1))); do\n        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo4ho4hl7.sh: line 23: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmpo4ho4hl7.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    diff=0\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${guess}\
    \ == ${score} ]]; then\n            diff=0\n        else\n            diff=$((\
    \ ${diff} + abs( ${guess} - ${score} ) ))\n        fi\n    done\n    echo ${diff}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp15h6bbqf.sh: line 27: 0 + abs( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) : syntax
    error in expression (error token is "( 1 2 3 4 2 -2 - 1 2 3 4 5 1 ) ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpgjn3q8tt.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local score\n    local guess\n    local diff\n    local i\n    local j\n\
    \    local k\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        result[i]=0\n    done\n    for ((i=0; i<${#guesses[@]}; i++));\
    \ do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]}-${scores[i]}\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n   \
    \ compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i result\n    local score guess\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]}\
    \ - 1))); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=$((${guesses[i]} - ${scores[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6xnr21mh.sh: line 26: 1 2 3 4 2 -2 - 1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph4itu76x.sh: line 24: `result[i]'': not a valid identifier

    /tmp/tmph4itu76x.sh: line 24: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diffsCount\n    local diffsCount2\n    local\
    \ diffsCount3\n    local diffsCount4\n    local diffsCount5\n    local diffsCount6\n\
    \    local diffsCount7\n    local diffsCount8\n    local diffsCount9\n    local\
    \ diffsCount10\n    local diffsCount11\n    local diffsCount12\n    local diffsCount13\n\
    \    local diffsCount14\n    local diffsCount15\n    local diffsCount16\n    local\
    \ diffsCount17\n    local diffsCount18\n    local diffsCount19\n    local diffsCount20\n\
    \    local diffsCount21\n    local diffsCount22\n    local diffsCount23\n    local\
    \ diffsCount24\n    local diffsCount25\n    local diffsCount26\n    local diffsCount27\n\
    \    local diffsCount28\n    local diffsCount29\n    local diffsCount30\n    local\
    \ diffsCount31\n    local diffsCount32\n    local diffsCount33\n    local diffsCount34\n\
    \    local diffsCount35\n    local diffsCount36\n    local diffsCount37\n    local\
    \ diffsCount38\n    local diffsCount39\n    local diffsCount40\n    local diffsCount41\n\
    \    local diffsCount42\n    local diffsCount43\n    local diffsCount44\n    local\
    \ diffsCount45\n    local diffsCount46\n    local diffsCount47\n    local diffsCount48\n\
    \    local diffsCount49\n    local diffsCount50\n    local diffsCount51\n    local\
    \ diffsCount52\n    local diffsCount53\n    local diffsCount54\n    local diffsCount55\n\
    \    local diffsCount56\n    local diffsCount57\n    local diffsCount58\n    local\
    \ diffsCount59\n    local diffsCount60\n    local diffsCount61\n    local diffsCount62\n\
    \    local diffsCount63\n    local diffsCount64\n    local diffsCount65\n    local\
    \ diffsCount66\n    local diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpgjn3q8tt.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ diff score\n  diff=0\n  for i in $(seq 0 $((${#scores[@]} - 1))); do\n    score=${scores[i]}\n\
    \    guess=${guesses[i]}\n    if [[ $score -eq 0 ]]; then\n      diff=$diff\n\
    \    elif [[ $guess -eq 0 ]]; then\n      diff=$diff\n    elif (( diff == 0 ));\
    \ then\n      diff=$(( abs($guess - $score) ))\n    else\n      diff=$(( abs($guess\
    \ - $score) - diff ))\n    fi\n  done\n  echo $diff\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnlnoq4h3.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpnlnoq4h3.sh: line 26: [[: 1 2 3 4 2 -2: syntax error in expression (error
    token is "2 3 4 2 -2")

    /tmp/tmpnlnoq4h3.sh: line 29: abs(1 2 3 4 2 -2 - 1 2 3 4 5 1) : syntax error in
    expression (error token is "(1 2 3 4 2 -2 - 1 2 3 4 5 1) ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        local score\n        score=${scores[i]}\n        local guess\n      \
    \  guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${guess}-${score}\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]}-${scores[i]}\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local score\n    local guess\n    local diff\n    local diff\n   \
    \ local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    \n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local score\n    local guess\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp63btnvi1.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    diff=0\n    for ((i=0; i<${#scores[@]}; i++)); do\n\
    \        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ -eq ${guess} ]]; then\n            diff=0\n        else\n            diff=$((${diff}+abs(${guess}-${score})))\n\
    \        fi\n    done\n    echo ${diff}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp50c9rn9i.sh: line 24: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmp50c9rn9i.sh: line 27: 0+abs(1 2 3 4 2 -2-1 2 3 4 5 1): syntax error in
    expression (error token is "(1 2 3 4 2 -2-1 2 3 4 5 1)")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local score\n    local guess\n    local diff\n    local diff\n   \
    \ local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    \n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffabs\n    local diffabsmax\n  \
    \  local diffabsmaxindex\n    local diffmax\n    local diffmaxindex\n    local\
    \ diffmaxindex2\n    local diffmaxindex3\n    local diffmaxindex4\n    local diffmaxindex5\n\
    \    local diffmaxindex6\n    local diffmaxindex7\n    local diffmaxindex8\n \
    \   local diffmaxindex9\n    local diffmaxindex10\n    local diffmaxindex11\n\
    \    local diffmaxindex12\n    local diffmaxindex13\n    local diffmaxindex14\n\
    \    local diffmaxindex15\n    local diffmaxindex16\n    local diffmaxindex17\n\
    \    local diffmaxindex18\n    local diffmaxindex19\n    local diffmaxindex20\n\
    \    local diffmaxindex21\n    local diffmaxindex22\n    local diffmaxindex23\n\
    \    local diffmaxindex24\n    local diffmaxindex25\n    local diffmaxindex26\n\
    \    local diffmaxindex27\n    local diffmaxindex28\n    local diffmaxindex29\n\
    \    local diffmaxindex30\n    local diffmaxindex31\n    local diffmaxindex32\n\
    \    local diffmaxindex33\n    local diffmaxindex34\n    local diffmaxindex35\n\
    \    local diffmaxindex36\n    local diffmaxindex37\n    local diffmaxindex38\n\
    \    local diffmaxindex39\n    local diffmaxindex40\n    local diffmaxindex41\n\
    \    local diffmaxindex42\n    local diffmaxindex43\n    local diffmaxindex44\n\
    \    local diffmaxindex45\n    local diffmaxindex46\n    local diffmaxindex47\n\
    \    local diffmaxindex48\n    local diffmaxindex49\n    local diffmaxindex50\n\
    \    local diffmaxindex51\n    local diffmaxindex52\n    local diffmaxindex53\n\
    \    local diffmaxindex54\n    local diffmaxindex55\n    local diffmaxindex56\n\
    \    local diffmaxindex57\n    local diffmaxindex58\n    local diffmaxindex59\n\
    \    local diffmaxindex60\n    local diffmaxindex61\n    local diffmaxindex62\n\
    \    local diffmaxindex63\n    local \n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff score\n    local i j\n    diff=0\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        diff=$((${diff}+${guesses[i]}-${scores[i]}))\n    done\n\
    \    for ((j=0; j<${#guesses[@]}; j++)); do\n        if ((${guesses[j]} != ${scores[j]}));\
    \ then\n            diff=$((${diff}+${guesses[j]}-${scores[j]}))\n        fi\n\
    \    done\n    echo $diff\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmkus4jl9.sh: line 23: 0+1 2 3 4 2 -2-1 2 3 4 5 1: syntax error
    in expression (error token is "2 3 4 2 -2-1 2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdxzgkf0n.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffabs\n    local diffabsmax\n  \
    \  local diffabsmaxindex\n    local diffabsmaxscore\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n    local diffabsmaxscoreindex\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=()\n  local i\n  for i in $(seq 0 $((${#scores[@]} - 1)));\
    \ do\n    local score\n    score=${scores[i]}\n    local guess\n    guess=${guesses[i]}\n\
    \    if [[ $guess -eq 0 ]]; then\n      result[i]=0\n    elif (( guess < score\
    \ )); then\n      result[i]=$(( guess - score ))\n    else\n      result[i]=$((\
    \ score - guess ))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprrip3jr8.sh: line 27: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    /tmp/tmprrip3jr8.sh: line 29: ((: 1 2 3 4 2 -2: syntax error in expression (error
    token is "2 3 4 2 -2")

    /tmp/tmprrip3jr8.sh: line 32: 1 2 3 4 5 1: syntax error in expression (error token
    is "2 3 4 5 1")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local diffs\n    local diffslen\n    local diffslen2\n    local diffslen3\n\
    \    local diffslen4\n    local diffslen5\n    local diffslen6\n    local diffslen7\n\
    \    local diffslen8\n    local diffslen9\n    local diffslen10\n    local diffslen11\n\
    \    local diffslen12\n    local diffslen13\n    local diffslen14\n    local diffslen15\n\
    \    local diffslen16\n    local diffslen17\n    local diffslen18\n    local diffslen19\n\
    \    local diffslen20\n    local diffslen21\n    local diffslen22\n    local diffslen23\n\
    \    local diffslen24\n    local diffslen25\n    local diffslen26\n    local diffslen27\n\
    \    local diffslen28\n    local diffslen29\n    local diffslen30\n    local diffslen31\n\
    \    local diffslen32\n    local diffslen33\n    local diffslen34\n    local diffslen35\n\
    \    local diffslen36\n    local diffslen37\n    local diffslen38\n    local diffslen39\n\
    \    local diffslen40\n    local diffslen41\n    local diffslen42\n    local diffslen43\n\
    \    local diffslen44\n    local diffslen45\n    local diffslen46\n    local diffslen47\n\
    \    local diffslen48\n    local diffslen49\n    local diffslen50\n    local diffslen51\n\
    \    local diffslen52\n    local diffslen53\n    local diffslen54\n    local diffslen55\n\
    \    local diffslen56\n    local diffslen57\n    local diffslen58\n    local diffslen59\n\
    \    local diffslen60\n    local diffslen61\n    local diffslen62\n    local diffslen63\n\
    \    local diffslen64\n    local diffslen65\n    local diffslen66\n    local diffslen67\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses score\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n    local diff\n    local diff\n\
    \    local diff\n    local diff\n    local diff\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses score\n    scores=$1\n    guesses=$2\n\
    \    local diff diffs diff\n    diffs=()\n    diff=0\n    for (( i = 0; i < ${#scores[@]};\
    \ i++ )); do\n        diff=$(( ${scores[i]} - ${guesses[i]} ))\n        diff=$((\
    \ ${diff} > 0 ? ${diff} : -${diff} ))\n        diffs+=(\"${diff}\")\n    done\n\
    \    echo \"${diffs[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4t_frvwl.sh: line 23: 1 2 3 4 5 1 - 1 2 3 4 2 -2 : syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 2 -2 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses i j diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for i in $(seq 0 $((${#scores[@]}\
    \ - 1))); do\n        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n         \
    \   result[i]=0\n        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplrz21l1o.sh: line 26: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]}-${scores[i]}\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local score\n    local guess\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=0\n\
    \    done\n    for ((i=0; i<${#guesses[@]}; i++)); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp995xlyyk.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmp995xlyyk.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        local score\n        score=${scores[i]}\n        local guess\n      \
    \  guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${guess}-${score}\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_kziq40p.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvs6qgz36.sh: line 27: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i score guess diff\n    diff=0\n    for ((i=0; i<${#scores[@]}; i++));\
    \ do\n        score=${scores[i]}\n        guess=${guesses[i]}\n        if [[ ${score}\
    \ == ${guess} ]]; then\n            diff=0\n        else\n            diff=`expr\
    \ $guess - $score`\n        fi\n        diff += $diff\n    done\n    echo $diff\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20182\u2019\ndiff: missing operand\
    \ after '+='\ndiff: Try 'diff --help' for more information.\n"
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local i j diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff \n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n   \
    \ local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diff2\n    local diff3\n    local\
    \ diff4\n    local diff5\n    local diff6\n    local diff7\n    local diff8\n\
    \    local diff9\n    local diff10\n    local diff11\n    local diff12\n    local\
    \ diff13\n    local diff14\n    local diff15\n    local diff16\n    local diff17\n\
    \    local diff18\n    local diff19\n    local diff20\n    local diff21\n    local\
    \ diff22\n    local diff23\n    local diff24\n    local diff25\n    local diff26\n\
    \    local diff27\n    local diff28\n    local diff29\n    local diff30\n    local\
    \ diff31\n    local diff32\n    local diff33\n    local diff34\n    local diff35\n\
    \    local diff36\n    local diff37\n    local diff38\n    local diff39\n    local\
    \ diff40\n    local diff41\n    local diff42\n    local diff43\n    local diff44\n\
    \    local diff45\n    local diff46\n    local diff47\n    local diff48\n    local\
    \ diff49\n    local diff50\n    local diff51\n    local diff52\n    local diff53\n\
    \    local diff54\n    local diff55\n    local diff56\n    local diff57\n    local\
    \ diff58\n    local diff59\n    local diff60\n    local diff61\n    local diff62\n\
    \    local diff63\n    local diff64\n    local diff65\n    local diff66\n    local\
    \ diff67\n    local diff68\n    local diff69\n    local diff70\n    local diff71\n\
    \    local diff72\n    local diff73\n    local diff74\n    local diff75\n    local\
    \ diff76\n    local diff77\n    local diff78\n    local diff79\n    local diff80\n\
    \    local diff81\n    local diff82\n    local diff83\n    local diff84\n    local\
    \ diff85\n    local diff86\n    local diff87\n    local diff88\n    local diff89\n\
    \    local diff90\n    local diff91\n    local diff92\n    local diff93\n    local\
    \ diff94\n\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        local score=${scores[i]}\n\
    \        local guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n\
    \            result[i]=0\n        else\n            result[i]=${guess}-${score}\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    local i j k diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff diff\
    \ diff diff diff diff diff diff diff diff diff \n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=${guesses[i]}\n\
    \        if [[ ${guesses[i]} -eq ${scores[i]} ]]; then\n            result[i]=0\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq00744xt.sh: line 22: [[: 1 2 3 4 2 -2: syntax error in expression
    (error token is "2 3 4 2 -2")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        local score\n        score=${scores[i]}\n        local guess\n      \
    \  guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n        \
    \    result[i]=0\n        else\n            result[i]=${guess}-${score}\n    \
    \    fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses diff score\n    scores=$1\n    guesses=$2\n\
    \    diff=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        score=${scores[i]}\n\
    \        guess=${guesses[i]}\n        if [[ ${score} -eq ${guess} ]]; then\n \
    \           diff+=(\"0\")\n        else\n            diff+=(\"${abs(score - guess)}\"\
    )\n        fi\n    done\n    echo \"${diff[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzz8vsmr9.sh: line 23: [[: 1 2 3 4 5 1: syntax error in expression
    (error token is "2 3 4 5 1")

    /tmp/tmpzz8vsmr9.sh: line 26: ${abs(score - guess)}: bad substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses score\n    scores=$1\n    guesses=$2\n\
    \    local result\n    local i\n    local j\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=0\n\
    \    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${guesses[i]} - ${scores[i]}\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgu9rslvd.sh: line 27: `result[i]'': not a valid identifier

    /tmp/tmpgu9rslvd.sh: line 27: -: command not found

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[\
    \ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate\
    \ \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1\
    \ 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((\
    \ ${guesses[i]} - ${scores[i]} ))\n    done\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp63btnvi1.sh: line 21: 1 2 3 4 2 -2 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 2 -2 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local k\n    local\
    \ diff\n    local diff2\n    local diff3\n    local diff4\n    local diff5\n \
    \   local diff6\n    local diff7\n    local diff8\n    local diff9\n    local\
    \ diff10\n    local diff11\n    local diff12\n    local diff13\n    local diff14\n\
    \    local diff15\n    local diff16\n    local diff17\n    local diff18\n    local\
    \ diff19\n    local diff20\n    local diff21\n    local diff22\n    local diff23\n\
    \    local diff24\n    local diff25\n    local diff26\n    local diff27\n    local\
    \ diff28\n    local diff29\n    local diff30\n    local diff31\n    local diff32\n\
    \    local diff33\n    local diff34\n    local diff35\n    local diff36\n    local\
    \ diff37\n    local diff38\n    local diff39\n    local diff40\n    local diff41\n\
    \    local diff42\n    local diff43\n    local diff44\n    local diff45\n    local\
    \ diff46\n    local diff47\n    local diff48\n    local diff49\n    local diff50\n\
    \    local diff51\n    local diff52\n    local diff53\n    local diff54\n    local\
    \ diff55\n    local diff56\n    local diff57\n    local diff58\n    local diff59\n\
    \    local diff60\n    local diff61\n    local diff62\n    local diff63\n    local\
    \ diff64\n    local diff65\n    local diff66\n    local diff67\n    local diff68\n\
    \    local diff69\n    local diff70\n    local diff71\n    local diff72\n    local\
    \ diff73\n    local diff74\n    local diff75\n    local diff76\n    local diff77\n\
    \    local diff78\n    local diff79\n    local diff80\n    local diff81\n    local\
    \ diff82\n    local diff83\n    local diff84\n    local diff85\n    local diff86\n\
    \    local diff87\n    local diff88\n    local diff89\n    local diff90\n    local\
    \ diff91\n    local diff92\n    local diff93\n    local diff94\n    local diff95\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses result\n    scores=$1\n    guesses=$2\n\
    \    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${guesses[i]}\
    \ == ${scores[i]} ]]; then\n            result[i]=0\n        else\n          \
    \  result[i]=${abs(${guesses[i]} - ${scores[i]})}\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdxzgkf0n.sh: line 24: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        result[i]=0\n    done\n    for (( i=0; i<${#guesses[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${guesses[i]}-${scores[i]}\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local score\n\
    \    local guess\n    local diff\n    local diffs\n    local diff\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n \
    \   [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n   \
    \ [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local scores guesses\n  scores=$1\n  guesses=$2\n  local\
    \ result\n  result=$( IFS=$'\\n' read -r -d '' -a result <<<\"$( echo \"${guesses}\"\
    \ \\\n    | sort -n -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n \\\n    | sed 's/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/;s/$/0/;s/^/0/\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj_sx74g_.sh: line 22: unexpected EOF while looking for matching
    `''''

    /tmp/tmpj_sx74g_.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    for ((i=0; i<${#scores[@]};\
    \ i++)); do\n        local score\n        score=${scores[i]}\n        local guess\n\
    \        guess=${guesses[i]}\n        if [[ ${guess} == ${score} ]]; then\n  \
    \          result[i]=0\n        else\n            result[i]=${guess}-${score}\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    local i\n    local j\n    local diff\n \
    \   local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \    local diff\n    local diffs\n    local diff\n    local diffs\n    local diff\n\
    \    local diffs\n    local diff\n    local diffs\n    local diff\n    local diffs\n\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030902
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local scores guesses\n    scores=$1\n    guesses=$2\n\
    \    local result\n    result=()\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        if [[ ${guesses[i]} == ${scores[i]} ]]; then\n            result[i]=0\n\
    \        else\n            result[i]=${abs(${guesses[i]} - ${scores[i]})}\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp52tby5ir.sh: line 25: ${abs(${guesses[i]} - ${scores[i]})}: bad
    substitution

    '
  stdout: ''
  timestamp: 1660030902

name: HumanEval_47_median
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> median([3,\
  \ 1, 2, 4, 5])\n# 3\n# >>> median([-10, 4, 6, 1000, 10, 20])\n# 15.0\n#\n# $1 is\
  \ a space-separated list\nmedian() {\n"
tests: "}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
  \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
  \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
completions: ["    local l=$1\n    local median\n    local count\n    local i\n  \
    \  local j\n    local k\n    local count2\n    local median2\n    local count3\n\
    \    local median3\n    local count4\n    local median4\n    local count5\n  \
    \  local median5\n    local count6\n    local median6\n    local count7\n    local\
    \ median7\n    local count8\n    local median8\n    local count9\n    local median9\n\
    \    local count10\n    local median10\n    local count11\n    local median11\n\
    \    local count12\n    local median12\n    local count13\n    local median13\n\
    \    local count14\n    local median14\n    local count15\n    local median15\n\
    \    local count16\n    local median16\n    local count17\n    local median17\n\
    \    local count18\n    local median18\n    local count19\n    local median19\n\
    \    local count20\n    local median20\n    local count21\n    local median21\n\
    \    local count22\n    local median22\n    local count23\n    local median23\n\
    \    local count24\n    local median24\n    local count25\n    local median25\n\
    \    local count26\n    local median26\n    local count27\n    local median27\n\
    \    local count28\n    local median28\n    local count29\n    local median29\n\
    \    local count30\n    local median30\n    local count31\n    local median31\n\
    \    local count32\n    local median32\n    local count33\n    local median33\n\
    \    local count34\n    local median34\n    local count35\n    local median35\n\
    \    local count36\n    local median36\n    local count37\n    local median37\n\
    \    local count38\n    local median38\n    local count39\n    local median39\n\
    \    local count40\n    local median40\n    local count41\n    local median41\n\
    \    local count42\n    local median42\n    local count43\n    local median43\n\
    \    local count44\n    local median44\n    local count45\n    local median45\n\
    \    local count46\n    local median46\n    local count47\n    local median47\n\
    \    local count48\n    local median48\n    local count49\n    local median49\n\
    \    local count50\n    ", "    local l=$1\n    local median\n    median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"${median}\"", " \
    \   local l=$1\n    local len=${#l}\n    if [[ $len == 0 ]]; then\n        echo\
    \ \"NaN\"\n        return\n    fi\n    local i\n    local median\n    local median_index\n\
    \    median_index=0\n    for i in $(seq 0 $((len-1)))\n    do\n        if [[ $((i+1))\
    \ == $len ]]; then\n            median=$((l[i]))\n            break\n        fi\n\
    \        if [[ $((i+1)) > $len ]]; then\n            median=$((l[i]))\n      \
    \      break\n        fi\n        if [[ $((i+1)) < $len ]]; then\n           \
    \ median=$((l[((i+1)-1)]+l[i]))\n            break\n        fi\n    done\n   \
    \ echo \"$median\"", "  local l=$1\n  local median\n  median=$(echo \"${l}\" |\
    \ tr ' ' '\\n' | sort -n | tail -n 1)\n  echo \"${median}\"", "    local n=$1\n\
    \    local median\n    local i\n    local j\n    local m\n    local count\n  \
    \  local total\n    local count2\n    local total2\n    local median2\n    local\
    \ median3\n    local median4\n    local median5\n    local median6\n    local\
    \ median7\n    local median8\n    local median9\n    local median10\n    local\
    \ median11\n    local median12\n    local median13\n    local median14\n    local\
    \ median15\n    local median16\n    local median17\n    local median18\n    local\
    \ median19\n    local median20\n    local median21\n    local median22\n    local\
    \ median23\n    local median24\n    local median25\n    local median26\n    local\
    \ median27\n    local median28\n    local median29\n    local median30\n    local\
    \ median31\n    local median32\n    local median33\n    local median34\n    local\
    \ median35\n    local median36\n    local median37\n    local median38\n    local\
    \ median39\n    local median40\n    local median41\n    local median42\n    local\
    \ median43\n    local median44\n    local median45\n    local median46\n    local\
    \ median47\n    local median48\n    local median49\n    local median50\n    local\
    \ median51\n    local median52\n    local median53\n    local median54\n    local\
    \ median55\n    local median56\n    local median57\n    local median58\n    local\
    \ median59\n    local median60\n    local median61\n    local median62\n    local\
    \ median63\n    local median64\n    local median65\n    local median66\n    local\
    \ median67\n    local median68\n    local median69\n    local median70\n    local\
    \ median71\n    local median72\n    local median73\n    local median74\n    local\
    \ median75\n    local median76\n    local median77\n    local median78\n    local\
    \ median79\n    local median80\n    local median81\n    local median82\n    local\
    \ median83\n    local median84\n    local median85\n    local median86\n    local\
    \ median87\n    local median88\n    local median89\n    local median90\n    local\
    \ median91\n    local median92\n    local median93\n    local median94\n    local\
    \ median95\n    local ", "  local l\n  l=$1\n  local n\n  n=$(( ${#l} / 2 ))\n\
    \  echo $(( ${l[n]} + ${l[n+1]} / 2 ))", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local m\n    local i\n    local j\n    local k\n    local mid tmp\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local ", "    local l=$1\n    local median\n    local i\n    local j\n  \
    \  local count\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    ", "  local list=\"$1\"\n  local median\n  local i\n  local len\n  local\
    \ tmp\n  median=0\n  len=\"${#list}\"\n  if (( len == 0 )); then\n    return 0\n\
    \  fi\n  for i in $(seq 0 $((len-1)) ); do\n    tmp=\"${list[i]}\"\n    median=$((\
    \ $median + $tmp ))\n  done\n  median=$(( $median / $len ))\n  return $median",
  "    local l\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n", "    local l=$1\n    local median\n    local i\n\
    \    median=0\n    IFS=$'\\n' read -a l <<< \"$l\"\n    for i in \"${l[@]}\";\
    \ do\n        (( median += i ))\n    done\n    echo $(( median / ${#l[@]} ))",
  "    local l=$1\n    local median\n    median=$(echo \"${l}\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local median\n    local i\n    local j\n    local m\n    local count\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local ", "    local l=$1\n    local median\n    local i\n    median=0\n\
    \    for i in $l; do\n        median=$((median + i))\n    done\n    median=$((median\
    \ / ${#l}))\n    return $median", "    local l=$1\n    local median\n    median=$(echo\
    \ \"$l\" | sort -n | tail -n 1)\n    echo \"$median\"", "  local l=$1\n  local\
    \ n=$(( ${#l} / 2 ))\n  local median\n  local i\n  local j\n\n  if (( ${#l} %\
    \ 2 )); then\n    median=$(( ${l[n]} + ${l[n-1]} ) / 2)\n  else\n    median=${l[n]}\n\
    \  fi\n\n  for (( i=1; i<${#l}; i++ )); do\n    local j=$(( ${i} + 1 ))\n    local\
    \ m\n    if (( ${j} > n )); then\n      m=$(( ${j} - n ))\n      j=$(( ${#l} ))\n\
    \    fi\n    if (( ${j} > 0 )); then\n      m=$(( ${l[j]} - ${l[j-1]} ))\n   \
    \ fi\n    median=$(( median + m / 2 ))\n  done\n  echo $median", "    local l=$1\n\
    \    local median\n    local count\n    local i\n    median=0\n    count=0\n \
    \   for i in $l; do\n        count=$((count+1))\n        if [ $count -gt 1 ];\
    \ then\n            median=$((median + $i))\n        fi\n    done\n    median=$((median\
    \ / $count))\n    return $median", "    local l\n    l=$1\n    local median\n\
    \    median=$(echo \"${l}\" | cut -d ' ' -f 1 | sort -n | tail -1)\n    echo \"\
    ${median}\"", "    local l=$1\n    local median\n    median=$(echo \"${l}\" |\
    \ tr \" \" \"\\n\" | sort -n | tail -1)\n    echo \"${median}\"", "    local l=$1\n\
    \    local n=$((${#l} / 2))\n    local median\n    local i\n    median=0\n   \
    \ for (( i=0; i<${n}; i++ )); do\n        local j\n        local m\n        j=$((i\
    \ + 1))\n        m=$(echo \"${l[$i]}\" | bc)\n        if [[ ${l[$j]} > ${m} ]];\
    \ then\n            median=$((${median} + ${l[$i]}))\n        else\n         \
    \   median=$((${median} + ${l[$j]}))\n        fi\n    done\n    median=$((${median}\
    \ / 2))\n    echo \"${median}\"", "    local l\n    local n\n    local i\n   \
    \ local m\n    local mid imax\n    local imax2\n    local imax3\n    local imax4\n\
    \    local imax5\n    local imax6\n    local imax7\n    local imax8\n    local\
    \ imax9\n    local imax10\n    local imax11\n    local imax12\n    local imax13\n\
    \    local imax14\n    local imax15\n    local imax16\n    local imax17\n    local\
    \ imax18\n    local imax19\n    local imax20\n    local imax21\n    local imax22\n\
    \    local imax23\n    local imax24\n    local imax25\n    local imax26\n    local\
    \ imax27\n    local imax28\n    local imax29\n    local imax30\n    local imax31\n\
    \    local imax32\n    local imax33\n    local imax34\n    local imax35\n    local\
    \ imax36\n    local imax37\n    local imax38\n    local imax39\n    local imax40\n\
    \    local imax41\n    local imax42\n    local imax43\n    local imax44\n    local\
    \ imax45\n    local imax46\n    local imax47\n    local imax48\n    local imax49\n\
    \    local imax50\n    local imax51\n    local imax52\n    local imax53\n    local\
    \ imax54\n    local imax55\n    local imax56\n    local imax57\n    local imax58\n\
    \    local imax59\n    local imax60\n    local imax61\n    local imax62\n    local\
    \ imax63\n    local imax64\n    local imax65\n    local imax66\n    local imax67\n\
    \    local imax68\n    local imax69\n    local imax70\n    local imax71\n    local\
    \ imax72\n    local imax73\n    local imax74\n    local imax75\n    local imax76\n\
    \    local imax77\n    local imax78\n    local imax79\n    local imax80\n    local\
    \ imax81\n    local imax82\n    local i", "    local l=$1\n    local median\n\
    \    median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo\
    \ \"${median}\"", "    local l\n    l=$1\n    local n\n    n=$(echo $l | wc -w)\n\
    \    echo $(( ${l[n/2]} + ${l[n/2 - 1]} ) / 2 ))", "    local l=$1\n    local\
    \ n=$(( ${#l} / 2 ))\n    local m\n    local i\n    local j\n    local k\n   \
    \ local mid \n    local median\n\n    # sort list into descending order\n    local\
    \ sorted\n    sorted=( $(sort -n ${l} ) )\n\n    # find median of first half\n\
    \    mid=${sorted[$(( ${#sorted[@]} - 1 ))]}\n    median=$(( ${mid} + ${mid} /\
    \ 2 ))\n\n    # find median of second half\n    for (( i=1; i<${#sorted[@]}; i++\
    \ )); do\n        if [[ ${sorted[$i]} -eq ${mid} ]]; then\n            mid=${sorted[$((\
    \ ${i} - 1 ))]}\n        fi\n    done\n    median=$(( ${mid} + ${mid} / 2 ))\n\
    \n    # return median of both halves\n    median=$(( ${median} + ${median} / 2\
    \ ))\n    median=${median:-0}\n    return ${median}", "    local l=$1\n    local\
    \ len=${#l}\n    if [[ $len == 0 ]]; then\n        echo \"$l\"\n        return\n\
    \    fi\n    local mid=$((len / 2))\n    local median\n    if [[ $len % 2 == 0\
    \ ]]; then\n        median=$(echo \"${l[$mid]}+${l[$mid+1]}\" | bc)\n    else\n\
    \        median=$(echo \"${l[$mid]}+${l[$mid-1]}\" | bc)\n    fi\n    echo \"\
    $median\"", "  local l\n  l=$1\n  local n\n  n=$((${#l} / 2))\n  echo \"${l[n]}\"",
  "    local l=$1\n    local median\n    median=$(echo $l | tr \" \" \"\\n\" | sort\
    \ -n | tail -n 1)\n    echo \"$median\"", "    local l=$1\n    local median\n\
    \    local count\n    local i\n    median=0\n    count=0\n    for i in $l; do\n\
    \        ((count++))\n        if ((count % 2)); then\n            median=$((median\
    \ + i))\n        else\n            median=$((median - i))\n        fi\n    done\n\
    \    if ((count % 2)); then\n        median=$((median / 2))\n    fi\n    echo\
    \ \"$median\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n \
    \   local i\n    local j\n    local k\n    local mid \n    local median\n\n  \
    \  # sort and remove duplicates\n    local sorted\n    sorted=( $(sort -n ${l}\
    \ ) )\n    local unique\n    unique=( $(sort -u ${sorted[@]} ) )\n\n    # find\
    \ median of medians\n    local medians\n    medians=( $(sort -n ${unique[@]} )\
    \ )\n    local median\n    median=${medians[${#medians[@]} / 2]}\n\n    # find\
    \ median of non-medians\n    local nonmedians\n    nonmedians=( $(sort -n ${unique[@]}\
    \ ) )\n    local nonmedian\n    nonmedian=${nonmedians[${#nonmedians[@]} / 2]}\n\
    \n    # find median of medians\n    local medians\n    medians=( $(sort -n ${unique[@]}\
    \ ) )\n    local median\n    median=${medians[${#medians[@]} / 2]}\n\n    # find\
    \ median of non-medians\n    local nonmedians\n    nonmedians=( $(sort -n ${unique[@]}\
    \ ) )\n    local nonmedian\n    nonmedian=${nonmedians[${#nonmedians[@]} / 2]}\n\
    \n    # find median of medians\n    local medians\n    medians=( $(sort -n ${unique[@]}\
    \ ) )\n    local median\n    median=${medians[${#medians[@]} / 2]}\n\n    # find\
    \ median of non-medians\n    local nonmedians\n    nonmedians=( $(sort -n ${unique[@]}\
    \ ) )\n    local nonmedian\n    nonmedian=${nonmedians[${#nonmedians[@]} / 2]}\n\
    \n    # find median of medians\n    local medians\n    medians=( $(sort -n ${unique[@]}\
    \ ) )\n    local median\n    median=${medians[${#medians[@]} / 2]}\n\n    # find\
    \ median of non-medians\n    local nonmedians\n    nonmedians=( $(sort -n ${unique[@]}\
    \ ) )\n    local nonmedian\n    nonmedian=${nonmedians[${#nonmedians[@]} / 2]}\n\
    \n    # find median of medians\n    local medians\n    medians=( $(sort -n ",
  "    local l\n    local n\n    local i\n    local m\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    ", "  local l=$1\n  local median\n  local i\n  median=0\n  for i in $l; do\n\
    \    (( median += i ))\n  done\n  echo $median/${#l}", "    local l=$1\n    local\
    \ median\n    median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -1)\n\
    \    echo \"${median}\"", "    local l=$1\n    local len=${#l}\n    if [[ $len\
    \ == 0 ]]; then\n        return 0\n    fi\n    local mid=$((len / 2))\n    local\
    \ median\n    local i\n    median=0\n    for i in $(seq 0 $((len - 1)))\n    do\n\
    \        if [[ $((i + 1)) == $mid ]]; then\n            median=$((median + ${l[i]}))\n\
    \        else\n            median=$((median + ${l[i]}))\n        fi\n    done\n\
    \    echo $median", "    local l=$1\n    local median\n    median=$(echo \"${l}\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"${median}\"", "    local l=$1\n\
    \    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n    median=0\n \
    \   for i in $(seq 0 $(( ${#l} - 1 ))); do\n        if [[ ${l[$i]} -gt ${l[$((\
    \ ${#l} - 1 )) - $(( ${#l} - 1 )) - $i] }]] ; then\n            median=$(( median\
    \ + ${l[$i]} ))\n        fi\n    done\n    median=$(( median / 2 ))\n    return\
    \ $median", "    local l=$1\n    local median\n    local i\n    local count\n\
    \    median=0\n    count=0\n    for i in $l; do\n        if [ $i -gt $median ];\
    \ then\n            median=$i\n        fi\n        ((count++))\n    done\n   \
    \ if [ $count -gt 0 ]; then\n        echo \"$median\"\n    else\n        echo\
    \ \"0\"\n    fi", "    local l=$1\n    local median\n    median=$(echo \"${l}\"\
    \ | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo \"${median}\"", "    local\
    \ l=$1\n    local median\n    local i\n    local j\n    local count\n    local\
    \ median\n    median=0\n    count=0\n    for i in $l; do\n        count=$((count+1))\n\
    \    done\n    if [ $count -gt 1 ]; then\n        median=$((${l[$((${#l[@]} -\
    \ 1))]} + ${l[$((${#l[@]} - 2))]} + ${l[$((${#l[@]} - 3))]} + ${l[$((${#l[@]}\
    \ - 4))]} + ${l[$((${#l[@]} - 5))]} + ${l[$((${#l[@]} - 6))]} + ${l[$((${#l[@]}\
    \ - 7))]}) / 5)\n    elif [ $count -eq 1 ]; then\n        median=${l[0]}\n   \
    \ fi\n    echo \"$median\"", "    local l=$1\n    local median\n    local i\n\
    \    median=0\n    for i in $(seq 0 $((${#l}-1)))\n    do\n        local j=$((${#l}-1-i))\n\
    \        local m=$((${l[j]}+${l[j+1]}))\n        median=$((${median}+${m}))\n\
    \    done\n    median=$((${median}/2))", "    local list=\"$1\"\n    local median\n\
    \    local i\n    local len\n    local max\n    local min\n    local sum\n   \
    \ local count\n    local median\n    median=0\n    len=0\n    max=0\n    min=0\n\
    \    sum=0\n    count=0\n    for i in $list; do\n        ((count++))\n       \
    \ sum=$((sum + i))\n        len=$((len + 1))\n        if ((len == 1)); then\n\
    \            min=$i\n            max=$i\n        else\n            if ((min >\
    \ i)); then\n                min=$i\n            fi\n            if ((max < i));\
    \ then\n                max=$i\n            fi\n        fi\n    done\n    if ((len\
    \ == 0)); then\n        median=$((sum / count))\n    else\n        median=$((sum\
    \ / len))\n    fi\n    return $median", "    local l=$1\n    local n=$(( ${#l}\
    \ - 1 ))\n    local i\n    local m\n    local median\n    local tmp\n    local\
    \ len\n    local count\n    local imax\n    local j\n    local k\n    local mmax\n\
    \    local mmin\n    local i\n    local j\n    local k\n    local m\n    local\
    \ tmp\n    local len\n    local count\n    local imax\n    local j\n    local\
    \ k\n    local mmax\n    local mmin\n    local i\n    local j\n    local k\n \
    \   local m\n    local tmp\n    local len\n    local count\n    local imax\n \
    \   local j\n    local k\n    local mmax\n    local mmin\n    local i\n    local\
    \ j\n    local k\n    local m\n    local tmp\n    local len\n    local count\n\
    \    local imax\n    local j\n    local k\n    local mmax\n    local mmin\n  \
    \  local i\n    local j\n    local k\n    local m\n    local tmp\n    local len\n\
    \    local count\n    local imax\n    local j\n    local k\n    local mmax\n \
    \   local mmin\n    local i\n    local j\n    local k\n    local m\n    local\
    \ tmp\n    local len\n    local count\n    local imax\n    local j\n    local\
    \ k\n    local mmax\n    local mmin\n    local i\n    local j\n    local k\n \
    \   local m\n    local tmp\n    local len\n    local count\n    local imax\n \
    \   local j\n    local k\n    local mmax\n    local mmin\n    local i\n    local\
    \ j\n    local k\n    local m\n    local tmp\n    local len\n    local count\n\
    \    local imax\n    local j\n    local k\n    local mmax\n    local mmin\n  \
    \  local i\n    local j\n    local k\n    local m\n    local tmp\n    local len\n\
    \    local count\n    local imax\n    local j\n    local k\n    local mmax\n \
    \   local mmin\n    local i\n    local j\n    local k\n    local m\n    local\
    \ tmp\n    local len\n    local count\n    local imax\n    local j\n    ", " \
    \   local l=$1\n    local median\n    median=$(echo \"${l}\" | tr ' ' ',' | sort\
    \ -n | sed 's/,$//' | cut -d',' -f1)\n    echo \"${median}\"", "  local l=$1\n\
    \  local median\n  median=$(echo \"${l}\" | sort -n | tail -1)\n  echo \"${median}\"",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n \
    \   local j\n    local m\n    local x\n    local y\n    local z\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n", "    local l=$1\n    local median\n    median=$(echo \"${l}\"\
    \ | sort -n | tail -1)\n    echo \"${median}\"", "    local l=$1\n    local n=$((\
    \ ${#l} / 2 ))\n    local median\n    local i\n    local j\n    local m\n    local\
    \ count\n    local max\n    local min\n    local sum\n    local sum2\n    local\
    \ count2\n    local max2\n    local min2\n    local max3\n    local min3\n   \
    \ local max4\n    local min4\n    local max5\n    local min5\n    local max6\n\
    \    local min6\n    local max7\n    local min7\n    local max8\n    local min8\n\
    \    local max9\n    local min9\n    local max10\n    local min10\n    local max11\n\
    \    local min11\n    local max12\n    local min12\n    local max13\n    local\
    \ min13\n    local max14\n    local min14\n    local max15\n    local min15\n\
    \    local max16\n    local min16\n    local max17\n    local min17\n    local\
    \ max18\n    local min18\n    local max19\n    local min19\n    local max20\n\
    \    local min20\n    local max21\n    local min21\n    local max22\n    local\
    \ min22\n    local max23\n    local min23\n    local max24\n    local min24\n\
    \    local max25\n    local min25\n    local max26\n    local min26\n    local\
    \ max27\n    local min27\n    local max28\n    local min28\n    local max29\n\
    \    local min29\n    local max30\n    local min30\n    local max31\n    local\
    \ min31\n    local max32\n    local min32\n    local max33\n    local min33\n\
    \    local max34\n    local min34\n    local max35\n    local min35\n    local\
    \ max36\n    local min36\n    local max37\n    local min37\n    local max38\n\
    \    local min38\n    local max39\n    local min39\n    local max40\n    local\
    \ min40\n    local max41\n    local min41\n    local max42\n    local min42\n\
    \    local max43\n    local min43\n    local max44\n    local min44\n    local\
    \ max45\n    local min45\n    local max46\n    local min46\n", "    local l=$1\n\
    \    local median\n    median=$(echo \"${l}\" | sort -n | tail -1)\n    echo \"\
    ${median}\"", "    local l=$1\n    local median\n    local i\n    median=0\n \
    \   for i in $l; do\n        median=$((median + i))\n    done\n    median=$((median\
    \ / ${#l}))\n    echo \"$median\"", "    local l=$1\n    local median\n    local\
    \ i\n    median=0\n    for i in $(seq 0 $((${#l}-1)))\n    do\n        local j\n\
    \        local k\n        k=$((${#l}/2))\n        if [ $i -eq 0 ]; then\n    \
    \        median=$((${l[$k]} + ${l[$((k+1))]}))/2\n        else\n            median=$((${l[$k]}\
    \ + ${l[$((k+1))]}))\n        fi\n    done\n    echo \"$median\"", "    local\
    \ l=$1\n    local median\n    median=$(echo \"${l}\" | tr ' ' '\\n' | sort -n\
    \ | tail -n 1)\n    echo \"${median}\"", "    local n=$(( $# + 1 ))\n    local\
    \ a=($1)\n    local median\n    local i\n    local j\n    local count\n    local\
    \ median_index\n    local median_value\n    local median_values\n    local median_indexes\n\
    \    local median_value\n    local median_values\n    local median_indexes\n \
    \   local median_value\n    local median_values\n    local median_indexes\n  \
    \  local median_value\n    local median_values\n    local median_indexes\n   \
    \ local median_value\n    local median_values\n    local median_indexes\n    local\
    \ median_value\n    local median_values\n    local median_indexes\n    local median_value\n\
    \    local median_values\n    local median_indexes\n    local median_value\n \
    \   local median_values\n    local median_indexes\n    local median_value\n  \
    \  local median_values\n    local median_indexes\n    local median_value\n   \
    \ local median_values\n    local median_indexes\n    local median_value\n    local\
    \ median_values\n    local median_indexes\n    local median_value\n    local median_values\n\
    \    local median_indexes\n    local median_value\n    local median_values\n \
    \   local median_indexes\n    local median_value\n    local median_values\n  \
    \  local median_indexes\n    local median_value\n    local median_values\n   \
    \ local median_indexes\n    local median_value\n    local median_values\n    local\
    \ median_indexes\n    local median_value\n    local median_values\n    local median_indexes\n\
    \    local median_value\n    local median_values\n    local median_indexes\n \
    \   local median_value\n    local median_values\n    local median_indexes\n  \
    \  local median_value\n    local median_values\n    local median_indexes\n   \
    \ local median_value\n    local median_values\n    local median_indexes\n    local\
    \ median_value\n    local median_values\n    local median_indexes\n    local median_value\n\
    \    local median_values\n    local median_indexes\n    local median_value\n \
    \   local median_values\n    local median_indexes\n    local median_value\n  \
    \  local median_values\n    local median_indexes\n    local median_value\n   \
    \ local median_values\n    local median_indexes\n    local median_value\n    local\
    \ median_values\n    local median_indexes\n    local median_value\n    local median_values\n\
    \    local median", "    local l=$1\n    local median\n    median=$(echo \"${l}\"\
    \ | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo \"${median}\"", "    local\
    \ l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n    local\
    \ j\n    local m\n    local count\n    local medians\n    local median\n    medians=()\n\
    \    count=0\n    for (( i=1; i<${#l}; i++ )); do\n        (( count++ ))\n   \
    \     if (( count > n )); then\n            median=${medians[${#medians[@]} -\
    \ 1]}\n            break\n        fi\n        median=${l[i]}\n        medians+=(\"\
    ${median}\")\n    done\n    median=${medians[${#medians[@]} - 1]}\n    return\
    \ ${median}", "    local l\n    local n\n    local i\n    local m\n    local median\n\
    \    local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n  \
    \  local median\n    local n\n    local i\n    local m\n    local median\n   \
    \ local n\n    local i\n    local m\n    local median\n    local n\n    local\
    \ i\n    local m\n    local median\n    local n\n    local i\n    local m\n",
  "    local l=$1\n    local median\n    local i\n    median=0\n    for i in $l; do\n\
    \        median=$((median + i))\n    done\n    median=$((median / ${#l}))\n  \
    \  echo \"$median\"", "    local l\n    local n\n    local m\n    local i\n  \
    \  local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n", "    local l=$1\n    local\
    \ median\n    local i\n    median=0\n    for i in $l; do\n        (( median+=i\
    \ ))\n    done\n    echo $median/${#l}", "    local l\n    local n\n    local\
    \ i\n    local m\n    local median\n    local x\n    local y\n    local z\n  \
    \  local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n    local m\n    local i\n    local j\n    local m\n    local i\n    local\
    \ j\n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n", "    local l=$1\n    local len=${#l}\n    if [ $len == 0\
    \ ]\n    then\n        echo \"0\"\n        return\n    fi\n    local median\n\
    \    local i\n    local j\n    local mid\n    local count\n    local median\n\
    \    median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -1)\n    median=$((\
    \ ${median} / 2 ))\n    count=0\n    for (( i=0; i<${len}; i++ ))\n    do\n  \
    \      if [[ ${l[i]} == ${median} ]]\n        then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    if [ $count -gt 1 ]\n    then\n        mid=$((\
    \ len / 2 ))\n        median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | head\
    \ -$mid | tail -1)\n        median=$(( ${median} / 2 ))\n    fi\n    echo \"${median}\"",
  "    local l=$1\n    local median\n    median=$(echo \"${l}\" | tr \" \" \"\\n\"\
    \ | sort -n | tail -n 1)\n    echo \"${median}\"", "    local l=$1\n    local\
    \ n=$(( ${#l} / 2 ))\n    local median\n    local i\n    median=0\n    for i in\
    \ $(seq 0 $(( ${n} - 1 ))); do\n        local j=$(( i + 1 ))\n        local m=$((\
    \ ${l[i]} + ${l[j]} ))\n        if (( m % 2 == 0 )); then\n            median=$((\
    \ median + ${l[i]} ))\n        else\n            median=$(( median + ${l[j]} ))\n\
    \        fi\n    done\n    median=$(( median / 2 ))", "  local list=\"$1\"\n \
    \ local median\n  median=$(echo \"${list}\" | tr \" \" \"\\n\" | sort -n | tail\
    \ -n 1)\n  echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n\
    \    local m\n    local i\n    local j\n    local mid \n    local count\n    local\
    \ median\n    local median_index\n    local median_value\n    local imax\n   \
    \ local jmax\n    local imin\n    local jmin\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local jmed\n    local imed\n    local jmed\n    local imed\n    local jmed\n\
    \    local imed\n    local jmed\n    local imed\n    local jmed\n    local imed\n\
    \    local ", "    local l=$1\n    local median\n    local len=${#l}\n    if [[\
    \ $len == 0 ]]; then\n        median=-1\n    elif [[ $len == 1 ]]; then\n    \
    \    median=$(echo \"${l}\" | cut -d \" \" -f 1)\n    elif [[ $len % 2 == 0 ]];\
    \ then\n        median=$(echo \"${l}\" | cut -d \" \" -f 1 | sort -n | tail -1)\n\
    \    else\n        median=$(echo \"${l}\" | cut -d \" \" -f 1 | sort -n | head\
    \ -1)\n    fi\n    echo \"$median\"", "    local list=\"$1\"\n    local len=\"\
    ${#list}\"\n    if [ \"${len}\" -eq 0 ]; then\n        return 0\n    fi\n    local\
    \ median=\"$(( (${list[0]} + ${list[len-1]}) / 2 ))\"\n    local i\n    for ((\
    \ i=1; i<len; i++ )); do\n        if [ \"${list[i]}\" -gt \"${median}\" ]; then\n\
    \            median=\"${list[i]}\"\n        fi\n    done\n    echo \"${median}\"",
  "    local list=\"$1\"\n    local median\n    local i\n    local len\n    local\
    \ max\n    local min\n    local tmp\n    local tmp2\n    local count\n    local\
    \ median\n    local median_index\n    local median_value\n    local median_value_index\n\
    \    local median_indexes\n    local median_values\n    local median_values_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n    local median_indexes_index\n\
    \    local median_indexes_index\n    local median_indexes_index\n", "    local\
    \ l\n    local n\n    local i\n    local m\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n", "    local l\n    local n\n    local i\n    local m\n   \
    \ local x\n    local y\n    local z\n    local m\n    local n\n    local i\n \
    \   local m\n    local x\n    local y\n    local z\n    local m\n    local n\n\
    \    local i\n    local m\n    local x\n    local y\n    local z\n    local m\n\
    \    local n\n    local i\n    local m\n    local x\n    local y\n    local z\n\
    \    local m\n    local n\n    local i\n    local m\n    local x\n    local y\n\
    \    local z\n    local m\n    local n\n    local i\n    local m\n    local x\n\
    \    local y\n    local z\n    local m\n    local n\n    local i\n    local m\n\
    \    local x\n    local y\n    local z\n    local m\n    local n\n    local i\n\
    \    local m\n    local x\n    local y\n    local z\n    local m\n    local n\n\
    \    local i\n    local m\n    local x\n    local y\n    local z\n    local m\n\
    \    local n\n    local i\n    local m\n    local x\n    local y\n    local z\n\
    \    local m\n    local n\n    local i\n    local m\n    local x\n    local y\n\
    \    local z\n    local m\n    local n\n    local i\n    local m\n    local x\n\
    \    local y\n    local z\n    local m\n    local n\n    local i\n    local m\n\
    \    local x\n    local y\n    local z\n    local m\n    local n\n    local i\n\
    \    local m\n    local x\n    local y\n    local z\n    local m\n    local n\n\
    \    local i\n    local m\n    local x\n    local y\n    local z\n    local m\n\
    \    local n\n    local i\n    local m\n    local x\n    local y\n    local z\n\
    \    local m\n    local n\n    local i\n    local m\n    local x\n    local y\n\
    \    local z\n    local m\n    local n\n    local i\n    local m\n    local x\n\
    \    local y\n    local z\n    local m\n    local n\n", "    local l=$1\n    local\
    \ n=$(( ${#l} / 2 ))\n    local median\n    local i\n    median=0\n    for i in\
    \ $(seq 0 $(( n - 1 ))); do\n        local j=$(( i + 1 ))\n        if [[ $(( ${l[i]}\
    \ + ${l[j]} )) -gt $(( ${l[i]} + ${l[j]} )) ]]; then\n            median=$(( ${l[i]}\
    \ + ${l[j]} ))\n        fi\n    done\n    echo \"$median\"", "    local l=$1\n\
    \    local n=$(( ${#l} / 2 ))\n    local m\n    local i\n    local j\n    local\
    \ k\n    local mid \n    local median\n\n    # sort list l\n    local sorted\n\
    \    sorted=$(sort -n <<< \"${l}\")\n\n    # find median of first half\n    mid=$(echo\
    \ \"${sorted}\" | awk '{print $1}')\n    median=$(( ${mid} + ${mid} / 2 ))\n\n\
    \    # find median of second half\n    mid=$(echo \"${sorted}\" | awk '{print\
    \ $2}')\n    median=$(( ${mid} + ${mid} / 2 ))\n\n    # return median of both\
    \ halves\n    echo \"${median}\"", "    local l=$1\n    local median\n    local\
    \ i\n    median=0\n    IFS=$'\\n' read -a l <<< \"$l\"\n    for i in \"${l[@]}\"\
    ; do\n        (( median+=i ))\n    done\n    echo \"$median\"", "    local l=$1\n\
    \    local median\n    local i\n    local count\n    local sum\n    local median\n\
    \    local count\n    local sum\n    local median\n    local count\n    local\
    \ sum\n    local median\n    local count\n    local sum\n    local median\n  \
    \  local count\n    local sum\n    local median\n    local count\n    local sum\n\
    \    local median\n    local count\n    local sum\n    local median\n    local\
    \ count\n    local sum\n    local median\n    local count\n    local sum\n   \
    \ local median\n    local count\n    local sum\n    local median\n    local count\n\
    \    local sum\n    local median\n    local count\n    local sum\n    local median\n\
    \    local count\n    local sum\n    local median\n    local count\n    local\
    \ sum\n    local median\n    local count\n    local sum\n    local median\n  \
    \  local count\n    local sum\n    local median\n    local count\n    local sum\n\
    \    local median\n    local count\n    local sum\n    local median\n    local\
    \ count\n    local sum\n    local median\n    local count\n    local sum\n   \
    \ local median\n    local count\n    local sum\n    local median\n    local count\n\
    \    local sum\n    local median\n    local count\n    local sum\n    local median\n\
    \    local count\n    local sum\n    local median\n    local count\n    local\
    \ sum\n    local median\n    local count\n    local sum\n    local median\n  \
    \  local count\n    local sum\n    local median\n    local count\n    local sum\n\
    \    local median\n    local count\n    local sum\n    local median\n    local\
    \ count\n    local sum\n    local median\n    local count\n    local sum\n   \
    \ local median\n    local count\n    local sum\n    local median\n    local count\n\
    \    local sum\n    local median\n    local count\n    local sum\n    local median\n\
    \    local count\n    local sum\n    local median\n    local count\n    local\
    \ sum\n    local median\n    local count\n    local sum\n    local median\n  \
    \  local count\n    local sum\n    local median\n    local count\n    local sum\n\
    \    local median\n    local count\n    local sum\n    local median\n    local\
    \ count\n    local sum\n    local median\n    local count\n    local ", "    local\
    \ l=$1\n    local median\n    median=$(echo $l | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    echo $median", "    local l=$1\n    local median\n    local len=${#l}\n\
    \    if [[ $len == 0 ]]; then\n        median=-1\n    else\n        median=$(echo\
    \ \"${l}\" | sort -n | tail -n 1)\n    fi\n    echo \"$median\"", "  local l\n\
    \  l=$1\n  local n\n  n=$(( ${#l} / 2 ))\n  local median\n  median=$(echo \"${l}\"\
    \ | cut -d ' ' -f ${n})\n  echo $median", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local m\n    local i\n    local j\n    local m\n    local i\n  \
    \  local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n    local m\n    local i\n\
    \    local j\n    local m\n    local i\n    local j\n", "  local l=$1\n  local\
    \ median\n  median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -1)\n \
    \ echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local\
    \ median\n    local i\n    median=0\n    for i in $(seq 0 $(( ${n} - 1 ))); do\n\
    \        local j\n        local m\n        j=$(( i + 1 ))\n        m=$(( ${l[j]}\
    \ + ${l[i]} ))\n        if [[ $m -gt $median ]]; then\n            median=$m\n\
    \        fi\n    done\n    echo \"$median\"", "    local l=$1\n    local n=$((\
    \ ${#l} / 2 ))\n    local median\n    local i\n    local j\n    local m\n\n  \
    \  median=$(( ${l[n]} + ${l[n-1]} ) / 2)\n    for (( i=1; i<n; i++ )); do\n  \
    \      m=$(( ${l[i]} + ${l[i-1]} ) / 2)\n        if (( m <= median )); then\n\
    \            median=m\n        fi\n    done\n    echo $median", "  local l\n \
    \ l=$1\n  local median\n  median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n\
    \ | tail -1)\n  echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l} /\
    \ 2 ))\n    local median\n    local i\n    median=0\n    for i in $(seq 0 $((\
    \ ${#l} - 1 ))); do\n        local j=$(( i + 1 ))\n        local d=$(( ${l[i]}\
    \ - ${l[j]} ))\n        if [ $d -gt 0 ]; then\n            median=$(( median +\
    \ d ))\n        fi\n    done\n    echo $median", "    local l=$1\n    local median\n\
    \    local i\n    median=0\n    IFS=$'\\n' read -a l < <(sort -n <<<\"$l\")\n\
    \    for i in \"${l[@]}\"; do\n        (( median+=i ))\n    done\n    echo \"\
    $median\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n\
    \    local i\n    median=0\n    for i in $(seq 0 $(( ${#l} - 1 ))); do\n     \
    \   local j=$(( i + 1 ))\n        if [[ ${l[i]} -gt ${l[j]} ]]; then\n       \
    \     local m=$(( ${l[i]} + ${l[j]} / 2 ))\n            median=$(( ${median} +\
    \ m ))\n            i=$(( ${i} + 1 ))\n            j=$(( ${j} + 1 ))\n       \
    \ elif [[ ${l[i]} -lt ${l[j]} ]]; then\n            local m=$(( ${l[j]} + ${l[i]}\
    \ / 2 ))\n            median=$(( ${median} + m ))\n            j=$(( ${j} + 1\
    \ ))\n        fi\n    done\n    median=$(( ${median} / 2 ))", "    local l\n \
    \   local n\n    local i\n    local m\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n\
    \    local i\n    local j\n    local m\n    local count\n    local medians\n \
    \   local median\n    local medians\n    local i\n    local j\n    local m\n \
    \   local count\n    local medians\n    local median\n    local medians\n    local\
    \ i\n    local j\n    local m\n    local count\n    local medians\n    local median\n\
    \    local medians\n    local i\n    local j\n    local m\n    local count\n \
    \   local medians\n    local median\n    local medians\n    local i\n    local\
    \ j\n    local m\n    local count\n    local medians\n    local median\n    local\
    \ medians\n    local i\n    local j\n    local m\n    local count\n    local medians\n\
    \    local median\n    local medians\n    local i\n    local j\n    local m\n\
    \    local count\n    local medians\n    local median\n    local medians\n   \
    \ local i\n    local j\n    local m\n    local count\n    local medians\n    local\
    \ median\n    local medians\n    local i\n    local j\n    local m\n    local\
    \ count\n    local medians\n    local median\n    local medians\n    local i\n\
    \    local j\n    local m\n    local count\n    local medians\n    local median\n\
    \    local medians\n    local i\n    local j\n    local m\n    local count\n \
    \   local medians\n    local median\n    local medians\n    local i\n    local\
    \ j\n    local m\n    local count\n    local medians\n    local median\n    local\
    \ medians\n    local i\n    local j\n    local m\n    local count\n    local medians\n\
    \    local median\n    local medians\n    local i\n    local j\n    local m\n\
    \    local count\n    local medians\n    local median\n    local medians\n   \
    \ local i\n    local j\n    local m\n    local count\n    local medians\n    local\
    \ median\n    local medians\n    local i\n    local j\n    local m\n    local\
    \ count\n    local medians\n    local median\n    local medians\n    local i\n\
    \    local j\n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n\
    \    local i\n    local j\n    local m\n    local count\n    local medians\n \
    \   local median\n    medians=()\n    count=0\n    for (( i = 0; i < n; i++ ));\
    \ do\n        median=${l[$i]}\n        for (( j = ( i + 1 ); j < n; j++ )); do\n\
    \            if [[ ${l[$i]} -gt ${l[$j]} ]]; then\n                median=${l[$i]}\n\
    \                break\n            fi\n        done\n        medians+=(\"${median}\"\
    )\n        count=$(( count + 1 ))\n    done\n    if [[ ${count} -gt 0 ]]; then\n\
    \        median=${medians[$(( ${#medians[@]} - 1 ))]}\n    fi\n    echo \"${median}\"",
  "    local l\n    local n\n    local m\n    local i\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n\
    \    local median\n    local i\n    median=0\n    for i in $(seq 0 $(( ${#l} -\
    \ 1 ))); do\n        if [[ ${l[$i]} -gt ${l[$(( ${#l} - 1 )) - $(( ${i} - 1 ))}\
    \ ]]; then\n            median=$(( median + ${l[$i]} ))\n        fi\n    done\n\
    \    median=$(( median / 2 ))\n    return $median", "    local l\n    local n\n\
    \    local i\n    local m\n    local median\n    local tmp\n    local len\n\n\
    \    local -a arr\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n  \
    \  local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local -a tmp7\n  \
    \  local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local -a tmp11\n\
    \    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local -a tmp15\n\
    \    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local -a tmp19\n\
    \    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local -a tmp23\n\
    \    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local -a tmp27\n\
    \    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local -a tmp31\n\
    \    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local -a tmp35\n\
    \    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local -a tmp39\n\
    \    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local -a tmp43\n\
    \    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local -a tmp47\n\
    \    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local -a tmp51\n\
    \    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local -a tmp55\n\
    \    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local -a tmp59\n\
    \    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local -a tmp63\n\
    \    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local -a tmp67\n\
    \    local -a tmp68\n    local -", "    local l=$1\n    local median\n    local\
    \ i\n    median=$(echo \"$l\" | tr ' ' '\\n' | sort -nr | head -1)\n    i=2\n\
    \    while [ $i -lt ${#l} ]; do\n        if [[ $l -eq $median ]]; then\n     \
    \       echo \"$median\"\n            break\n        fi\n        median=$(echo\
    \ \"$l\" | tr ' ' '\\n' | sort -nr | head -$i)\n        i=$((i+1))\n    done",
  "    local l=$1\n    local len=${#l}\n    if [[ $len == 0 ]]; then\n        echo\
    \ \"0\"\n        return 0\n    fi\n    local mid=$((len / 2))\n    local median\n\
    \    if [[ $len % 2 == 0 ]]; then\n        median=$(echo \"${l[$mid]}+${l[$mid+1]}\"\
    \ | bc)\n    else\n        median=$(echo \"${l[$mid]}+${l[$mid-1]}\" | bc)\n \
    \   fi\n    echo \"$median\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n\
    \    local m\n    if [[ ${#l} % 2 == 0 ]]; then\n        m=$(echo \"${l[n]} +\
    \ ${l[n+1]}\" | bc)\n    else\n        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc -l)\n\
    \    fi\n    echo \"${m}\"", "    local l=$1\n    local median\n    median=$(echo\
    \ \"$l\" | sort -n | tail -n 1)\n    echo \"$median\"", "    local n=$1\n    local\
    \ median\n    local i\n    local j\n    local m\n    local x\n    local y\n  \
    \  local z\n    local l\n    local m\n    local n\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local m\n    local m\n    local m\n    local m\n    local m\n    local m\n\
    \    local ", "  local l=$1\n  local median\n  local i\n  median=0\n  for i in\
    \ $l; do\n    (( median += i ))\n  done\n  echo $median/${#l}", "    local l=$1\n\
    \    local median\n    local count\n    local i\n    local j\n    local k\n  \
    \  local m\n    local n\n    local mid \n    local max\n    local min\n    local\
    \ max2\n    local min2\n    local max3\n    local min3\n    local max4\n    local\
    \ min4\n    local max5\n    local min5\n    local max6\n    local min6\n    local\
    \ max7\n    local min7\n    local max8\n    local min8\n    local max9\n    local\
    \ min9\n    local max10\n    local min10\n    local max11\n    local min11\n \
    \   local max12\n    local min12\n    local max13\n    local min13\n    local\
    \ max14\n    local min14\n    local max15\n    local min15\n    local max16\n\
    \    local min16\n    local max17\n    local min17\n    local max18\n    local\
    \ min18\n    local max19\n    local min19\n    local max20\n    local min20\n\
    \    local max21\n    local min21\n    local max22\n    local min22\n    local\
    \ max23\n    local min23\n    local max24\n    local min24\n    local max25\n\
    \    local min25\n    local max26\n    local min26\n    local max27\n    local\
    \ min27\n    local max28\n    local min28\n    local max29\n    local min29\n\
    \    local max30\n    local min30\n    local max31\n    local min31\n    local\
    \ max32\n    local min32\n    local max33\n    local min33\n    local max34\n\
    \    local min34\n    local max35\n    local min35\n    local max36\n    local\
    \ min36\n    local max37\n    local min37\n    local max38\n    local min38\n\
    \    local max39\n    local min39\n    local max40\n    local min40\n    local\
    \ max41\n    local min41\n    local max42\n    local min42\n    local max43\n\
    \    local min43\n    local max44\n    local min44\n    local max45\n    local\
    \ min45\n    local max46\n    local min46\n    local max47\n    local min47\n\
    \    local max48\n", "  local l\n  l=$1\n  local n\n  n=\"${#l}\"\n  if (( n <=\
    \ 1 )); then\n    echo \"$l\"\n  else\n    local i\n    local m\n    local imax\n\
    \    local j\n    local k\n    local mmax\n    local mmed\n    local imed\n  \
    \  local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local imed\n    local imed\n    local imed\n\
    \    local imed\n    local imed\n    local i", "    local l=$1\n    local median\n\
    \    local i\n    median=0\n    for i in $(seq 0 $((${#l}-1)))\n    do\n     \
    \   median=$((${median}+${l[i]}))\n    done\n    median=$((${median}/2))", " \
    \   local l\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n", "    local l=$1\n    local median\n    median=$(echo\
    \ $l | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo $median", "    local l=$1\n\
    \    local median\n    local i\n    median=0\n    for i in $(seq 0 $((${#l}-1)))\n\
    \    do\n        local j=$((i+1))\n        local m=$((${l[i]} + ${l[j]}))\n  \
    \      if [[ $m -gt $median ]]; then\n            median=$m\n        fi\n    done\n\
    \    echo \"$median\"", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local\
    \ median\n    local i\n    local j\n    local m\n    local count\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local median\n   \
    \ local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local ",
  "    local l=$1\n    local median\n    local i\n    median=0\n    for i in $(seq\
    \ 0 $((${#l}-1)))\n    do\n        local j=$((i+1))\n        if [[ ${l[$i]} -gt\
    \ ${l[$j]} ]]\n        then\n            median=$((${l[$i]}+${l[$j]})/2)\n   \
    \     fi\n    done\n    echo $median", "  local l\n  l=$1\n  local n\n  n=$((\
    \ ${#l} - 1 ))\n  local i\n  local m\n  m=$(( ${#l} / 2 ))\n  for i in $(seq 0\
    \ $(( ${#l} - 1 ))); do\n    if [[ ${l[$i]} -gt ${l[$(( $i - 1 ))]} ]]; then\n\
    \      m=$(( $m + 1 ))\n    fi\n  done\n  if [[ ${#l} -eq 0 ]]; then\n    return\
    \ 0\n  fi\n  if [[ ${l[$(( $m - 1 ))]} -gt ${l[$(( $n - 1 ))]} ]]; then\n    m=$((\
    \ $m + 1 ))\n  fi\n  echo ${l[$(( $m - 1 ))]}", "  local l\n  l=$(echo \"$1\"\
    \ | tr \" \" \"\\n\")\n  echo \"$l\" | sort -n | tail -n 1", "    local l=$1\n\
    \    local n=$(( ${#l} - 1 ))\n    local i median\n    local tmp\n    median=0\n\
    \    for (( i=1; i<=$(( $n - 1 )); i++ )); do\n        tmp=$(( ${l[i]} + ${l[i+1]}\
    \ ))\n        if [ $tmp -gt $median ]; then\n            median=$tmp\n       \
    \ fi\n    done\n    echo $median", "  local l=$1\n  local median\n  local i\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n\
    \  local medians\n  local median\n  local count\n  local medians\n  local median\n\
    \  local count\n  local medians\n  local median\n  local count\n  local medians\n\
    \  local median\n  local count\n  local medians\n  local median\n  local count\n",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    local i\n    local\
    \ j\n    local mid \n    local median\n    local medians\n    local median\n \
    \   local medians\n    local median\n    local medians\n    local median\n   \
    \ local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local median", "    local l=$1\n\
    \    local n=$(( ${#l} / 2 ))\n    local m\n    if [[ ${#l} % 2 == 0 ]]; then\n\
    \        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc)\n    else\n        m=$(echo \"\
    ${l[n]} + ${l[n-1]}\" | bc)\n    fi\n    echo \"${m}\"", "  local l=$1\n  local\
    \ median\n  median=$(echo \"${l}\" | sort -n | tail -1)\n  echo \"${median}\"",
  "    local l=$1\n    local n=$((${#l} / 2))\n    local m\n    if [[ ${#l} % 2 ==\
    \ 0 ]]; then\n        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc)\n    else\n     \
    \   m=$(echo \"${l[n]} + ${l[n+1]} + ${l[n+2]}\" | bc)\n    fi\n    echo \"${m}\"",
  "  local l=$1\n  local median\n  local count\n  local i\n  median=0\n  count=0\n\
    \  for i in $l; do\n    ((count++))\n    if [ $count -gt 0 ]; then\n      median=$((median\
    \ + $i))\n    fi\n  done\n  if [ $count -gt 0 ]; then\n    median=$((median /\
    \ $count))\n  fi\n  return $median", "    local l\n    local n\n    local m\n\
    \    local i\n    local j\n    local median\n    local max\n    local min\n  \
    \  local tmp\n    local len\n\n    median=0\n    max=$(echo $1 | sed 's/ /\\n/g'\
    \ | sort -n | tail -n 1)\n    min=$(echo $1 | sed 's/ /\\n/g' | sort -n | head\
    \ -n 1)\n    len=$((${#1} / 2))\n    for (( i=0; i<${len}; i++ )); do\n      \
    \  tmp=$(echo $1 | sed 's/ /\\n/g' | sort -n | head -n $((i + 1)))\n        if\
    \ [[ ${#tmp} -gt ${#max} ]]; then\n            max=${tmp}\n        fi\n      \
    \  if [[ ${#tmp} -lt ${#min} ]]; then\n            min=${tmp}\n        fi\n  \
    \  done\n    for (( i=0; i<${len}; i++ )); do\n        tmp=$(echo $1 | sed 's/\
    \ /\\n/g' | sort -n | tail -n $((i + 1)))\n        if [[ ${#tmp} -gt ${#max} ]];\
    \ then\n            max=${tmp}\n        fi\n        if [[ ${#tmp} -lt ${#min}\
    \ ]]; then\n            min=${tmp}\n        fi\n    done\n    median=$(( (${max}\
    \ + ${min}) / 2 ))\n    echo $median", "    local l=$1\n    local median\n   \
    \ median=$(echo \"$l\" | sort -n | awk '{print $NF}')\n    echo \"$median\"",
  "    local l=$1\n    local median\n    median=$(echo \"${l}\" | tr \" \" \"\\n\"\
    \ | sort -n | tail -1)\n    echo \"${median}\"", "  local l=$1\n  local median\n\
    \  median=$(echo $l | tr ' ' '\\n' | sort -n | tail -n 1)\n  echo $median", " \
    \   local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n\
    \    local j\n    local m\n    local count\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local median\n    local median\n   \
    \ local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local ", "    local\
    \ n=$1\n    local median\n    local i\n    local j\n    local m\n    local count\n\
    \    local sum\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n\
    \    local sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n\
    \    local sum11\n    local sum12\n    local sum13\n    local sum14\n    local\
    \ sum15\n    local sum16\n    local sum17\n    local sum18\n    local sum19\n\
    \    local sum20\n    local sum21\n    local sum22\n    local sum23\n    local\
    \ sum24\n    local sum25\n    local sum26\n    local sum27\n    local sum28\n\
    \    local sum29\n    local sum30\n    local sum31\n    local sum32\n    local\
    \ sum33\n    local sum34\n    local sum35\n    local sum36\n    local sum37\n\
    \    local sum38\n    local sum39\n    local sum40\n    local sum41\n    local\
    \ sum42\n    local sum43\n    local sum44\n    local sum45\n    local sum46\n\
    \    local sum47\n    local sum48\n    local sum49\n    local sum50\n    local\
    \ sum51\n    local sum52\n    local sum53\n    local sum54\n    local sum55\n\
    \    local sum56\n    local sum57\n    local sum58\n    local sum59\n    local\
    \ sum60\n    local sum61\n    local sum62\n    local sum63\n    local sum64\n\
    \    local sum65\n    local sum66\n    local sum67\n    local sum68\n    local\
    \ sum69\n    local sum70\n    local sum71\n    local sum72\n    local sum73\n\
    \    local sum74\n    local sum75\n    local sum76\n    local sum77\n    local\
    \ sum78\n    local sum79\n    local sum80\n    local sum81\n    local sum82\n\
    \    local sum83\n    local sum84\n    local sum85\n    local sum86\n    local\
    \ sum87\n    local sum88\n    local sum89\n    local sum90\n    local sum91\n\
    \    local sum92\n    local sum93\n    local sum94\n    local sum95\n    local\
    \ sum96\n    local sum97\n    local ", "    local l=$1\n    local median\n   \
    \ median=$(echo \"$l\" | sort -n | tail -n 1)\n    echo \"$median\"", "    local\
    \ l\n    local n\n    local i\n    local m\n    local median\n    local len\n\
    \    local tmp\n    local x\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n    local y\n    local z\n    local w\n    local\
    \ y\n    local z\n    local w\n", "  local l\n  l=$1\n  local median\n  median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  echo \"${median}\"", "   \
    \ local l\n    local n\n    local m\n    local i\n    local j\n    local m\n \
    \   local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n", "    local l\n    local n\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n    local m\n    local\
    \ i\n    local m\n    local i\n    local m\n    local i\n", "    local list=\"\
    $1\"\n    local median\n    local i\n    local len\n    local count\n    local\
    \ medians\n    local median\n    medians=()\n    median=0\n    len=${#list}\n\
    \    count=0\n    for i in $(seq 0 $((len-1)))\n    do\n        ((count++))\n\
    \        if [[ $i -eq $((len-1)) ]]; then\n            median=$list[i]\n     \
    \       medians+=(\"$median\")\n            break\n        fi\n        median=$(($list[i]\
    \ + ($list[$((i+1))])))\n        medians+=(\"$median\")\n    done\n    median=$(echo\
    \ \"${medians[@]}\" | sort -nr | head -1)\n    echo \"$median\"", "    local l=$1\n\
    \    local median\n    local count\n    local i\n    median=0\n    count=0\n \
    \   for i in $l; do\n        ((count++))\n        if ((count % 2)); then\n   \
    \         median=$((median + i))\n        else\n            median=$((median -\
    \ i))\n        fi\n    done\n    if ((count % 2)); then\n        median=$((median\
    \ / 2))\n    fi\n    return $median", "    local l=$1\n    local n=$(( ${#l} /\
    \ 2 ))\n    local m\n    local i\n    local j\n    local k\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n    local n\n    local m\n    local\
    \ n\n    local m\n    local n\n    local m\n", "    local l=$1\n    local median\n\
    \    local i\n    local count\n    median=0\n    count=0\n    for i in $l; do\n\
    \        ((count++))\n        if [ $count -gt 1 ]; then\n            if [ $count\
    \ -gt $((count/2)) ]; then\n                median=$((median + $i))\n        \
    \    else\n                median=$((median + $((count/2)) + $i))\n          \
    \  fi\n        else\n            median=$((median + $i))\n        fi\n    done\n\
    \    echo $median", "    local l=$1\n    local median\n    local i\n    median=$(echo\
    \ \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -1)\n    median=$(( ${median} /\
    \ 2 ))\n    for (( i=1; i<${#l}; i++ )); do\n        if [[ ${l[$i]} -eq ${median}\
    \ ]]; then\n            median=$(( ${median} + 1 ))\n        fi\n    done\n  \
    \  echo \"${median}\"", "    local l=$1\n    local median\n    median=$(echo $l\
    \ | cut -d ' ' -f 1 | sort -n | tail -1)\n    echo $median", "    local l\n  \
    \  local n\n    local m\n    local i\n    local j\n    local mid \n    local len\n\
    \    local median\n    local tmp\n\n    local -a arr\n    local -a tmp\n    local\
    \ -a sorted\n    local -a median\n    local -a sorted\n\n    local -a arr\n  \
    \  local -a tmp\n    local -a sorted\n    local -a median\n    local -a sorted\n\
    \n    local -a arr\n    local -a tmp\n    local -a sorted\n    local -a median\n\
    \    local -a sorted\n\n    local -a arr\n    local -a tmp\n    local -a sorted\n\
    \    local -a median\n    local -a sorted\n\n    local -a arr\n    local -a tmp\n\
    \    local -a sorted\n    local -a median\n    local -a sorted\n\n    local -a\
    \ arr\n    local -a tmp\n    local -a sorted\n    local -a median\n    local -a\
    \ sorted\n\n    local -a arr\n    local -a tmp\n    local -a sorted\n    local\
    \ -a median\n    local -a sorted\n\n    local -a arr\n    local -a tmp\n    local\
    \ -a sorted\n    local -a median\n    local -a sorted\n\n    local -a arr\n  \
    \  local -a tmp\n    local -a sorted\n    local -a median\n    local -a sorted\n\
    \n    local -a arr\n    local -a tmp\n    local -a sorted\n    local -a median\n\
    \    local -a sorted\n\n    local -a arr\n    local -a tmp\n    local -a sorted\n\
    \    local -a median\n    local -a sorted\n\n    local -a arr\n    local -a tmp\n\
    \    local -a sorted\n    local -a median\n    local -a sorted\n\n    local -a\
    \ arr\n    local -a tmp\n    local -a sorted\n    local -a median\n    local -a\
    \ sorted\n\n    local -a arr\n    local -a tmp\n    local -a sorted\n    local\
    \ -a median\n    local -a sorted\n\n    local -a arr\n    local -a tmp\n    local\
    \ -a sorted\n    local -a median\n    local -a sorted\n\n    local -a arr\n  \
    \  local -a tmp\n    local -a sorted\n    local -a median\n    ", "    local l=$1\n\
    \    local median\n    local i\n    median=0\n    for i in $(seq 0 $((${#l}-1)))\n\
    \    do\n        local j\n        local m\n        j=$((i+1))\n        m=$(echo\
    \ \"${l[$i]}\" | bc)\n        if [ \"${l[$j]}\" -gt \"${m}\" ]; then\n       \
    \     median=$((${median}+${l[$i]}))\n        fi\n    done\n    median=$((${median}/2))\n\
    \    echo \"${median}\"", "    local l=$1\n    local len=${#l}\n    if [ $len\
    \ == 0 ]\n    then\n        echo \"NaN\"\n        return\n    fi\n    local median\n\
    \    local i\n    local j\n    local m\n    local count\n    local median_index\n\
    \    median_index=0\n    median=$(echo $l | sed 's/,/ /g' | sort -n | tail -n\
    \ 1)\n    for i in $(seq 0 $((len-1)))\n    do\n        j=$((i+1))\n        if\
    \ [ $j -gt $len ]\n        then\n            j=$len\n        fi\n        m=$(echo\
    \ $l | sed 's/,/ /g' | sort -n | head -n $j)\n        count=$(echo $m | wc -w)\n\
    \        if [ $count -gt 1 ]\n        then\n            median=$(echo $m | awk\
    \ '{print $1}')\n            median_index=$((median_index+1))\n        fi\n  \
    \  done\n    echo $median", "    local l=$1\n    local n=$(( ${#l} - 1 ))\n  \
    \  local median\n    local i\n    median=0\n    for i in $(seq 0 $(( n - 1 )));\
    \ do\n        local j=$(( i + 1 ))\n        local m\n        m=$(( ${l[i]} + ${l[j]}\
    \ ))\n        if (( m % 2 == 0 )); then\n            median=$(( median + ${l[j]}\
    \ ))\n        else\n            median=$(( median + ${l[i]} ))\n        fi\n \
    \   done\n    median=$(( median / 2 ))\n    return $median", "  local l=$1\n \
    \ local median\n  local i\n  local j\n  local count\n  local medians\n  local\
    \ median\n  local len\n  medians=()\n  median=0\n  len=${#l[@]}\n  if (( len ==\
    \ 0 )); then\n    return 0\n  fi\n  for i in $(seq 0 $(( len / 2 ))); do\n   \
    \ count=0\n    for j in $(seq 0 $(( len / 2 ))); do\n      if [[ $(( i + j ))\
    \ -eq $len ]]; then\n        median=$(( median + l[$(expr $i + 1)] ))\n      \
    \  medians+=(\"$median\")\n        (( count++ ))\n      fi\n    done\n  done\n\
    \  median=$(expr $median / $count)\n  medians+=(\"$median\")\n  echo ${medians[@]}",
  "    local l=$1\n    local median\n    local i\n    local count\n    median=0\n\
    \    count=0\n    for i in $l; do\n        count=$((count+1))\n        if [ $count\
    \ -gt 1 ]; then\n            median=$((median+i))\n        fi\n    done\n    median=$((median/2))\n\
    \    return $median", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local\
    \ median\n    local i\n    median=0\n    for i in $(seq 0 $(( n - 1 ))); do\n\
    \        local j\n        local m\n        j=$(( i + 1 ))\n        m=$(( ${l[i]}\
    \ + ${l[j]} / 2 ))\n        if [ $m -gt $median ]; then\n            median=$m\n\
    \        fi\n    done\n    echo \"$median\"", "    local l=$1\n    local median\n\
    \    median=$(echo \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"\
    ${median}\"", "    local l=$1\n    local median\n    local i\n    median=0\n \
    \   for i in $(seq 0 $((${#l}-1)))\n    do\n        local j=$((i+1))\n       \
    \ local m\n        m=$(echo \"${l[$i]} + ${l[j]}\" | bc)\n        if [[ $m -gt\
    \ $median ]]; then\n            median=$m\n        fi\n    done\n    echo \"$median\"",
  "  local l=$1\n  local median\n  local i\n  local j\n  local count\n  local medians\n\
    \  local median\n  medians=()\n  count=0\n  for (( i=0; i < ${#l}; i++ )); do\n\
    \    (( count++ ))\n    median=${l[i]}\n    for (( j=0; j < ${#medians}; j++ ));\
    \ do\n      if [[ ${medians[j]} == ${median} ]]; then\n        median=${medians[j]}\n\
    \        break\n      fi\n    done\n    medians+=(\"${median}\")\n  done\n  if\
    \ [[ ${count} -gt 0 ]]; then\n    median=${medians[${#medians[@]} / 2]}\n  fi\n\
    \  echo \"${median}\"", "    local l\n    local n\n    local i\n    local m\n\
    \    local median\n    local len\n    local max\n    local min\n    local tmp\n\
    \    local imax\n    local imin\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local tmp\n    local imax\n    local imin\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local tmp\n    local\
    \ imax\n    local imin\n    local i\n    local j\n    local k\n    local m\n \
    \   local n\n    local tmp\n    local imax\n    local imin\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local tmp\n    local imax\n  \
    \  local imin\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local tmp\n    local imax\n    local imin\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local tmp\n    local imax\n    local\
    \ imin\n    local i\n    local j\n    local k\n    local m\n    local n\n    local\
    \ tmp\n    local imax\n    local imin\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local tmp\n    local imax\n    local imin\n   \
    \ local i\n    local j\n    local k\n    local m\n    local n\n    local tmp\n\
    \    local imax\n    local imin\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local tmp\n    local imax\n    local imin\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local tmp\n    local\
    \ imax\n    local imin\n    local i\n    local j\n    local k\n    local m\n \
    \   local n\n    local tmp\n    local imax\n    local imin\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local tmp\n    local imax\n  \
    \  local imin\n    local i\n    local j\n    local k\n    local m\n    local n\n\
    \    local tmp\n", "    local l\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local n\n", "    local l\n    local n\n   \
    \ local i\n    local m\n    local median\n    local imax\n    local max\n    local\
    \ min\n    local sum\n    local count\n    local sum2\n    local imax2\n    local\
    \ max2\n    local min2\n    local median2\n    local imax3\n    local max3\n \
    \   local min3\n    local median3\n    local imax4\n    local max4\n    local\
    \ min4\n    local median4\n    local imax5\n    local max5\n    local min5\n \
    \   local median5\n    local imax6\n    local max6\n    local min6\n    local\
    \ median6\n    local imax7\n    local max7\n    local min7\n    local median7\n\
    \    local imax8\n    local max8\n    local min8\n    local median8\n    local\
    \ imax9\n    local max9\n    local min9\n    local median9\n    local imax10\n\
    \    local max10\n    local min10\n    local median10\n    local imax11\n    local\
    \ max11\n    local min11\n    local median11\n    local imax12\n    local max12\n\
    \    local min12\n    local median12\n    local imax13\n    local max13\n    local\
    \ min13\n    local median13\n    local imax14\n    local max14\n    local min14\n\
    \    local median14\n    local imax15\n    local max15\n    local min15\n    local\
    \ median15\n    local imax16\n    local max16\n    local min16\n    local median16\n\
    \    local imax17\n    local max17\n    local min17\n    local median17\n    local\
    \ imax18\n    local max18\n    local min18\n    local median18\n    local imax19\n\
    \    local max19\n    local min19\n    local median19\n    local imax20\n    local\
    \ max20\n    local min20\n    local median20\n    local imax21\n    local max21\n\
    \    local min21\n    local median21\n    local imax22\n    local max22\n    local\
    \ min22\n    local median22\n    local imax23\n    local max23\n    local min23\n\
    \    local median23\n    local imax", "    local l=$1\n    local median\n    median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -1)\n    echo \"${median}\"", "  local\
    \ l=$1\n  local median\n  median=$(echo $l | tr \" \" \"\\n\" | sort -n | tail\
    \ -n 1)\n  echo $median", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local\
    \ m\n    local i\n    local j\n    local mval\n    local midx\n    local imax\n\
    \    local jmax\n    local midxmax\n    local imax2\n    local jmax2\n    local\
    \ imax3\n    local jmax3\n    local imax4\n    local jmax4\n    local imax5\n\
    \    local jmax5\n    local imax6\n    local jmax6\n    local imax7\n    local\
    \ jmax7\n    local imax8\n    local jmax8\n    local imax9\n    local jmax9\n\
    \    local imax10\n    local jmax10\n    local imax11\n    local jmax11\n    local\
    \ imax12\n    local jmax12\n    local imax13\n    local jmax13\n    local imax14\n\
    \    local jmax14\n    local imax15\n    local jmax15\n    local imax16\n    local\
    \ jmax16\n    local imax17\n    local jmax17\n    local imax18\n    local jmax18\n\
    \    local imax19\n    local jmax19\n    local imax20\n    local jmax20\n    local\
    \ imax21\n    local jmax21\n    local imax22\n    local jmax22\n    local imax23\n\
    \    local jmax23\n    local imax24\n    local jmax24\n    local imax25\n    local\
    \ jmax25\n    local imax26\n    local jmax26\n    local imax27\n    local jmax27\n\
    \    local imax28\n    local jmax28\n    local imax29\n    local jmax29\n    local\
    \ imax30\n    local jmax30\n    local imax31\n    local jmax31\n    local imax32\n\
    \    local jmax32\n    local imax33\n    local jmax33\n    local imax34\n    local\
    \ jmax34\n    local imax35\n    local jmax35\n    local imax36\n    local jmax36\n\
    \    local imax37\n    local jmax37\n    local imax38\n    local jmax38\n    local\
    \ imax39\n    local jmax", "    local l=$1\n    local median\n    median=$(echo\
    \ $l | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo $median", "  local list=\"\
    $1\"\n  local median\n  median=$(echo \"${list}\" | tr \" \" \"\\n\" | sort -n\
    \ | tail -n 1)\n  echo \"${median}\"", "  local l=$1\n  local median\n  median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -1)\n  echo \"${median}\"", "    local\
    \ l=$1\n    local n=$((${#l} / 2))\n    if [[ ${#l} % 2 == 0 ]]; then\n      \
    \  echo \"${l[n]}\"\n    else\n        echo \"${l[n-1]}\" \"${l[n]}\"\n    fi",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n    local k\n    local m\n    local i\n    local j\n    local k\n    local\
    \ m\n    local i\n    local j\n    local k\n    local m\n    local i\n    local\
    \ j\n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    if [[\
    \ ${#l} % 2 == 0 ]]; then\n        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc)\n  \
    \  else\n        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc -l)\n    fi\n    echo \"\
    ${m}\"", "    local l\n    local n\n    local i\n    local m\n    local median\n\
    \    local tmp\n    local len\n\n    # Parse arguments\n    local -a args=(\"\
    $@\")\n    len=${#args[@]}\n    if [ $len -eq 0 ]; then\n        echo \"Usage:\
    \ $0 list\"\n        return 1\n    fi\n\n    # Sort and remove duplicates\n  \
    \  local -a sorted=()\n    for ((i = 0; i < $len; i++)); do\n        sorted+=(\"\
    ${args[$i]}\")\n    done\n    sorted=( \"${sorted[@]}\" )\n    sorted=( \"${sorted[@]/#/-}\"\
    \ )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n\
    \    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=(\
    \ \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\"\
    \ )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n\
    \    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=(\
    \ \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\"\
    \ )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n\
    \    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=(\
    \ \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\"\
    \ )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n\
    \    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=(\
    \ \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\" )\n    sorted=( \"${sorted[@]/%/}\"\
    \ )\n    sorted=( \"${sorted[@]/%/}\" )\n    ", "  local l=$1\n  local median\n\
    \  median=$(echo $l | tr ' ' '\\n' | sort -n | tail -n 1)\n  echo $median", " \
    \   local l=$1\n    local median\n    local count\n    local i\n    local j\n\
    \    local k\n    local count\n    median=0\n    count=0\n    for (( i=0; i<${#l[@]};\
    \ i++ )); do\n        count=$(( count+1 ))\n    done\n    for (( j=0; j<${#l[@]};\
    \ j++ )); do\n        if [[ ${l[j]} -gt 0 ]]; then\n            k=$(( j+1 ))\n\
    \            median=$(( median+l[j] ))\n        fi\n    done\n    median=$(( median/count\
    \ ))\n    return $median", "    local l=$1\n    local median\n    local i\n  \
    \  median=0\n    for i in $l; do\n        median=$((median + i))\n    done\n \
    \   median=$((median / ${#l}))\n    return $median", "    local l=$1\n    local\
    \ median\n    median=$(echo \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n \
    \   echo \"${median}\"", "    local l=$1\n    local len=${#l}\n    if [[ $len\
    \ == 0 ]]; then\n        return 0\n    fi\n    local mid\n    mid=$((len / 2))\n\
    \    local median\n    median=$(echo \"${l}\" | sed -n \"${mid}p\")\n    local\
    \ i\n    for (( i=1; i<$len; i++ )); do\n        if [[ ${l[$i]} -gt ${median}\
    \ ]]; then\n            median=$l[$i]\n        fi\n    done\n    echo \"$median\"",
  "    local n=$1\n    local a=($@)\n    local median\n    local i\n    local j\n\
    \    local m\n    local count\n    local medians\n    local median\n    local\
    \ imax\n    local jmax\n    local mmax\n    local imed\n    local jmed\n    local\
    \ imedmax\n    local jmedmax\n    local imedmed\n    local jmedmed\n    local\
    \ imedmedmax\n    local jmedmedmax\n    local imedmedmed\n    local jmedmedmed\n\
    \    local imedmedmedmax\n    local jmedmedmedmax\n    local imedmedmedmed\n \
    \   local jmedmedmedmed\n    local imedmedmedmedmax\n    local jmedmedmedmedmax\n\
    \    local imedmedmedmedmed\n    local jmedmedmedmedmed\n    local imedmedmedmedmedmax\n\
    \    local jmedmedmedmedmedmax\n    local imedmedmedmedmedmed\n    local jmedmedmedmedmedmed\n\
    \    local imedmedmedmedmedmedmax\n    local jmedmedmedmedmedmedmax\n    local\
    \ imedmedmedmedmedmedmed\n    local jmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmax\n\
    \    local jmedmedmedmedmedmedmedmax\n    local imedmedmedmedmedmedmedmed\n  \
    \  local jmedmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmedmax\n \
    \   local jmedmedmedmedmedmedmedmedmax\n    local imedmedmedmedmedmedmedmedmed\n\
    \    local jmedmedmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmedmedmax\n\
    \    local jmedmedmedmedmedmedmedmedmedmax\n    local imedmedmedmedmedmedmedmedmedmed\n\
    \    local jmedmedmedmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmedmedmedmax\n\
    \    local jmedmedmedmedmedmedmedmedmedmedmax\n    local imedmedmedmedmedmedmedmedmedmedmed\n\
    \    local jmedmedmedmedmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmedmedmedmedmax\n\
    \    local jmedmedmedmedmed", "    local list=\"$1\"\n    local median\n    median=$(echo\
    \ \"$list\" | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo \"$median\"",
  "    local l\n    local n\n    local i\n    local m\n    local median\n    local\
    \ imax\n    local j\n    local k\n    local lmax\n    local mmax\n    local imed\n\
    \    local jmed\n    local kmed\n    local imedmax\n    local jmedmax\n    local\
    \ kmedmax\n    local imedmed\n    local jmedmed\n    local kmedmed\n    local\
    \ imedmedmax\n    local jmedmedmax\n    local kmedmedmax\n    local imedmedmed\n\
    \    local jmedmedmed\n    local kmedmedmed\n    local imedmedmedmax\n    local\
    \ jmedmedmedmax\n    local kmedmedmedmax\n    local imedmedmedmed\n    local jmedmedmedmed\n\
    \    local kmedmedmedmed\n    local imedmedmedmedmax\n    local jmedmedmedmedmax\n\
    \    local kmedmedmedmedmax\n    local imedmedmedmedmed\n    local jmedmedmedmedmed\n\
    \    local kmedmedmedmedmed\n    local imedmedmedmedmedmax\n    local jmedmedmedmedmedmax\n\
    \    local kmedmedmedmedmedmax\n    local imedmedmedmedmedmed\n    local jmedmedmedmedmedmed\n\
    \    local kmedmedmedmedmedmed\n    local imedmedmedmedmedmax\n    local jmedmedmedmedmedmax\n\
    \    local kmedmedmedmedmedmax\n    local imedmedmedmedmedmed\n    local jmedmedmedmedmedmed\n\
    \    local kmedmedmedmedmedmed\n    local imedmedmedmedmedmedmax\n    local jmedmedmedmedmedmedmax\n\
    \    local kmedmedmedmedmedmedmax\n    local imedmedmedmedmedmedmed\n    local\
    \ jmedmedmedmedmedmedmed\n    local kmedmedmedmedmedmedmed\n    local imedmedmedmedmedmedmedmax\n\
    \    local jmedmedmedmedmedmedmax\n    local kmedmedmedmedmedmedmax\n    local\
    \ imedmedmedmedmedmedmed\n    local jmedmedmedmedmedmedmed\n    local kmedmedmedmedmedmedmed\n\
    \    local imedmedmedmedmedmedmedmax\n    local jmedmedmedmedmedmed", "    local\
    \ n=$#\n    local a=($@)\n    local median\n    local i\n    local j\n    local\
    \ m\n    local count\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local imax\n    local jmax\n    local mmax\n    local\
    \ imax2\n    local jmax2\n    local mmax2\n    local imax3\n    local jmax3\n\
    \    local mmax3\n    local imax4\n    local jmax4\n    local mmax4\n    local\
    \ imax5\n    local jmax5\n    local mmax5\n    local imax6\n    local jmax6\n\
    \    local mmax6\n    local imax7\n    local jmax7\n    local mmax7\n    local\
    \ imax8\n    local jmax8\n    local mmax8\n    local imax9\n    local jmax9\n\
    \    local mmax9\n    local imax10\n    local jmax10\n    local mmax10\n    local\
    \ imax11\n    local jmax11\n    local mmax11\n    local imax12\n    local jmax12\n\
    \    local mmax12\n    local imax13\n    local jmax13\n    local mmax13\n    local\
    \ imax14\n    local jmax14\n    local mmax14\n    local imax15\n    local jmax15\n\
    \    local mmax15\n    local imax16\n    local jmax16\n    local mmax16\n    local\
    \ imax17\n    local jmax17\n    local mmax17\n    local imax18\n    local jmax18\n\
    \    local mmax18\n    local imax19\n    local jmax19\n    local mmax19\n    local\
    \ imax20\n    local jmax20\n    local mmax20\n    local imax21\n    local jmax21\n\
    \    local mmax21\n    local imax22\n    local jmax22\n    local mmax22\n    local\
    \ imax23\n    local jmax23\n    local mmax23\n    local imax24\n    local jmax24\n\
    \    local mmax24\n    local imax25\n    local jmax25\n    local mmax25\n    local\
    \ imax26\n    local jmax26\n", "    local l=$1\n    local median\n    median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -1)\n    echo \"${median}\"", "   \
    \ local l\n    local n\n    local m\n    local i\n    local j\n    local k\n \
    \   local median\n    local sorted\n    local count\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n", "    local list=\"$1\"\n    local median\n    median=$(echo \"${list}\"\
    \ | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo \"${median}\"", "    local\
    \ l=$1\n    local median\n    local i\n    median=0\n    for i in $(seq 0 $((${#l}-1)))\n\
    \    do\n        local j\n        local count\n        local median\n        count=$(echo\
    \ $l | wc -w)\n        if [ $count -gt 1 ]; then\n            median=$((${l[$i]}\
    \ + ${l[$((i+1))]})/2)\n        else\n            median=${l[$i]}\n        fi\n\
    \        echo $median\n    done", "    local l=$1\n    local median\n    local\
    \ count\n    local i\n    median=0\n    count=0\n    for i in $l; do\n       \
    \ count=$((count+1))\n        if [ $count -gt 0 ]; then\n            median=$((median\
    \ + $i))\n        fi\n    done\n    median=$((median / count))\n    return $median",
  "    local l\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local n\n", "  local l\n  l=\"$1\"\n  echo \"$l\" | awk '{\n\
    \    sum = 0\n    count = $1\n    for (i = 2; i <= NF; i++) {\n      sum += $i\n\
    \    }\n    print (sum / count) }'", "    local n=$1\n    local a\n    local m\n\
    \    local i\n    local j\n    local mid \n    local len\n    local tmp\n    local\
    \ tmp2\n    local count\n    local median\n    local median2\n    local median3\n\
    \    local median4\n    local median5\n    local median6\n    local median7\n\
    \    local median8\n    local median9\n    local median10\n    local median11\n\
    \    local median12\n    local median13\n    local median14\n    local median15\n\
    \    local median16\n    local median17\n    local median18\n    local median19\n\
    \    local median20\n    local median21\n    local median22\n    local median23\n\
    \    local median24\n    local median25\n    local median26\n    local median27\n\
    \    local median28\n    local median29\n    local median30\n    local median31\n\
    \    local median32\n    local median33\n    local median34\n    local median35\n\
    \    local median36\n    local median37\n    local median38\n    local median39\n\
    \    local median40\n    local median41\n    local median42\n    local median43\n\
    \    local median44\n    local median45\n    local median46\n    local median47\n\
    \    local median48\n    local median49\n    local median50\n    local median51\n\
    \    local median52\n    local median53\n    local median54\n    local median55\n\
    \    local median56\n    local median57\n    local median58\n    local median59\n\
    \    local median60\n    local median61\n    local median62\n    local median63\n\
    \    local median64\n    local median65\n    local median66\n    local median67\n\
    \    local median68\n    local median69\n    local median70\n    local median71\n\
    \    local median72\n    local median73\n    local median74\n    local median75\n\
    \    local median76\n    local median77\n    local median78\n    local median79\n\
    \    local median80\n    local median81\n    local median82\n    local median83\n\
    \    local median84\n    local median85\n    local median86\n    local median87\n\
    \    local median88\n    local median89\n    local median90\n    local median91\n\
    \    local median92\n    local median93\n    local median94", "    local l\n \
    \   local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n    local i\n    local j\n    local m\n    local n\n    local m\n\
    \    local i\n    local j\n    local m\n    local n\n    local m\n    local i\n\
    \    local j\n    local m\n    local n\n    local m\n    local i\n    local j\n\
    \    local m\n    local n\n    local m\n    local i\n    local j\n    local m\n\
    \    local n\n    local m\n    local i\n    local j\n    local m\n    local n\n\
    \    local m\n", "    local l=$1\n    local n=$(( ${#l} - 1 ))\n    local i\n\
    \    local m\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n    local m\n    local i\n    local j\n    local m\n    local\
    \ i\n    local j\n", "    local l=$1\n    local median\n    local count\n    local\
    \ i\n    local j\n    local count\n    local median\n    local i\n    local j\n\
    \    local count\n    local median\n    local i\n    local j\n    local count\n\
    \    local median\n    local i\n    local j\n    local count\n    local median\n\
    \    local i\n    local j\n    local count\n    local median\n    local i\n  \
    \  local j\n    local count\n    local median\n    local i\n    local j\n    local\
    \ count\n    local median\n    local i\n    local j\n    local count\n    local\
    \ median\n    local i\n    local j\n    local count\n    local median\n    local\
    \ i\n    local j\n    local count\n    local median\n    local i\n    local j\n\
    \    local count\n    local median\n    local i\n    local j\n    local count\n\
    \    local median\n    local i\n    local j\n    local count\n    local median\n\
    \    local i\n    local j\n    local count\n    local median\n    local i\n  \
    \  local j\n    local count\n    local median\n    local i\n    local j\n    local\
    \ count\n    local median\n    local i\n    local j\n    local count\n    local\
    \ median\n    local i\n    local j\n    local count\n    local median\n    local\
    \ i\n    local j\n    local count\n    local median\n    local i\n    local j\n\
    \    local count\n    local median\n    local i\n    local j\n    local count\n\
    \    local median\n    local i\n    local j\n    local count\n    local median\n\
    \    local i\n    local j\n    local count\n    local median\n    local i\n  \
    \  local j\n    local count\n    local median\n    local i\n    local j\n    local\
    \ count\n    local median\n    local i\n    local j\n    local count\n    local\
    \ median\n    local i\n    local j\n    local count\n    local median\n    local\
    \ i\n    local j\n    local count\n    local median\n    local i\n    local j\n\
    \    local count\n    local median\n    local i\n    local j\n    local count\n\
    \    local median\n    local i\n    local j\n    local count\n    local median\n\
    \    local ", "  local l\n  l=$1\n  local median\n  median=$(echo $l | tr \" \"\
    \ \"\\n\" | sort -n | tail -1)\n  echo $median", "  local l=$1\n  local median\n\
    \  median=$(echo $l | sed 's/,/ /g' | sort -n | tail -1)\n  echo $median", " \
    \   local l=$1\n    local n=$(( ${#l} - 1 ))\n    local i\n    local median\n\
    \    local median_value\n    local median_index\n    local median_indexes\n  \
    \  local median_indexes_count\n    local median_indexes_count_min\n    local median_indexes_count_max\n\
    \    local median_indexes_count_median\n    local median_indexes_count_median_index\n\
    \    local median_indexes_count_median_indexes\n    local median_indexes_count_median_indexes_count\n\
    \    local median_indexes_count_median_indexes_count_min\n    local median_indexes_count_median_indexes_count_max\n\
    \    local median_indexes_count_median_indexes_count_median\n    local median_indexes_count_median_indexes_count_median_index\n\
    \    local median_indexes_count_median_indexes_count_median_indexes\n    local\
    \ median_indexes_count_median_indexes_count_median_indexes_count\n    local median_indexes_count_median_indexes_count_median_indexes_count_min\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_max\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_index\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_min\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_max\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_index\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_min\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_max\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median\n\
    \    local median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_indexes_count_median_index\n\
    \    local median_indexes_", "    local n=$(( $# + 1 ))\n    local a\n    local\
    \ m\n    local i\n    local j\n    local mid \n    local len\n\n    local -a arr\n\
    \    arr=( $1 )\n\n    len=${#arr[@]}\n    if [ $len -gt 1 ]; then\n        echo\
    \ \"$len is not a valid number of arguments\"\n        return 1\n    fi\n\n  \
    \  if [ $len -eq 0 ]; then\n        echo \"$len is an empty list\"\n        return\
    \ 1\n    fi\n\n    mid=$(( $len / 2 ))\n    mid=$(( $mid + 1 ))\n\n    if [ $len\
    \ -eq 1 ]; then\n        echo \"$len is 1 element\"\n        echo \"$arr[0]\"\n\
    \        return 0\n    fi\n\n    if [ $len -eq 2 ]; then\n        echo \"$len\
    \ is 2 elements\"\n        echo \"$arr[0]\"\n        echo \"$arr[1]\"\n      \
    \  return 0\n    fi\n\n    if [ $len -eq 3 ]; then\n        echo \"$len is 3 elements\"\
    \n        echo \"$arr[0]\"\n        echo \"$arr[1]\"\n        echo \"$arr[2]\"\
    \n        return 0\n    fi\n\n    if [ $len -eq 4 ]; then\n        echo \"$len\
    \ is 4 elements\"\n        echo \"$arr[0]\"\n        echo \"$arr[1]\"\n      \
    \  echo \"$arr[2]\"\n        echo \"$arr[3]\"\n        return 0\n    fi\n\n  \
    \  if [ $len -eq 5 ]; then\n        echo \"$len is 5 elements\"\n        echo\
    \ \"$arr[0]\"\n        echo \"$arr[1]\"\n        echo \"$arr[2]\"\n        echo\
    \ \"$arr[3]\"\n        echo \"$arr[4]\"\n        return 0\n    fi\n\n    if [\
    \ $len -eq 6 ]; then\n        echo \"$len is 6 elements\"\n        echo \"$arr[0]\"\
    \n        echo \"$arr[1]\"\n        echo \"$arr[2]\"\n        echo \"$arr[3]\"\
    \n        echo \"$arr[4]\"\n        echo \"$arr[5]\"\n        return 0\n    fi\n\
    \n    if [ $len -eq 7 ]; then\n        echo \"$len is 7 elements\"\n        echo\
    \ \"$arr[0]\"\n        echo \"$arr[1]\"\n        echo \"$arr[2]\"\n        echo\
    \ \"$arr[3]\"\n        echo \"$arr[4]\"\n        echo \"$arr[5]\"\n        echo\
    \ \"$arr[6]\"\n        return 0\n    fi\n\n    if [ $len -eq 8 ]; then\n     \
    \   echo \"$len is 8 elements\"\n        echo \"$arr[0]\"\n        echo \"$arr[1]\"\
    \n        echo \"$arr[2]\"\n        ", "  local l=$1\n  local median\n  local\
    \ count\n  local i\n  local j\n  local count2\n  local median2\n  local median3\n\
    \  local median4\n  local median5\n  local median6\n  local median7\n  local median8\n\
    \  local median9\n  local median10\n  local median11\n  local median12\n  local\
    \ median13\n  local median14\n  local median15\n  local median16\n  local median17\n\
    \  local median18\n  local median19\n  local median20\n  local median21\n  local\
    \ median22\n  local median23\n  local median24\n  local median25\n  local median26\n\
    \  local median27\n  local median28\n  local median29\n  local median30\n  local\
    \ median31\n  local median32\n  local median33\n  local median34\n  local median35\n\
    \  local median36\n  local median37\n  local median38\n  local median39\n  local\
    \ median40\n  local median41\n  local median42\n  local median43\n  local median44\n\
    \  local median45\n  local median46\n  local median47\n  local median48\n  local\
    \ median49\n  local median50\n  local median51\n  local median52\n  local median53\n\
    \  local median54\n  local median55\n  local median56\n  local median57\n  local\
    \ median58\n  local median59\n  local median60\n  local median61\n  local median62\n\
    \  local median63\n  local median64\n  local median65\n  local median66\n  local\
    \ median67\n  local median68\n  local median69\n  local median70\n  local median71\n\
    \  local median72\n  local median73\n  local median74\n  local median75\n  local\
    \ median76\n  local median77\n  local median78\n  local median79\n  local median80\n\
    \  local median81\n  local median82\n  local median83\n  local median84\n  local\
    \ median85\n  local median86\n  local median87\n  local median88\n  local median89\n\
    \  local median90\n  local median91\n  local median92\n  local median93\n  local\
    \ median94\n  local median95\n  local median96\n  local median97\n  local median98\n",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n \
    \   median=0\n    for i in $(seq 0 $(( ${#l} - 1 ))); do\n        local j=$((\
    \ i + 1 ))\n        local d=$(( ${l[i]} - ${l[j]} ))\n        if [[ $d -gt 0 ]];\
    \ then\n            median=$(( median + d ))\n        fi\n    done\n    median=$((\
    \ median / 2 ))\n    echo \"$median\"", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local median\n    local i\n    local j\n    local m\n    local count\n\
    \    local medians\n    local median\n    medians=()\n    for i in $(seq 0 $((\
    \ ${#l} - 1 ))); do\n        count=$(expr ${#l} / 2)\n        j=$(( i + 1 ))\n\
    \        if [ $i -eq 0 ]; then\n            median=${l[i]}\n        else\n   \
    \         median=${l[i]}\n            for m in $(seq 0 $(( ${#l} - 1 ))); do\n\
    \                if [ $m -eq $i ]; then\n                    continue\n      \
    \          fi\n                if [ $m -eq $j ]; then\n                    count=$((\
    \ count + 1 ))\n                    continue\n                fi\n           \
    \     if [ $m -eq $(( ${#l} - 1 )) ]; then\n                    count=$(( count\
    \ + 1 ))\n                    continue\n                fi\n                if\
    \ [ $m -eq $(( ${#l} - 2 )) ]; then\n                    count=$(( count + 1 ))\n\
    \                    continue\n                fi\n                count=$(( count\
    \ + 1 ))\n                if [ $count -gt $(( ${#medians} )) ]; then\n       \
    \             medians=($median)\n                fi\n                medians=(\"\
    ${medians[@]}\" \"$median\")\n            done\n        fi\n    done\n    median=${medians[$((\
    \ ${#medians[@]} - 1 ))]}\n    echo \"$median\"", "    local l=$1\n    local median\n\
    \    median=$(echo \"$l\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"$median\"",
  "    local l=$1\n    local n=$(( ${#l} / 2 ))\n    local m\n    if [[ ${#l} % 2\
    \ == 0 ]]; then\n        m=$(echo \"${l[n]} + ${l[n+1]}\" | bc)\n    else\n  \
    \      m=$(echo \"${l[n]} + ${l[n-1]}\" | bc)\n    fi\n    echo \"${m}\"", " \
    \   local l=$1\n    local n=$(( ${#l} / 2 ))\n    local median\n    local i\n\
    \    median=0\n    for i in $(seq 0 $(( ${#l} - 1 ))); do\n        local j\n \
    \       local m\n        j=$(( i + 1 ))\n        if [ $j -gt $n ]; then\n    \
    \        m=$(( j - 1 ))\n        else\n            m=$(( n - 1 ))\n        fi\n\
    \        median=$(( $median + ${l[$i]} / $m ))\n    done\n    echo \"$median\"",
  "    local l=$1\n    local n=$(( ${#l} - 1 ))\n    local i\n    local m\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n\n    local m\n    local n\n    local m\n    local n\n\
    \    local m\n    local n", "    local l=$1\n    local n=$(( ${#l} / 2 ))\n  \
    \  local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n    local k\n    local m\n    local i\n\
    \    local j\n    local k\n    local m\n    local i\n    local j\n    local k\n\
    \    local m\n    local i\n    local j\n", "    local list=\"$1\"\n    local median\n\
    \    median=$(echo \"$list\" | sort -n | tail -n 1)\n    echo \"$median\"", " \
    \   local l=$1\n    local median\n    local i\n    median=0\n    for i in $(seq\
    \ 0 $((${#l}-1)))\n    do\n        local j=$((i+1))\n        local m=$((${l[i]}+${l[j]}))\n\
    \        if [ $m -gt $median ]; then\n            median=$m\n        fi\n    done\n\
    \    echo \"$median\"", "    local l=$1\n    local median\n    local count\n \
    \   local i\n    local j\n    local count2\n    local median2\n    local count3\n\
    \    local median3\n    local count4\n    local median4\n    local count5\n  \
    \  local median5\n    local count6\n    local median6\n    local count7\n    local\
    \ median7\n    local count8\n    local median8\n    local count9\n    local median9\n\
    \    local count10\n    local median10\n    local count11\n    local median11\n\
    \    local count12\n    local median12\n    local count13\n    local median13\n\
    \    local count14\n    local median14\n    local count15\n    local median15\n\
    \    local count16\n    local median16\n    local count17\n    local median17\n\
    \    local count18\n    local median18\n    local count19\n    local median19\n\
    \    local count20\n    local median20\n    local count21\n    local median21\n\
    \    local count22\n    local median22\n    local count23\n    local median23\n\
    \    local count24\n    local median24\n    local count25\n    local median25\n\
    \    local count26\n    local median26\n    local count27\n    local median27\n\
    \    local count28\n    local median28\n    local count29\n    local median29\n\
    \    local count30\n    local median30\n    local count31\n    local median31\n\
    \    local count32\n    local median32\n    local count33\n    local median33\n\
    \    local count34\n    local median34\n    local count35\n    local median35\n\
    \    local count36\n    local median36\n    local count37\n    local median37\n\
    \    local count38\n    local median38\n    local count39\n    local median39\n\
    \    local count40\n    local median40\n    local count41\n    local median41\n\
    \    local count42\n    local median42\n    local count43\n    local median43\n\
    \    local count44\n    local median44\n    local count45\n    local median45\n\
    \    local count46\n    local median46\n    local count47\n    local median47\n\
    \    local count48\n    local median48\n    local count49\n    local median49\n\
    \    local count50\n    local median50\n", "    local l=$1\n    local median\n\
    \    median=$(echo \"${l}\" | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    echo\
    \ \"${median}\"", "  local l=$1\n  local median\n  local count\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  local mid \n  local max\n  local min\n\
    \  local sum\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local\
    \ sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n\
    \  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n \
    \ local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local\
    \ sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n\
    \  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n \
    \ local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local\
    \ sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n\
    \  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n \
    \ local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local\
    \ sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n\
    \  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n \
    \ local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local\
    \ sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n\
    \  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n \
    \ local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local\
    \ sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n\
    \  local sum92\n  local sum93\n  ", "    local l=$1\n    local n=$(( ${#l} / 2\
    \ ))\n    local m\n    local i\n    local j\n    local mid \n    local tmp\n \
    \   local imax\n    local jmax\n    local mmax\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    local jmed\n\
    \    local mmed\n    local imed\n    local jmed\n    local mmed\n    local imed\n\
    \    local jmed\n    local mmed\n    local imed\n    local jmed\n    local mmed\n\
    \    local imed\n    local jmed\n    local mmed\n    local imed\n    ", "    local\
    \ l\n    local n\n    local i\n    local m\n    local median\n    local imax\n\
    \    local j\n    local k\n    local mmax\n    local imed\n    local jmed\n  \
    \  local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed\n    local kmed\n    local imed\n\
    \    local jmed\n    local kmed\n    local imed\n    local jmed\n    local kmed\n\
    \    local imed\n    local jmed\n    local kmed\n    local imed\n    local jmed\n\
    \    local kmed\n    local imed\n    local jmed", "    local l=$1\n    local n=$((\
    \ ${#l} / 2 ))\n    local median\n    local i\n    median=0\n    for i in $(seq\
    \ 0 $(( ${#l} - 1 )) )\n    do\n        local j\n        local m\n        j=$((\
    \ i + 1 ))\n        m=$(( ${l[i]} + ${l[j]} / 2 ))\n        if [ $m -gt $median\
    \ ]; then\n            median=$m\n        fi\n    done\n    echo \"$median\"",
  "  local l=$1\n  local median\n  median=$(echo $l | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n  echo $median", "    local l=$1\n    local median\n    median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"${median}\"", " \
    \ local l=$1\n  local median\n  median=$(echo \"${l}\" | tr ' ' '\\n' | sort -n\
    \ | tail -n 1)\n  echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local m\n    local i\n    local j\n    local k\n    local m\n  \
    \  local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n    local k\n    local m\n\
    \    local i\n    local j\n    local k\n    local m\n    local i\n    local j\n\
    \    local k\n    local m\n    local i\n    local j\n", "    local l=$1\n    local\
    \ len=${#l}\n    if [ $len == 0 ]\n    then\n        echo \"$l\"\n        return\n\
    \    fi\n    local mid=$((len / 2))\n    local median\n    local i\n    median=0\n\
    \    for i in $(seq 0 $((len - 1)))\n    do\n        if [ $i -eq $mid ]\n    \
    \    then\n            median=$((median + l[i]))\n        else\n            median=$((median\
    \ + l[i] + l[i - 1]))\n        fi\n    done\n    echo $median"]
stop_tokens:
- "\n}"

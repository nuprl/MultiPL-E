name: HumanEval_47_median
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> median([3,\
  \ 1, 2, 4, 5])\n# 3\n# >>> median([-10, 4, 6, 1000, 10, 20])\n# 15.0\n#\n# $1 is\
  \ a space-separated list\nmedian() {\n"
tests: "}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
  \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
  \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
completions: ["    local l=$1\n    local median\n    local count\n    local i\n  \
    \  local j\n    local k\n    local count2\n    local median2\n    local count3\n\
    \    local median3\n    local count4\n    local median4\n    local count5\n  \
    \  local median5\n    local count6\n    local median6\n    local count7\n    local\
    \ median7\n    local count8\n    local median8\n    local count9\n    local median9\n\
    \    local count10\n    local median10\n    local count11\n    local median11\n\
    \    local count12\n    local median12\n    local count13\n    local median13\n\
    \    local count14\n    local median14\n    local count15\n    local median15\n\
    \    local count16\n    local median16\n    local count17\n    local median17\n\
    \    local count18\n    local median18\n    local count19\n    local median19\n\
    \    local count20\n    local median20\n    local count21\n    local median21\n\
    \    local count22\n    local median22\n    local count23\n    local median23\n\
    \    local count24\n    local median24\n    local count25\n    local median25\n\
    \    local count26\n    local median26\n    local count27\n    local median27\n\
    \    local count28\n    local median28\n    local count29\n    local median29\n\
    \    local count30\n    local median30\n    local count31\n    local median31\n\
    \    local count32\n    local median32\n    local count33\n    local median33\n\
    \    local count34\n    local median34\n    local count35\n    local median35\n\
    \    local count36\n    local median36\n    local count37\n    local median37\n\
    \    local count38\n    local median38\n    local count39\n    local median39\n\
    \    local count40\n    local median40\n    local count41\n    local median41\n\
    \    local count42\n    local median42\n    local count43\n    local median43\n\
    \    local count44\n    local median44\n    local count45\n    local median45\n\
    \    local count46\n    local median46\n    local count47\n    local median47\n\
    \    local count48\n    local median48\n    local count49\n    local median49\n\
    \    local count50\n    ", "    local l=$1\n    local median\n    median=$(echo\
    \ \"${l}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    echo \"${median}\"", " \
    \   local l=$1\n    local len=${#l}\n    if [[ $len == 0 ]]; then\n        echo\
    \ \"NaN\"\n        return\n    fi\n    local i\n    local median\n    local median_index\n\
    \    median_index=0\n    for i in $(seq 0 $((len-1)))\n    do\n        if [[ $((i+1))\
    \ == $len ]]; then\n            median=$((l[i]))\n            break\n        fi\n\
    \        if [[ $((i+1)) > $len ]]; then\n            median=$((l[i]))\n      \
    \      break\n        fi\n        if [[ $((i+1)) < $len ]]; then\n           \
    \ median=$((l[((i+1)-1)]+l[i]))\n            break\n        fi\n    done\n   \
    \ echo \"$median\"", "  local l=$1\n  local median\n  median=$(echo \"${l}\" |\
    \ tr ' ' '\\n' | sort -n | tail -n 1)\n  echo \"${median}\"", "    local n=$1\n\
    \    local median\n    local i\n    local j\n    local m\n    local count\n  \
    \  local total\n    local count2\n    local total2\n    local median2\n    local\
    \ median3\n    local median4\n    local median5\n    local median6\n    local\
    \ median7\n    local median8\n    local median9\n    local median10\n    local\
    \ median11\n    local median12\n    local median13\n    local median14\n    local\
    \ median15\n    local median16\n    local median17\n    local median18\n    local\
    \ median19\n    local median20\n    local median21\n    local median22\n    local\
    \ median23\n    local median24\n    local median25\n    local median26\n    local\
    \ median27\n    local median28\n    local median29\n    local median30\n    local\
    \ median31\n    local median32\n    local median33\n    local median34\n    local\
    \ median35\n    local median36\n    local median37\n    local median38\n    local\
    \ median39\n    local median40\n    local median41\n    local median42\n    local\
    \ median43\n    local median44\n    local median45\n    local median46\n    local\
    \ median47\n    local median48\n    local median49\n    local median50\n    local\
    \ median51\n    local median52\n    local median53\n    local median54\n    local\
    \ median55\n    local median56\n    local median57\n    local median58\n    local\
    \ median59\n    local median60\n    local median61\n    local median62\n    local\
    \ median63\n    local median64\n    local median65\n    local median66\n    local\
    \ median67\n    local median68\n    local median69\n    local median70\n    local\
    \ median71\n    local median72\n    local median73\n    local median74\n    local\
    \ median75\n    local median76\n    local median77\n    local median78\n    local\
    \ median79\n    local median80\n    local median81\n    local median82\n    local\
    \ median83\n    local median84\n    local median85\n    local median86\n    local\
    \ median87\n    local median88\n    local median89\n    local median90\n    local\
    \ median91\n    local median92\n    local median93\n    local median94\n    local\
    \ median95\n    local ", "  local l\n  l=$1\n  local n\n  n=$(( ${#l} / 2 ))\n\
    \  echo $(( ${l[n]} + ${l[n+1]} / 2 ))", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local m\n    local i\n    local j\n    local k\n    local mid tmp\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local median\n    local medians\n    local median\n    local medians\n  \
    \  local median\n    local medians\n    local median\n    local medians\n    local\
    \ median\n    local medians\n    local median\n    local medians\n    local median\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local medians\n    local median\n    local medians\n    local median\n    local\
    \ medians\n    local median\n    local medians\n    local median\n    local medians\n\
    \    local ", "    local l=$1\n    local median\n    local i\n    local j\n  \
    \  local count\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    local median_value\n    local medians\n    local median\n    local median_index\n\
    \    ", "  local list=\"$1\"\n  local median\n  local i\n  local len\n  local\
    \ tmp\n  median=0\n  len=\"${#list}\"\n  if (( len == 0 )); then\n    return 0\n\
    \  fi\n  for i in $(seq 0 $((len-1)) ); do\n    tmp=\"${list[i]}\"\n    median=$((\
    \ $median + $tmp ))\n  done\n  median=$(( $median / $len ))\n  return $median",
  "    local l\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n    local m\n    local n\n    local m\n    local i\n\
    \    local m\n    local n\n    local m\n    local i\n    local m\n    local n\n\
    \    local m\n    local i\n", "    local l=$1\n    local median\n    local i\n\
    \    median=0\n    IFS=$'\\n' read -a l <<< \"$l\"\n    for i in \"${l[@]}\";\
    \ do\n        (( median += i ))\n    done\n    echo $(( median / ${#l[@]} ))",
  "    local l=$1\n    local median\n    median=$(echo \"${l}\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    echo \"${median}\"", "    local l=$1\n    local n=$(( ${#l}\
    \ / 2 ))\n    local median\n    local i\n    local j\n    local m\n    local count\n\
    \    local medians\n    local median\n    local medians\n    local median\n  \
    \  local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local median\n    local median\n    local median\n    local median\n\
    \    local median\n    local median\n    local median\n    local median\n    local\
    \ median\n    local ", "    local l=$1\n    local median\n    local i\n    median=0\n\
    \    for i in $l; do\n        median=$((median + i))\n    done\n    median=$((median\
    \ / ${#l}))\n    return $median", "    local l=$1\n    local median\n    median=$(echo\
    \ \"$l\" | sort -n | tail -n 1)\n    echo \"$median\"", "  local l=$1\n  local\
    \ n=$(( ${#l} / 2 ))\n  local median\n  local i\n  local j\n\n  if (( ${#l} %\
    \ 2 )); then\n    median=$(( ${l[n]} + ${l[n-1]} ) / 2)\n  else\n    median=${l[n]}\n\
    \  fi\n\n  for (( i=1; i<${#l}; i++ )); do\n    local j=$(( ${i} + 1 ))\n    local\
    \ m\n    if (( ${j} > n )); then\n      m=$(( ${j} - n ))\n      j=$(( ${#l} ))\n\
    \    fi\n    if (( ${j} > 0 )); then\n      m=$(( ${l[j]} - ${l[j-1]} ))\n   \
    \ fi\n    median=$(( median + m / 2 ))\n  done\n  echo $median", "    local l=$1\n\
    \    local median\n    local count\n    local i\n    median=0\n    count=0\n \
    \   for i in $l; do\n        count=$((count+1))\n        if [ $count -gt 1 ];\
    \ then\n            median=$((median + $i))\n        fi\n    done\n    median=$((median\
    \ / $count))\n    return $median", "    local l\n    l=$1\n    local median\n\
    \    median=$(echo \"${l}\" | cut -d ' ' -f 1 | sort -n | tail -1)\n    echo \"\
    ${median}\"", "    local l=$1\n    local median\n    median=$(echo \"${l}\" |\
    \ tr \" \" \"\\n\" | sort -n | tail -1)\n    echo \"${median}\"", "    local l=$1\n\
    \    local n=$((${#l} / 2))\n    local median\n    local i\n    median=0\n   \
    \ for (( i=0; i<${n}; i++ )); do\n        local j\n        local m\n        j=$((i\
    \ + 1))\n        m=$(echo \"${l[$i]}\" | bc)\n        if [[ ${l[$j]} > ${m} ]];\
    \ then\n            median=$((${median} + ${l[$i]}))\n        else\n         \
    \   median=$((${median} + ${l[$j]}))\n        fi\n    done\n    median=$((${median}\
    \ / 2))\n    echo \"${median}\""]
stop_tokens:
- "\n}"

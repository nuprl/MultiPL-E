name: HumanEval_101_words_string
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You will be given a string of words separated by commas or\
  \ spaces. Your task is\n# to split the string into words and return an array of\
  \ the words.\n# For example:\n# words_string(\"Hi, my name is John\") == [\"Hi\"\
  , \"my\", \"name\", \"is\", \"John\"]\n# words_string(\"One, two, three, four, five,\
  \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n#\n# $1\
  \ is a string\nwords_string() {\n"
tests: "}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
  \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
  \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
  \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") =\
  \ \"ahmed gamal\" ]]\n}\n\nrun_test"
completions: ["  local input=\"$1\"\n  local output=\"\"\n  local IFS=','\n  local\
    \ -a words\n  IFS=$'\\n' words=($input)\n  echo \"${words[*]}\"", "    local string=\"\
    $1\"\n    local delimiters=\"${2:-,}\"\n    local words=()\n    local delimiter\n\
    \    local word\n    local i\n\n    for delimiter in \"${delimiters//,/ }\"; do\n\
    \        IFS=\"${delimiter}\" read -r -a words <<< \"$string\"\n    done\n\n \
    \   for ((i = 0; i < ${#words[@]}; i++)); do\n        word=\"${words[i]}\"\n \
    \       if [[ ${word:0:1} == \"-\" ]]; then\n            word=\"${word:1}\"\n\
    \        fi\n        words[i]=\"${word}\"\n    done\n\n    echo \"${words[*]}\"",
  "    local input=\"$1\"\n    local output=($(echo $input | tr \",\" \" \"))\n  \
    \  local output=($(echo $output | tr \" \" \"\\n\"))\n    local output=($(echo\
    \ $output | tr \"\\n\" \" \"))\n    local output=($(echo $output | tr \".\" \"\
    \ \"))\n    local output=($(echo $output | tr \"!\" \" \"))\n    local output=($(echo\
    \ $output | tr \"?\" \" \"))\n    local output=($(echo $output | tr \";\" \" \"\
    ))\n    local output=($(echo $output | tr \"-\" \" \"))\n    local output=($(echo\
    \ $output | tr \"_\" \" \"))\n    local output=($(echo $output | tr \"/\" \" \"\
    ))\n    local output=($(echo $output | tr \"\\\"\" \" \"))\n    local output=($(echo\
    \ $output | tr \"'\" \" \"))\n    local output=($(echo $output | tr \"<\" \" \"\
    ))\n    local output=($(echo $output | tr \">\" \" \"))\n    local output=($(echo\
    \ $output | tr \"&\" \" \"))\n    local output=($(echo $output | tr \"%\" \" \"\
    ))\n    local output=($(echo $output | tr \"@\" \" \"))\n    local output=($(echo\
    \ $output | tr \"^\" \" \"))\n    local output=($(echo $output | tr \"~\" \" \"\
    ))\n    local output=($(echo $output | tr \"|\" \" \"))\n    local output=($(echo\
    \ $output | tr \"=\" \" \"))\n    local output=($(echo $output | tr \"+\" \" \"\
    ))\n    local output=($(echo $output | tr \"*\" \" \"))\n    local output=($(echo\
    \ $output | tr \"?\" \" \"))\n    local output=($(echo $output | tr \"!\" \" \"\
    ))\n    local output=($(echo $output | tr \".\" \" \"))\n    local output=($(echo\
    \ $output | tr \"-\" \" \"))\n    local output=($(echo $output | tr \"_\" \" \"\
    ))\n    local output=($(echo $output | tr \"/\" \" \"))\n    local output=($(echo\
    \ $output | tr \"%\" \" \"))\n    local output=($(echo $output | tr \"&\" \" \"\
    ))\n    local output=($(echo $output | tr \"<\" \" \"))\n    local output=($(echo\
    \ $output | tr \">\" \" \"))\n    local output=($(echo $output | tr \"|\" \" \"\
    ))\n", "    local string=\"$1\"\n    local delimiter=$2\n    local -a words=()\n\
    \    local -a word\n    local i\n    local j\n    for (( i = 1; i <= ${#string};\
    \ i++ )); do\n        word=()\n        for (( j=0; j < ${#delimiter}; j++ ));\
    \ do\n            word+=(\"${string:$i:$j}\")\n        done\n        words+=(\"\
    ${word[@]}\")\n    done\n    echo \"${words[*]}\"", "    local string=\"$1\"\n\
    \    local delimiters=\"${2:-,}\"\n    local words=()\n    local delimiter\n \
    \   local word\n    for delimiter in \"${delimiters//,/ }\"; do\n        IFS=\"\
    $delimiter\" read -r -a words <<< \"$string\"\n    done\n    echo \"${words[*]}\"",
  "  local input=\"$1\"\n  local output\n  output=$(echo \"$input\" | tr \",\" \"\
    \ \")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\n\")\n  output=$(echo\
    \ \"$output\" | tr \" \" \"\\n\")\n  output=$(echo \"$output\" | tr \" \" \"\\\
    n\")\n  output=$(echo \"$output\" | tr \" \" \"", "  local input=\"$1\"\n  local\
    \ output\n  output=$(echo $input | tr \",\" \" \")\n  output=$(echo $output |\
    \ tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n \
    \ output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \"\
    \ \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo $output\
    \ | tr \" \" \"\\n\")\n  output=$(echo $output | tr \" \" \"\\n\")\n  output=$(echo\
    \ $output | tr ", "    local string=$1\n    local words=()\n    local delimiter=$2\n\
    \    local word\n    local i\n\n    for (( i=1; i<${#string}; i++ )); do\n   \
    \     word=${string::$i:1}\n        if [[ ${delimiter} == \",\" ]] && [[ ${word}\
    \ != \"\" ]]; then\n            words+=(\"${word}\")\n        elif [[ ${delimiter}\
    \ == \" \" ]] && [[ ${word} != \"\" ]]; then\n            words+=(\"${word}\"\
    )\n        elif [[ ${delimiter} == \",\" ]]; then\n            words+=(\"${word}\"\
    )\n        elif [[ ${delimiter} == \" \" ]]; then\n            words+=(\"${word}\"\
    )\n        fi\n    done\n\n    return \"${words[@]}\"", "  local string=\"$1\"\
    \n  local delimiters=\"${2:-,}\"\n  local words=()\n  local delimiter\n  local\
    \ word\n  local i\n\n  IFS=$'\\n' read -r -a array <<< \"$string\"\n  for word\
    \ in \"${array[@]}\"; do\n    for delimiter in $delimiters; do\n      if [[ \"\
    $word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\")\n        break\n\
    \      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array <<< \"$string\"\n\
    \  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters; do\n   \
    \   if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\")\n\
    \        break\n      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array <<<\
    \ \"$string\"\n  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters;\
    \ do\n      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\"\
    )\n        break\n      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array\
    \ <<< \"$string\"\n  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters;\
    \ do\n      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\"\
    )\n        break\n      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array\
    \ <<< \"$string\"\n  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters;\
    \ do\n      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\"\
    )\n        break\n      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array\
    \ <<< \"$string\"\n  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters;\
    \ do\n      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\"\
    )\n        break\n      fi\n    done\n  done\n\n  IFS=$'\\n' read -r -a array\
    \ <<< \"$string\"\n  for word in \"${array[@]}\"; do\n    for delimiter in $delimiters;\
    \ do\n      if [[ \"$word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\"\
    )\n        break\n      fi\n    done\n  done\n\n  IF", "  local string=\"$1\"\n\
    \  local delimiters=\"${2:-,}\"\n  local words=()\n  local delimiter\n  local\
    \ word\n  local i\n\n  IFS=$'\\n' read -r -a array <<< \"$string\"\n  for word\
    \ in \"${array[@]}\"; do\n    for delimiter in $delimiters; do\n      if [[ \"\
    $word\" == *\"$delimiter\"* ]]; then\n        words+=(\"$word\")\n        break\n\
    \      fi\n    done\n  done\n\n  IFS=$' \\t\\n'\n  echo \"${words[*]}\"", "  local\
    \ string=$1\n  local words=()\n  local space=\" \"\n  local delimiters=\",.;\"\
    \n  local delimiters_array=( $delimiters )\n  local delimiters_string=\",\"\n\
    \  local delimiters_array_string=\",\"\n  local delimiters_string_array=( $delimiters_string\
    \ )\n  local delimiters_array_string_array=( $delimiters_array_string )\n  local\
    \ delimiters_string_array_array=( $delimiters_string_array )\n  local delimiters_array_string_array_array=(\
    \ $delimiters_array_string_array )\n  local delimiters_string_array_array_array=(\
    \ $delimiters_string_array_array )\n  local delimiters_array_string_array_array_array=(\
    \ $delimiters_array_string_array_array )\n  local delimiters_string_array_array_array_array=(\
    \ $delimiters_string_array_array_array )\n  local delimiters_array_string_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array )\n  local delimiters_string_array_array_array_array_array=(\
    \ $delimiters_string_array_array_array_array )\n  local delimiters_array_string_array_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array_array_array )\n  local delimiters_string_array_array_array_array_array_array=(\
    \ $delimiters_string_array_array_array_array_array_array )\n  local delimiters_array_string_array_array_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array_array_array_array_array )\n  local\
    \ delimiters_string_array_array_array_array_array_array_array_array=( $delimiters_string_array_array_array_array_array_array_array_array_array\
    \ )\n  local delimiters_array_string_array_array_array_array_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array_array_array_array_array_array_array\
    \ )\n  local delimiters_string_array_array_array_array_array_array_array_array_array_array=(\
    \ $delimiters_string_array_array_array_array_array_array_array_array_array_array_array\
    \ )\n  local delimiters_array_string_array_array_array_array_array_array_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array_array_array_array_array_array_array_array_array\
    \ )\n  local delimiters_string_array_array_array_array_array_array_array_array_array_array_array_array=(\
    \ $delimiters_string_array_array_array_array_array_array_array_array_array_array_array_array_array\
    \ )\n  local delimiters_array_string_array_array_array_array_array_array_array_array_array_array_array_array=(\
    \ $delimiters_array_string_array_array_array_array_array_array_array_array_array_array_array_array_array_array\
    \ )\n  local ", "    local input=\"$1\"\n    local output\n    output=$(echo \"\
    $input\" | tr \",\" \" \")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n\
    \    output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr \" \" \"\\n\")\n    output=$(echo \"$output\" | tr \" \" \"\\n\")\n   \
    \ output=$(echo \"$output\" | tr \" \" \"\\n\")\n    output=$(echo \"$output\"\
    \ | tr ", "    local input=$1\n    local output\n    output=$(echo $input | tr\
    \ \",\" \"\\n\")\n    echo $output", "  local string=$1\n  local delimiter=$2\n\
    \  local words\n  words=()\n  local word\n  IFS=$delimiter\n  for word in $string;\
    \ do\n    words+=($word)\n  done\n  IFS=$OLDIFS\n  return \"${words[@]}\"", " \
    \   local string=$1\n    local words=()\n    local delimiter=$2\n    local delimiter_count=0\n\
    \    local word\n    local word_count=0\n    while IFS=$delimiter read -r word\
    \ || [[ -n \"$word\" ]]; do\n        words+=(\"$word\")\n        word_count=$((word_count\
    \ + 1))\n    done < <(echo \"$string\")\n    echo \"${words[@]}\"", "    local\
    \ string=$1\n    local words=()\n    local delimiters=(\",\" \"\\ \") \n    local\
    \ IFS=\n    for delimiter in \"${delimiters[@]}\"; do\n        IFS=$delimiter\n\
    \        words=(\"${words[@]}\" \"$string\")\n    done\n    echo \"${words[@]}\"",
  "    local string=$1\n    local delimiter=$2\n    local words=()\n    local word\n\
    \    local i\n    local j\n    local length\n    length=${#string}\n    for ((\
    \ i=1; i<=$length; i++ )); do\n        word=${string:$i:1}\n        if [[ $word\
    \ == $delimiter ]]; then\n            words+=(\"$word\")\n            string=${string:$((i+1))}\n\
    \        fi\n    done\n    words+=(\"$string\")\n    echo ${words[*]}", "  local\
    \ string=\"$1\"\n  local delimiter=$2\n  local words=()\n  local word\n  local\
    \ i\n  local j\n  local delimiter_count\n  local word_count\n  local word_index\n\
    \  local word_length\n  local word_length_count\n  local word_length_index\n \
    \ local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n\
    \  local word_length_index\n  local word_length_count\n  local word_length_index\n\
    \  local word_length_count\n  local word_length_index\n  local word_length_count\n",
  "    local string=$1\n    local words=()\n    local delimiters=(\",\" \"\\ \") \n\
    \    local IFS=\n    for delimiter in \"${delimiters[@]}\"; do\n        IFS=$delimiter\n\
    \        words=(\"${words[@]}\" \"$string\")\n    done\n    echo \"${words[@]}\"",
  "    local string=$1\n    local words=()\n    local delimiter=$2\n    local delimiters=()\n\
    \    local word\n    local delimiter\n    local delimiters\n    local i\n    local\
    \ j\n    local length\n    local lengths\n    local word\n    local words\n  \
    \  local word\n    local delimiter\n    local delimiters\n    local word\n   \
    \ local words\n    local word\n    local delimiter\n    local delimiters\n   \
    \ local word\n    local words\n    local word\n    local delimiter\n    local\
    \ delimiters\n    local word\n    local words\n    local word\n    local delimiter\n\
    \    local delimiters\n    local word\n    local words\n    local word\n    local\
    \ delimiter\n    local delimiters\n    local word\n    local words\n    local\
    \ word\n    local delimiter\n    local delimiters\n    local word\n    local words\n\
    \    local word\n    local delimiter\n    local delimiters\n    local word\n \
    \   local words\n    local word\n    local delimiter\n    local delimiters\n \
    \   local word\n    local words\n    local word\n    local delimiter\n    local\
    \ delimiters\n    local word\n    local words\n    local word\n    local delimiter\n\
    \    local delimiters\n    local word\n    local words\n    local word\n    local\
    \ delimiter\n    local delimiters\n    local word\n    local words\n    local\
    \ word\n    local delimiter\n    local delimiters\n    local word\n    local words\n\
    \    local word\n    local delimiter\n    local delimiters\n    local word\n \
    \   local words\n    local word\n    local delimiter\n    local delimiters\n \
    \   local word\n    local words\n    local word\n    local delimiter\n    local\
    \ delimiters\n    local word\n    local words\n    local word\n    local delimiter\n\
    \    local delimiters\n    local word\n    local words\n    local word\n    local\
    \ delimiter\n    local delimiters\n    local word\n    local words\n    local\
    \ word\n    local delimiter\n    local delimiters\n    local word\n    local words\n\
    \    local word\n    local delimiter\n    local delimiters\n    local word\n \
    \   local words\n    local word\n    local delimiter\n    local delimiters\n \
    \   local word\n    local words\n    local word\n    local delimiter\n    local\
    \ delimiters\n    local word\n    local words\n    local word\n    local delimiter\n\
    \    "]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                newstring+=\"B\"\
    \n                ;;\n            b)\n                newstring+=\"a\"\n     \
    \           ;;\n            c)\n                newstring+=\"C\"\n           \
    \     ;;\n            d)\n                newstring+=\"d\"\n                ;;\n\
    \            e)\n                newstring+=\"E\"\n                ;;\n      \
    \      f) \n                newstring+=\"f\"\n                ;;\n           \
    \ g)\n                newstring+=\"G\"\n                ;;\n            h) \n\
    \                newstring+=\"H\"\n                ;;\n            i)\n      \
    \          newstring+=\"I\"\n                ;;\n            j)\n            \
    \    newstring+=\"J\"\n                ;;\n            k)\n                newstring+=\"\
    K\"\n                ;;\n            l) \n                newstring+=\"L\"\n \
    \               ;;\n            m) \n                newstring+=\"M\"\n      \
    \          ;;\n            n) \n                newstring+=\"N\"\n           \
    \     ;;\n            o) \n                newstring+=\"O\"\n                ;;\n\
    \            p) \n                newstring+=\"P\"\n                ;;\n     \
    \       q) \n                newstring+=\"Q\"\n                ;;\n          \
    \  r) \n                newstring+=\"R\"\n                ;;\n            s) \n\
    \                newstring+=\"S\"\n                ;;\n            t) \n     \
    \           newstring+=\"T\"\n                ;;\n            u) \n          \
    \      newstring+=\"U\"\n                ;;\n            v) \n               \
    \ newstring+=\"V\"\n                ;;\n            w) \n                newstring+=\"\
    W\"\n                ;;\n            x) \n                newstring+=\"X\"\n \
    \               ;;\n            y) \n                newstring+=\"Y\"\n      \
    \          ;;\n            z) \n                newstring+=\"Z\"\n           \
    \     ;;\n            *) \n                newstring+=\"$letter\"\n          \
    \      ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n\
    \        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    \n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        output=\"\
    ${i^^}\"\n        ;;\n      [A-Z])\n        output=\"${i^^}\"\n        ;;\n  \
    \    *)\n        output=\"${i^^}\"\n        ;;\n    esac\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z])\n        output+=\"\
    [A-Z]\"\n        ;;\n      [A-Z])\n        output+=\"[a-z]\"\n        ;;\n   \
    \   *)\n        output+=\"$i\"\n        ;;\n    esac\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [a-z])\n                output=\"${output:${#output}0:1}${string:$i:1}${#output}1:}\"\
    \n                ;;\n            *)\n                output=\"${output:${#output}0:1}${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                letter=A\n     \
    \           ;;\n            b)\n                letter=B\n                ;;\n\
    \            c)\n                letter=C\n                ;;\n            d)\n\
    \                letter=D\n                ;;\n            e)\n              \
    \  letter=E\n                ;;\n            f)\n                letter=F\n  \
    \              ;;\n            g)\n                letter=G\n                ;;\n\
    \            h)\n                letter=H\n                ;;\n            i)\n\
    \                letter=I\n                ;;\n            j)\n              \
    \  letter=J\n                ;;\n            k)\n                letter=K\n  \
    \              ;;\n            l)\n                letter=L\n                ;;\n\
    \            m)\n                letter=M\n                ;;\n            n)\n\
    \                letter=N\n                ;;\n            o)\n              \
    \  letter=O\n                ;;\n            p)\n                letter=P\n  \
    \              ;;\n            q)\n                letter=Q\n                ;;\n\
    \            r)\n                letter=R\n                ;;\n            s)\n\
    \                letter=S\n                ;;\n            t)\n              \
    \  letter=T\n                ;;\n            u)\n                letter=U\n  \
    \              ;;\n            v)\n                letter=V\n                ;;\n\
    \            w)\n                letter=W\n                ;;\n            x)\n\
    \                letter=X\n                ;;\n            y)\n              \
    \  letter=Y\n                ;;\n            z)\n                letter=Z\n  \
    \              ;;\n            *)\n                letter=${letter:0:1}\n    \
    \            ;;\n        esac\n        output+=\"${letter}\"\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newString\n    newString=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newString=$(echo \"$newString\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$newString\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:] )\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:] )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            * )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        case \"$char\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n       \
    \     [:upper:] )\n                output+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            * )\n                output+=\"\
    $char\"\n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ $string | tr '[:lower:]' '[:upper:]')\n    newstring=$(echo $newstring | tr\
    \ '[:upper:]' '[:lower:]')\n    echo $newstring\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newString=\"\"\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n  \
    \      case \"$char\" in\n            A) newString+=\"a\"\n            B) newString+=\"\
    b\"\n            C) newString+=\"c\"\n            D) newString+=\"d\"\n      \
    \      E) newString+=\"e\"\n            F) newString+=\"f\"\n            G) newString+=\"\
    g\"\n            H) newString+=\"h\"\n            I) newString+=\"i\"\n      \
    \      J) newString+=\"j\"\n            K) newString+=\"k\"\n            L) newString+=\"\
    l\"\n            M) newString+=\"m\"\n            N) newString+=\"n\"\n      \
    \      O) newString+=\"o\"\n            P) newString+=\"p\"\n            Q) newString+=\"\
    q\"\n            R) newString+=\"r\"\n            S) newString+=\"s\"\n      \
    \      T) newString+=\"t\"\n            U) newString+=\"u\"\n            V) newString+=\"\
    v\"\n            W) newString+=\"w\"\n            X) newString+=\"x\"\n      \
    \      Y) newString+=\"y\"\n            Z) newString+=\"z\"\n        esac\n  \
    \  done\n    echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp4qxc8uwt.sh: line 14: syntax error near unexpected token `)''

    /tmp/tmp4qxc8uwt.sh: line 14: `            B) newString+="b"''

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] ) output+=\"\\U$c\";;\n      \
    \      [:upper:] ) output+=\"\\L$c\";;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local lower\n    local upper\n\
    \    lower=$(echo $string | tr '[:upper:]' '[:lower:]')\n    upper=$(echo $string\
    \ | tr '[:lower:]' '[:upper:]')\n    echo $lower\n    echo $upper\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n        case\
    \ \"$c\" in\n            A|a|B|b|C|c|D|d|E|e|F|f|G|g|H|h|I|i|J|j|K|k|L|l|M|m|N|n|O|o|P|p|Q|q|R|r|S|s|T|t|U|u|V|v|W|w|X|x|Y|y|Z|z|0|1|2|3|4|5|6|7|8|9|-|_|.)\
    \ output+=\"${c^^}\" ;;\n            *) output+=\"$c\" ;;\n        esac\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n        output=\"${output}${string[i]^^}\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newString=\"\"\n   \
    \ for (( i = 0; i < ${#string}; i++ )); do\n        local char=${string:$i:1}\n\
    \        case \"$char\" in\n            A|a) newString+=\"a\"\n            B|b)\
    \ newString+=\"b\"\n            C|c) newString+=\"c\"\n            D|d) newString+=\"\
    d\"\n            E|e) newString+=\"e\"\n            F|f) newString+=\"f\"\n  \
    \          G|g) newString+=\"g\"\n            H|h) newString+=\"h\"\n        \
    \    I|i) newString+=\"i\"\n            J|j) newString+=\"j\"\n            K|k)\
    \ newString+=\"k\"\n            L|l) newString+=\"l\"\n            M|m) newString+=\"\
    m\"\n            N|n) newString+=\"n\"\n            O|o) newString+=\"o\"\n  \
    \          P|p) newString+=\"p\"\n            Q|q) newString+=\"q\"\n        \
    \    R|r) newString+=\"r\"\n            S|s) newString+=\"s\"\n            T|t)\
    \ newString+=\"t\"\n            U|u) newString+=\"u\"\n            V|v) newString+=\"\
    v\"\n            W|w) newString+=\"w\"\n            X|x) newString+=\"x\"\n  \
    \          Y|y) newString+=\"y\"\n            Z|z) newString+=\"z\"\n        \
    \    *)\n                newString+=\"$char\"\n            ;;\n        esac\n\
    \    done\n    echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmps_r25e83.sh: line 14: syntax error near unexpected token `)''

    /tmp/tmps_r25e83.sh: line 14: `            B|b) newString+="b"''

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ local i\n    for (( i=1; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        local upper=${letter:0:1}\n        local lower=${letter:1:1}\n      \
    \  newstring+=\"${upper}${lower}\"\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$upper\"\n    echo \"\
    $lower\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local lower\n  local upper\n\
    \  lower=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  upper=$(echo \"$string\"\
    \ | sed 's/\\(.\\)/\\L\\1/')\n  echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    for ((i=0; i<${#string}; i++)); do\n        output=\"\
    ${output}${string[i]^^}\"\n    done\n    for ((j=0; j<${#string}; j++)); do\n\
    \        output=\"${output}${string[j]^^}\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n     \
    \           ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0thg4w5l.sh: line 36: unexpected EOF while looking for matching
    `''''

    /tmp/tmp0thg4w5l.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo\
    \ $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo\
    \ $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo\
    \ $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo\
    \ $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo\
    \ $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:lower:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:upper:]')\n    output=$(echo $output | tr '\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplg1fd7i9.sh: line 41: unexpected EOF while looking for matching
    `''''

    /tmp/tmplg1fd7i9.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=$(echo \"\
    $c\" | tr '[:lower:]' '[:upper:]')\n                ;;\n            [:upper:])\n\
    \                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n             \
    \   ;;\n        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                newstring+=\"B\"\
    \n                ;;\n            b)\n                newstring+=\"a\"\n     \
    \           ;;\n            c)\n                newstring+=\"C\"\n           \
    \     ;;\n            d)\n                newstring+=\"D\"\n                ;;\n\
    \            e)\n                newstring+=\"E\"\n                ;;\n      \
    \      f)\n                newstring+=\"F\"\n                ;;\n            g)\n\
    \                newstring+=\"G\"\n                ;;\n            h)\n      \
    \          newstring+=\"H\"\n                ;;\n            i)\n            \
    \    newstring+=\"I\"\n                ;;\n            j)\n                newstring+=\"\
    J\"\n                ;;\n            k)\n                newstring+=\"K\"\n  \
    \              ;;\n            l)\n                newstring+=\"L\"\n        \
    \        ;;\n            m)\n                newstring+=\"M\"\n              \
    \  ;;\n            n)\n                newstring+=\"N\"\n                ;;\n\
    \            o)\n                newstring+=\"O\"\n                ;;\n      \
    \      p)\n                newstring+=\"P\"\n                ;;\n            q)\n\
    \                newstring+=\"Q\"\n                ;;\n            r)\n      \
    \          newstring+=\"R\"\n                ;;\n            s)\n            \
    \    newstring+=\"S\"\n                ;;\n            t)\n                newstring+=\"\
    T\"\n                ;;\n            u)\n                newstring+=\"U\"\n  \
    \              ;;\n            v)\n                newstring+=\"V\"\n        \
    \        ;;\n            w)\n                newstring+=\"W\"\n              \
    \  ;;\n            x)\n                newstring+=\"X\"\n                ;;\n\
    \            y)\n                newstring+=\"Y\"\n                ;;\n      \
    \      z)\n                newstring+=\"Z\"\n                ;;\n            *)\n\
    \                newstring+=\"$letter\"\n                ;;\n        esac\n  \
    \  done\n    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [:lower:])\n                output+=\"${string:$i:1}\"\n        \
    \        ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            a)\n                newstring+=\"B\"\n      \
    \          ;;\n            b)\n                newstring+=\"a\"\n            \
    \    ;;\n            c)\n                newstring+=\"C\"\n                ;;\n\
    \            d)\n                newstring+=\"D\"\n                ;;\n      \
    \      e)\n                newstring+=\"E\"\n                ;;\n            f)\
    \ newstring+=\"F\"\n                ;;\n            g) newstring+=\"G\"\n    \
    \            ;;\n            h) newstring+=\"H\"\n                ;;\n       \
    \     i) newstring+=\"I\"\n                ;;\n            j)\n              \
    \  newstring+=\"J\"\n                ;;\n            k) newstring+=\"K\"\n   \
    \             ;;\n            l) newstring+=\"L\"\n                ;;\n      \
    \      m) newstring+=\"M\"\n                ;;\n            n) newstring+=\"N\"\
    \n                ;;\n            o) newstring+=\"O\"\n                ;;\n  \
    \          p) newstring+=\"P\"\n                ;;\n            q) newstring+=\"\
    Q\"\n                ;;\n            r) newstring+=\"R\"\n                ;;\n\
    \            s) newstring+=\"S\"\n                ;;\n            t) newstring+=\"\
    T\"\n                ;;\n            u) newstring+=\"U\"\n                ;;\n\
    \            v) newstring+=\"V\"\n                ;;\n            w) newstring+=\"\
    W\"\n                ;;\n            x) newstring+=\"X\"\n                ;;\n\
    \            y) newstring+=\"Y\"\n                ;;\n            z) newstring+=\"\
    Z\"\n                ;;\n            *)\n                newstring+=\"$c\"\n \
    \               ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ $string | tr '[:lower:]' '[:upper:]')\n    newstring=$(echo $newstring | tr\
    \ '[:upper:]' '[:lower:]')\n    echo $newstring\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n      \
    \  if [[ $char == [a-z] ]]; then\n            char=${char^^}\n        elif [[\
    \ $char == [A-Z] ]]; then\n            char=${char^^}\n        fi\n        result+=$char\n\
    \    done\n    echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n\
    \    output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  \
    \  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"\
    $output\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed '\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppwgucpfj.sh: line 37: unexpected EOF while looking for matching
    `''''

    /tmp/tmppwgucpfj.sh: line 52: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local output\n  output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph6z_ll4s.sh: line 35: output: command not found

    /tmp/tmph6z_ll4s.sh: line 35: output: command not found

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\${${string:$i:1}^^}\"\
    \n                ;;\n            [:upper:])\n                output+=\"\\${${string:$i:1}^^}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"${output}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local char=\"\
    ${string:$i:1}\"\n        if [[ $char == [a-z] ]]; then\n            newstring=\"\
    ${newstring}${char^^}\"\n        elif [[ $char == [A-Z] ]]; then\n           \
    \ newstring=\"${newstring}${char^^}\"\n        else\n            newstring=\"\
    ${newstring}${char}\"\n        fi\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local str=\"$1\"\n    local len=\"${#str}\"\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local \n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n    local\
    \ i\n    for (( i = 0; i < ${#string}; i++ )); do\n        result+=\"${string[i]^^}\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        output=\"\
    ${i^^}\"\n        ;;\n      [A-Z])\n        output=\"${i^^}\"\n        ;;\n  \
    \    *)\n        output=\"${i^^}\"\n        ;;\n    esac\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local str=\"$1\"\n    local newstr=\"\"\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        case \"${str:$i:1}\" in\n           \
    \ [:lower:] ) newstr+=\"[${str:$i:1}]\" ;;\n            [:upper:] ) newstr+=\"\
    [${str:$i:1}]\" ;;\n            * ) newstr+=\"${str:$i:1}\" ;;\n        esac\n\
    \    done\n    echo \"$newstr\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local str=\"$1\"\n    local len=\"${#str}\"\n \
    \   local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local \n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    \n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$lower\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"${string}\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"${newstring}\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"${newstring}\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            A) newstring+=\"a\" ;;\n           \
    \ B) newstring+=\"b\" ;;\n            C) newstring+=\"c\" ;;\n            D) newstring+=\"\
    d\" ;;\n            E) newstring+=\"e\" ;;\n            F) newstring+=\"f\" ;;\n\
    \            G) newstring+=\"g\" ;;\n            H) newstring+=\"h\" ;;\n    \
    \        I) newstring+=\"i\" ;;\n            J) newstring+=\"j\" ;;\n        \
    \    K) newstring+=\"k\" ;;\n            L) newstring+=\"l\" ;;\n            M)\
    \ newstring+=\"m\" ;;\n            N) newstring+=\"n\" ;;\n            O) newstring+=\"\
    o\" ;;\n            P) newstring+=\"p\" ;;\n            Q) newstring+=\"q\" ;;\n\
    \            R) newstring+=\"r\" ;;\n            S) newstring+=\"s\" ;;\n    \
    \        T) newstring+=\"t\" ;;\n            U) newstring+=\"u\" ;;\n        \
    \    V) newstring+=\"v\" ;;\n            W) newstring+=\"w\" ;;\n            X)\
    \ newstring+=\"x\" ;;\n            Y) newstring+=\"y\" ;;\n            Z) newstring+=\"\
    z\" ;;\n            *) newstring+=\"$letter\" ;;\n        esac\n    done\n   \
    \ echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case $c in\n            A|a) output+=\"B\";;\n            B|b) output+=\"\
    a\";;\n            C|c) output+=\"b\";;\n            D|d) output+=\"c\";;\n  \
    \          E|e) output+=\"d\";;\n            F|f) output+=\"e\";;\n          \
    \  G|g) output+=\"f\";;\n            H|h) output+=\"g\";;\n            I|i) output+=\"\
    h\";;\n            J|j) output+=\"i\";;\n            K|k) output+=\"j\";;\n  \
    \          L|l) output+=\"k\";;\n            M|m) output+=\"l\";;\n          \
    \  N|n) output+=\"m\";;\n            O|o) output+=\"n\";;\n            P|p) output+=\"\
    o\";;\n            Q|q) output+=\"p\";;\n            R|r) output+=\"q\";;\n  \
    \          S|s) output+=\"r\";;\n            T|t) output+=\"s\";;\n          \
    \  U|u) output+=\"t\";;\n            V|v) output+=\"u\";;\n            W|w) output+=\"\
    v\";;\n            X|x) output+=\"w\";;\n            Y|y) output+=\"x\";;\n  \
    \          Z|z) output+=\"y\";;\n            *)  output+=\"$c\";;\n        esac\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"$newstring\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local newstring\n  newstring=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  newstring=$(echo \"$newstring\" |\
    \ sed 's/\\(.\\)/\\L\\1/')\n  echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local tmp=${string:0:1}\n\
    \    local tmp2=${string:1:1}\n    local tmp3=${string:2:1}\n    local tmp4=${string:3:1}\n\
    \    local tmp5=${string:4:1}\n    local tmp6=${string:5:1}\n    local tmp7=${string:6:1}\n\
    \    local tmp8=${string:7:1}\n    local tmp9=${string:8:1}\n    local tmp10=${string:9:1}\n\
    \    local tmp11=${string:10:1}\n    local tmp12=${string:11:1}\n    local tmp13=${string:12:1}\n\
    \    local tmp14=${string:13:1}\n    local tmp15=${string:14:1}\n    local tmp16=${string:15:1}\n\
    \    local tmp17=${string:16:1}\n    local tmp18=${string:17:1}\n    local tmp19=${string:18:1}\n\
    \    local tmp20=${string:19:1}\n    local tmp21=${string:20:1}\n    local tmp22=${string:21:1}\n\
    \    local tmp23=${string:22:1}\n    local tmp24=${string:23:1}\n    local tmp25=${string:24:1}\n\
    \    local tmp26=${string:25:1}\n    local tmp27=${string:26:1}\n    local tmp28=${string:27:1}\n\
    \    local tmp29=${string:28:1}\n    local tmp30=${string:29:1}\n    local tmp31=${string:30:1}\n\
    \    local tmp32=${string:31:1}\n    local tmp33=${string:32:1}\n    local tmp34=${string:33:1}\n\
    \    local tmp35=${string:34:1}\n    local tmp36=${string:35:1}\n    local tmp37=${string:36:1}\n\
    \    local tmp38=${string:37:1}\n    local tmp39=${string:38:1}\n    local tmp40=${string:39:1}\n\
    \    local tmp41=${string:40:1}\n    local tmp42=${string:41:1}\n    local tmp43=${string:42:1}\n\
    \    local tmp44=${string:43:1}\n    local tmp45=${string:44:1}\n    local tmp46=${string:45:1}\n\
    \    local tmp47=${string:46:1}\n    local tmp48=${string:47:1}\n    local tmp49=${string:48:1}\n\
    \    local tmp50=${string:49:1}\n    local tmp51=${string:50:1}\n    local tmp52=${string:51:1}\n\
    \    local tmp53=${string:52:1}\n    local \n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z]) output=\"${i^^}\"\
    \n            ;;\n      [A-Z]) output=\"${i^^}\"\n            ;;\n      *) output=\"\
    ${i}\"\n    esac\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local lower\n  local upper\n\
    \  lower=$(echo \"$string\" | sed 's/[a-z]/\\U&/g')\n  upper=$(echo \"$string\"\
    \ | sed 's/[A-Z]/\\L&/g')\n  echo \"$upper$lower\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n\
    \        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local output\n  output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed 's/\\\
    (.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed 's/\\(.\\)/\\U\\1/')\n  output\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph6z_ll4s.sh: line 35: output: command not found

    /tmp/tmph6z_ll4s.sh: line 35: output: command not found

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local result=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        result=\"\
    ${result}${i^^}\"\n        ;;\n      [A-Z])\n        result=\"${result}${i^^}\"\
    \n        ;;\n      *)\n        result=\"${result}${i}\"\n        ;;\n    esac\n\
    \  done\n  echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    if [[ $i =~ [a-z] ]]; then\n      newstring+=\"\
    ${i^^}\"\n    elif [[ $i =~ [A-Z] ]]; then\n      newstring+=\"${i^^}\"\n    else\n\
    \      newstring+=\"${i}\"\n    fi\n  done\n  echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        newstring=\"\
    ${newstring^^}\"\n        ;;\n      [A-Z])\n        newstring=\"${newstring^^}\"\
    \n        ;;\n      *)\n        newstring=\"${newstring}$i\"\n        ;;\n   \
    \ esac\n  done\n  echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local upper\n  upper=\"$(tr\
    \ '[:lower:]' '[:upper:]' <<< \"$string\")\"\n  tr '[:upper:]' '[:lower:]' <<<\
    \ \"$upper\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ $string | tr '[:lower:]' '[:upper:]')\n    newstring=$(echo $newstring | tr\
    \ '[:upper:]' '[:lower:]')\n    echo $newstring\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output\n  output=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$string\")\"\n  output=\"$(tr '[:upper:]' '[:lower:]'\
    \ <<< \"$output\")\"\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A) output+=\"a\"\n            ;;\n          \
    \  B) output+=\"b\"\n            ;;\n            C) output+=\"c\"\n          \
    \  ;;\n            D) output+=\"d\"\n            ;;\n            E) output+=\"\
    e\"\n            ;;\n            F) output+=\"f\"\n            ;;\n          \
    \  G) output+=\"g\"\n            ;;\n            H) output+=\"h\"\n          \
    \  ;;\n            I) output+=\"i\"\n            ;;\n            J) output+=\"\
    j\"\n            ;;\n            K) output+=\"k\"\n            ;;\n          \
    \  L) output+=\"l\"\n            ;;\n            M) output+=\"m\"\n          \
    \  ;;\n            N) output+=\"n\"\n            ;;\n            O) output+=\"\
    o\"\n            ;;\n            P) output+=\"p\"\n            ;;\n          \
    \  Q) output+=\"q\"\n            ;;\n            R) output+=\"r\"\n          \
    \  ;;\n            S) output+=\"s\"\n            ;;\n            T) output+=\"\
    t\"\n            ;;\n            U) output+=\"u\"\n            ;;\n          \
    \  V) output+=\"v\"\n            ;;\n            W) output+=\"w\"\n          \
    \  ;;\n            X) output+=\"x\"\n            ;;\n            Y) output+=\"\
    y\"\n            ;;\n            Z) output+=\"z\"\n            ;;\n          \
    \  *) output+=$c\n            ;;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"${string}\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"${newstring}\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"${newstring}\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local lower=${string:0:1}\n\
    \    local upper=${string:1:1}\n    local capitalized\n    capitalized=$(echo\
    \ \"$lower\" | tr '[:upper:]' '[:lower:]')\n    capitalized=$(echo \"$capitalized\"\
    \ | tr '[:lower:]' '[:upper:]')\n    echo \"$capitalized\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"${output^^}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo $newstring | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local new_string=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        new_string+=\"\
    [A-Z]\"\n        ;;\n      [A-Z])\n        new_string+=\"[a-z]\"\n        ;;\n\
    \      *)\n        new_string+=$i\n        ;;\n    esac\n  done\n  echo \"${new_string}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=\"${string:$i:1}\"\n\
    \    case $c in\n      [a-z])\n        output+=\"[A-Z]\"\n        ;;\n      [A-Z])\n\
    \        output+=\"[a-z]\"\n        ;;\n      *)\n        output+=\"$c\"\n   \
    \     ;;\n    esac\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local newstring\n  newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n  echo \"\
    $newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    \n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local result=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        result+=\"${string[i]^^}\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\n  \
    \  local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        j=${i}\n\
    \        while (( j>0 && ${string:$j:1}==\" \" )) ; do\n            (( j-- ))\n\
    \        done\n        new_string+=\"${string:$i:1}${string:$j:1}\"\n        i=$j\n\
    \    done\n    echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && H==  : syntax error: operand expected
    (error token is "==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && e==  : syntax error: operand expected
    (error token is "==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && l==  : syntax error: operand expected
    (error token is "==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && l==  : syntax error: operand expected
    (error token is "==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && o==  : syntax error: operand expected
    (error token is "==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && \==  : syntax error: operand expected
    (error token is "\==  ")

    /tmp/tmp6dm06ddp.sh: line 14: ((: j>0 && !==  : syntax error: operand expected
    (error token is "!==  ")

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local lower\n    local\
    \ upper\n    lower=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    upper=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\L\\1/')\n    echo \"${lower,,}${upper,,}\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case \"$i\" in\n      [a-z])\n        output+=\"\
    [A-Z]${i}\"\n        ;;\n      [A-Z])\n        output+=\"[a-z]${i}\"\n       \
    \ ;;\n      *)\n        output+=\"$i\"\n        ;;\n    esac\n  done\n  echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"$newstring\"\
    \ | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed 's/\\(.\\\
    )/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\(.\\)/\\L\\1/')\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local newstring\n  newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n  newstring=$(echo \"$newstring\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n  echo \"$newstring\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:lower:]'\
    \ '[:upper:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '[:upper:]'\
    \ '[:lower:]')\n    output=$(echo $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo\
    \ $output | tr '[:upper:]' '[:lower:]')\n    output=$(echo $output | tr '\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps3evc3vu.sh: line 41: unexpected EOF while looking for matching
    `''''

    /tmp/tmps3evc3vu.sh: line 56: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    for\
    \ (( i = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n        echo \"${output}\"\n    done\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    for (( i=0;\
    \ i<${#string}; i++ )); do\n        output=\"${string:$i:1}${string:$i:1}\"\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            A) newstring+=\"a\"\n            ;;\n  \
    \          B) newstring+=\"b\"\n            ;;\n            C) newstring+=\"c\"\
    \n            ;;\n            D) newstring+=\"d\"\n            ;;\n          \
    \  E) newstring+=\"e\"\n            ;;\n            F) newstring+=\"f\"\n    \
    \        ;;\n            G) newstring+=\"g\"\n            ;;\n            H) newstring+=\"\
    h\"\n            ;;\n            I) newstring+=\"i\"\n            ;;\n       \
    \     J) newstring+=\"j\"\n            ;;\n            K) newstring+=\"k\"\n \
    \           ;;\n            L) newstring+=\"l\"\n            ;;\n            M)\
    \ newstring+=\"m\"\n            ;;\n            N) newstring+=\"n\"\n        \
    \    ;;\n            O) newstring+=\"o\"\n            ;;\n            P) newstring+=\"\
    p\"\n            ;;\n            Q) newstring+=\"q\"\n            ;;\n       \
    \     R) newstring+=\"r\"\n            ;;\n            S) newstring+=\"s\"\n \
    \           ;;\n            T) newstring+=\"t\"\n            ;;\n            U)\
    \ newstring+=\"u\"\n            ;;\n            V) newstring+=\"v\"\n        \
    \    ;;\n            W) newstring+=\"w\"\n            ;;\n            X) newstring+=\"\
    x\"\n            ;;\n            Y) newstring+=\"y\"\n            ;;\n       \
    \     Z) newstring+=\"z\"\n            ;;\n            *) newstring+=\"$c\"\n\
    \            ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"${string:$i:1}\"\n   \
    \             ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    for (( i = 0; i < ${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                newstring+=\"B\"\
    \n                ;;\n            b)\n                newstring+=\"a\"\n     \
    \           ;;\n            c)\n                newstring+=\"C\"\n           \
    \     ;;\n            d)\n                newstring+=\"D\"\n                ;;\n\
    \            e)\n                newstring+=\"E\"\n                ;;\n      \
    \      f) \n                newstring+=\"F\"\n                ;;\n           \
    \ g) \n                newstring+=\"G\"\n                ;;\n            h) \n\
    \                newstring+=\"H\"\n                ;;\n            i) \n     \
    \           newstring+=\"I\"\n                ;;\n            j)\n           \
    \     newstring+=\"J\"\n                ;;\n            k) \n                newstring+=\"\
    K\"\n                ;;\n            l) \n                newstring+=\"L\"\n \
    \               ;;\n            m) \n                newstring+=\"M\"\n      \
    \          ;;\n            n) \n                newstring+=\"N\"\n           \
    \     ;;\n            o) \n                newstring+=\"O\"\n                ;;\n\
    \            p) \n                newstring+=\"P\"\n                ;;\n     \
    \       q) \n                newstring+=\"Q\"\n                ;;\n          \
    \  r) \n                newstring+=\"R\"\n                ;;\n            s) \n\
    \                newstring+=\"S\"\n                ;;\n            t) \n     \
    \           newstring+=\"T\"\n                ;;\n            u) \n          \
    \      newstring+=\"U\"\n                ;;\n            v) \n               \
    \ newstring+=\"V\"\n                ;;\n            w) \n                newstring+=\"\
    W\"\n                ;;\n            x) \n                newstring+=\"X\"\n \
    \               ;;\n            y) \n                newstring+=\"Y\"\n      \
    \          ;;\n            z) \n                newstring+=\"Z\"\n           \
    \     ;;\n            *)\n                newstring+=\"$letter\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local output\n  output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n  output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n  output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2i100dy8.sh: line 33: unexpected EOF while looking for matching
    `''''

    /tmp/tmp2i100dy8.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n            [:upper:])\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n            *)\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local newstring\n  newstring=$(echo\
    \ $string | tr '[:lower:]' '[:upper:]')\n  newstring=$(echo $newstring | tr '[:upper:]'\
    \ '[:lower:]')\n  echo $newstring\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have\
    \ violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local str=\"$1\"\n    local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    local lower=\"abcdefghijklmnopqrstuvwxyz\"\n    local upper_to_lower=\"\
    ${upper//[!$str]/}\"\n    local lower_to_upper=\"${lower//[$str]/}\"\n    echo\
    \ \"${upper_to_lower}${lower_to_upper}\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output=\"\"\n    local\
    \ i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) output+=\"B\";;\n            B|b) output+=\"\
    a\";;\n            C|c) output+=\"C\";;\n            D|d) output+=\"C\";;\n  \
    \          E|e) output+=\"D\";;\n            F|f) output+=\"E\";;\n          \
    \  G|h) output+=\"F\";;\n            H|i) output+=\"G\";;\n            I|j) output+=\"\
    H\";;\n            J|k) output+=\"I\";;\n            K|l) output+=\"J\";;\n  \
    \          L|m) output+=\"K\";;\n            M|n) output+=\"L\";;\n          \
    \  N|o) output+=\"M\";;\n            O|p) output+=\"N\";;\n            P|q) output+=\"\
    O\";;\n            Q|r) output+=\"P\";;\n            R|s) output+=\"Q\";;\n  \
    \          S|t) output+=\"R\";;\n            T|u) output+=\"S\";;\n          \
    \  U|v) output+=\"T\";;\n            V|w) output+=\"U\";;\n            W|x) output+=\"\
    V\";;\n            X|y) output+=\"W\";;\n            Y|z) output+=\"X\";;\n  \
    \          Z|*) output+=\"$c\";;\n        esac\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A) newstring+=\"a\";;\n            B) newstring+=\"\
    b\";;\n            C) newstring+=\"c\";;\n            D) newstring+=\"d\";;\n\
    \            E) newstring+=\"e\";;\n            F) newstring+=\"f\";;\n      \
    \      G) newstring+=\"g\";;\n            H) newstring+=\"h\";;\n            I)\
    \ newstring+=\"i\";;\n            J) newstring+=\"j\";;\n            K) newstring+=\"\
    k\";;\n            L) newstring+=\"l\";;\n            M) newstring+=\"m\";;\n\
    \            N) newstring+=\"n\";;\n            O) newstring+=\"o\";;\n      \
    \      P) newstring+=\"p\";;\n            Q) newstring+=\"q\";;\n            R)\
    \ newstring+=\"r\";;\n            S) newstring+=\"s\";;\n            T) newstring+=\"\
    t\";;\n            U) newstring+=\"u\";;\n            V) newstring+=\"v\";;\n\
    \            W) newstring+=\"w\";;\n            X) newstring+=\"x\";;\n      \
    \      Y) newstring+=\"y\";;\n            Z) newstring+=\"z\";;\n            *)\
    \ newstring+=$c;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"${letter}\" in\n            A|a) newstring+=\"a\" ;;\n       \
    \     B|b) newstring+=\"b\" ;;\n            C|c) newstring+=\"c\" ;;\n       \
    \     D|d) newstring+=\"d\" ;;\n            E|e) newstring+=\"e\" ;;\n       \
    \     F|f) newstring+=\"f\" ;;\n            G|g) newstring+=\"g\" ;;\n       \
    \     H|h) newstring+=\"h\" ;;\n            I|i) newstring+=\"i\" ;;\n       \
    \     J|j) newstring+=\"j\" ;;\n            K|k) newstring+=\"k\" ;;\n       \
    \     L|l) newstring+=\"l\" ;;\n            M|m) newstring+=\"m\" ;;\n       \
    \     N|n) newstring+=\"n\" ;;\n            O|o) newstring+=\"o\" ;;\n       \
    \     P|p) newstring+=\"p\" ;;\n            Q|q) newstring+=\"q\" ;;\n       \
    \     R|r) newstring+=\"r\" ;;\n            S|s) newstring+=\"s\" ;;\n       \
    \     T|t) newstring+=\"t\" ;;\n            U|u) newstring+=\"u\" ;;\n       \
    \     V|v) newstring+=\"v\" ;;\n            W|w) newstring+=\"w\" ;;\n       \
    \     X|x) newstring+=\"x\" ;;\n            Y|y) newstring+=\"y\" ;;\n       \
    \     Z|z) newstring+=\"z\" ;;\n            *) newstring+=\"${letter}\" ;;\n \
    \       esac\n    done\n    echo \"${newstring}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        local new_letter=${letter^^}\n        new_string+=\"${new_letter}\"\n\
    \    done\n    echo \"${new_string}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local newString=\"\"\n  local\
    \ i\n  for i in $(seq 0 $((${#string} - 1)))\n  do\n    local c=${string:$i:1}\n\
    \    local uc=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n    newString+=\"${uc}\"\
    \n  done\n  echo \"$newString\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=1; i<${#string}; i++ )); do\n        output=\"${output}${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        case \"$letter\" in\n            a)\n                newstring+=\"B\"\
    \n                ;;\n            b)\n                newstring+=\"a\"\n     \
    \           ;;\n            c)\n                newstring+=\"C\"\n           \
    \     ;;\n            d)\n                newstring+=\"D\"\n                ;;\n\
    \            e)\n                newstring+=\"E\"\n                ;;\n      \
    \      f)\n                newstring+=\"F\"\n                ;;\n            g)\n\
    \                newstring+=\"G\"\n                ;;\n            h)\n      \
    \          newstring+=\"H\"\n                ;;\n            i)\n            \
    \    newstring+=\"I\"\n                ;;\n            j)\n                newstring+=\"\
    J\"\n                ;;\n            k)\n                newstring+=\"K\"\n  \
    \              ;;\n            l)\n                newstring+=\"L\"\n        \
    \        ;;\n            m)\n                newstring+=\"M\"\n              \
    \  ;;\n            n)\n                newstring+=\"N\"\n                ;;\n\
    \            o)\n                newstring+=\"O\"\n                ;;\n      \
    \      p)\n                newstring+=\"P\"\n                ;;\n            q)\n\
    \                newstring+=\"Q\"\n                ;;\n            r)\n      \
    \          newstring+=\"R\"\n                ;;\n            s)\n            \
    \    newstring+=\"S\"\n                ;;\n            t)\n                newstring+=\"\
    T\"\n                ;;\n            u)\n                newstring+=\"U\"\n  \
    \              ;;\n            v)\n                newstring+=\"V\"\n        \
    \        ;;\n            w)\n                newstring+=\"W\"\n              \
    \  ;;\n            x)\n                newstring+=\"X\"\n                ;;\n\
    \            y)\n                newstring+=\"Y\"\n                ;;\n      \
    \      z)\n                newstring+=\"Z\"\n                ;;\n            *)\n\
    \                newstring+=\"$letter\"\n                ;;\n        esac\n  \
    \  done\n    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [:upper:])\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n            [:lower:])\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n            *)\n                newstring=\"${newstring}${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output=\"${output:${#output}0:1}${string:$i:1}${#output}1:}\"\
    \n                ;;\n            [:upper:])\n                output=\"${output:${#output}0:1}${string:$i:1}${#output}1:}\"\
    \n                ;;\n            *)\n                output=\"${output:${#output}0:1}${string:$i:1}${#output}1:}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) new_string+=\"a\"\n            ;;\n    \
    \        B|b) new_string+=\"b\"\n            ;;\n            C|c) new_string+=\"\
    c\"\n            ;;\n            D|d) new_string+=\"d\"\n            ;;\n    \
    \        E|e) new_string+=\"e\"\n            ;;\n            F|f) new_string+=\"\
    f\"\n            ;;\n            G|g) new_string+=\"g\"\n            ;;\n    \
    \        H|h) new_string+=\"h\"\n            ;;\n            I|i) new_string+=\"\
    i\"\n            ;;\n            J|j) new_string+=\"j\"\n            ;;\n    \
    \        K|k) new_string+=\"k\"\n            ;;\n            L|l) new_string+=\"\
    l\"\n            ;;\n            M|m) new_string+=\"m\"\n            ;;\n    \
    \        N|n) new_string+=\"n\"\n            ;;\n            O|o) new_string+=\"\
    o\"\n            ;;\n            P|p) new_string+=\"p\"\n            ;;\n    \
    \        Q|q) new_string+=\"q\"\n            ;;\n            R|r) new_string+=\"\
    r\"\n            ;;\n            S|s) new_string+=\"s\"\n            ;;\n    \
    \        T|t) new_string+=\"t\"\n            ;;\n            U|u) new_string+=\"\
    u\"\n            ;;\n            V|v) new_string+=\"v\"\n            ;;\n    \
    \        W|w) new_string+=\"w\"\n            ;;\n            X|x) new_string+=\"\
    x\"\n            ;;\n            Y|y) new_string+=\"y\"\n            ;;\n    \
    \        Z|z) new_string+=\"z\"\n            ;;\n            *)\n            \
    \    new_string+=$c\n            ;;\n        esac\n    done\n    echo \"${new_string}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    U\\(.\\)/\\L\\1/')\n    echo $output\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:] )\n                output+=\"\
    $(echo \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n          \
    \  [:upper:] )\n                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\
    \n                ;;\n            * )\n                output+=\"$c\"\n      \
    \          ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n\n    output=$(echo\
    \ $string | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]')\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"${string}\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"${string}\" | tr '[:lower:]' '[:upper:]')\n    echo \"${upper}\"\n    echo\
    \ \"${lower}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    case $i in\n      [a-z])\n        newstring+=\"\
    [A-Z]\"\n        ;;\n      [A-Z])\n        newstring+=\"[a-z]\"\n        ;;\n\
    \      *)\n        newstring+=\"$i\"\n        ;;\n    esac\n  done\n  echo \"\
    $newstring\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ for (( i=0; i<${#string}; i++ )); do\n        local letter=${string:$i:1}\n\
    \        local upper=${letter:0:1}\n        local lower=${letter:1}\n        newstring+=\"\
    ${upper}${lower}\"\n    done\n    echo \"${newstring}\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"${output}\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [:lower:])\n                output+=\"${string:$i:1}\"\n        \
    \        ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        if [ \"$c\" == \"a\" ] || [ \"$c\" == \"A\" ]; then\n            c=\"\
    A\"\n        elif [ \"$c\" == \"b\" ] || [ \"$c\" == \"B\" ]; then\n         \
    \   c=\"B\"\n        elif [ \"$c\" == \"c\" ] || [ \"$c\" == \"C\" ]; then\n \
    \           c=\"C\"\n        elif [ \"$c\" == \"d\" ] || [ \"$c\" == \"D\" ];\
    \ then\n            c=\"D\"\n        elif [ \"$c\" == \"e\" ] || [ \"$c\" == \"\
    E\" ]; then\n            c=\"E\"\n        elif [ \"$c\" == \"f\" ] || [ \"$c\"\
    \ == \"F\" ]; then\n            c=\"F\"\n        elif [ \"$c\" == \"g\" ] || [\
    \ \"$c\" == \"G\" ]; then\n            c=\"G\"\n        elif [ \"$c\" == \"h\"\
    \ ] || [ \"$c\" == \"H\" ]; then\n            c=\"H\"\n        elif [ \"$c\" ==\
    \ \"i\" ] || [ \"$c\" == \"I\" ]; then\n            c=\"I\"\n        elif [ \"\
    $c\" == \"j\" ] || [ \"$c\" == \"J\" ]; then\n            c=\"J\"\n        elif\
    \ [ \"$c\" == \"k\" ] || [ \"$c\" == \"K\" ]; then\n            c=\"K\"\n    \
    \    elif [ \"$c\" == \"l\" ] || [ \"$c\" == \"L\" ]; then\n            c=\"L\"\
    \n        elif [ \"$c\" == \"m\" ] || [ \"$c\" == \"M\" ]; then\n            c=\"\
    M\"\n        elif [ \"$c\" == \"n\" ] || [ \"$c\" == \"N\" ]; then\n         \
    \   c=\"N\"\n        elif [ \"$c\" == \"o\" ] || [ \"$c\" == \"O\" ]; then\n \
    \           c=\"O\"\n        elif [ \"$c\" == \"p\" ] || [ \"$c\" == \"P\" ];\
    \ then\n            c=\"P\"\n        elif [ \"$c\" == \"q\" ] || [ \"$c\" == \"\
    Q\" ]; then\n            c=\"Q\"\n        elif [ \"$c\" == \"r\" ] || [ \"$c\"\
    \ == \"R\" ]; then\n            c=\"R\"\n        elif [ \"$c\" == \"s\" ] || [\
    \ \"$c\" == \"S\" ]; then\n            c=\"S\"\n        elif [ \"$c\" == \"t\"\
    \ ] || [ \"$c\" == \"T\" ]; then\n            c=\"T\"\n        elif [ \"$c\" ==\
    \ \"u\" ] || [ \"$c\" == \"U\" ]; then\n            c=\"U\"\n        elif [ \"\
    $c\" == \"v\" ] || [ \"$c\" == \"V\" ]; then\n            c=\"V\"\n        elif\
    \ [ \"$c\" == \"w\" ] || [ \"$c\" == \"W\" ]; then\n            c=\"W\"\n    \
    \    elif [ \"$c\" == \"x\" ] || [ \"$c\" == \"X\" ]; then\n\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyyvtlb24.sh: line 61: syntax error near unexpected token `}''

    /tmp/tmpyyvtlb24.sh: line 61: `}''

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/' -e 's/\\U\\(.\\)/\\L\\1/')\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"\
    hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent ends\"\
    ) = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output\n    output=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local upper\n    local\
    \ lower\n    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:] )\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:] )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            * )\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n        [[ \"${string:i}\" != \"${string:i+1}\" ]] && output=\"${output^^}\"\
    \n        [[ \"${string:i}\" != \"${string:i-1:1}\" ]] && output=\"${output^^}\"\
    \n        [[ \"${string:i}\" != \"${string:i+1}\" ]] && output=\"${output^^}\"\
    \n        [[ \"${string:i}\" != \"${string:i-1:1}\" ]] && output=\"${output^^}\"\
    \n    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    local j\n    for (( i = 0; i < ${#string}; i++ )); do\n      \
    \  j=\"${i:i:1}\"\n        output=\"${output}${j:0:1}${j:1:1}${j:2:1}\"\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\\
    !\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights have violent\
    \ ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) c=\"a\" ;;\n            B|b) c=\"b\" ;;\n\
    \            C|c) c=\"c\" ;;\n            D|d) c=\"d\" ;;\n            E|e) c=\"\
    e\" ;;\n            F|f) c=\"f\" ;;\n            G|g) c=\"g\" ;;\n           \
    \ H|h) c=\"h\" ;;\n            I|i) c=\"i\" ;;\n            J|j) c=\"j\" ;;\n\
    \            K|k) c=\"k\" ;;\n            L|l) c=\"l\" ;;\n            M|m) c=\"\
    m\" ;;\n            N|n) c=\"n\" ;;\n            O|o) c=\"o\" ;;\n           \
    \ P|p) c=\"p\" ;;\n            Q|q) c=\"q\" ;;\n            R|r) c=\"r\" ;;\n\
    \            S|s) c=\"s\" ;;\n            T|t) c=\"t\" ;;\n            U|u) c=\"\
    u\" ;;\n            V|v) c=\"v\" ;;\n            W|w) c=\"w\" ;;\n           \
    \ X|x) c=\"x\" ;;\n            Y|y) c=\"y\" ;;\n            Z|z) c=\"z\" ;;\n\
    \            *) c=\"${c:0:1}${c:1}\";;\n        esac\n        new_string=\"${new_string}$c\"\
    \n    done\n    echo \"$new_string\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [a-z]) output+=\"[A-Z]\";;\n            [A-Z]) output+=\"[a-z]\"\
    ;;\n        esac\n    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    upper=$(echo\
    \ \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo \"$string\" | tr\
    \ '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local str=\"$1\"\n    local newstr=\"\"\n    local\
    \ i\n    for (( i=0; i<${#str}; i++ )); do\n        case \"${str:$i:1}\" in\n\
    \            [:lower:] )\n                newstr=\"${newstr}${str:$i:1}\"\n  \
    \              ;;\n            [:upper:] )\n                newstr=\"${newstr}${str:$i:1}\"\
    \n                ;;\n            * )\n                newstr=\"${newstr}${str:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$newstr\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo \"$output\" | sed\
    \ -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\\
    U\\1/')\n    output=$(echo \"$output\" | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ \"$output\" | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpho3vmz8t.sh: line 35: unexpected EOF while looking for matching
    `)''

    /tmp/tmpho3vmz8t.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [a-z]) output+=\"[A-Z]\";;\n            [A-Z]) output+=\"[a-z]\"\
    ;;\n        esac\n    done\n    echo \"${output}\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local lower\n  local upper\n\
    \  lower=$(echo \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n  upper=$(echo \"$string\"\
    \ | sed 's/\\(.\\)/\\L\\1/')\n  echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\"\
    \ in\n            [:lower:])\n                output+=\"\\U${string:$i:1}\"\n\
    \                ;;\n            [:upper:])\n                output+=\"${string:$i:1}\"\
    \n                ;;\n            *)\n                output+=\"${string:$i:1}\"\
    \n                ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local upper\n  upper=$(echo \"\
    $string\" | tr '[:upper:]' '[:lower:]')\n  echo \"$upper\" | tr '[:lower:]' '[:upper:]'\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n\
    \        case \"$c\" in\n            [:lower:])\n                c=\"$(tr '[:upper:]'\
    \ '[:lower:]' <<< \"$c\")\"\n                ;;\n            [:upper:])\n    \
    \            c=\"$(tr '[:lower:]' '[:upper:]' <<< \"$c\")\"\n                ;;\n\
    \            *)\n                c=\"$c\"\n                ;;\n        esac\n\
    \        output=\"$output$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$upper\"\n    echo \"\
    $lower\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\\
    !\" ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ local i\n    for (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n\
    \        case $c in\n            A|a) newstring+=\"A\";;\n            B|b) newstring+=\"\
    b\";;\n            C|c) newstring+=\"C\";;\n            D|d) newstring+=\"D\"\
    ;;\n            E|e) newstring+=\"E\";;\n            F|f) newstring+=\"F\";;\n\
    \            G|g) newstring+=\"G\";;\n            H|h) newstring+=\"H\";;\n  \
    \          I|i) newstring+=\"I\";;\n            J|j) newstring+=\"J\";;\n    \
    \        K|k) newstring+=\"K\";;\n            L|l) newstring+=\"L\";;\n      \
    \      M|m) newstring+=\"M\";;\n            N|n) newstring+=\"N\";;\n        \
    \    O|o) newstring+=\"O\";;\n            P|p) newstring+=\"P\";;\n          \
    \  Q|q) newstring+=\"Q\";;\n            R|r) newstring+=\"R\";;\n            S|s)\
    \ newstring+=\"S\";;\n            T|t) newstring+=\"T\";;\n            U|u) newstring+=\"\
    U\";;\n            V|v) newstring+=\"V\";;\n            W|w) newstring+=\"W\"\
    ;;\n            X|x) newstring+=\"X\";;\n            Y|y) newstring+=\"Y\";;\n\
    \            Z|z) newstring+=\"Z\";;\n            *)  newstring+=$c;;\n      \
    \  esac\n    done\n    echo \"$newstring\"\n}\n\ncandidate() {\n    flip_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent\
    \ delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output=\"\"\n  local\
    \ i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=\"${string:$i:1}\"\n\
    \    case \"$c\" in\n      [a-z]) output+=\"[A-Z]\" ;;\n      [A-Z]) output+=\"\
    [a-z]\" ;;\n      *) output+=\"$c\" ;;\n    esac\n  done\n  echo \"$output\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output\n  output=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$string\")\"\n  output=\"$(tr '[:upper:]' '[:lower:]'\
    \ <<< \"$output\")\"\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                c=$(echo \"\
    $c\" | tr '[:lower:]' '[:upper:]')\n                ;;\n            [:upper:])\n\
    \                c=$(echo \"$c\" | tr '[:upper:]' '[:lower:]')\n             \
    \   ;;\n            *)\n                c=$(echo \"$c\")\n                ;;\n\
    \        esac\n        output+=\"$c\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed -e 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"$newstring\"\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n\
    \    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\"\n\
    \    local i\n    local j\n    for (( i=0; i<${#string}; i++ )); do\n        j=\"\
    ${i:i:1}\"\n        new_string+=\"${string[j:i]^^}\"\n    done\n    echo \"${new_string}\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqcj6u8je.sh: line 14: j:i: syntax error in expression (error token
    is ":i")

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local newstring=\"\"\n  local\
    \ i\n  for (( i=0; i<${#string}; i++ )); do\n    local c=${string:$i:1}\n    case\
    \ \"$c\" in\n      [a-z]) c=\"[A-Z]\";;\n      [A-Z]) c=\"[a-z]\";;\n    esac\n\
    \    newstring=\"${newstring}$c\"\n  done\n  echo \"$newstring\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local newstring=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        case \"${string:$i:1}\" in\n\
    \            [a-z]) newstring=\"${newstring}${string:$i:1}\"\n               \
    \     ;;\n            [A-Z]) newstring=\"${newstring}${string:$i:1}\"\n      \
    \              ;;\n            *) newstring=\"${newstring}${string:$i:1}\"\n \
    \                   ;;\n        esac\n    done\n    echo \"${newstring}\"\n}\n\
    \ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  local output\n  output=\"\
    $(tr '[:lower:]' '[:upper:]' <<< \"$string\")\"\n  output=\"$(tr '[:upper:]' '[:lower:]'\
    \ <<< \"$output\")\"\n  echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=$1\n  local newstring\n  newstring=$(echo\
    \ $string | tr '[:lower:]' '[:upper:]')\n  newstring=$(echo $newstring | tr '[:upper:]'\
    \ '[:lower:]')\n  echo $newstring\n}\n\ncandidate() {\n    flip_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    upper=$(echo\
    \ \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo \"$string\" | tr\
    \ '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local new_string=\"\"\n\
    \    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\
    \n        case \"$char\" in\n            [:lower:])\n                new_string+=\"\
    $(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n                ;;\n       \
    \     [:upper:])\n                new_string+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n                ;;\n            *)\n                new_string+=\"\
    $char\"\n                ;;\n        esac\n    done\n    echo \"$new_string\"\n\
    }\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output=''\n    local\
    \ i\n    for (( i = 1; i <= ${#string}; i++ )); do\n        output+=\"${string[i]^^}\"\
    \n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n    local\
    \ i\n    local j\n    for (( i=1; i<${#string}; i++ )); do\n        j=${#string}-1\n\
    \        result+=\"${string:$i:1}${string:j:1}\"\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\"\
    \ ]]\n    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    local lower\n\
    \    upper=$(echo \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo\
    \ \"$string\" | tr '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local upper\n    upper=$(echo\
    \ \"$string\" | tr '[:upper:]' '[:lower:]')\n    lower=$(echo \"$string\" | tr\
    \ '[:lower:]' '[:upper:]')\n    echo \"$upper$lower\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 2
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\\
    )/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo\
    \ $output | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\\\
    (.\\)/\\U\\1/')\n    output=$(echo $output | sed -e 's/\\(.\\)/\\L\\1/')\n   \
    \ output=$(echo $output | sed -e 's/\\(.\\)/\\U\\1/')\n    output=$(echo $output\
    \ | sed -e 's/\\(.\\)/\\L\\1/')\n    output=$(echo $output | sed -e 's/\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0thg4w5l.sh: line 36: unexpected EOF while looking for matching
    `''''

    /tmp/tmp0thg4w5l.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring\n    newstring=$(echo\
    \ \"$string\" | sed 's/\\(.\\)/\\U\\1/')\n    newstring=$(echo \"$newstring\"\
    \ | sed 's/\\(.\\)/\\L\\1/')\n    echo \"$newstring\"\n}\n\ncandidate() {\n  \
    \  flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            A) output+=\"B\";;\n            B) output+=\"\
    a\";;\n            C) output+=\"c\";;\n            D) output+=\"d\";;\n      \
    \      E) output+=\"e\";;\n            F) output+=\"f\";;\n            G) output+=\"\
    g\";;\n            H) output+=\"h\";;\n            I) output+=\"i\";;\n      \
    \      J) output+=\"j\";;\n            K) output+=\"k\";;\n            L) output+=\"\
    l\";;\n            M) output+=\"m\";;\n            N) output+=\"n\";;\n      \
    \      O) output+=\"o\";;\n            P) output+=\"p\";;\n            Q) output+=\"\
    q\";;\n            R) output+=\"r\";;\n            S) output+=\"s\";;\n      \
    \      T) output+=\"t\";;\n            U) output+=\"u\";;\n            V) output+=\"\
    v\";;\n            W) output+=\"w\";;\n            X) output+=\"x\";;\n      \
    \      Y) output+=\"y\";;\n            Z) output+=\"z\";;\n            *) output+=\"\
    $c\";;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n   \
    \ flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"\
    These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n        echo \"${output}\"\n    done\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local newstring=\"\"\n   \
    \ local i\n    local j\n    local k\n    for (( i = 0; i < ${#string}; i++ ));\
    \ do\n        k=$(expr ${i} + 1)\n        newstring=\"${newstring}${string[i]}${string[k]}\"\
    \n    done\n    echo \"${newstring}\"\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  local i\n    for (( i = 0; i < ${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\
    \n        case \"$c\" in\n            [:lower:])\n                output+=\"$(echo\
    \ \"$c\" | tr '[:upper:]' '[:lower:]')\"\n                ;;\n            [:upper:])\n\
    \                output+=\"$(echo \"$c\" | tr '[:lower:]' '[:upper:]')\"\n   \
    \             ;;\n            *)\n                output+=\"$c\"\n           \
    \     ;;\n        esac\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n \
    \   flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local result=\"\"\n    for\
    \ (( i=0; i<${#string}; i++ )); do\n        local c=${string:$i:1}\n        case\
    \ $c in\n            A|a) result+=\"a\" ;;\n            B|b) result+=\"b\" ;;\n\
    \            C|c) result+=\"c\" ;;\n            D|d) result+=\"d\" ;;\n      \
    \      E|e) result+=\"e\" ;;\n            F|f) result+=\"f\" ;;\n            G|g)\
    \ result+=\"g\" ;;\n            H|h) result+=\"h\" ;;\n            I|i) result+=\"\
    i\" ;;\n            J|j) result+=\"j\" ;;\n            K|k) result+=\"k\" ;;\n\
    \            L|l) result+=\"l\" ;;\n            M|m) result+=\"m\" ;;\n      \
    \      N|n) result+=\"n\" ;;\n            O|o) result+=\"o\" ;;\n            P|p)\
    \ result+=\"p\" ;;\n            Q|q) result+=\"q\" ;;\n            R|r) result+=\"\
    r\" ;;\n            S|s) result+=\"s\" ;;\n            T|t) result+=\"t\" ;;\n\
    \            U|u) result+=\"u\" ;;\n            V|v) result+=\"v\" ;;\n      \
    \      W|w) result+=\"w\" ;;\n            X|x) result+=\"x\" ;;\n            Y|y)\
    \ result+=\"y\" ;;\n            Z|z) result+=\"z\" ;;\n            *)\n      \
    \          echo \"$string contains invalid character $c\"\n                exit\
    \ 1\n                ;;\n        esac\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local output\n    for (( i\
    \ = 0; i < ${#string}; i++ )); do\n        output=\"${string:i:1}${string:i:1}\"\
    \n        echo \"${output}\"\n    done\n}\n\ncandidate() {\n    flip_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=$1\n    local new_string=\"\"\n  \
    \  local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n\n}\n\ncandidate()\
    \ {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate\
    \ \"These violent delights have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n    local string=\"$1\"\n    local output=\"\"\n  \
    \  for (( i=0; i<${#string}; i++ )); do\n        local c=\"${string:$i:1}\"\n\
    \        case \"$c\" in\n            A|a) output+=\"B\";;\n            B|b) output+=\"\
    a\";;\n            C|c) output+=\"b\";;\n            D|d) output+=\"c\";;\n  \
    \          E|e) output+=\"d\";;\n            F|f) output+=\"e\";;\n          \
    \  G|g) output+=\"f\";;\n            H|h) output+=\"g\";;\n            I|i) output+=\"\
    h\";;\n            J|j) output+=\"i\";;\n            K|k) output+=\"j\";;\n  \
    \          L|l) output+=\"k\";;\n            M|m) output+=\"l\";;\n          \
    \  N|n) output+=\"m\";;\n            O|o) output+=\"n\";;\n            P|p) output+=\"\
    o\";;\n            Q|q) output+=\"p\";;\n            R|r) output+=\"q\";;\n  \
    \          S|s) output+=\"r\";;\n            T|t) output+=\"s\";;\n          \
    \  U|u) output+=\"t\";;\n            V|v) output+=\"u\";;\n            W|w) output+=\"\
    v\";;\n            X|x) output+=\"w\";;\n            Y|y) output+=\"x\";;\n  \
    \          Z|z) output+=\"y\";;\n            *) output+=\"$c\";;\n        esac\n\
    \    done\n    echo \"$output\"\n}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[ $(candidate \"These violent delights\
    \ have violent ends\") = \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262
- exit_code: 1
  program: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is\
    \ a string\nflip_case() {\n  local string=\"$1\"\n  echo \"${string^^}\"\n}\n\n\
    candidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n    [[\
    \ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
    \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660030262

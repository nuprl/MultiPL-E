language: sh
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $(( n - 1 )) )) $s\n    n=$(( n\
    \ - 1 ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local str=\"$str\
    \ $j\"\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$n $s\"\n    n=$((n-1))\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local seq=''\n    while [ $n -gt 0 ]; do\n        seq=$seq $((n-1))\n   \
    \     n=$((n-1))\n    done\n    seq=$seq $((n+1))\n    echo $seq\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1ntj__vy.sh: line 16: 1: command not found

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$(( n - 1 ))\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$(( $n - 1 ))\n\
    \  done\n  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=\"$str $((i+j))\"\n    done\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n - 1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local s=\"\"\n    while (( n )); do\n        s=\"$s $(( n-- ))\"\n    done\n\
    \    echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $((\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl0_phqzy.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl0_phqzy.sh: line 28: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local seq=''\n    for (( i = 0; i <= n; i++ )); do\n        seq+=$(( i +\
    \ 1 ))\n    done\n    echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[\
    \ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3\
    \ 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    local i\n    i=$((n-1))\n    str=\"$str\
    \ $((i))\"\n    n=$((n-1))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$((n--))\n    echo $str\n  done\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=$(( $str + $n ))\n    n=$(( $n -\
    \ 1 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" \"$i\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$((n - 1))\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for (( i=0; i<n; i++ )); do\n    s=\"$s $(( i+1 ))\"\n\
    \  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while (( n )); do\n    s=\"$s $(( n-- ))\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n\
    \  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    echo $i\n  done\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n \
    \ echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$(( $n - 1 ))\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n  echo ${str%?}\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local seq=''\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local\
    \ str=\"$str $i $j\"\n  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $n % 10 )) $s\n    n=$(( $n / 10\
    \ ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local seq=''\n    local i\n    local j\n    for ((i=0; i<n; i++)); do\n \
    \       seq+=$i\n    done\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq+=$n\n\
    \    seq+=$n\n    seq+=$n\n    seq+=$n\n    seq\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'seq: missing operand

    Try ''seq --help'' for more information.

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    echo $i >> $str\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbpn9tzrw.sh: line 14: $str: ambiguous redirect

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n  echo \"$seq\"\
    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\"\
    \ ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$n $s\"\n    n=$((n-1))\n  done\n\
    \  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    for (( i=0; i<n; i++ )); do\n        str=\"${str} $((\
    \ $i + 1 ))\"\n    done\n    echo \"$str\"\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=$seq $((n--))\n  done\n  echo $seq\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local k=$((j+1))\n\
    \    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n    local o=$((n+1))\n\
    \    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n    local s=$((r+1))\n\
    \    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n    local w=$((v+1))\n\
    \    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n    local A=$((z+1))\n\
    \    local B=$((A+1))\n    local C=$((B+1))\n    local D=$((C+1))\n    local E=$((D+1))\n\
    \    local F=$((E+1))\n    local G=$((F+1))\n    local H=$((G+1))\n    local I=$((H+1))\n\
    \    local J=$((I+1))\n    local K=$((J+1))\n    local L=$((K+1))\n    local M=$((L+1))\n\
    \    local N=$((M+1))\n    local O=$((N+1))\n    local P=$((O+1))\n    local Q=$((P+1))\n\
    \    local R=$((Q+1))\n    local S=$((R+1))\n    local T=$((S+1))\n    local U=$((T+1))\n\
    \    local V=$((U+1))\n    local W=$((V+1))\n    local X=$((W+1))\n    local Y=$((X+1))\n\
    \    local Z=$((Y+1))\n    local AA=$((Z+1))\n    local AB=$((AA+1))\n    local\
    \ AC=$((AB+1))\n    local AD=$((AC+1))\n    local AE=$((AD+1))\n    local AF=$((AE+1))\n\
    \    local AG=$((AF+1))\n    local AH=$((AG+1))\n    local AI=$((AH+1))\n    local\
    \ AJ=$((AI+1))\n    local AK=$((AJ+1))\n    local AL=$((AK+1))\n    local AM\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzixe81rx.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpzixe81rx.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n - 1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local k=$((j+1))\n\
    \    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n    local o=$((n+1))\n\
    \    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n    local s=$((r+1))\n\
    \    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n    local w=$((v+1))\n\
    \    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n    local A=$((z+1))\n\
    \    local B=$((A+1))\n    local C=$((B+1))\n    local D=$((C+1))\n    local E=$((D+1))\n\
    \    local F=$((E+1))\n    local G=$((F+1))\n    local H=$((G+1))\n    local I=$((H+1))\n\
    \    local J=$((I+1))\n    local K=$((J+1))\n    local L=$((K+1))\n    local M=$((L+1))\n\
    \    local N=$((M+1))\n    local O=$((N+1))\n    local P=$((O+1))\n    local Q=$((P+1))\n\
    \    local R=$((Q+1))\n    local S=$((R+1))\n    local T=$((S+1))\n    local U=$((T+1))\n\
    \    local V=$((U+1))\n    local W=$((V+1))\n    local X=$((W+1))\n    local Y=$((X+1))\n\
    \    local Z=$((Y+1))\n    local AA=$((Z+1))\n    local AB=$((AA+1))\n    local\
    \ AC=$((AB+1))\n    local AD=$((AC+1))\n    local AE=$((AD+1))\n    local AF=$((AE+1))\n\
    \    local AG=$((AF+1))\n    local AH=$((AG+1))\n    local AI=$((AH+1))\n    local\
    \ AJ=$((AI+1))\n    local AK=$((AJ+1))\n    local AL=$((AK+1))\n    local AM\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpea68is_6.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpea68is_6.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n  echo $seq\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $n % 10 )$s)\n    n=$(( $n / 10\
    \ ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local k=$((j+1))\n\
    \    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n    local o=$((n+1))\n\
    \    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n    local s=$((r+1))\n\
    \    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n    local w=$((v+1))\n\
    \    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n    local A=$((z+1))\n\
    \    local B=$((A+1))\n    local C=$((B+1))\n    local D=$((C+1))\n    local E=$((D+1))\n\
    \    local F=$((E+1))\n    local G=$((F+1))\n    local H=$((G+1))\n    local I=$((H+1))\n\
    \    local J=$((I+1))\n    local K=$((J+1))\n    local L=$((K+1))\n    local M=$((L+1))\n\
    \    local N=$((M+1))\n    local O=$((N+1))\n    local P=$((O+1))\n    local Q=$((P+1))\n\
    \    local R=$((Q+1))\n    local S=$((R+1))\n    local T=$((S+1))\n    local U=$((T+1))\n\
    \    local V=$((U+1))\n    local W=$((V+1))\n    local X=$((W+1))\n    local Y=$((X+1))\n\
    \    local Z=$((Y+1))\n    local AA=$((Z+1))\n    local AB=$((AA+1))\n    local\
    \ AC=$((AB+1))\n    local AD=$((AC+1))\n    local AE=$((AD+1))\n    local AF=$((AE+1))\n\
    \    local AG=$((AF+1))\n    local AH=$((AG+1))\n    local AI=$((AH+1))\n    local\
    \ AJ=$((AI+1))\n    local AK=$((AJ+1))\n    local AL=$((AK+1))\n    local AM\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzixe81rx.sh: line 69: syntax error near unexpected token `}''

    /tmp/tmpzixe81rx.sh: line 69: `}''

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$s $n\"\n    n=$(( $n - 1 ))\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local j=$((i+1))\n    local k=$((j+1))\n\
    \    local l=$((k+1))\n    local m=$((l+1))\n    local n=$((m+1))\n    local o=$((n+1))\n\
    \    local p=$((o+1))\n    local q=$((p+1))\n    local r=$((q+1))\n    local s=$((r+1))\n\
    \    local t=$((s+1))\n    local u=$((t+1))\n    local v=$((u+1))\n    local w=$((v+1))\n\
    \    local x=$((w+1))\n    local y=$((x+1))\n    local z=$((y+1))\n    local a=$((z+1))\n\
    \    local b=$((a+1))\n    local c=$((b+1))\n    local d=$((c+1))\n    local e=$((d+1))\n\
    \    local f=$((e+1))\n    local g=$((f+1))\n    local h=$((g+1))\n    local i=$((h+1))\n\
    \    local j=$((i+1))\n    local k=$((j+1))\n    local l=$((k+1))\n    local m=$((l+1))\n\
    \    local n=$((m+1))\n    local o=$((n+1))\n    local p=$((o+1))\n    local q=$((p+1))\n\
    \    local r=$((q+1))\n    local s=$((r+1))\n    local t=$((s+1))\n    local u=$((t+1))\n\
    \    local v=$((u+1))\n    local w=$((v+1))\n    local x=$((w+1))\n    local y=$((x+1))\n\
    \    local z=$((y+1))\n    local a=$((z+1))\n    local b=$((a+1))\n    local c=$((b+1))\n\
    \    local d=$((c+1))\n    local e=$((d+1))\n    local f=$((e+1))\n    local g=$((f+1))\n\
    \    local h=$((g+1))\n    local i=$((h+1))\n    local j=$((i+1))\n    local k=$((j+1))\n\
    \    local l=$((k+1))\n    local m=$((l+1))\n    local n=$\n}\n\ncandidate() {\n\
    \    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5zyq_99c.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmp5zyq_99c.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$((n - 1))\n\
    \  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=$seq $((n-1))\n    n=$((n-1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while ((n--)); do\n    s=\"$s $n\"\n  done\n  echo \"$s\"\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    local i\n    for ((i=0; i<n; i++)); do\n        str+=$((i+1))\n\
    \    done\n    echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n  echo \"$seq\"\
    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\"\
    \ ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while ((n--)); do s=\"$s $n\"; done\n  echo \"$s\"\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=\"$str$((i*10+j))\"\n    done\n    str=\"$str \"\n\
    \  done\n  echo \"$str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while ((n--)); do\n    s=\"$s $n\"\n  done\n  echo \"$s\"\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$((n--))\n    echo $str\n  done\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local s=\"\"\n    for (( i=0; i<n; i++ )); do\n        s=\"$s $((i+1))\"\n\
    \    done\n    echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=$seq $((n--))\n  done\n  echo $seq\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=\"$n $str\"\n    n=$((n - 1))\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $n % 10 )$s)\n    n=$(( $n / 10\
    \ ))\n  done\n  echo $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n  echo \"$seq\"\
    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\"\
    \ ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=$str' $i'\n    done\n    str=$str'\\n'\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\n  done\n  echo $str\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n  echo \"$seq\"\
    \n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\"\
    \ ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while ((n--)); do s=\"$s $n\"; done\n  echo \"$s\"\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$((n--))\n    echo $str\n  done\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while (( n )); do\n    str=$(( str + $(( n % 10 )) )) \n    n=$((\
    \ n / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    echo $i >> $str\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnmh_l7je.sh: line 14: $str: ambiguous redirect

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  while [ $n -gt 0 ]; do\n    str=$(($n--))\n    echo $str\n  done\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 2
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $((\n}\n\ncandidate() {\n    string_sequence \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl0_phqzy.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmpl0_phqzy.sh: line 28: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n \
    \ echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n\
    \  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=$str\" \"$i\n    done\n  done\n  echo $str\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" $i\"\n  done\n  echo \"\
    $str\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=$seq $((n-1))\n    n=$((n-1))\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  local i\n  for i in $(seq 0 $n); do\n    seq=\"$seq $i\"\n  done\n\
    \  echo $seq\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    local i\n    local j\n    for ((i=0; i<n; i++)); do\n\
    \        str+=$((i+1))\n    done\n    for ((j=0; j<n; j++)); do\n        str+=\"\
    \ $((j+1))\"\n    done\n    echo \"$str\"\n}\n\ncandidate() {\n    string_sequence\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n  \
    \  [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1\
    \ 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    local str=\"$str $i\"\n  done\n  echo\
    \ $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    echo $i\n  done\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=$str\" \"$i\n    done\n  done\n  echo $str\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=\"$str $i\"\n    done\n  done\n  echo \"$str\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  local i\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo\
    \ \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str+=$i\" \"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$n $s\"\n    n=$((n - 1))\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    str=$str$i' '\n  done\n \
    \ echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    echo $i\n  done\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n    local n=$1\n\
    \    local str=\"\"\n    local i\n    local j\n    for ((i=0; i<n; i++)); do\n\
    \        ((j=i+1))\n        str=\"${str} $j\"\n    done\n    echo \"$str\"\n}\n\
    \ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ seq=''\n  while [ $n -gt 0 ]; do\n    seq=\"$seq $n\"\n    n=$((n-1))\n  done\n\
    \  echo \"$seq\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=$str\" \"$i\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo $s\n}\n\n\
    candidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=''\n  local i\n  for i in $(seq 0 $n); do\n    local j\n    for j in $(seq\
    \ 0 $((n-1))); do\n      str=\"$str$((i+j))\"\n    done\n    str=\"$str \"\n \
    \ done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"\
    3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=\"$s $((n-1))\"\n    n=$((n-1))\n  done\n\
    \  echo \"$s\"\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\")\
    \ = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while [ $n -gt 0 ]; do\n    s=$(( $(( n-- )) )) $s\n  done\n  echo\
    \ $s\n}\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2\
    \ 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 0
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  for i in $(seq 0 $n); do\n    str=\"$str $i\"\n  done\n  echo $str\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  while ((n--)); do\n    s+=$((n-1))\n  done\n  echo $s\n}\n\ncandidate()\
    \ {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate\
    \ \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ str=\"\"\n  while [ $n -gt 0 ]; do\n    str=$(( $n % 10 )) $str\n    n=$(( $n\
    \ / 10 ))\n  done\n  echo $str\n}\n\ncandidate() {\n    string_sequence \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"3\") = \"0 1 2 3\" ]]\n    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9\
    \ 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109
- exit_code: 1
  program: "#!/bin/bash\n# Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n# >>> string_sequence(0)\n# '0'\n# >>> string_sequence(5)\n\
    # '0 1 2 3 4 5'\n#\n# $1 is an integer\nstring_sequence() {\n  local n=$1\n  local\
    \ s=\"\"\n  for i in $(seq 0 $n); do\n    s=\"$s $i\"\n  done\n  echo \"$s\"\n\
    }\n\ncandidate() {\n    string_sequence \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"0\") = \"0\" ]]\n    [[ $(candidate \"3\") = \"0 1 2 3\" ]]\n\
    \    [[ $(candidate \"10\") = \"0 1 2 3 4 5 6 7 8 9 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660028109

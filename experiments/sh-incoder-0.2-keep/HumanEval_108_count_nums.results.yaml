language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    for num\
    \ in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$(( sum\
    \ + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n       \
    \ fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuybioe5f.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpuybioe5f.sh: line 18: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n    if\
    \ [[ $sum -gt 0 ]]; then\n        echo \"$sum\"\n    else\n        echo \"0\"\n\
    \    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprcokolaa.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmprcokolaa.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmprcokolaa.sh: line 16: ((: sum+=1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=1\n    local digits=0\n    local digit\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        digit=${arr[$i]}\n        if (( sign )); then\n        \
    \    digit=$(( 10#$digit ))\n        fi\n        sum=$(( sum + digit ))\n    \
    \    if (( sum > 0 )) ; then\n            count=$(( count + 1 ))\n        fi\n\
    \        sign=$(( sign ^ 1 ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8lxsvhzn.sh: line 21: 10#-1 -2 0 : syntax error in expression (error
    token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ i in $arr; do\n        if (( ${i} < 0 )); then\n            sum=$(( ${sum} +\
    \ ${i} ))\n        else\n            sum=$(( ${sum} + ${i} ))\n        fi\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for el in ${arr[@]}; do\n        (( sum += el % 10 ))\n        if (( sum\
    \ > 0 )) ; then\n            (( count++ ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local nums=()\n    while [ $i -lt ${#arr[@]} ]; do\n        local num=\"${arr[$i]}\"\
    \n        (( nums[$num]++))\n        (( sum += nums[$num] ))\n        (( i++ ))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkie025ff.sh: line 18: nums[]: bad array subscript

    /tmp/tmpkie025ff.sh: line 18: nums[]: bad array subscript

    /tmp/tmpkie025ff.sh: line 18: ((: `nums[]'': not a valid identifier

    /tmp/tmpkie025ff.sh: line 19: nums[]: bad array subscript

    /tmp/tmpkie025ff.sh: line 19: nums[]: bad array subscript

    /tmp/tmpkie025ff.sh: line 18: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local nums=0\n    for num\
    \ in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n            (( nums =\
    \ nums + num / 10 ))\n        else\n            (( nums = nums + num % 10 ))\n\
    \        fi\n    done\n    echo \"$nums\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5khx15vv.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp5khx15vv.sh: line 18: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp5khx15vv.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp5khx15vv.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local count=0\n\
    \    local num\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n\
    \            sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum\
    \ + num % 10 ))\n            (( count++ ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local n=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( sum += ${arr[i]} ))\n  \
    \      if (( sum > 0 )); then\n            n=$(( n + 1 ))\n        fi\n    done\n\
    \    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1v1ois47.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp1v1ois47.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmp1v1ois47.sh: line 16: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local nums=0\n    for num\
    \ in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n            num=$(echo\
    \ \"$num\" | sed 's/^-\\([0-9]\\+\\)$/\\1/')\n        fi\n        (( nums > 0\
    \ )) && nums=$(( nums + num % 10 ))\n    done\n    echo \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp05g47y62.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp05g47y62.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local nums=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num > 0 )); then\n          \
    \  (( sum += num % 10 ))\n        else\n            (( sum += num % 10 ))\n  \
    \          nums=$(( nums + 1 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzcsdtyif.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpzcsdtyif.sh: line 19: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpzcsdtyif.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpzcsdtyif.sh: line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    local digits=0\n    local sign=1\n    local digit\n    local i\n    local\
    \ j\n    for ((i=0; i<${#array[@]}; i++)); do\n        digit=${array[$i]}\n  \
    \      if (( sign != 0 )); then\n            digits=$(( digits * 10 ))\n     \
    \       digits=$(( digits + digit ))\n        else\n            digits=$(( digits\
    \ + digit ))\n        fi\n        sum=$(( sum + digits ))\n        sign=$(( sign\
    \ * -1 ))\n    done\n    for ((i=0; i<${#array[@]}; i++)); do\n        digit=${array[$i]}\n\
    \        if (( sign != 0 )); then\n            digits=$(( digits * 10 ))\n   \
    \         digits=$(( digits + digit ))\n        else\n            digits=$(( digits\
    \ + digit ))\n        fi\n        sum=$(( sum + digits ))\n        sign=$(( sign\
    \ * -1 ))\n    done\n    count=$(( sum % 10 ))\n    return $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplcsvqkst.sh: line 12: local: `'': not a valid identifier

    /tmp/tmplcsvqkst.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmplcsvqkst.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=0\n  local digit\n  local i\n\n  for i in \"${array[@]}\"\
    ; do\n    (( sum += i ))\n    (( digits = $sum % 10 ))\n    (( sign = sum / 10\
    \ ))\n    (( count += ( digits > 0 )))\n  done\n\n  (( count -= sign ))\n  ((\
    \ count -= digits ))\n\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnufch6wk.sh: line 21: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpnufch6wk.sh: line 21: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local n=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit=0\n    local digits=0\n    local signs=0\n\
    \    local sign=0\n    local digit\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n        (( count++\
    \ ))\n    done\n    if (( sum > 0 )); then\n        echo \"$count $sum\"\n   \
    \ else\n        echo \"$count\"\n    fi\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps40z19kx.sh: line 12: local: `'': not a valid identifier

    /tmp/tmps40z19kx.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmps40z19kx.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local i\n  for\
    \ i in \"${array[@]}\"; do\n    (( sum += i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbgt8nvxf.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpbgt8nvxf.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n    (( i++ ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgtd9t0cs.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpgtd9t0cs.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local count=0\n  local\
    \ digits=0\n  local signs=0\n  local sign=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit=0\n  local signs=0\n  local digits=0\n  local\
    \ digit=0\n  local signs=0\n  local digits=0\n  local digit=0\n  local signs=0\n\
    \  local digits=0\n  local digit\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local n=0\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        if (( ${arr[i]} < 0 )); then\n           \
    \ arr[i]=-${arr[i]}\n        fi\n        (( n+=${arr[i]} ))\n    done\n    echo\
    \ \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbqas49oj.sh: line 15: ((: < 0 : syntax error: operand expected
    (error token is "< 0 ")

    /tmp/tmpbqas49oj.sh: line 18: ((: n+= : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpbqas49oj.sh: line 15: ((: -1 -2 0 < 0 : syntax error in expression (error
    token is "0 < 0 ")

    /tmp/tmpbqas49oj.sh: line 18: ((: n+=-1 -2 0 : syntax error in expression (error
    token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ digits=${arr//,/ }\n  local sign=${digits:0:1}\n  local digit=${digits:1}\n\
    \  while (( ${#arr} > 0 )); do\n    (( sum += digit ))\n    (( count++ ))\n  \
    \  arr=${arr:1}\n    digit=${digits:1}\n  done\n  if (( sign > 0 )); then\n  \
    \  (( sum += sign ))\n    (( count++ ))\n  fi\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 19: ((: 1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkym3ey3m.sh: line 24: ((: -: syntax error: operand expected (error token
    is "-")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign\n    local digit\n    local i\n\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        sign=${arr[$i]}\n        digit=${arr[$((i+1))]}\n       \
    \ if (( sign > 0 )); then\n            sum=$((sum + digit))\n        else\n  \
    \          sum=$((sum - digit))\n        fi\n    done\n    if (( sum > 0 )); then\n\
    \        count=$((count+1))\n    fi\n    return $count\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local i\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n\
    \    ((sum>0)) && echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsiawxsvr.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local n=0\n    local digits=0\n    local digit\n\
    \    local sign\n    local num\n    local digits_str\n    local digits_str_tmp\n\
    \    local digits_str_tmp2\n    local digits_str_tmp3\n    local digits_str_tmp4\n\
    \    local digits_str_tmp5\n    local digits_str_tmp6\n    local digits_str_tmp7\n\
    \    local digits_str_tmp8\n    local digits_str_tmp9\n    local digits_str_tmp10\n\
    \    local digits_str_tmp11\n    local digits_str_tmp12\n    local digits_str_tmp13\n\
    \    local digits_str_tmp14\n    local digits_str_tmp15\n    local digits_str_tmp16\n\
    \    local digits_str_tmp17\n    local digits_str_tmp18\n    local digits_str_tmp19\n\
    \    local digits_str_tmp20\n    local digits_str_tmp21\n    local digits_str_tmp22\n\
    \    local digits_str_tmp23\n    local digits_str_tmp24\n    local digits_str_tmp25\n\
    \    local digits_str_tmp26\n    local digits_str_tmp27\n    local digits_str_tmp28\n\
    \    local digits_str_tmp29\n    local digits_str_tmp30\n    local digits_str_tmp31\n\
    \    local digits_str_tmp32\n    local digits_str_tmp33\n    local digits_str_tmp34\n\
    \    local digits_str_tmp35\n    local digits_str_tmp36\n    local digits_str_tmp37\n\
    \    local digits_str_tmp38\n    local digits_str_tmp39\n    local digits_str_tmp40\n\
    \    local digits_str_tmp41\n    local digits_str_tmp42\n    local digits_str_tmp43\n\
    \    local digits_str_tmp44\n    local digits_str_tmp45\n    local digits_str_tmp46\n\
    \    local digits_str_tmp47\n    local digits_str_tmp48\n    local digits_str_tmp49\n\
    \    local digits_str_tmp50\n    local digits_str_tmp51\n    local digits_str_tmp52\n\
    \    local digits_str_tmp53\n    local digits_str_tmp54\n    local digits_str_tmp55\n\
    \    local digits_str_tmp56\n    local digits_str_tmp57\n    local digit\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    for element in \"${array[@]}\"; do\n        (( sum += element ))\n    done\n\
    \    for element in \"${array[@]}\"; do\n        if (( sum > 0 )); then\n    \
    \        (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptl9dxnh7.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmptl9dxnh7.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n\
    \    if (( count > 0 )); then\n        echo \"$sum\"\n    else\n        echo \"\
    0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local nums=()\n    local\
    \ num\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n    \
    \        num=-$num\n        fi\n        (( nums = nums + 1 ))\n    done\n    echo\
    \ \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for element in ${arr[@]}; do\n        if (( element < 0 )); then\n      \
    \      element=$(echo $element | awk '{print $1}')\n        fi\n        sum=$((\
    \ sum + element ))\n    done\n    count=$(( count + 1 ))\n    if (( sum > 0 ));\
    \ then\n        echo $sum\n    else\n        echo $count\n    fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=0\n    local digits=0\n    local i\n\n    for i in $arr; do\n\
    \        if (( i < 0 )); then\n            sign=1\n            i=$(( i * -1 ))\n\
    \        fi\n        digits=$(( digits + $i ))\n        sum=$(( sum + $sign ))\n\
    \    done\n    count=$(( count + $sum ))\n    return $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        (( sum += num % 10 ))\n        (( count++ ))\n\
    \    done\n    if (( sum > 0 )) ; then\n        echo \"$count $sum\"\n    else\n\
    \        echo \"$count\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local nums=()\n    local num\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  num=-$num\n        fi\n        (( nums[$num]++ ))\n    done\n    echo \"${#nums[@]}\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc06vantx.sh: line 19: nums[]: bad array subscript

    /tmp/tmpc06vantx.sh: line 19: nums[]: bad array subscript

    /tmp/tmpc06vantx.sh: line 19: ((: `nums[]'': not a valid identifier

    /tmp/tmpc06vantx.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpc06vantx.sh: line 19: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local digit\n    for (( i=0; i < ${#arr[@]}; i++ )); do\n        digit=${arr[i]}\n\
    \        if (( digit > 0 )); then\n            (( sum += digit ))\n          \
    \  (( count++ ))\n        fi\n    done\n    if (( sum > 0 )); then\n        echo\
    \ \"$count\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp48ei8pp9.sh: line 18: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp48ei8pp9.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[$i]} * 10 ))\n      \
    \  (( sum += ${arr[$i]} ))\n        (( i++ ))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpems215zp.sh: line 16: * 10 : syntax error: operand expected (error
    token is "* 10 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        ((sum += num))\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n    return $sum\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn8h0laje.sh: line 12: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ sign\n  local digit\n  local i\n  for i in \"${arr[@]}\"; do\n    sign=$(( i\
    \ < 0 ))\n    digit=$(( 10#$i ))\n    sum=$(( sum + digit ))\n    if [ $sign -eq\
    \ 1 ]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbxmbfaul.sh: line 19: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum\n  local count\n  local\
    \ i\n  local j\n  local num\n\n  sum=0\n  count=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    num=${array[i]}\n    if [[ $num -gt 0 ]]; then\n      sum=$((sum\
    \ + num))\n      if (( num < 0 )); then\n        sum=$((sum - num))\n      fi\n\
    \      ((count++))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzb3nq2y0.sh: line 23: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpzb3nq2y0.sh: line 23: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        ((sum+=num))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local nums=$2\n    local sign=1\n    local digits=0\n    while [ $i -lt ${#arr[@]}\
    \ ]; do\n        (( sum += ${nums[$i]} ))\n        (( i++))\n    done\n    while\
    \ [ $i -lt ${#arr[@]} ]; do\n        (( digits += ${nums[$i]} ))\n        (( i++))\n\
    \    done\n    if [ $sign -eq 1 ]; then\n        (( sum += $digits ))\n    else\n\
    \        (( sum -= $digits ))\n    fi\n    echo $sum\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvdh5zb09.sh: line 19: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpvdh5zb09.sh: line 19: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    /tmp/tmpvdh5zb09.sh: line 19: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=0\n  local first=0 # first non-negative digit\n\
    \  local last=0 # last non-negative digit\n  local digit\n  local i\n  local j\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    digit=${nums[$i]}\n    if [[ $sign\
    \ -eq 0 ]]; then\n      if [[ $digit -gt 0 ]]; then\n        first=$((first+digit))\n\
    \      fi\n    else\n      if [[ $digit -gt 0 ]]; then\n        last=$((last+digit))\n\
    \      fi\n    fi\n    sum=$((sum+digit))\n    count=$((count+1))\n  done\n  if\
    \ [[ $sign -eq 0 ]]; then\n    first=$((first-1))\n  fi\n  last=$((last-1))\n\
    \  sum=$((sum+1))\n  count=$((count-1))\n  echo \"$count numbers with sum $sum\
    \ and first $first and last $last\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local -i sum=0\n    local -i\
    \ i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n\
    \    if [[ ${sum} -gt 0 ]]; then\n        echo \"${sum}\"\n    else\n        echo\
    \ \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl9xybjc4.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpl9xybjc4.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpl9xybjc4.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=1\n    local digits=${arr[0]}\n    for (( i=0; i<${#arr[@]}; i++\
    \ )); do\n        (( sum += ${arr[i]} ))\n        if (( sum > 0 )) ; then\n  \
    \          (( count++ ))\n        fi\n        if (( sum < 0 )) ; then\n      \
    \      sign=-1\n            (( sum += sign * ${arr[i]} ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppmamxqvz.sh: line 18: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmppmamxqvz.sh: line 18: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmppmamxqvz.sh: line 24: ((: sum += sign * -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmppmamxqvz.sh: line 18: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        sum=$(( sum + ${arr[i]} ))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo \"$sum\"\n    else\n        echo \"\
    0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjuamuw5h.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#arr[@]} ]; do\n    sum=$((sum + ${arr[$i]}))\n    ((i++))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeo17ruze.sh: line 16: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    for num\
    \ in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkjpj0y8z.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpkjpj0y8z.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local i=0\n\
    \    while (( i < ${#arr[@]} )); do\n        (( sum += ${arr[i]} ))\n        ((\
    \ i++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm3hel5xj.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpm3hel5xj.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local i\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0dmtlbym.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp0dmtlbym.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    for element in \"${array[@]}\"; do\n        if (( element < 0 )); then\n\
    \            element=-$element\n        fi\n        sum=$(( sum + element ))\n\
    \    done\n    for element in \"${array[@]}\"; do\n        if (( element < 0 ));\
    \ then\n            element=-$element\n        fi\n        if (( sum == element\
    \ )); then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ i\n  for ((i=0; i < ${#arr[@]}; i++)); do\n    (( sum += ${arr[i]} ))\n    ((\
    \ count++ ))\n  done\n  if (( sum > 0 )) ; then\n    return $count\n  else\n \
    \   local i\n    for ((i=0; i < ${#arr[@]}; i++)); do\n      (( sum += ${arr[i]}\
    \ ))\n    done\n    if (( sum < 0 )) ; then\n      local j\n      for ((j=i-1;\
    \ j >= 0; j--)); do\n        (( sum += ${arr[j]} ))\n      done\n      return\
    \ $count\n    fi\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8le9_2zu.sh: line 17: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp8le9_2zu.sh: line 25: ((: sum +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        local j=0\n        while [ $j -le ${#arr[$i]}\
    \ ]; do\n            local k=0\n            while [ $k -le ${#arr[$i][$j]} ];\
    \ do\n                local m=$((${arr[$i][$j]}*10+$k))\n                if [\
    \ $m -gt 0 ]; then\n                    sum=$((sum+m))\n                fi\n \
    \               k=$((k+1))\n            done\n            j=$((j+1))\n       \
    \ done\n        i=$((i+1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5elngm5d.sh: line 19: ${#arr[$i][$j]}: bad substitution

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ sign=0\n  local digit\n  local i\n  for ((i=0; i<${#arr[@]}; i++)); do\n   \
    \ digit=${arr[i]}\n    if [[ $digit -gt 0 ]]; then\n      sum=$((sum+digit))\n\
    \      if (( sign )); then\n        sum=$((sum*10))\n      fi\n    else\n    \
    \  sign=1\n      sum=$((sum*10))\n    fi\n    ((count++))\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local nums=0\n\
    \    local i\n    local j\n    local k\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        sum=$((sum + ${arr[i]}))\n        if (( ${sum} > 0 )); then\n       \
    \     nums=$((nums + 1))\n        fi\n    done\n    return $nums\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn0hh8x44.sh: line 19: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local n=0\n    local digits=0\n    local sign=0\n\
    \    local signs=0\n    local signs_arr=()\n    local signs_str=\"\"\n    local\
    \ signs_strs=()\n    local signs_strs_arr=()\n    local signs_strs_str=\"\"\n\
    \    local signs_strs_strs=()\n    local signs_strs_strs_arr=()\n    local signs_strs_strs_str=\"\
    \"\n    local signs_strs_strs_strs=()\n    local signs_strs_strs_strs_arr=()\n\
    \    local signs_strs_strs_strs_str=\"\"\n    local signs_strs_strs_strs_strs=()\n\
    \    local signs_strs_strs_strs_strs_arr=()\n    local signs_strs_strs_strs_strs_str=\"\
    \"\n    local signs_strs_strs_strs_strs_strs=()\n    local signs_strs_strs_strs_strs_strs_arr=()\n\
    \    local signs_strs_strs_strs_strs_strs_str=\"\"\n    local signs_strs_strs_strs_strs_strs_strs=()\n\
    \    local signs_strs_strs_strs_strs_strs_strs_arr=()\n    local signs_strs_strs_strs_strs_strs_strs_str=\"\
    \"\n    local signs_strs_strs_strs_strs_strs_strs_strs=()\n    local signs_strs_strs_strs_strs_strs_strs_strs_arr=()\n\
    \    local signs_strs_strs_strs_strs_strs_strs_strs_str=\"\"\n    local signs_strs_strs_strs_strs_strs_strs_strs_strs=()\n\
    \    local signs_strs_strs_strs_strs_strs_strs_strs_strs_arr=()\n    local signs_strs_strs_strs_strs_strs_strs_strs_strs_str=\"\
    \"\n    local signs_strs_strs_strs_strs_strs_strs_strs_strs_strs=()\n    local\
    \ signs_strs_strs_strs_strs_strs_strs_strs_strs_strs_strs_arr=()\n    local signs_strs_strs_strs_strs_strs_\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local i\n  for\
    \ ((i=0; i<${#array[@]}; i++)); do\n    ((sum+=${array[i]}))\n  done\n  if ((\
    \ ${sum} < 0 )); then\n    sum=$(( ${sum}+${array[0]} ))\n  fi\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm1f___5v.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpm1f___5v.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpm1f___5v.sh: line 19: -3+-1 -2 0 : syntax error in expression (error token
    is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n    if\
    \ [[ -n $sum ]]; then\n        echo \"$sum\"\n    else\n        echo \"0\"\n \
    \   fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu4hjobap.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpu4hjobap.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[$i]}+sum ))\n       \
    \ i=$(( i+1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkipq0uhz.sh: line 16: -1 -2 0+sum : syntax error in expression
    (error token is "0+sum ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n            count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    if (( sum > 0 ));\
    \ then\n        echo \"$count\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local i\n\
    \    for ((i=0; i < ${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n\
    \    if (( ${sum} < 0 )); then\n        ((sum+=${arr[0]}))\n    fi\n    echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqvudylq.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmprqvudylq.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmprqvudylq.sh: line 19: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=0\n  local i\n\n  for ((i=0; i<${#array[@]}; i++));\
    \ do\n    ((digits=${array[$i]}+${digits}))\n    ((sum=${sum}+${digits}))\n  done\n\
    \n  if (( ${sum} < 0 )); then\n    sign=1\n    sum=$((-${sum}))\n  fi\n\n  for\
    \ ((i=0; i<${#array[@]}; i++)); do\n    ((digits=${array[$i]}+${digits}))\n  \
    \  if (( ${digits} > 0 )); then\n      ((count++))\n    fi\n  done\n\n  echo \"\
    ${count}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyd4a7cvy.sh: line 20: ((: digits=-1 -2 0+0: syntax error in expression
    (error token is "0+0")

    /tmp/tmpyd4a7cvy.sh: line 30: ((: digits=-1 -2 0+-3: syntax error in expression
    (error token is "0+-3")

    /tmp/tmpyd4a7cvy.sh: line 20: ((: digits=1 1 2 -2 3 4 5+0: syntax error in expression
    (error token is "1 2 -2 3 4 5+0")

    /tmp/tmpyd4a7cvy.sh: line 30: ((: digits=1 1 2 -2 3 4 5+1: syntax error in expression
    (error token is "1 2 -2 3 4 5+1")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n  local i\n  for i\
    \ in \"${arr[@]}\"; do\n    (( sum += i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    local i\n  \
    \  for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            sum=$((\
    \ sum + $i ))\n        else\n            sum=$(( sum + $i * 10 ))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbo07l5hc.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpbo07l5hc.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpbo07l5hc.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    for num in $nums;\
    \ do\n        ((sum+=num))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum\n    sum=0\n    for\
    \ num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \     fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt8amuc7x.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpt8amuc7x.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpt8amuc7x.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    local i=0\n\
    \    while [ $i -lt ${#arr[@]} ]; do\n        (( sum += ${arr[$i]} ))\n      \
    \  (( i++ ))\n    done\n    return $sum\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp68ojsl8h.sh: line 12: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local nums=()\n\
    \    local i\n    local j\n    local k\n    local num\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        num=${arr[i]}\n        if (( num < 0 )); then\n         \
    \   num=`echo $num | awk '{print $1*($1-1)}'`\n        fi\n        ((sum+=num))\n\
    \        nums+=($num)\n    done\n    for ((i=0; i<${#nums[@]}; i++)); do\n   \
    \     num=${nums[i]}\n        for ((j=0; j<${#nums[@]}; j++)); do\n          \
    \  if (( num < 0 )); then\n                num=`echo $num | awk '{print $1*($1-1)}'`\n\
    \            fi\n            if (( num > 0 )); then\n                ((sum+=num))\n\
    \                break\n            fi\n        done\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpst3_ph6d.sh: line 21: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpst3_ph6d.sh: line 24: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=1\n  local first=0 # first non-negative number\n\
    \  local last=0 # last non-negative number\n  local digit\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local i\n\n  for ((i=0; i<${#array[@]}; i++)); do\n    sum=$((sum + ${array[i]}))\n\
    \    if [ $sum -gt 0 ]; then\n      count=$((count+1))\n    fi\n  done\n\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpahdtxt1o.sh: line 18: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( sum + ${arr[i]} ))\n      \
    \  i=$(( i + 1 ))\n    done\n    if [ $sum -gt 0 ]; then\n        echo $sum\n\
    \    else\n        echo $(( ${arr[0]} < 0 ? ${arr[0]} * -1 : ${arr[0]} ))\n  \
    \  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpym1lldah.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=( \"$@\" )\n  local sum=0\n  local nums=0\n\
    \  local i\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    (( sum += ${arr[i]}\
    \ ))\n  done\n  for (( i=0; i < ${#arr[@]}; i++ )); do\n    (( nums += ( ( ${arr[i]}\
    \ > 0 ) ))\n  done\n  echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo0awe6l4.sh: line 20: syntax error near unexpected token `(''

    /tmp/tmpo0awe6l4.sh: line 20: `( nums += ( ( ${arr[i]} > 0 ) ))''

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local -i num\n    local -i nums\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i sum\n    local -i\
    \ nums_sum\n    local -i num_sum\n    local -i num_sums\n    local -i num_sums_sum\n\
    \    local -i num_sums_sums\n    local -i num_sums_sums_sum\n    local -i num_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums\n \
    \   local -i num_sums_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sum\n    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\n    local\
    \ -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums\n    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums\n   \
    \ local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\n  \
    \  local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums\n\
    \    local -i num_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sums_sum\n\
    \    local -i num_sums_sums_sums_sums_\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkt_p_svy.sh: line 12: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"${@}\")\n  local sum=0\n  local i\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1o5jdqij.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp1o5jdqij.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum\n  local count\n  local\
    \ i\n  local j\n  local num\n  local digit\n  local sign\n  local digits_sum\n\
    \n  sum=0\n  count=0\n  for i in \"${array[@]}\"; do\n    num=$(echo \"$i\" |\
    \ bc)\n    sign=${num:0:1}\n    digits_sum=$(echo \"$i\" | awk '{print $1*$1}')\n\
    \    if [[ $sign -eq 1 ]]; then\n      sum=$(( sum + $digits_sum))\n      count=$((\
    \ count + 1 ))\n    else\n      sum=$(( sum - $digits_sum))\n    fi\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local i\n  for i in\
    \ $nums; do\n    ((sum+=i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n\
    \    if (( count > 0 )); then\n        echo \"$sum\"\n    else\n        echo \"\
    0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ digit\n  local i\n  local j\n  for ((i=0; i<${#arr[@]}; i++)); do\n    digit=${arr[i]}\n\
    \    if [[ $digit -gt 0 ]]; then\n      sum=$((sum + digit))\n      count=$((count\
    \ + 1))\n    fi\n  done\n  if [[ $sum -gt 0 ]]; then\n    return $count\n  else\n\
    \    return 0\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n        (( count++\
    \ ))\n    done\n    if [[ $sum > 0 ]]; then\n        echo \"$count\"\n    else\n\
    \        echo \"$(( sum < 0 ? sum + 10 : sum ))\"\n    fi\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuejq2lhp.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpuejq2lhp.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpuejq2lhp.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local i=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n        fi\n        (( i++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl8oea_jk.sh: line 16: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpl8oea_jk.sh: line 19: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$(( sum + num\
    \ % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeew6n2vp.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpeew6n2vp.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpeew6n2vp.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local nums=()\n    local\
    \ num\n    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n    \
    \        (( num *= -1 ))\n            (( num += 10 ))\n        fi\n        nums+=(\"\
    $num\")\n    done\n    local count\n    for (( count = 0; count < ${#nums[@]};\
    \ count++ )); do\n        local sum=0\n        for (( i = 0; i <= count; i++ ));\
    \ do\n            (( sum += ${nums[$i]} ))\n        done\n        if (( sum >\
    \ 0 )); then\n            echo \"$count\"\n            return\n        fi\n  \
    \  done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp334_uf2h.sh: line 26: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in $arr;\
    \ do\n    ((sum += i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n\
    \        else\n            sum=$(( sum + num % 10 ))\n        fi\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local sign\n  local digit\n  local i\n  local j\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    digit=${array[$i]}\n    if [[ $digit -gt 0 ]]; then\n      sum=$((sum+digit))\n\
    \      count=$((count+1))\n    fi\n  done\n  if [[ $sign -eq 1 ]]; then\n    sum=$((sum+digit))\n\
    \    count=$((count+1))\n  fi\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb8j4r_ds.sh: line 21: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpb8j4r_ds.sh: line 21: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[$i]}+sum ))\n       \
    \ i=$(( i+1 ))\n    done\n    if [ $sum -gt 0 ]; then\n        echo $sum\n   \
    \ else\n        echo $(( ${arr[0]}+1 ))\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n  done\n  if ((sum > 0)); then\n\
    \    return $((${#arr[@]} - 1))\n  else\n    return 0\n  fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfcky6qi5.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        (( sum += num % 10 ))\n        (( count++ ))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n        echo \"$count $sum\"\n    else\n\
    \        echo \"$count\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in $arr;\
    \ do\n    ((sum+=i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local nums=()\n    while [ $i -lt ${#arr[@]} ]; do\n        (( sum += ${arr[$i]}\
    \ ))\n        (( i++ ))\n    done\n    for num in ${arr[@]}; do\n        if ((\
    \ num < 0 )); then\n            (( num *= -1 ))\n            (( sum += num ))\n\
    \        fi\n        nums+=($num)\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkwbbmdz_.sh: line 17: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpkwbbmdz_.sh: line 17: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmpkwbbmdz_.sh: line 17: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        (( sum += ${arr[$i]} ))\n        ((\
    \ i++ ))\n    done\n    return $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqafxsqmy.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=0\n  local first=0\n  local last=0\n  local i\n\
    \  local j\n  local k\n  local digit\n  local num\n\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    num=${array[i]}\n    digits=${#num}\n    if [[ $num == -* ]];\
    \ then\n      sign=1\n      num=${num/-/}\n      digits=${#num}\n    fi\n    first=$((${num}+$first))\n\
    \    last=$((${num}+$last))\n    if [[ $first -gt $last ]]; then\n      sum=$((${sum}+$first))\n\
    \      count=$((${count}+1))\n    fi\n    for ((j=0; j<$digits; j++)); do\n  \
    \    digit=${num:$j:1}\n      if [[ $sign -eq 1 ]]; then\n        digit=$((10#$digit))\n\
    \      fi\n      if (( ${digit} > 9 )); then\n        digit=$((${digit}-10))\n\
    \      fi\n      sum=$((${sum}+$digit))\n      count=$((${count}+1))\n    done\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyflz8qm2.sh: line 33: 1 -2 0+0: syntax error in expression (error
    token is "0+0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$(( sum + num\
    \ % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeew6n2vp.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpeew6n2vp.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpeew6n2vp.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local len=${#arr[@]}\n    while [ $i -lt $len\
    \ ]; do\n        sum=$((sum+${arr[i]}))\n        i=$((i+1))\n    done\n    local\
    \ num=0\n    while [ $j -lt $len ]; do\n        if [ $((sum % 10)) -eq 0 ]; then\n\
    \            num=$(expr $num + 1)\n        fi\n        sum=$((sum - ${arr[j]}))\n\
    \        j=$((j+1))\n    done\n    echo $num\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeuwq_ef6.sh: line 19: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local n=0\n    for e in \"\
    ${arr[@]}\"; do\n        if (( e < 0 )); then\n            (( e = -e))\n     \
    \   fi\n        (( n += e ))\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps0ctmc4k.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmps0ctmc4k.sh: line 18: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmps0ctmc4k.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmps0ctmc4k.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local -a nums\n  local sum\n  local i\n  local num\n\
    \  local n\n  local count\n\n  nums=( \"$@\" )\n  sum=0\n  for i in \"${!nums[@]}\"\
    ; do\n    (( sum += ${nums[$i]} ))\n  done\n  (( count=$(( ${#nums[@]} - 1 ))\
    \ ))\n  (( sum > 0 )) && return 0\n  (( sum < 0 )) && return 1\n  (( count > 0\
    \ )) && return $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdh728mfr.sh: line 22: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    for num in\
    \ \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_2uhnsnw.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_2uhnsnw.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        local j=0\n        while [ $j -lt ${#arr[$i]}\
    \ ]; do\n            local k=0\n            while [ $k -lt ${#arr[$i][$j]} ];\
    \ do\n                local digit=${arr[$i][$j]}\n                (( sum += digit\
    \ ))\n                (( k++ ))\n            done\n            (( j++ ))\n   \
    \     done\n        (( i++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0_slb58p.sh: line 19: ${#arr[$i][$j]}: bad substitution

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum + ${arr[i]}))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo $sum\n    else\n        echo $((sum\
    \ / 10))\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyn6lonkf.sh: line 16: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        j=$((i+1))\n        if ((\
    \ ${arr[i]} > 0 )); then\n            sum=$(( ${sum} + ${arr[i]} ))\n        fi\n\
    \        if (( ${arr[j]} > 0 )); then\n            sum=$(( ${sum} + ${arr[j]}\
    \ ))\n        fi\n    done\n    return $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppbqjwerd.sh: line 18: ((: > 0 : syntax error: operand expected
    (error token is "> 0 ")

    /tmp/tmppbqjwerd.sh: line 21: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    for num in $nums;\
    \ do\n        sum=$((sum + num))\n    done\n    if [ $sum -gt 0 ]; then\n    \
    \    echo $sum\n    else\n        echo $((sum / 10))\n    fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local n=0\n    for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n        local j=$((i+1))\n        local sum=0\n  \
    \      while (( j<${#arr[@]}) && ( ${arr[j]} > 0 )); do\n            (( sum +=\
    \ ${arr[j]} ))\n            j=$((j+1))\n        done\n        if (( sum > 0 ));\
    \ then\n            n=$((n+1))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkuhs3wvg.sh: line 17: j: command not found

    /tmp/tmpkuhs3wvg.sh: line 17: j: command not found

    /tmp/tmpkuhs3wvg.sh: line 17: j: command not found

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n    if\
    \ [[ $sum -gt 0 ]]; then\n        echo \"$sum\"\n    else\n        echo \"0\"\n\
    \    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprcokolaa.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmprcokolaa.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmprcokolaa.sh: line 16: ((: sum+=1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#array[@]}; i++)); do\n        ((sum+=${array[i]}))\n\
    \        if (( sum > 0 )) ; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnzfjppej.sh: line 17: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpnzfjppej.sh: line 17: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpnzfjppej.sh: line 17: ((: sum+=1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local num\n\n    while [ $i -lt ${#arr[@]} ]; do\n        num=\"${arr[$i]}\"\
    \n        if [ -z \"$num\" ]; then\n            echo \"$i\"\n            break\n\
    \        fi\n        sum=$(( sum + num % 10 ))\n        i=$(( i + 1 ))\n    done\n\
    \n    if [ $i -eq ${#arr[@]} ]; then\n        echo \"$i\"\n    else\n        echo\
    \ \"$sum\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=( \"$@\" )\n  local sum=0\n  local count=0\n\
    \  local digits=0\n  local sign=0\n  local digit\n  local i\n\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    digit=${arr[$i]}\n    if [[ $sign -eq 0 ]]; then\n      if ((\
    \ digit < 0 )) ; then\n        sign=1\n        digit=$((-digit))\n      fi\n \
    \   fi\n    digits=$(( digits + digit ))\n    (( sum += digits ))\n    (( count++\
    \ ))\n  done\n\n  if (( sign )); then\n    sum=$((-sum))\n  fi\n\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2h9v83te.sh: line 23: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp2h9v83te.sh: line 28: -1 -2 0: syntax error in expression (error token
    is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        fi\n    done\n    if (( sum > 0 )); then\n      \
    \  count=$(( count + 1 ))\n    fi\n    return $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        if (( num < 0 )); then\n            sum=$(( sum + num\
    \ % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeew6n2vp.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpeew6n2vp.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpeew6n2vp.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n\
    \        else\n            sum=$(( sum + num % 10 ))\n        fi\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    local -a nums\n\
    \    local i\n    local j\n    local k\n    local num\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        num=${arr[i]}\n        if (( num < 0 )); then\n         \
    \   num=$(echo $num | sed 's/^-\\([0-9]*\\)$/\\1/')\n        fi\n        ((sum+=num))\n\
    \    done\n    nums=()\n    for ((j=0; j<${#arr[@]}; j++)); do\n        num=${arr[j]}\n\
    \        if (( num < 0 )); then\n            num=$(echo $num | sed 's/^-\\([0-9]*\\\
    )$/\\1/')\n        fi\n        if (( sum > 0 )); then\n            ((nums[${#nums[@]}]=$num))\n\
    \        fi\n    done\n    echo ${#nums[@]}\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpib6z8vu6.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpib6z8vu6.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpib6z8vu6.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=0\n    local digits=0\n    local digit\n    local i\n\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            sign=1\n \
    \           i=$(( i * -1 ))\n        fi\n        digit=$(( i % 10 ))\n       \
    \ digits=$(( digits + 1 ))\n        sum=$(( sum + digit ))\n        if (( sum\
    \ > 9 )); then\n            sum=0\n            count=$(( count + 1 ))\n      \
    \  fi\n    done\n    if (( sign )); then\n        digits=$(( digits + 1 ))\n \
    \       sum=$(( sum + 10 ))\n    fi\n    echo \"$count $sum $digits\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        ((sum+=num))\n    done\n    if [ $sum -gt 0 ]; then\n        echo\
    \ $sum\n    else\n        echo $((sum%10))\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    for number in $numbers; do\n        sum=$((sum + number))\n        if [ $sum\
    \ -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    return\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    local digits=0\n    local sign=0\n    local first=0\n    local last=0\n \
    \   local digit\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"$@\")\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n    (( i++ ))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwwykg5wm.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpwwykg5wm.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"${@}\")\n  local sum=0\n  local i\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1o5jdqij.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp1o5jdqij.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=1\n    local digit\n    local i\n    local j\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        digit=${arr[$i]}\n        if (( sign != 0 && digit < 0 ));\
    \ then\n            sign=-1\n            digit=$(( 10#$digit ))\n        fi\n\
    \        sum=$(( sum + $sign $digit ))\n        (( count++ ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"$@\")\n  local n=0\n  local sum=0\n  local\
    \ sign=1\n  local digit\n  local i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n \
    \   digit=${arr[i]}\n    if [[ $sign -eq 1 ]]; then\n      ((sum+=digit))\n  \
    \  elif (( digit > 0 )) ; then\n      ((sum+=digit))\n      ((n++))\n    else\n\
    \      ((sum-=digit))\n      ((n--))\n    fi\n    sign=-$sign\n  done\n  echo\
    \ $n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwegasy2d.sh: line 22: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpwegasy2d.sh: line 22: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local n=0\n    while [ $i -lt ${#arr[@]} ]; do\n        local j=$((i+1))\n \
    \       local sum=$((sum+${arr[i]}))\n        local k=$((j-1))\n        local\
    \ sum=$((sum+${arr[j]}))\n        local k=$((k-1))\n        local sum=$((sum+${arr[k]}))\n\
    \        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbm0h61tg.sh: line 18: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for num in \"\
    ${arr[@]}\"; do\n        ((sum += num))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkh3bhxbc.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpkh3bhxbc.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpkh3bhxbc.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local n=0\n   \
    \ for x in $arr; do\n        if (( x != 0 )); then\n            (( sum += x ))\n\
    \        fi\n    done\n    (( n = n + ( sum > 0 )))\n    return $n\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[$i]}+$sum ))\n      \
    \  i=$(( i+1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmomsc49u.sh: line 16: -1 -2 0+0 : syntax error in expression (error
    token is "0+0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#arr[@]} ]; do\n    sum=$(( ${arr[$i]} + $sum ))\n    i=$(( i + 1 ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_b1xugmz.sh: line 16: -1 -2 0 + 0 : syntax error in expression
    (error token is "0 + 0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ sign=1\n  local digits=0\n  local i\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n\
    \    digits=${arr[$i]}\n    if [ $digits -gt 0 ]; then\n      sum=$(( sum + $digits\
    \ ))\n      count=$(( count + 1 ))\n    fi\n  done\n\n  if [ $count -gt 0 ]; then\n\
    \    return $count\n  else\n    return 0\n  fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe530evt1.sh: line 21: [: -gt: unary operator expected

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local n=0\n    local m=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ sign\n  local digit\n  local i\n  for i in \"${arr[@]}\"; do\n    sign=$(( i\
    \ < 0 ))\n    digit=$(( i % 10 ))\n    sum=$(( sum + digit ))\n    if [ $sign\
    \ -eq 1 ]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf0rg784c.sh: line 19: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num > 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n            count=$(( count + 1 ))\n        fi\n    done\n\
    \    if (( sum > 0 )); then\n        echo \"$count $sum\"\n    else\n        echo\
    \ \"$count\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    for number in $numbers; do\n        sum=$((sum + number))\n        if [ $((sum\
    \ % 10)) -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        sum=$(( sum + ${arr[i]} ))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo $sum\n    else\n        echo $(( ${arr[0]}\
    \ * 10 ))\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwkja72kk.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        sum=$(( sum + ${arr[i]} ))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo $sum\n    else\n        echo $(( ${arr[0]}\
    \ < 0 ? ${arr[0]} * -1 : ${arr[0]} ))\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_to14qgo.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        ((sum+=${nums[$i]}))\n    done\n  \
    \  if [[ $sum -gt 0 ]]; then\n        echo $sum\n    else\n        echo $((-sum))\n\
    \    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuyo9gnop.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpuyo9gnop.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        (( sum += ${arr[i]}\
    \ ))\n        if (( sum > 0 )) ; then\n            (( count++ ))\n        fi\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdwlvm150.sh: line 17: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpdwlvm150.sh: line 17: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmpdwlvm150.sh: line 17: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    local count=0\n\
    \    for num in $nums; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local sum=0\n    local count=0\n\
    \    for (( i=0; i<${#arr[@]}; i++ )); do\n        (( sum += ${arr[i]} ))\n  \
    \      if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8pyp740_.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp8pyp740_.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmp8pyp740_.sh: line 16: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    for number in $numbers; do\n        if (( number < 0 )); then\n         \
    \   number=-$number\n        fi\n        sum=$(( sum + number ))\n    done\n \
    \   for number in $numbers; do\n        if (( number < 0 )); then\n          \
    \  number=-$number\n        fi\n        (( sum > 0 )) && count=$(( count + 1 ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        (( sum += ${arr[i]} ))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo \"$sum\"\n    else\n        echo \"\
    0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoc55r1t1.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpoc55r1t1.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    /tmp/tmpoc55r1t1.sh: line 16: ((: sum += 1 1 2 -2 3 4 5 : syntax error in expression
    (error token is "1 2 -2 3 4 5 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in ${arr[@]}; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local n=0\n    local digits=0\n    local digit\n\
    \    local digits_string\n    local digits_string2\n    local digits_string3\n\
    \    local digits_string4\n    local digits_string5\n    local digits_string6\n\
    \    local digits_string7\n    local digits_string8\n    local digits_string9\n\
    \    local digits_string10\n    local digits_string11\n    local digits_string12\n\
    \    local digits_string13\n    local digits_string14\n    local digits_string15\n\
    \    local digits_string16\n    local digits_string17\n    local digits_string18\n\
    \    local digits_string19\n    local digits_string20\n    local digits_string21\n\
    \    local digits_string22\n    local digits_string23\n    local digits_string24\n\
    \    local digits_string25\n    local digits_string26\n    local digits_string27\n\
    \    local digits_string28\n    local digits_string29\n    local digits_string30\n\
    \    local digits_string31\n    local digits_string32\n    local digits_string33\n\
    \    local digits_string34\n    local digits_string35\n    local digits_string36\n\
    \    local digits_string37\n    local digits_string38\n    local digits_string39\n\
    \    local digits_string40\n    local digits_string41\n    local digits_string42\n\
    \    local digits_string43\n    local digits_string44\n    local digits_string45\n\
    \    local digits_string46\n    local digits_string47\n    local digits_string48\n\
    \    local digits_string49\n    local digits_string50\n    local digits_string51\n\
    \    local digits_string52\n    local digits_string53\n    local digits_string54\n\
    \    local digits_string55\n    local digits_string56\n    local digits_string57\n\
    \    local digits_string58\n    local digits_string59\n    local digits_string60\n\
    \    local digits_string61\n    local digits_string62\n    local digits_string63\n\
    \    local digits_string64\n    local digits_string65\n    local digits_string66\n\
    \    local digits_string67\n    local digits_\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    for num in $nums;\
    \ do\n        sum=$((sum + num))\n    done\n    if [ $sum -gt 0 ]; then\n    \
    \    echo $sum\n    else\n        echo $((sum / 10))\n    fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum + ${arr[i]}))\n\
    \    done\n    for ((j=0; j<${#arr[@]}; j++)); do\n        if (( ${arr[j]} > 0\
    \ )); then\n            if (( ${sum} > 0 )); then\n                sum=$((sum\
    \ - ${arr[j]}))\n            else\n                sum=$((sum + ${arr[j]}))\n\
    \            fi\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmha0_lou.sh: line 17: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"$@\")\n  local sum=0\n  local i\n  for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n    ((sum+=${arr[i]}))\n  done\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpor482w_5.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpor482w_5.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n  local count=0\n\
    \  local i\n  for i in \"${array[@]}\"; do\n    (( sum += i ))\n    (( count++\
    \ ))\n  done\n  if (( sum < 0 )) ; then\n    sum=$(( sum + 10 ))\n    (( count--\
    \ ))\n  fi\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in ${arr[@]}; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local nums=0\n    local sum=0\n\
    \    local digits=0\n    local sign=1\n    local i\n    local j\n    local k\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum+${arr[i]}))\n    \
    \    if (( ${sum} < 0 )); then\n            sum=$((sum*-1))\n            sign=-1\n\
    \        fi\n        if (( ${sum} > 9 )); then\n            sum=$((sum/10))\n\
    \            digits=$((digits-1))\n        fi\n        if (( ${sum} == 0 )); then\n\
    \            (( nums++ ))\n        fi\n    done\n    echo \"${sign}${nums}${digits}\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvlzhfumz.sh: line 21: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        (( sum += num % 10 ))\n        (( count++ ))\n\
    \    done\n    if (( sum > 0 )); then\n        (( sum -= 10 ))\n        count=$((\
    \ count + 1 ))\n    fi\n    return $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        (( sum += ${arr[i]} ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8mjzyrkv.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp8mjzyrkv.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=$1\n    local sum=0\n    for num in $nums;\
    \ do\n        if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n\
    \        else\n            sum=$(( sum + num % 10 ))\n        fi\n    done\n \
    \   return $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in $arr;\
    \ do\n    ((sum += i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n\
    \        if (( ${sum} > 0 )); then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2v5ppya5.sh: line 17: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp2v5ppya5.sh: line 17: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp2v5ppya5.sh: line 17: ((: sum+=1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=\"$1\"\n    local sum=0\n    for num in\
    \ $nums; do\n        if (( num < 0 )); then\n            sum=$(( sum + num % 10\
    \ ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local digits=0\n    local sign=0\n    local first=0\n    local last=0\n \
    \   local i\n\n    # Loop through each element in the array\n    for i in \"${arr[@]}\"\
    ; do\n        # Count the number of digits\n        ((digits+=${#i}))\n      \
    \  # Count the number of signs\n        if [[ $i =~ ^-?[0-9]+$ ]]; then\n    \
    \        ((sign+=1))\n        fi\n        # Count the number of first digits\n\
    \        if [[ $i =~ ^-?[0-9]+$ ]]; then\n            ((first+=${#i}))\n     \
    \   fi\n        # Count the number of last digits\n        if [[ $i =~ ^-?[0-9]+$\
    \ ]]; then\n            ((last+=${#i}))\n        fi\n        # Count the number\
    \ of positive numbers\n        if [[ $i =~ ^-?[0-9]+$ ]]; then\n            ((count+=1))\n\
    \        fi\n    done\n\n    # Return the number of positive numbers in the array\n\
    \    if [[ $sign -eq 0 ]]; then\n        echo $count\n    else\n        echo $((sign\
    \ * count + first * count + last))\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=(\"$@\")\n    local sum=0\n    local\
    \ count=0\n    for number in \"${numbers[@]}\"; do\n        if (( number < 0 ));\
    \ then\n            number=-$number\n        fi\n        sum=$(( sum + number\
    \ ))\n    done\n    (( count=$sum % 10 ))\n    (( sum=$sum / 10 ))\n    (( count=$count\
    \ + 1 ))\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local n=0\n    local digits=0\n    local sign=0\n\
    \    local first_digit=0\n    local last_digit=0\n    local digits_sum=0\n\n \
    \   # Count number of positive numbers in array\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        (( arr[i] > 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n\
    \    # Count number of negative numbers in array\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        (( arr[i] < 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n\
    \    # Count number of zeros in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        (( arr[i] == 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count\
    \ number of negative numbers in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        (( arr[i] < 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count\
    \ number of positive numbers in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        (( arr[i] > 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count\
    \ number of negative numbers in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        (( arr[i] < 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count\
    \ number of zeros in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((\
    \ arr[i] == 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count number of\
    \ negative numbers in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        ((\
    \ arr[i] < 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count number of\
    \ zeros in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        (( arr[i] ==\
    \ 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count number of negative\
    \ numbers in array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        (( arr[i]\
    \ < 0 )) && sum=$(( sum + arr[i] ))\n    done\n\n    # Count number of zeros in\
    \ array\n    for ((i=0; i<${#arr[@]}; i++)); do\n        (( arr[i] == 0 )) &&\
    \ sum=$(( sum + arr[i] ))\n    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9smruq5n.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmp9smruq5n.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local nums=()\n    while [ $i -lt ${#arr[@]} ]; do\n        local num=$((${arr[$i]}+$sum))\n\
    \        sum=$((${num}%10))\n        nums+=(\"$num\")\n        i=$((i+1))\n  \
    \  done\n    echo ${#nums[@]}\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n    for i in $arr;\
    \ do\n        (( sum += i ))\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4a4s9czg.sh: line 12: local: `'': not a valid identifier

    /tmp/tmp4a4s9czg.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmp4a4s9czg.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ local num\n    for num in $arr; do\n        if (( num < 0 )); then\n       \
    \     sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num %\
    \ 10 ))\n        fi\n        i=$(( i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in $arr;\
    \ do\n    ((sum += i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    local sign=1\n    local digits=${#numbers[@]}\n    for (( i=0; i<$digits;\
    \ i++ )); do\n        (( sum+=${numbers[$i]} * $sign ))\n        (( sign=-sign))\n\
    \        (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnq9od3uc.sh: line 18: ((: sum+= * 1 : syntax error: operand expected
    (error token is "* 1 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local -n arr=$1\n    local -i sum=0\n    for num in\
    \ \"${arr[@]}\"; do\n        ((sum += num))\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeovo73nm.sh: line 12: local: `'': not a valid identifier

    /tmp/tmpeovo73nm.sh: line 12: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpeovo73nm.sh: line 12: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local count=0\n  local\
    \ i\n  for i in $nums; do\n    ((sum+=i))\n    ((count+=((sum>0)?1:0)))\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    local sign=0\n    local digits=0\n    local digit\n    for element in \"\
    ${array[@]}\"; do\n        if [[ \"$element\" =~ ^-?[0-9]+$ ]]; then\n       \
    \     digits=$(echo \"$element\" | sed 's/-//g')\n            digit=$(echo \"\
    $element\" | sed 's/^-\\([0-9]\\+\\)$/\\1/')\n            if [[ \"$digit\" -gt\
    \ 0 ]]; then\n                sum=$((sum + digit))\n            else\n       \
    \         sign=$((sign + digits))\n            fi\n        fi\n    done\n    if\
    \ [[ \"$sign\" -gt 0 ]]; then\n        sum=$((sum + sign))\n    fi\n    count=$((count\
    \ + 1))\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[i]}+sum ))\n        i=$((\
    \ i+1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5cgtf70b.sh: line 16: -1 -2 0+sum : syntax error in expression
    (error token is "0+sum ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"${@}\")\n    local nums=()\n    local\
    \ i\n    for ((i=0; i<${#arr[@]}; i++)); do\n        local j\n        for ((j=0;\
    \ j<${#arr[i]}; j++)); do\n            local sum\n            if (( ${arr[i]}\
    \ < 0 )); then\n                sum=$((${arr[i]} + ${arr[i]}%10))\n          \
    \  else\n                sum=$((${arr[i]} + 10))\n            fi\n           \
    \ if (( ${sum} > 9 )); then\n                sum=$((${sum} - 9))\n           \
    \ fi\n            nums+=(${sum})\n        done\n    done\n    echo ${#nums[@]}\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmxca2_6j.sh: line 19: ((: -1 -2 0 < 0 : syntax error in expression
    (error token is "0 < 0 ")

    /tmp/tmpmxca2_6j.sh: line 22: -1 -2 0 + 10: syntax error in expression (error
    token is "0 + 10")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local digits=0\n    local sign=0\n    local i\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        digits=${arr[$i]}\n        if (( digits > 0 )); then\n  \
    \          sum=$((sum+digits))\n        else\n            sign=$((sign+digits))\n\
    \        fi\n    done\n    if (( sign > 0 )); then\n        sum=$((sum+sign))\n\
    \        count=$((count+1))\n    fi\n    if (( sum > 0 )); then\n        count=$((count+1))\n\
    \    fi\n    return $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local numbers=$1\n  local sum=0\n  local count=0\n \
    \ local digits=0\n  local sign=0\n  local first_digit=0\n  local last_digit=0\n\
    \  local digits_sum=0\n\n  while read -r number; do\n    digits=$(echo $number\
    \ | wc -w)\n    if [ $digits -gt 0 ]; then\n      first_digit=$(echo $number |\
    \ awk '{print $1}')\n      last_digit=$(echo $number | awk '{print $NF}')\n  \
    \    digits_sum=$((first_digit + last_digit))\n      sum=$((sum + digits_sum))\n\
    \      count=$((count + 1))\n    fi\n  done <<< \"$numbers\"\n\n  if [ $count\
    \ -eq 0 ]; then\n    return 0\n  fi\n\n  local digits_sum=$((sum % 10))\n  if\
    \ [ $digits_sum -gt 0 ]; then\n    sign=1\n  fi\n\n  if [ $sign -eq 1 ]; then\n\
    \    return $count\n  else\n    return $count - 1\n  fi\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        j=$((i+1))\n        sum=$((sum+${arr[i]}+${arr[j]}))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n        echo $sum\n    else\n        echo\
    \ $((sum+1))\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for element in ${arr[@]}; do\n        if (( element < 0 )); then\n      \
    \      sum=$(( sum + element ))\n        else\n            sum=$(( sum + element\
    \ * 10 ))\n        fi\n    done\n    if (( sum > 0 )); then\n        count=$((\
    \ count + 1 ))\n    fi\n    return $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        local j=0\n        while [ $j -le ${#arr[$i]}\
    \ ]; do\n            local k=0\n            while [ $k -le ${#arr[$i][$j]} ];\
    \ do\n                local sum=$((sum + ${arr[$i][$j]}))\n                k=$((k\
    \ + 1))\n            done\n            j=$((j + 1))\n        done\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfreamk8r.sh: line 19: ${#arr[$i][$j]}: bad substitution

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    for num in\
    \ \"${arr[@]}\"; do\n        (( sum += num % 10 ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_2uhnsnw.sh: line 15: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_2uhnsnw.sh: line 15: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local nums=0\n    local sign\n \
    \   local i\n    local j\n    local k\n    local digit\n    local sum\n    local\
    \ digitsum\n    local digitsum2\n    local digitsum3\n    local digitsum4\n  \
    \  local digitsum5\n    local digitsum6\n    local digitsum7\n    local digitsum8\n\
    \    local digitsum9\n    local digitsum10\n    local digitsum11\n    local digitsum12\n\
    \    local digitsum13\n    local digitsum14\n    local digitsum15\n    local digitsum16\n\
    \    local digitsum17\n    local digitsum18\n    local digitsum19\n    local digitsum20\n\
    \    local digitsum21\n    local digitsum22\n    local digitsum23\n    local digitsum24\n\
    \    local digitsum25\n    local digitsum26\n    local digitsum27\n    local digitsum28\n\
    \    local digitsum29\n    local digitsum30\n    local digitsum31\n    local digitsum32\n\
    \    local digitsum33\n    local digitsum34\n    local digitsum35\n    local digitsum36\n\
    \    local digitsum37\n    local digitsum38\n    local digitsum39\n    local digitsum40\n\
    \    local digitsum41\n    local digitsum42\n    local digitsum43\n    local digitsum44\n\
    \    local digitsum45\n    local digitsum46\n    local digitsum47\n    local digitsum48\n\
    \    local digitsum49\n    local digitsum50\n    local digitsum51\n    local digitsum52\n\
    \    local digitsum53\n    local digitsum54\n    local digitsum55\n    local digitsum56\n\
    \    local digitsum57\n    local digitsum58\n    local digitsum59\n    local digitsum60\n\
    \    local digitsum61\n    local digitsum62\n    local digitsum63\n    local digitsum64\n\
    \    local digitsum65\n    local digitsum66\n    local digitsum67\n    local digitsum68\n\
    \    local digitsum69\n    local digitsum70\n    local digitsum71\n    local digitsum72\n\
    \    local digitsum73\n    local digitsum74\n    local digitsum75\n    local digitsum76\n\
    \    local digitsum77\n    local digitsum78\n    local digitsum79\n    local digit\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        sum=$(( ${arr[$i]}+sum ))\n       \
    \ i=$(( i+1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkipq0uhz.sh: line 16: -1 -2 0+sum : syntax error in expression
    (error token is "0+sum ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        sum=$(( sum + ${arr[i]} ))\n    done\n\
    \    if [ $sum -gt 0 ]; then\n        echo \"$sum\"\n    else\n        echo \"\
    0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjuamuw5h.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        ((sum+=${arr[i]}))\n    done\n    if\
    \ (( sum > 0 )); then\n        echo $sum\n    else\n        echo $(( ${arr[0]}\
    \ < 0 ? ${arr[0]}+9 : ${arr[0]} ))\n    fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphmtvgg0h.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmphmtvgg0h.sh: line 21: < 0 ? +9 :  : syntax error: operand expected (error
    token is "< 0 ? +9 :  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in $arr;\
    \ do\n    ((sum += i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    local\
    \ j\n    local k\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum+${arr[i]}))\n\
    \    done\n    for ((j=0; j<${#arr[@]}; j++)); do\n        if (( ${arr[j]} > 0\
    \ )); then\n            k=$((${arr[j]}%10))\n            if (( ${k} > 0 )); then\n\
    \                sum=$((sum+(k*10)))\n            else\n                sum=$((sum+(k*100)))\n\
    \            fi\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6osqxzav.sh: line 18: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#arr[@]} ]; do\n    sum=$(( sum + ${arr[$i]} ))\n    i=$(( i + 1 ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpktvu0hc5.sh: line 16: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i=0\n   \
    \ while [ $i -lt ${#arr[@]} ]; do\n        (( sum += ${arr[$i]} ))\n        ((\
    \ i++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9qieklrr.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp9qieklrr.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local i\n    local\
    \ j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum + ${arr[i]}))\n\
    \    done\n    for ((j=0; j<${#arr[@]}; j++)); do\n        if (( ${arr[j]} > 0\
    \ )); then\n            if (( ${arr[j]} < 10 )); then\n                (( ${sum}\
    \ -= ${arr[j]} ))\n            else\n                (( ${sum} -= 10 ))\n    \
    \        fi\n        fi\n    done\n    echo ${sum}\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkhop6yi3.sh: line 17: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local i\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if (( ${arr[i]}\
    \ > 0 )); then\n            (( sum += ${arr[i]} ))\n            (( count++ ))\n\
    \        fi\n    done\n    if (( count > 0 )); then\n        echo \"$sum\"\n \
    \   else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp05p9o38d.sh: line 17: ((: > 0 : syntax error: operand expected
    (error token is "> 0 ")

    /tmp/tmp05p9o38d.sh: line 17: ((: -1 -2 0 > 0 : syntax error in expression (error
    token is "0 > 0 ")

    /tmp/tmp05p9o38d.sh: line 17: ((: 1 1 2 -2 3 4 5 > 0 : syntax error in expression
    (error token is "1 2 -2 3 4 5 > 0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=$1\n    local sum=0\n    local count=0\n\
    \    for number in $numbers; do\n        sum=$((sum + number))\n        if [ $number\
    \ -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local i\n\
    \    for ((i=0; i<${#array[@]}; i++)); do\n        ((sum+=${array[i]}))\n    done\n\
    \    if [[ \"${sum}\" -gt 0 ]]; then\n        echo \"${sum}\"\n    else\n    \
    \    echo \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp77jl3_6w.sh: line 16: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp77jl3_6w.sh: line 16: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp77jl3_6w.sh: line 16: ((: sum+=1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i=0\n  while [\
    \ $i -lt ${#arr[@]} ]; do\n    (( sum += ${arr[$i]} ))\n    (( i++ ))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgtd9t0cs.sh: line 16: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpgtd9t0cs.sh: line 16: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local sign=0\n    local digits=0\n    local digit\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        digit=${arr[i]}\n        if (( sign )); then\n         \
    \   digit=-$digit\n        fi\n        sum=$(( sum + digit ))\n        digits=$((\
    \ digits + 1 ))\n    done\n    if [ $digits -gt 0 ]; then\n        sign=1\n  \
    \  fi\n    count=$(echo $sum | bc)\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3xorewzy.sh: line 23: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        if (( num < 0 )); then\n            sum=$(( sum + num % 10 ))\n\
    \        else\n            sum=$(( sum + num % 10 ))\n        fi\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n    local sum=0\n    local count=0\n\
    \    for element in \"${array[@]}\"; do\n        if (( element < 0 )); then\n\
    \            element=-$element\n        fi\n        sum=$(( sum + element ))\n\
    \    done\n    for element in \"${array[@]}\"; do\n        if (( element < 0 ));\
    \ then\n            element=-$element\n        fi\n        if (( sum == 0 ));\
    \ then\n            count=$(( count + 1 ))\n        elif (( sum < 0 )); then\n\
    \            count=$(( count + 1 ))\n        fi\n        sum=$(( sum - element\
    \ ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    for num in $arr; do\n        if (( num < 0 )); then\n            sum=$((\
    \ sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10 ))\n   \
    \         (( count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local count=0\n\
    \    local digit\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        digit=${arr[i]}\n\
    \        if (( digit > 0 )); then\n            (( sum += digit ))\n        else\n\
    \            (( sum += (-1 * digit) ))\n        fi\n    done\n    if (( sum >\
    \ 0 )); then\n        count=$(( count + 1 ))\n    fi\n    return $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=(\"$@\")\n    local sum=0\n    local count=0\n\
    \    for num in \"${arr[@]}\"; do\n        if (( num < 0 )); then\n          \
    \  sum=$(( sum + num % 10 ))\n        else\n            sum=$(( sum + num % 10\
    \ ))\n            count=$(( count + 1 ))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local count=0\n  local\
    \ sign=1\n  local digit\n  local i\n\n  for (( i=0; i<${#arr[@]}; i++ )); do\n\
    \    digit=${arr[$i]}\n    if [[ $digit -gt 0 ]]; then\n      sum=$(( sum + sign\
    \ ))\n      sign=-$sign\n      count=$(( count + 1 ))\n    fi\n  done\n\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxr9fr8wb.sh: line 21: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpxr9fr8wb.sh: line 21: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=$1\n  local sum=0\n  local i\n  for i in ${arr[@]};\
    \ do\n    (( sum += i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        if (( ${arr[i]} < 0 )); then\n            arr[i]=-${arr[i]}\n\
    \        fi\n        (( n += ${arr[i]} ))\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    local nums=\"\"\
    \n    for num in $arr; do\n        ((sum+=num))\n        nums=\"$nums $num\"\n\
    \    done\n    echo $sum\n    echo $nums\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=$1\n    local sum=0\n    for num in $arr;\
    \ do\n        ((sum += num))\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local arr=( $1 )\n    local n=0\n    for n in \"${arr[@]}\"\
    ; do\n        if (( n >= 0 )); then\n            (( n %= 10 ))\n        else\n\
    \            (( n += ( 10#$n ) ))\n        fi\n    done\n    echo \"$n\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660027247

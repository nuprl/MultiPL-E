language: sh
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local i\n    local j\n\
    \    local k\n    local bin\n    local bin1\n    local bin2\n    local bin3\n\
    \    local bin4\n    local bin5\n    local bin6\n    local bin7\n    local bin8\n\
    \    local bin9\n    local bin10\n    local bin11\n    local bin12\n    local\
    \ bin13\n    local bin14\n    local bin15\n    local bin16\n    local bin17\n\
    \    local bin18\n    local bin19\n    local bin20\n    local bin21\n    local\
    \ bin22\n    local bin23\n    local bin24\n    local bin25\n    local bin26\n\
    \    local bin27\n    local bin28\n    local bin29\n    local bin30\n    local\
    \ bin31\n    local bin32\n    local bin33\n    local bin34\n    local bin35\n\
    \    local bin36\n    local bin37\n    local bin38\n    local bin39\n    local\
    \ bin40\n    local bin41\n    local bin42\n    local bin43\n    local bin44\n\
    \    local bin45\n    local bin46\n    local bin47\n    local bin48\n    local\
    \ bin49\n    local bin50\n    local bin51\n    local bin52\n    local bin53\n\
    \    local bin54\n    local bin55\n    local bin56\n    local bin57\n    local\
    \ bin58\n    local bin59\n    local bin60\n    local bin61\n    local bin62\n\
    \    local bin63\n    local bin64\n    local bin65\n    local bin66\n    local\
    \ bin67\n    local bin68\n    local bin69\n    local bin70\n    local bin71\n\
    \    local bin72\n    local bin73\n    local bin74\n    local bin75\n    local\
    \ bin76\n    local bin77\n    local bin78\n    local bin79\n    local bin80\n\
    \    local bin81\n    local bin82\n    local bin83\n    local bin84\n    local\
    \ bin85\n    local bin86\n    local bin87\n    local bin88\n    local bin89\n\
    \    local bin90\n    local bin91\n    local bin92\n    local bin93\n    local\
    \ bin94\n    local bin95\n    local bin96\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result=\"\"\n   \
    \ while [ $N ]; do\n        ((digits++))\n        ((N=N/10))\n        ((sum+=digits))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    (( sum += $(( 10#$N )) ))\n    (( N -= $(( 10#$N\
    \ )) ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=21 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local\
    \ G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local\
    \ N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n  local\
    \ U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local\
    \ D\n  local E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local\
    \ K\n  local L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local\
    \ R\n  local S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local\
    \ Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ A\n  local B\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digits=0\n  local result\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n \
    \   local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local \n}\n\ncandidate() {\n  \
    \  solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n    local\
    \ sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n    local\
    \ sum10\n    local sum11\n    local sum12\n    local sum13\n    local sum14\n\
    \    local sum15\n    local sum16\n    local sum17\n    local sum18\n    local\
    \ sum19\n    local sum20\n    local sum21\n    local sum22\n    local sum23\n\
    \    local sum24\n    local sum25\n    local sum26\n    local sum27\n    local\
    \ sum28\n    local sum29\n    local sum30\n    local sum31\n    local sum32\n\
    \    local sum33\n    local sum34\n    local sum35\n    local sum36\n    local\
    \ sum37\n    local sum38\n    local sum39\n    local sum40\n    local sum41\n\
    \    local sum42\n    local sum43\n    local sum44\n    local sum45\n    local\
    \ sum46\n    local sum47\n    local sum48\n    local sum49\n    local sum50\n\
    \    local sum51\n    local sum52\n    local sum53\n    local sum54\n    local\
    \ sum55\n    local sum56\n    local sum57\n    local sum58\n    local sum59\n\
    \    local sum60\n    local sum61\n    local sum62\n    local sum63\n    local\
    \ sum64\n    local sum65\n    local sum66\n    local sum67\n    local sum68\n\
    \    local sum69\n    local sum70\n    local sum71\n    local sum72\n    local\
    \ sum73\n    local sum74\n    local sum75\n    local sum76\n    local sum77\n\
    \    local sum78\n    local sum79\n    local sum80\n    local sum81\n    local\
    \ sum82\n    local sum83\n    local sum84\n    local sum85\n    local sum86\n\
    \    local sum87\n    local sum88\n    local sum89\n    local sum90\n    local\
    \ sum91\n    local sum92\n    local sum93\n    local sum94\n    local sum95\n\
    \    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sumOfDigits\n  local binary\n  local binaryString\n  local binaryStringLength\n\
    \  local binaryStringLength2\n  local binaryStringLength3\n  local binaryStringLength4\n\
    \  local binaryStringLength5\n  local binaryStringLength6\n  local binaryStringLength7\n\
    \  local binaryStringLength8\n  local binaryStringLength9\n  local binaryStringLength10\n\
    \  local binaryStringLength11\n  local binaryStringLength12\n  local binaryStringLength13\n\
    \  local binaryStringLength14\n  local binaryStringLength15\n  local binaryStringLength16\n\
    \  local binaryStringLength17\n  local binaryStringLength18\n  local binaryStringLength19\n\
    \  local binaryStringLength20\n  local binaryStringLength21\n  local binaryStringLength22\n\
    \  local binaryStringLength23\n  local binaryStringLength24\n  local binaryStringLength25\n\
    \  local binaryStringLength26\n  local binaryStringLength27\n  local binaryStringLength28\n\
    \  local binaryStringLength29\n  local binaryStringLength30\n  local binaryStringLength31\n\
    \  local binaryStringLength32\n  local binaryStringLength33\n  local binaryStringLength34\n\
    \  local binaryStringLength35\n  local binaryStringLength36\n  local binaryStringLength37\n\
    \  local binaryStringLength38\n  local binaryStringLength39\n  local binaryStringLength40\n\
    \  local binaryStringLength41\n  local binaryStringLength42\n  local binaryStringLength43\n\
    \  local binaryStringLength44\n  local binaryStringLength45\n  local binaryStringLength46\n\
    \  local binaryStringLength47\n  local binaryStringLength48\n  local binaryStringLength49\n\
    \  local binaryStringLength50\n  local binaryStringLength51\n  local binaryStringLength52\n\
    \  local binaryStringLength53\n  local binaryStringLength54\n  local binaryStringLength55\n\
    \  local binaryStringLength56\n  local binaryStringLength57\n  local binaryStringLength58\n\
    \  local binaryStringLength59\n  local binaryStringLength60\n  local binaryStringLength61\n\
    \  local binaryStringLength62\n  local binaryStringLength63\n  local binaryStringLength64\n\
    \  local binaryStringLength65\n  local binaryStringLength66\n  local binaryStringLength67\n\
    \  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ binary\n  local result\n  local sumOfDigits\n  local binaryString\n  local binaryStringLength\n\
    \  local binaryStringLength2\n  local binaryStringLength3\n  local binaryStringLength4\n\
    \  local binaryStringLength5\n  local binaryStringLength6\n  local binaryStringLength7\n\
    \  local binaryStringLength8\n  local binaryStringLength9\n  local binaryStringLength10\n\
    \  local binaryStringLength11\n  local binaryStringLength12\n  local binaryStringLength13\n\
    \  local binaryStringLength14\n  local binaryStringLength15\n  local binaryStringLength16\n\
    \  local binaryStringLength17\n  local binaryStringLength18\n  local binaryStringLength19\n\
    \  local binaryStringLength20\n  local binaryStringLength21\n  local binaryStringLength22\n\
    \  local binaryStringLength23\n  local binaryStringLength24\n  local binaryStringLength25\n\
    \  local binaryStringLength26\n  local binaryStringLength27\n  local binaryStringLength28\n\
    \  local binaryStringLength29\n  local binaryStringLength30\n  local binaryStringLength31\n\
    \  local binaryStringLength32\n  local binaryStringLength33\n  local binaryStringLength34\n\
    \  local binaryStringLength35\n  local binaryStringLength36\n  local binaryStringLength37\n\
    \  local binaryStringLength38\n  local binaryStringLength39\n  local binaryStringLength40\n\
    \  local binaryStringLength41\n  local binaryStringLength42\n  local binaryStringLength43\n\
    \  local binaryStringLength44\n  local binaryStringLength45\n  local binaryStringLength46\n\
    \  local binaryStringLength47\n  local binaryStringLength48\n  local binaryStringLength49\n\
    \  local binaryStringLength50\n  local binaryStringLength51\n  local binaryStringLength52\n\
    \  local binaryStringLength53\n  local binaryStringLength54\n  local binaryStringLength55\n\
    \  local binaryStringLength56\n  local binaryStringLength57\n  local binaryStringLength58\n\
    \  local binaryStringLength59\n  local binaryStringLength60\n  local binaryStringLength61\n\
    \  local binaryStringLength62\n  local binaryStringLength63\n  local binaryStringLength64\n\
    \  local binaryStringLength65\n  local binaryStringLength66\n  local binaryString\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sum_string\n  local binary_string\n  local binary_string2\n  local binary_string3\n\
    \  local binary_string4\n  local binary_string5\n  local binary_string6\n  local\
    \ binary_string7\n  local binary_string8\n  local binary_string9\n  local binary_string10\n\
    \  local binary_string11\n  local binary_string12\n  local binary_string13\n \
    \ local binary_string14\n  local binary_string15\n  local binary_string16\n  local\
    \ binary_string17\n  local binary_string18\n  local binary_string19\n  local binary_string20\n\
    \  local binary_string21\n  local binary_string22\n  local binary_string23\n \
    \ local binary_string24\n  local binary_string25\n  local binary_string26\n  local\
    \ binary_string27\n  local binary_string28\n  local binary_string29\n  local binary_string30\n\
    \  local binary_string31\n  local binary_string32\n  local binary_string33\n \
    \ local binary_string34\n  local binary_string35\n  local binary_string36\n  local\
    \ binary_string37\n  local binary_string38\n  local binary_string39\n  local binary_string40\n\
    \  local binary_string41\n  local binary_string42\n  local binary_string43\n \
    \ local binary_string44\n  local binary_string45\n  local binary_string46\n  local\
    \ binary_string47\n  local binary_string48\n  local binary_string49\n  local binary_string50\n\
    \  local binary_string51\n  local binary_string52\n  local binary_string53\n \
    \ local binary_string54\n  local binary_string55\n  local binary_string56\n  local\
    \ binary_string57\n  local binary_string58\n  local binary_string59\n  local binary_string60\n\
    \  local binary_string61\n  local binary_string62\n  local binary_string63\n \
    \ local binary_string64\n  local binary_string65\n  local binary_string66\n  local\
    \ binary_string67\n  local binary_string68\n  local binary_string69\n  local binary_string70\n\
    \  local binary_string71\n  local binary_string72\n  local binary_string73\n \
    \ local binary_string74\n  local binary_string75\n  local binary_string76\n  local\
    \ binary_string77\n  local binary_string78\n  local binary_string79\n  local binary_string80\n\
    \  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local sumString=\"\"\n\
    \    local digitString=\"\"\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local sumDigit\n    local sumDigitString\n    local sumDigitStringLength\n\
    \    local sumDigitStringLength2\n    local sumDigitStringLength3\n    local sumDigitStringLength4\n\
    \    local sumDigitStringLength5\n    local sumDigitStringLength6\n    local sumDigitStringLength7\n\
    \    local sumDigitStringLength8\n    local sumDigitStringLength9\n    local sumDigitStringLength10\n\
    \    local sumDigitStringLength11\n    local sumDigitStringLength12\n    local\
    \ sumDigitStringLength13\n    local sumDigitStringLength14\n    local sumDigitStringLength15\n\
    \    local sumDigitStringLength16\n    local sumDigitStringLength17\n    local\
    \ sumDigitStringLength18\n    local sumDigitStringLength19\n    local sumDigitStringLength20\n\
    \    local sumDigitStringLength21\n    local sumDigitStringLength22\n    local\
    \ sumDigitStringLength23\n    local sumDigitStringLength24\n    local sumDigitStringLength25\n\
    \    local sumDigitStringLength26\n    local sumDigitStringLength27\n    local\
    \ sumDigitStringLength28\n    local sumDigitStringLength29\n    local sumDigitStringLength30\n\
    \    local sumDigitStringLength31\n    local sumDigitStringLength32\n    local\
    \ sumDigitStringLength33\n    local sumDigitStringLength34\n    local sumDigitStringLength35\n\
    \    local sumDigitStringLength36\n    local sumDigitStringLength37\n    local\
    \ sumDigitStringLength38\n    local sumDigitStringLength39\n    local sumDigitStringLength40\n\
    \    local sumDigitStringLength41\n    local sumDigitStringLength42\n    local\
    \ sumDigitStringLength43\n    local sumDigitStringLength44\n    local sumDigitStringLength45\n\
    \    local sumDigitStringLength46\n    local sumDigitStringLength47\n    local\
    \ sumDigitStringLength48\n    local sumDigitStringLength49\n    local sumDigitStringLength50\n\
    \    local sumDigitStringLength51\n    local sumDigitStringLength52\n    local\
    \ sumDigitStringLength53\n    local sumDigitStringLength54\n    local sumDigitStringLength55\n\
    \    local sumDigitStringLength56\n    local sumDigitStringLength57\n    \n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local binary=0\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local remainder\n    local\
    \ result\n    local i\n    local j\n    local k\n    local l\n    local m\n  \
    \  local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local \n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local sumString=\"\"\n  local digitString=\"\
    \"\n  local digitString2=\"\"\n  local digitString3=\"\"\n  local digitString4=\"\
    \"\n  local digitString5=\"\"\n  local digitString6=\"\"\n  local digitString7=\"\
    \"\n  local digitString8=\"\"\n  local digitString9=\"\"\n  local digitString10=\"\
    \"\n  local digitString11=\"\"\n  local digitString12=\"\"\n  local digitString13=\"\
    \"\n  local digitString14=\"\"\n  local digitString15=\"\"\n  local digitString16=\"\
    \"\n  local digitString17=\"\"\n  local digitString18=\"\"\n  local digitString19=\"\
    \"\n  local digitString20=\"\"\n  local digitString21=\"\"\n  local digitString22=\"\
    \"\n  local digitString23=\"\"\n  local digitString24=\"\"\n  local digitString25=\"\
    \"\n  local digitString26=\"\"\n  local digitString27=\"\"\n  local digitString28=\"\
    \"\n  local digitString29=\"\"\n  local digitString30=\"\"\n  local digitString31=\"\
    \"\n  local digitString32=\"\"\n  local digitString33=\"\"\n  local digitString34=\"\
    \"\n  local digitString35=\"\"\n  local digitString36=\"\"\n  local digitString37=\"\
    \"\n  local digitString38=\"\"\n  local digitString39=\"\"\n  local digitString40=\"\
    \"\n  local digitString41=\"\"\n  local digitString42=\"\"\n  local digitString43=\"\
    \"\n  local digitString44=\"\"\n  local digitString45=\"\"\n  local digitString46=\"\
    \"\n  local digitString47=\"\"\n  local digitString48=\"\"\n  local digitString49=\"\
    \"\n  local digitString50=\"\"\n  local digitString51=\"\"\n  local digitString52=\"\
    \"\n  local digitString53=\"\"\n  local digitString54=\"\"\n  local digitString55=\"\
    \"\n  local digitString56=\"\"\n  local digitString57=\"\"\n  local digitString58=\"\
    \"\n  local digitString59=\"\"\n  local digitString60=\"\"\n  local digitString61=\"\
    \"\n  local digitString62=\"\"\n  local digitString63=\"\"\n  local digitString64=\"\
    \"\n  local digitString65=\"\"\n  local digitString66=\"\"\n  local digitString67=\"\
    \"\n  local digitString68=\"\"\n  local digitString69=\"\"\n  local digitString70=\"\
    \"\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local bin\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local\
    \ F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local\
    \ M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local\
    \ T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local\
    \ C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n  local\
    \ J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n  local\
    \ Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n  local\
    \ X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local A\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ output\n  local sum_string\n  local sum_string2\n  local sum_string3\n  local\
    \ sum_string4\n  local sum_string5\n  local sum_string6\n  local sum_string7\n\
    \  local sum_string8\n  local sum_string9\n  local sum_string10\n  local sum_string11\n\
    \  local sum_string12\n  local sum_string13\n  local sum_string14\n  local sum_string15\n\
    \  local sum_string16\n  local sum_string17\n  local sum_string18\n  local sum_string19\n\
    \  local sum_string20\n  local sum_string21\n  local sum_string22\n  local sum_string23\n\
    \  local sum_string24\n  local sum_string25\n  local sum_string26\n  local sum_string27\n\
    \  local sum_string28\n  local sum_string29\n  local sum_string30\n  local sum_string31\n\
    \  local sum_string32\n  local sum_string33\n  local sum_string34\n  local sum_string35\n\
    \  local sum_string36\n  local sum_string37\n  local sum_string38\n  local sum_string39\n\
    \  local sum_string40\n  local sum_string41\n  local sum_string42\n  local sum_string43\n\
    \  local sum_string44\n  local sum_string45\n  local sum_string46\n  local sum_string47\n\
    \  local sum_string48\n  local sum_string49\n  local sum_string50\n  local sum_string51\n\
    \  local sum_string52\n  local sum_string53\n  local sum_string54\n  local sum_string55\n\
    \  local sum_string56\n  local sum_string57\n  local sum_string58\n  local sum_string59\n\
    \  local sum_string60\n  local sum_string61\n  local sum_string62\n  local sum_string63\n\
    \  local sum_string64\n  local sum_string65\n  local sum_string66\n  local sum_string67\n\
    \  local sum_string68\n  local sum_string69\n  local sum_string70\n  local sum_string71\n\
    \  local sum_string72\n  local sum_string73\n  local sum_string74\n  local sum_string75\n\
    \  local sum_string76\n  local sum_string77\n  local sum_string78\n  local sum_string79\n\
    \  local sum_string80\n  local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result=\"\"\n   \
    \ while [ $N -lt 10000 ]; do\n        digits=$(( $N % 10 ))\n        sum=$(( $sum\
    \ + $digits ))\n        (( N = $N / 10 ))\n    done\n    result=$(( $sum % 2 ))\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digits=0\n  local result\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local digit\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    local E\n    local F\n    local G\n    local H\n    local\
    \ I\n    local J\n    local K\n    local L\n    local M\n    local N\n    local\
    \ O\n    local P\n    local Q\n    local R\n    local S\n    local T\n    local\
    \ U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local result\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n  \
    \  local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    (( sum += ( $(( N % 10 )) )) ))\n    N=$(( N\
    \ / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw0ovn53u.sh: line 18: syntax error near unexpected token `(''

    /tmp/tmpw0ovn53u.sh: line 18: `( sum += ( $(( N % 10 )) )) ''

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local sumString\n    local sumString2\n    local sumString3\n \
    \   local sumString4\n    local sumString5\n    local sumString6\n    local sumString7\n\
    \    local sumString8\n    local sumString9\n    local sumString10\n    local\
    \ sumString11\n    local sumString12\n    local sumString13\n    local sumString14\n\
    \    local sumString15\n    local sumString16\n    local sumString17\n    local\
    \ sumString18\n    local sumString19\n    local sumString20\n    local sumString21\n\
    \    local sumString22\n    local sumString23\n    local sumString24\n    local\
    \ sumString25\n    local sumString26\n    local sumString27\n    local sumString28\n\
    \    local sumString29\n    local sumString30\n    local sumString31\n    local\
    \ sumString32\n    local sumString33\n    local sumString34\n    local sumString35\n\
    \    local sumString36\n    local sumString37\n    local sumString38\n    local\
    \ sumString39\n    local sumString40\n    local sumString41\n    local sumString42\n\
    \    local sumString43\n    local sumString44\n    local sumString45\n    local\
    \ sumString46\n    local sumString47\n    local sumString48\n    local sumString49\n\
    \    local sumString50\n    local sumString51\n    local sumString52\n    local\
    \ sumString53\n    local sumString54\n    local sumString55\n    local sumString56\n\
    \    local sumString57\n    local sumString58\n    local sumString59\n    local\
    \ sumString60\n    local sumString61\n    local sumString62\n    local sumString63\n\
    \    local sumString64\n    local sumString65\n    local sumString66\n    local\
    \ sumString67\n    local sumString68\n    local sumString69\n    local sumString70\n\
    \    local sumString71\n    local sumString72\n    local sumString73\n    local\
    \ sumString74\n    local sumString75\n    local sumString76\n    local sumString77\n\
    \    local sumString78\n    local sumString79\n    local sumString80\n    local\
    \ sumString81\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local bin\n    local i\n \
    \   local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]\n  do\n    sum=$((sum + $(echo $N % 2 | bc)))\n\
    \    N=$((N / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )\\(.\\)\\([0-9]*\\)/\\1\\2/')));\n    N=$((N / 2))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=12 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local digit\n    local sum\n    local digit\n    local i\n    local\
    \ j\n    local k\n    local digit\n    local sum\n    local digit\n    local i\n\
    \    local j\n    local k\n    local digit\n    local sum\n    local digit\n \
    \   local i\n    local j\n    local k\n    local digit\n    local sum\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local digit\n    local sum\n\
    \    local digit\n    local i\n    local j\n    local k\n    local digit\n   \
    \ local sum\n    local digit\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local sum\n    local digit\n    local i\n    local j\n    local k\n\
    \    local digit\n    local sum\n    local digit\n    local i\n    local j\n \
    \   local k\n    local digit\n    local sum\n    local digit\n    local i\n  \
    \  local j\n    local k\n    local digit\n    local sum\n    local digit\n   \
    \ local i\n    local j\n    local k\n    local digit\n    local sum\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local digit\n    local sum\n\
    \    local digit\n    local i\n    local j\n    local k\n    local digit\n   \
    \ local sum\n    local digit\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local sum\n    local digit\n    local i\n    local j\n    local k\n\
    \    local digit\n    local sum\n    local digit\n    local i\n    local j\n \
    \   local k\n    local digit\n    local sum\n    local digit\n    local i\n  \
    \  local j\n    local k\n    local digit\n    local sum\n    local digit\n   \
    \ local i\n    local j\n    local k\n    local digit\n    local sum\n    local\
    \ digit\n    local i\n    local j\n    local k\n    local digit\n    local sum\n\
    \    local digit\n    local i\n    local j\n    local k\n    local digit\n   \
    \ local sum\n    local digit\n    local i\n    local j\n    local k\n    local\
    \ digit\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local result\n    local digit\n    local tmp\n    local tmp2\n    local tmp3\n\
    \    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n\
    \    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local\
    \ tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n\
    \    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local\
    \ tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n\
    \    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local\
    \ tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n\
    \    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local\
    \ tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n\
    \    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local\
    \ tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n\
    \    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local\
    \ tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n\
    \    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local\
    \ tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n\
    \    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local\
    \ tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n\
    \    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local\
    \ tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n\
    \    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local\
    \ tmp94\n    local tmp95\n    local tmp96\n    local \n}\n\ncandidate() {\n  \
    \  solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local result\n \
    \ local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  local result\n  local digit\n  local result\n  local digit\n\
    \  local result\n  local digit\n  local result\n  local digit\n  local result\n\
    \  local digit\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $((N % 10))))\n    N=$((N\
    \ / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$((sum + $(echo $N % 2 | bc)))\n    N=$(echo\
    \ $N / 2)\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt9swt56m.sh: line 17: [: /: binary operator expected

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ result\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n   \
    \ local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local result\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local sum_string\n    local sum_string2\n    local sum_string3\n\
    \    local sum_string4\n    local sum_string5\n    local sum_string6\n    local\
    \ sum_string7\n    local sum_string8\n    local sum_string9\n    local sum_string10\n\
    \    local sum_string11\n    local sum_string12\n    local sum_string13\n    local\
    \ sum_string14\n    local sum_string15\n    local sum_string16\n    local sum_string17\n\
    \    local sum_string18\n    local sum_string19\n    local sum_string20\n    local\
    \ sum_string21\n    local sum_string22\n    local sum_string23\n    local sum_string24\n\
    \    local sum_string25\n    local sum_string26\n    local sum_string27\n    local\
    \ sum_string28\n    local sum_string29\n    local sum_string30\n    local sum_string31\n\
    \    local sum_string32\n    local sum_string33\n    local sum_string34\n    local\
    \ sum_string35\n    local sum_string36\n    local sum_string37\n    local sum_string38\n\
    \    local sum_string39\n    local sum_string40\n    local sum_string41\n    local\
    \ sum_string42\n    local sum_string43\n    local sum_string44\n    local sum_string45\n\
    \    local sum_string46\n    local sum_string47\n    local sum_string48\n    local\
    \ sum_string49\n    local sum_string50\n    local sum_string51\n    local sum_string52\n\
    \    local sum_string53\n    local sum_string54\n    local sum_string55\n    local\
    \ sum_string56\n    local sum_string57\n    local sum_string58\n    local sum_string59\n\
    \    local sum_string60\n    local sum_string61\n    local sum_string62\n    local\
    \ sum_string63\n    local sum_string64\n    local sum_string65\n    local sum_string66\n\
    \    local sum_string67\n    local sum_string68\n    local sum_string69\n    local\
    \ sum_string70\n    local sum_string71\n    local sum_string72\n    local sum_string73\n\
    \    local sum_string74\n    local sum_string75\n    local sum_string76\n    local\
    \ sum_string77\n    local sum_string78\n    local sum_string79\n    local sum_string80\n\
    \    local sum_string81\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sumOfDigits\n  local binaryNumber\n\n  binaryNumber=$(printf \"%b\" $N)\n  sumOfDigits=$(echo\
    \ $binaryNumber | wc -w)\n  sumOfDigits=$((sumOfDigits + 1))\n\n  for ((i=1; i<=$sumOfDigits;\
    \ i++)); do\n    digit=$(echo $binaryNumber | cut -d $i -f)\n    sum=$(echo $sum\
    \ + $digit)\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum2\n    local sum3\n    local sum4\n    local sum5\n    local sum6\n    local\
    \ sum7\n    local sum8\n    local sum9\n    local sum10\n    local sum11\n   \
    \ local sum12\n    local sum13\n    local sum14\n    local sum15\n    local sum16\n\
    \    local sum17\n    local sum18\n    local sum19\n    local sum20\n    local\
    \ sum21\n    local sum22\n    local sum23\n    local sum24\n    local sum25\n\
    \    local sum26\n    local sum27\n    local sum28\n    local sum29\n    local\
    \ sum30\n    local sum31\n    local sum32\n    local sum33\n    local sum34\n\
    \    local sum35\n    local sum36\n    local sum37\n    local sum38\n    local\
    \ sum39\n    local sum40\n    local sum41\n    local sum42\n    local sum43\n\
    \    local sum44\n    local sum45\n    local sum46\n    local sum47\n    local\
    \ sum48\n    local sum49\n    local sum50\n    local sum51\n    local sum52\n\
    \    local sum53\n    local sum54\n    local sum55\n    local sum56\n    local\
    \ sum57\n    local sum58\n    local sum59\n    local sum60\n    local sum61\n\
    \    local sum62\n    local sum63\n    local sum64\n    local sum65\n    local\
    \ sum66\n    local sum67\n    local sum68\n    local sum69\n    local sum70\n\
    \    local sum71\n    local sum72\n    local sum73\n    local sum74\n    local\
    \ sum75\n    local sum76\n    local sum77\n    local sum78\n    local sum79\n\
    \    local sum80\n    local sum81\n    local sum82\n    local sum83\n    local\
    \ sum84\n    local sum85\n    local sum86\n    local sum87\n    local sum88\n\
    \    local sum89\n    local sum90\n    local sum91\n    local sum92\n    local\
    \ sum93\n    local sum94\n    local sum95\n    local sum96\n    local sum97\n\
    \    local sum98\n    local sum99\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    while [ $N ]; do\n    \
    \    ((digits++))\n        ((sum+=N % 2))\n        ((N=N/2))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n\
    \    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\"\
    \ ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=27 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local sum1=0\n    local sum2=0\n    local sum3=0\n\
    \    local sum4=0\n    local sum5=0\n    local sum6=0\n    local sum7=0\n    local\
    \ sum8=0\n    local sum9=0\n    local sum10=0\n    local sum11=0\n    local sum12=0\n\
    \    local sum13=0\n    local sum14=0\n    local sum15=0\n    local sum16=0\n\
    \    local sum17=0\n    local sum18=0\n    local sum19=0\n    local sum20=0\n\
    \    local sum21=0\n    local sum22=0\n    local sum23=0\n    local sum24=0\n\
    \    local sum25=0\n    local sum26=0\n    local sum27=0\n    local sum28=0\n\
    \    local sum29=0\n    local sum30=0\n    local sum31=0\n    local sum32=0\n\
    \    local sum33=0\n    local sum34=0\n    local sum35=0\n    local sum36=0\n\
    \    local sum37=0\n    local sum38=0\n    local sum39=0\n    local sum40=0\n\
    \    local sum41=0\n    local sum42=0\n    local sum43=0\n    local sum44=0\n\
    \    local sum45=0\n    local sum46=0\n    local sum47=0\n    local sum48=0\n\
    \    local sum49=0\n    local sum50=0\n    local sum51=0\n    local sum52=0\n\
    \    local sum53=0\n    local sum54=0\n    local sum55=0\n    local sum56=0\n\
    \    local sum57=0\n    local sum58=0\n    local sum59=0\n    local sum60=0\n\
    \    local sum61=0\n    local sum62=0\n    local sum63=0\n    local sum64=0\n\
    \    local sum65=0\n    local sum66=0\n    local sum67=0\n    local sum68=0\n\
    \    local sum69=0\n    local sum70=0\n    local sum71=0\n    local sum72=0\n\
    \    local sum73=0\n    local sum74=0\n    local sum75=0\n    local sum76=0\n\
    \    local sum77=0\n    local sum78=0\n    local sum79=0\n    local sum80=0\n\
    \    local sum81=0\n    local sum82=0\n    local sum83=0\n    local sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]\n  do\n    sum=$((sum + $(echo $N % 2 | bc)))\n\
    \    N=$(echo $N / 2)\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe5ety_vg.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local m\n  local\
    \ n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local m\n  local n\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local m\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local digit\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n\
    \  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n\
    \  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n\
    \  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n\
    \  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local A\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n\
    \  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n\
    \  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n\
    \  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n\
    \  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n\
    \  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n\
    \  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n\
    \  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local C\n\
    \  local D\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ result\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n   \
    \ local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local digit\n    local\
    \ bin\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local digit\n  local i\n  local j\n\
    \  local result\n  local remainder\n  local remainder1\n  local remainder2\n \
    \ local remainder3\n  local remainder4\n  local remainder5\n  local remainder6\n\
    \  local remainder7\n  local remainder8\n  local remainder9\n  local remainder10\n\
    \  local remainder11\n  local remainder12\n  local remainder13\n  local remainder14\n\
    \  local remainder15\n  local remainder16\n  local remainder17\n  local remainder18\n\
    \  local remainder19\n  local remainder20\n  local remainder21\n  local remainder22\n\
    \  local remainder23\n  local remainder24\n  local remainder25\n  local remainder26\n\
    \  local remainder27\n  local remainder28\n  local remainder29\n  local remainder30\n\
    \  local remainder31\n  local remainder32\n  local remainder33\n  local remainder34\n\
    \  local remainder35\n  local remainder36\n  local remainder37\n  local remainder38\n\
    \  local remainder39\n  local remainder40\n  local remainder41\n  local remainder42\n\
    \  local remainder43\n  local remainder44\n  local remainder45\n  local remainder46\n\
    \  local remainder47\n  local remainder48\n  local remainder49\n  local remainder50\n\
    \  local remainder51\n  local remainder52\n  local remainder53\n  local remainder54\n\
    \  local remainder55\n  local remainder56\n  local remainder57\n  local remainder58\n\
    \  local remainder59\n  local remainder60\n  local remainder61\n  local remainder62\n\
    \  local remainder63\n  local remainder64\n  local remainder65\n  local remainder66\n\
    \  local remainder67\n  local remainder68\n  local remainder69\n  local remainder70\n\
    \  local remainder71\n  local remainder72\n  local remainder73\n  local remainder74\n\
    \  local remainder75\n  local remainder76\n  local remainder77\n  local remainder78\n\
    \  local remainder79\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=$(echo $N|awk '{print $1}')\n\
    \    local i=0\n    while [ $i -lt $digits ]; do\n        sum=$(($sum+$i))\n \
    \       i=$(($i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local binary\n    local\
    \ i\n    local j\n    local k\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    local D\n    local E\n    local F\n    local G\n    local\
    \ H\n    local I\n    local J\n    local K\n    local L\n    local M\n    local\
    \ N\n    local O\n    local P\n    local Q\n    local R\n    local S\n    local\
    \ T\n    local U\n    local V\n    local W\n    local X\n    local Y\n    local\
    \ Z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local A\n    local B\n    local C\n    local\
    \ D\n    local E\n    local F\n    local G\n    local H\n    local I\n    local\
    \ J\n    local K\n    local L\n    local M\n    local N\n    local O\n    local\
    \ P\n    local Q\n    local R\n    local S\n    local T\n    local U\n    local\
    \ V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local A\n    local B\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local sum1=0\n  local sum2=0\n  local sum3=0\n  local\
    \ sum4=0\n  local sum5=0\n  local sum6=0\n  local sum7=0\n  local sum8=0\n  local\
    \ sum9=0\n  local sum10=0\n  local sum11=0\n  local sum12=0\n  local sum13=0\n\
    \  local sum14=0\n  local sum15=0\n  local sum16=0\n  local sum17=0\n  local sum18=0\n\
    \  local sum19=0\n  local sum20=0\n  local sum21=0\n  local sum22=0\n  local sum23=0\n\
    \  local sum24=0\n  local sum25=0\n  local sum26=0\n  local sum27=0\n  local sum28=0\n\
    \  local sum29=0\n  local sum30=0\n  local sum31=0\n  local sum32=0\n  local sum33=0\n\
    \  local sum34=0\n  local sum35=0\n  local sum36=0\n  local sum37=0\n  local sum38=0\n\
    \  local sum39=0\n  local sum40=0\n  local sum41=0\n  local sum42=0\n  local sum43=0\n\
    \  local sum44=0\n  local sum45=0\n  local sum46=0\n  local sum47=0\n  local sum48=0\n\
    \  local sum49=0\n  local sum50=0\n  local sum51=0\n  local sum52=0\n  local sum53=0\n\
    \  local sum54=0\n  local sum55=0\n  local sum56=0\n  local sum57=0\n  local sum58=0\n\
    \  local sum59=0\n  local sum60=0\n  local sum61=0\n  local sum62=0\n  local sum63=0\n\
    \  local sum64=0\n  local sum65=0\n  local sum66=0\n  local sum67=0\n  local sum68=0\n\
    \  local sum69=0\n  local sum70=0\n  local sum71=0\n  local sum72=0\n  local sum73=0\n\
    \  local sum74=0\n  local sum75=0\n  local sum76=0\n  local sum77=0\n  local sum78=0\n\
    \  local sum79=0\n  local sum80=0\n  local sum81=0\n  local sum82=0\n  local sum83=0\n\
    \  local sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n  \
    \  local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(( $sum + $(( $N % 2 )) ))\n   \
    \ N=$(( $N / 2 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=$(echo \"$N\" | sed 's/\\(.\\\
    )/\\1 /g')\n    local i=0\n    while [ $i -lt $((${#digits}-1)) ]; do\n      \
    \  sum=$((sum + ${digits:$i:1}))\n        i=$((i + 1))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_o3jnytl.sh: line 20: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n  local\
    \ G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n  local\
    \ N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n  local\
    \ U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local C\n  local\
    \ D\n  local E\n  local F\n  local G\n  local H\n  local I\n  local J\n  local\
    \ K\n  local L\n  local M\n  local N\n  local O\n  local P\n  local Q\n  local\
    \ R\n  local S\n  local T\n  local U\n  local V\n  local W\n  local X\n  local\
    \ Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ A\n  local B\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $((N % 2)) | bc)))\n\
    \    N=$((N / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local\
    \ sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n\
    \  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local\
    \ sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n\
    \  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local\
    \ sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n\
    \  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local\
    \ sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n\
    \  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local\
    \ sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n\
    \  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n  local\
    \ digit\n  local sum\n  local digit\n  local sum\n  local digit\n  local sum\n\
    \  local digit\n  local sum\n  local digit\n  local sum\n  local digit\n  \n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  for i in $(seq 0 $((N-1))); do\n    sum=$((sum\
    \ + $(echo $((N % 10)) | bc)))\n    N=$((N / 10))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local binary\n    local result\n    local sumOfDigits\n    local\
    \ digitsInBinary\n    local binaryString\n    local binaryStringLength\n    local\
    \ binaryStringLength2\n    local binaryStringLength3\n    local binaryStringLength4\n\
    \    local binaryStringLength5\n    local binaryStringLength6\n    local binaryStringLength7\n\
    \    local binaryStringLength8\n    local binaryStringLength9\n    local binaryStringLength10\n\
    \    local binaryStringLength11\n    local binaryStringLength12\n    local binaryStringLength13\n\
    \    local binaryStringLength14\n    local binaryStringLength15\n    local binaryStringLength16\n\
    \    local binaryStringLength17\n    local binaryStringLength18\n    local binaryStringLength19\n\
    \    local binaryStringLength20\n    local binaryStringLength21\n    local binaryStringLength22\n\
    \    local binaryStringLength23\n    local binaryStringLength24\n    local binaryStringLength25\n\
    \    local binaryStringLength26\n    local binaryStringLength27\n    local binaryStringLength28\n\
    \    local binaryStringLength29\n    local binaryStringLength30\n    local binaryStringLength31\n\
    \    local binaryStringLength32\n    local binaryStringLength33\n    local binaryStringLength34\n\
    \    local binaryStringLength35\n    local binaryStringLength36\n    local binaryStringLength37\n\
    \    local binaryStringLength38\n    local binaryStringLength39\n    local binaryStringLength40\n\
    \    local binaryStringLength41\n    local binaryStringLength42\n    local binaryStringLength43\n\
    \    local binaryStringLength44\n    local binaryStringLength45\n    local binaryStringLength46\n\
    \    local binaryStringLength47\n    local binaryStringLength48\n    local binaryStringLength49\n\
    \    local binaryStringLength50\n    local binaryStringLength51\n    local binaryStringLength52\n\
    \    local binaryStringLength53\n    local binaryStringLength54\n    local binaryStringLength55\n\
    \    local binaryStringLength56\n    local binaryStringLength57\n    local binaryStringLength58\n\
    \    local binaryStringLength59\n    local binaryStringLength60\n    local binaryStringLength61\n\
    \    local binaryStringLength62\n    local binaryStringLength63\n    local binaryStringLength64\n\
    \    local binaryStringLength65\n    local binaryStringLength\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local sum2=0\n    local sum3=0\n    local sum4=0\n\
    \    local sum5=0\n    local sum6=0\n    local sum7=0\n    local sum8=0\n    local\
    \ sum9=0\n    local sum10=0\n    local sum11=0\n    local sum12=0\n    local sum13=0\n\
    \    local sum14=0\n    local sum15=0\n    local sum16=0\n    local sum17=0\n\
    \    local sum18=0\n    local sum19=0\n    local sum20=0\n    local sum21=0\n\
    \    local sum22=0\n    local sum23=0\n    local sum24=0\n    local sum25=0\n\
    \    local sum26=0\n    local sum27=0\n    local sum28=0\n    local sum29=0\n\
    \    local sum30=0\n    local sum31=0\n    local sum32=0\n    local sum33=0\n\
    \    local sum34=0\n    local sum35=0\n    local sum36=0\n    local sum37=0\n\
    \    local sum38=0\n    local sum39=0\n    local sum40=0\n    local sum41=0\n\
    \    local sum42=0\n    local sum43=0\n    local sum44=0\n    local sum45=0\n\
    \    local sum46=0\n    local sum47=0\n    local sum48=0\n    local sum49=0\n\
    \    local sum50=0\n    local sum51=0\n    local sum52=0\n    local sum53=0\n\
    \    local sum54=0\n    local sum55=0\n    local sum56=0\n    local sum57=0\n\
    \    local sum58=0\n    local sum59=0\n    local sum60=0\n    local sum61=0\n\
    \    local sum62=0\n    local sum63=0\n    local sum64=0\n    local sum65=0\n\
    \    local sum66=0\n    local sum67=0\n    local sum68=0\n    local sum69=0\n\
    \    local sum70=0\n    local sum71=0\n    local sum72=0\n    local sum73=0\n\
    \    local sum74=0\n    local sum75=0\n    local sum76=0\n    local sum77=0\n\
    \    local sum78=0\n    local sum79=0\n    local sum80=0\n    local sum81=0\n\
    \    local sum82=0\n    local sum83=0\n    local sum84=0\n    local sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\./0&/')))\n\
    \    N=$((N - $(echo $N|bc|sed 's/^\\./0&/')))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n    local B\n    local C\n    local D\n\
    \    local E\n    local F\n    local G\n    local H\n    local I\n    local J\n\
    \    local K\n    local L\n    local M\n    local N\n    local O\n    local P\n\
    \    local Q\n    local R\n    local S\n    local T\n    local U\n    local V\n\
    \    local W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  for i in $(seq 0 $((N-1))); do\n    sum=$((sum\
    \ + $(echo $((N % 10)) | bc)))\n    N=$((N / 10))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|awk '{print\
    \ $1+$2}')))\n    N=$((N-1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025637
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sumOfDigits\n  local binary\n  local binaryString\n  local binaryStringLength\n\
    \  local binaryStringLength2\n  local binaryStringLength3\n  local binaryStringLength4\n\
    \  local binaryStringLength5\n  local binaryStringLength6\n  local binaryStringLength7\n\
    \  local binaryStringLength8\n  local binaryStringLength9\n  local binaryStringLength10\n\
    \  local binaryStringLength11\n  local binaryStringLength12\n  local binaryStringLength13\n\
    \  local binaryStringLength14\n  local binaryStringLength15\n  local binaryStringLength16\n\
    \  local binaryStringLength17\n  local binaryStringLength18\n  local binaryStringLength19\n\
    \  local binaryStringLength20\n  local binaryStringLength21\n  local binaryStringLength22\n\
    \  local binaryStringLength23\n  local binaryStringLength24\n  local binaryStringLength25\n\
    \  local binaryStringLength26\n  local binaryStringLength27\n  local binaryStringLength28\n\
    \  local binaryStringLength29\n  local binaryStringLength30\n  local binaryStringLength31\n\
    \  local binaryStringLength32\n  local binaryStringLength33\n  local binaryStringLength34\n\
    \  local binaryStringLength35\n  local binaryStringLength36\n  local binaryStringLength37\n\
    \  local binaryStringLength38\n  local binaryStringLength39\n  local binaryStringLength40\n\
    \  local binaryStringLength41\n  local binaryStringLength42\n  local binaryStringLength43\n\
    \  local binaryStringLength44\n  local binaryStringLength45\n  local binaryStringLength46\n\
    \  local binaryStringLength47\n  local binaryStringLength48\n  local binaryStringLength49\n\
    \  local binaryStringLength50\n  local binaryStringLength51\n  local binaryStringLength52\n\
    \  local binaryStringLength53\n  local binaryStringLength54\n  local binaryStringLength55\n\
    \  local binaryStringLength56\n  local binaryStringLength57\n  local binaryStringLength58\n\
    \  local binaryStringLength59\n  local binaryStringLength60\n  local binaryStringLength61\n\
    \  local binaryStringLength62\n  local binaryStringLength63\n  local binaryStringLength64\n\
    \  local binaryStringLength65\n  local binaryStringLength66\n  local binaryStringLength67\n\
    \  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local result\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^0*//')))\n\
    \    N=$((N / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjm37_o6i.sh: line 18: sum + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n \
    \ local digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local\
    \ digit\n  local digit\n  local digit\n  local digit\n  local digit\n  local digit\n\
    \  local digit\n  local digit\n  local digit\n  \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local result\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$(( 10#$sum + $N % 2 ))\n    N=$(( $N /\
    \ 2 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )$/\\1/'|bc|sed 's/^0*//')))\n    N=$((N-1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025637
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ binary\n  local sumOfBinary\n  local sumOfBinaryDigit\n  local sumOfBinaryDigit2\n\
    \  local sumOfBinaryDigit3\n  local sumOfBinaryDigit4\n  local sumOfBinaryDigit5\n\
    \  local sumOfBinaryDigit6\n  local sumOfBinaryDigit7\n  local sumOfBinaryDigit8\n\
    \  local sumOfBinaryDigit9\n  local sumOfBinaryDigit10\n  local sumOfBinaryDigit11\n\
    \  local sumOfBinaryDigit12\n  local sumOfBinaryDigit13\n  local sumOfBinaryDigit14\n\
    \  local sumOfBinaryDigit15\n  local sumOfBinaryDigit16\n  local sumOfBinaryDigit17\n\
    \  local sumOfBinaryDigit18\n  local sumOfBinaryDigit19\n  local sumOfBinaryDigit20\n\
    \  local sumOfBinaryDigit21\n  local sumOfBinaryDigit22\n  local sumOfBinaryDigit23\n\
    \  local sumOfBinaryDigit24\n  local sumOfBinaryDigit25\n  local sumOfBinaryDigit26\n\
    \  local sumOfBinaryDigit27\n  local sumOfBinaryDigit28\n  local sumOfBinaryDigit29\n\
    \  local sumOfBinaryDigit30\n  local sumOfBinaryDigit31\n  local sumOfBinaryDigit32\n\
    \  local sumOfBinaryDigit33\n  local sumOfBinaryDigit34\n  local sumOfBinaryDigit35\n\
    \  local sumOfBinaryDigit36\n  local sumOfBinaryDigit37\n  local sumOfBinaryDigit38\n\
    \  local sumOfBinaryDigit39\n  local sumOfBinaryDigit40\n  local sumOfBinaryDigit41\n\
    \  local sumOfBinaryDigit42\n  local sumOfBinaryDigit43\n  local sumOfBinaryDigit44\n\
    \  local sumOfBinaryDigit45\n  local sumOfBinaryDigit46\n  local sumOfBinaryDigit47\n\
    \  local sumOfBinaryDigit48\n  local sumOfBinaryDigit49\n  local sumOfBinaryDigit50\n\
    \  local sumOfBinaryDigit51\n  local sumOfBinaryDigit52\n  local sumOfBinaryDigit53\n\
    \  local sumOfBinaryDigit54\n  local sumOfBinaryDigit55\n  local sumOfBinaryDigit56\n\
    \  local sumOfBinaryDigit57\n  local sumOfBinaryDigit58\n  local sumOfBinaryDigit59\n\
    \  local sumOf\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )$/\\1/')))\n    N=$((N - $(echo $N|bc|sed 's/^\\([0-9]*\\)$/\\1/')))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local binary=\n  local i=0\n\n  while\
    \ [ $i -lt $N ]; do\n    digits=$(( ${N}%2 ))\n    sum=$(( ${sum}+digits ))\n\
    \    binary=$(( ${binary}+1 ))\n    N=$(( ${N}/2 ))\n    i=$(( ${i}+1 ))\n  done\n\
    \n  echo \"$binary\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local i\n  local sumstr\n  local sumstrlen\n  local sumstrlen2\n\
    \  local sumstrlen3\n  local sumstrlen4\n  local sumstrlen5\n  local sumstrlen6\n\
    \  local sumstrlen7\n  local sumstrlen8\n  local sumstrlen9\n  local sumstrlen10\n\
    \  local sumstrlen11\n  local sumstrlen12\n  local sumstrlen13\n  local sumstrlen14\n\
    \  local sumstrlen15\n  local sumstrlen16\n  local sumstrlen17\n  local sumstrlen18\n\
    \  local sumstrlen19\n  local sumstrlen20\n  local sumstrlen21\n  local sumstrlen22\n\
    \  local sumstrlen23\n  local sumstrlen24\n  local sumstrlen25\n  local sumstrlen26\n\
    \  local sumstrlen27\n  local sumstrlen28\n  local sumstrlen29\n  local sumstrlen30\n\
    \  local sumstrlen31\n  local sumstrlen32\n  local sumstrlen33\n  local sumstrlen34\n\
    \  local sumstrlen35\n  local sumstrlen36\n  local sumstrlen37\n  local sumstrlen38\n\
    \  local sumstrlen39\n  local sumstrlen40\n  local sumstrlen41\n  local sumstrlen42\n\
    \  local sumstrlen43\n  local sumstrlen44\n  local sumstrlen45\n  local sumstrlen46\n\
    \  local sumstrlen47\n  local sumstrlen48\n  local sumstrlen49\n  local sumstrlen50\n\
    \  local sumstrlen51\n  local sumstrlen52\n  local sumstrlen53\n  local sumstrlen54\n\
    \  local sumstrlen55\n  local sumstrlen56\n  local sumstrlen57\n  local sumstrlen58\n\
    \  local sumstrlen59\n  local sumstrlen60\n  local sumstrlen61\n  local sumstrlen62\n\
    \  local sumstrlen63\n  local sumstrlen64\n  local sumstrlen65\n  local sumstrlen66\n\
    \  local sumstrlen67\n  local sumstrlen68\n  local sumstrlen69\n  local sumstrlen70\n\
    \  local sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=$(echo \"$N\" | sed 's/\\(.\\\
    )/\\1 /g')\n    local i\n    for (( i=1; i<=9; i++ )); do\n        sum=$(( sum\
    \ + $( echo \"$digits\" | sed \"s/$i//g\" ) ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeqndfgd7.sh: line 20: sum +  0 0 0  : syntax error in expression
    (error token is "0 0  ")

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ result\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n   \
    \ local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N % 2 | bc)))\n \
    \   N=$(echo $N / 2)\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5b8wzacl.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ result\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n\
    \  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local sum1=0\n  local sum2=0\n  local sum3=0\n  local\
    \ sum4=0\n  local sum5=0\n  local sum6=0\n  local sum7=0\n  local sum8=0\n  local\
    \ sum9=0\n  local sum10=0\n  local sum11=0\n  local sum12=0\n  local sum13=0\n\
    \  local sum14=0\n  local sum15=0\n  local sum16=0\n  local sum17=0\n  local sum18=0\n\
    \  local sum19=0\n  local sum20=0\n  local sum21=0\n  local sum22=0\n  local sum23=0\n\
    \  local sum24=0\n  local sum25=0\n  local sum26=0\n  local sum27=0\n  local sum28=0\n\
    \  local sum29=0\n  local sum30=0\n  local sum31=0\n  local sum32=0\n  local sum33=0\n\
    \  local sum34=0\n  local sum35=0\n  local sum36=0\n  local sum37=0\n  local sum38=0\n\
    \  local sum39=0\n  local sum40=0\n  local sum41=0\n  local sum42=0\n  local sum43=0\n\
    \  local sum44=0\n  local sum45=0\n  local sum46=0\n  local sum47=0\n  local sum48=0\n\
    \  local sum49=0\n  local sum50=0\n  local sum51=0\n  local sum52=0\n  local sum53=0\n\
    \  local sum54=0\n  local sum55=0\n  local sum56=0\n  local sum57=0\n  local sum58=0\n\
    \  local sum59=0\n  local sum60=0\n  local sum61=0\n  local sum62=0\n  local sum63=0\n\
    \  local sum64=0\n  local sum65=0\n  local sum66=0\n  local sum67=0\n  local sum68=0\n\
    \  local sum69=0\n  local sum70=0\n  local sum71=0\n  local sum72=0\n  local sum73=0\n\
    \  local sum74=0\n  local sum75=0\n  local sum76=0\n  local sum77=0\n  local sum78=0\n\
    \  local sum79=0\n  local sum80=0\n  local sum81=0\n  local sum82=0\n  local sum83=0\n\
    \  local sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc)))\n    N=$((N\
    \ - $(echo $N|bc)))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local digit\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n\
    \  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n\
    \  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n\
    \  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n\
    \  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local A\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local digit\n    local\
    \ i\n    local j\n    local k\n    local result\n    local sum1\n    local sum2\n\
    \    local sum3\n    local sum4\n    local sum5\n    local sum6\n    local sum7\n\
    \    local sum8\n    local sum9\n    local sum10\n    local sum11\n    local sum12\n\
    \    local sum13\n    local sum14\n    local sum15\n    local sum16\n    local\
    \ sum17\n    local sum18\n    local sum19\n    local sum20\n    local sum21\n\
    \    local sum22\n    local sum23\n    local sum24\n    local sum25\n    local\
    \ sum26\n    local sum27\n    local sum28\n    local sum29\n    local sum30\n\
    \    local sum31\n    local sum32\n    local sum33\n    local sum34\n    local\
    \ sum35\n    local sum36\n    local sum37\n    local sum38\n    local sum39\n\
    \    local sum40\n    local sum41\n    local sum42\n    local sum43\n    local\
    \ sum44\n    local sum45\n    local sum46\n    local sum47\n    local sum48\n\
    \    local sum49\n    local sum50\n    local sum51\n    local sum52\n    local\
    \ sum53\n    local sum54\n    local sum55\n    local sum56\n    local sum57\n\
    \    local sum58\n    local sum59\n    local sum60\n    local sum61\n    local\
    \ sum62\n    local sum63\n    local sum64\n    local sum65\n    local sum66\n\
    \    local sum67\n    local sum68\n    local sum69\n    local sum70\n    local\
    \ sum71\n    local sum72\n    local sum73\n    local sum74\n    local sum75\n\
    \    local sum76\n    local sum77\n    local sum78\n    local sum79\n    local\
    \ sum80\n    local sum81\n    local sum82\n    local sum83\n    local sum84\n\
    \    local sum85\n    local sum86\n    local sum87\n    local sum88\n    local\
    \ sum89\n    local sum90\n    local sum91\n    local sum92\n    local sum93\n\
    \    local sum94\n    local sum95\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local binary=\"\"\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local result=\"\"\n  local i\n\n  for\
    \ i in {0..N}; do\n    digits=$(( ${N} % 2 ))\n    sum=$(( ${sum} + ${digits}\
    \ ))\n    N=$(( ${N} - ${digits} ))\n  done\n\n  result=$(( ${sum} ))\n  result=$((\
    \ ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} :\
    \ '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result}\
    \ > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n\
    \  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ?\
    \ ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$((\
    \ ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} :\
    \ '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result}\
    \ > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n\
    \  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ?\
    \ ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$((\
    \ ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} :\
    \ '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result}\
    \ > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ? ${result} : '0' ))\n\
    \  result=$(( ${result} > 9 ? ${result} : '0' ))\n  result=$(( ${result} > 9 ?\
    \ ${result} : '0' ))\n  result=$(( ${result} > 9 \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphvfp01o_.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmphvfp01o_.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  for i in $(seq 0 $((N-1))); do\n    sum=$((sum\
    \ + $(echo $((N % 2)) | bc)))\n    N=$((N / 2))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  for i in $(seq 0 $((N-1))); do\n    sum=$((sum\
    \ + $(echo $((N % 10)) | bc)))\n    N=$((N / 10))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025636
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local result\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ result\n    local temp\n    local digit\n    local sumOfDigits\n    local binary\n\
    \    local binaryString\n    local binaryStringLength\n    local binaryStringLength2\n\
    \    local binaryStringLength3\n    local binaryStringLength4\n    local binaryStringLength5\n\
    \    local binaryStringLength6\n    local binaryStringLength7\n    local binaryStringLength8\n\
    \    local binaryStringLength9\n    local binaryStringLength10\n    local binaryStringLength11\n\
    \    local binaryStringLength12\n    local binaryStringLength13\n    local binaryStringLength14\n\
    \    local binaryStringLength15\n    local binaryStringLength16\n    local binaryStringLength17\n\
    \    local binaryStringLength18\n    local binaryStringLength19\n    local binaryStringLength20\n\
    \    local binaryStringLength21\n    local binaryStringLength22\n    local binaryStringLength23\n\
    \    local binaryStringLength24\n    local binaryStringLength25\n    local binaryStringLength26\n\
    \    local binaryStringLength27\n    local binaryStringLength28\n    local binaryStringLength29\n\
    \    local binaryStringLength30\n    local binaryStringLength31\n    local binaryStringLength32\n\
    \    local binaryStringLength33\n    local binaryStringLength34\n    local binaryStringLength35\n\
    \    local binaryStringLength36\n    local binaryStringLength37\n    local binaryStringLength38\n\
    \    local binaryStringLength39\n    local binaryStringLength40\n    local binaryStringLength41\n\
    \    local binaryStringLength42\n    local binaryStringLength43\n    local binaryStringLength44\n\
    \    local binaryStringLength45\n    local binaryStringLength46\n    local binaryStringLength47\n\
    \    local binaryStringLength48\n    local binaryStringLength49\n    local binaryStringLength50\n\
    \    local binaryStringLength51\n    local binaryStringLength52\n    local binaryStringLength53\n\
    \    local binaryStringLength54\n    local binaryStringLength55\n    local binaryStringLength56\n\
    \    local binaryStringLength57\n    local binaryStringLength58\n    local binaryStringLength59\n\
    \    local binaryStringLength60\n    local binaryStringLength61\n    local binaryStringLength62\n\
    \    local binaryStringLength63\n    local binaryStringLength64\n    local binaryStringLength65\n\
    \    local binaryStringLength66\n\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local binary\n    local\
    \ result\n    local i\n    local j\n    local k\n    local m\n    local n\n  \
    \  local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local A\n    local B\n    local C\n    local D\n    local E\n    local F\n\
    \    local G\n    local H\n    local I\n    local J\n    local K\n    local L\n\
    \    local M\n    local N\n    local O\n    local P\n    local Q\n    local R\n\
    \    local S\n    local T\n    local U\n    local V\n    local W\n    local X\n\
    \    local Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local A\n    local B\n\
    \    local C\n    local D\n    local E\n    local F\n    local G\n    local H\n\
    \    local I\n    local J\n    local K\n    local L\n    local M\n    local N\n\
    \    local O\n    local P\n    local Q\n    local R\n    local S\n    local T\n\
    \    local U\n    local V\n    local W\n    local X\n    local Y\n    local Z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local A\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$(( $sum + $(echo $N|bc) ))\n    N=$(( $N\
    \ - $(echo $N|bc) ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n\
    \  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n  local I\n\
    \  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n  local P\n\
    \  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n  local W\n\
    \  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n\
    \  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n\
    \  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n\
    \  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n  local C\n\
    \  local D\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ result\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local sumString=\"\"\n\
    \    while [ $digits -lt $N ]; do\n        sum=$((sum + $(( 10#$(( N % $(( digits\
    \ )) )) % 2 ))))\n        digits=$(( digits + 1 ))\n        sumString=$(( sumString\
    \ + $(( 10#$(( sum % 2 )) )) ))\n    done\n    echo $sumString\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\"\
    ) = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"\
    147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf99h_6w0.sh: line 20: N % 0 : division by 0 (error token is "0
    ")

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ binary\n  local output\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n\
    \  local sum5\n  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local\
    \ sum10\n  local sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n\
    \  local sum16\n  local sum17\n  local sum18\n  local sum19\n  local sum20\n \
    \ local sum21\n  local sum22\n  local sum23\n  local sum24\n  local sum25\n  local\
    \ sum26\n  local sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n\
    \  local sum32\n  local sum33\n  local sum34\n  local sum35\n  local sum36\n \
    \ local sum37\n  local sum38\n  local sum39\n  local sum40\n  local sum41\n  local\
    \ sum42\n  local sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n\
    \  local sum48\n  local sum49\n  local sum50\n  local sum51\n  local sum52\n \
    \ local sum53\n  local sum54\n  local sum55\n  local sum56\n  local sum57\n  local\
    \ sum58\n  local sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n\
    \  local sum64\n  local sum65\n  local sum66\n  local sum67\n  local sum68\n \
    \ local sum69\n  local sum70\n  local sum71\n  local sum72\n  local sum73\n  local\
    \ sum74\n  local sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n\
    \  local sum80\n  local sum81\n  local sum82\n  local sum83\n  local sum84\n \
    \ local sum85\n  local sum86\n  local sum87\n  local sum88\n  local sum89\n  local\
    \ sum90\n  local sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n\
    \  local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n \
    \ local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  local sum\n  local digit\n  local bin\n  local sum\n  local digit\n\
    \  local bin\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digits=$(echo $(( 10#$n )) | bc)\n  local digit\n\
    \  local i\n  for i in $(seq 0 $(( ${#digits} -1 ))); do\n    digit=${digits:$i:1}\n\
    \    sum=$(( ${sum}+${digit} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n   \
    \ solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\"\
    \ ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") =\
    \ \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"\
    963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local remainder\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local\
    \ e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$(( sum + $(echo $N|bc) ))\n    N=$(( N\
    \ - $(echo $N|bc) ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]\n  do\n    sum=$(($sum + $N % 2))\n    N=$(($N\
    \ / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $((N % 2))))\n    N=$((N\
    \ / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local result\n  local i\n  local j\n \
    \ local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local binary\n    local i\n\
    \    local j\n    local k\n    local digit\n    local binary\n    local sum\n\
    \    local i\n    local j\n    local k\n    local digit\n    local binary\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local digit\n    local\
    \ binary\n    local sum\n    local i\n    local j\n    local k\n    local digit\n\
    \    local binary\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local binary\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local digit\n    local binary\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local digit\n    local binary\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local digit\n    local binary\n    local sum\n\
    \    local i\n    local j\n    local k\n    local digit\n    local binary\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local digit\n    local\
    \ binary\n    local sum\n    local i\n    local j\n    local k\n    local digit\n\
    \    local binary\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local binary\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local digit\n    local binary\n    local sum\n    local i\n    local\
    \ j\n    local k\n    local digit\n    local binary\n    local sum\n    local\
    \ i\n    local j\n    local k\n    local digit\n    local binary\n    local sum\n\
    \    local i\n    local j\n    local k\n    local digit\n    local binary\n  \
    \  local sum\n    local i\n    local j\n    local k\n    local digit\n    local\
    \ binary\n    local sum\n    local i\n    local j\n    local k\n    local digit\n\
    \    local binary\n    local sum\n    local i\n    local j\n    local k\n    local\
    \ digit\n    local binary\n    local sum\n    local i\n    local j\n    local\
    \ k\n    local digit\n    local binary\n    local sum\n    local i\n    local\
    \ j\n    local k\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    (( sum += ( $(( N % 2 )) )) ))\n    (( N /=\
    \ 2 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6vmm1flb.sh: line 18: syntax error near unexpected token `(''

    /tmp/tmp6vmm1flb.sh: line 18: `( sum += ( $(( N % 2 )) )) ''

    '
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local result\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local digit\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local A\n    local B\n    local C\n    local D\n    local\
    \ E\n    local F\n    local G\n    local H\n    local I\n    local J\n    local\
    \ K\n    local L\n    local M\n    local N\n    local O\n    local P\n    local\
    \ Q\n    local R\n    local S\n    local T\n    local U\n    local V\n    local\
    \ W\n    local X\n    local Y\n    local Z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ A\n    local B\n    local C\n    local D\n    local E\n    local F\n    local\
    \ G\n    local H\n    local I\n    local J\n    local K\n    local L\n    local\
    \ M\n    local N\n    local O\n    local P\n    local Q\n    local R\n    local\
    \ S\n    local T\n    local U\n    local V\n    local W\n    local X\n    local\
    \ Y\n    local Z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local A\n    local B\n    local\
    \ C\n    local D\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local sumString=\"\"\n\
    \    while [ $N -lt 10000 ]; do\n        digits=$(( ${N} % 10 ))\n        sum=$((\
    \ ${sum} + digits ))\n        sumString=$(( ${sumString} + ${digits} ))\n    \
    \    (( N /= 10 ))\n    done\n    echo $sumString\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=50 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result=\"\"\n   \
    \ local i\n    local j\n    local k\n    local m\n    local n\n    local p\n \
    \   local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local \n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n\
    \  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n\
    \  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n\
    \  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local result\n    local i\n\
    \    local j\n    local k\n    local m\n    local n\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local sumString=\"\"\n\
    \    while [ $digits -lt $N ]; do\n        digits=$(( ${N} / 10 ))\n        sum=$((\
    \ ${sum} + ${digits} ))\n        sumString=$(( ${sumString} + ${digits%2} ))\n\
    \    done\n    echo ${sumString}\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=62 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc)))\n    N=$((N\
    \ - $(echo $N|bc)))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local\
    \ g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local\
    \ b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n  \
    \  local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local bin\n    local i\n \
    \   local j\n    local k\n    local m\n    local n\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]\n  do\n    sum=$(( $sum + $(echo $N|bc) ))\n  \
    \  N=$(( $N - $(echo $N|bc) ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local l\n    local m\n    local n\n    local o\n    local p\n \
    \   local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )\\(.\\)\\([0-9]*\\).*$/\\1\\2/')));\n    N=$((N - $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )\\(.\\)\\([0-9]*\\).*$/\\1\\2/')));\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local result\n    local sum1\n    local sum2\n    local sum3\n\
    \    local sum4\n    local sum5\n    local sum6\n    local sum7\n    local sum8\n\
    \    local sum9\n    local sum10\n    local sum11\n    local sum12\n    local\
    \ sum13\n    local sum14\n    local sum15\n    local sum16\n    local sum17\n\
    \    local sum18\n    local sum19\n    local sum20\n    local sum21\n    local\
    \ sum22\n    local sum23\n    local sum24\n    local sum25\n    local sum26\n\
    \    local sum27\n    local sum28\n    local sum29\n    local sum30\n    local\
    \ sum31\n    local sum32\n    local sum33\n    local sum34\n    local sum35\n\
    \    local sum36\n    local sum37\n    local sum38\n    local sum39\n    local\
    \ sum40\n    local sum41\n    local sum42\n    local sum43\n    local sum44\n\
    \    local sum45\n    local sum46\n    local sum47\n    local sum48\n    local\
    \ sum49\n    local sum50\n    local sum51\n    local sum52\n    local sum53\n\
    \    local sum54\n    local sum55\n    local sum56\n    local sum57\n    local\
    \ sum58\n    local sum59\n    local sum60\n    local sum61\n    local sum62\n\
    \    local sum63\n    local sum64\n    local sum65\n    local sum66\n    local\
    \ sum67\n    local sum68\n    local sum69\n    local sum70\n    local sum71\n\
    \    local sum72\n    local sum73\n    local sum74\n    local sum75\n    local\
    \ sum76\n    local sum77\n    local sum78\n    local sum79\n    local sum80\n\
    \    local sum81\n    local sum82\n    local sum83\n    local sum84\n    local\
    \ sum85\n    local sum86\n    local sum87\n    local sum88\n    local sum89\n\
    \    local sum90\n    local sum91\n    local sum92\n    local sum93\n    local\
    \ sum94\n    local sum95\n    local sum96\n    \n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local i\n    local j\n   \
    \ local k\n    local m\n    local n\n    local o\n    local p\n    local q\n \
    \   local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local B\n    local C\n\
    \    local D\n    local E\n    local F\n    local G\n    local H\n    local I\n\
    \    local J\n    local K\n    local L\n    local M\n    local N\n    local O\n\
    \    local P\n    local Q\n    local R\n    local S\n    local T\n    local U\n\
    \    local V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ sum1\n    local sum2\n    local sum3\n    local sum4\n    local sum5\n    local\
    \ sum6\n    local sum7\n    local sum8\n    local sum9\n    local sum10\n    local\
    \ sum11\n    local sum12\n    local sum13\n    local sum14\n    local sum15\n\
    \    local sum16\n    local sum17\n    local sum18\n    local sum19\n    local\
    \ sum20\n    local sum21\n    local sum22\n    local sum23\n    local sum24\n\
    \    local sum25\n    local sum26\n    local sum27\n    local sum28\n    local\
    \ sum29\n    local sum30\n    local sum31\n    local sum32\n    local sum33\n\
    \    local sum34\n    local sum35\n    local sum36\n    local sum37\n    local\
    \ sum38\n    local sum39\n    local sum40\n    local sum41\n    local sum42\n\
    \    local sum43\n    local sum44\n    local sum45\n    local sum46\n    local\
    \ sum47\n    local sum48\n    local sum49\n    local sum50\n    local sum51\n\
    \    local sum52\n    local sum53\n    local sum54\n    local sum55\n    local\
    \ sum56\n    local sum57\n    local sum58\n    local sum59\n    local sum60\n\
    \    local sum61\n    local sum62\n    local sum63\n    local sum64\n    local\
    \ sum65\n    local sum66\n    local sum67\n    local sum68\n    local sum69\n\
    \    local sum70\n    local sum71\n    local sum72\n    local sum73\n    local\
    \ sum74\n    local sum75\n    local sum76\n    local sum77\n    local sum78\n\
    \    local sum79\n    local sum80\n    local sum81\n    local sum82\n    local\
    \ sum83\n    local sum84\n    local sum85\n    local sum86\n    local sum87\n\
    \    local sum88\n    local sum89\n    local sum90\n    local sum91\n    local\
    \ sum92\n    local sum93\n    local sum94\n    local sum95\n    local sum96\n\
    \    local sum97\n    local sum98\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$((sum + $N % 2))\n    N=$((N / 2))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local\
    \ i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local\
    \ o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local\
    \ u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local\
    \ a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local\
    \ g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digits=0\n  local digit\n  local result\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ result\n    local sum1\n    local sum2\n    local sum3\n    local sum4\n   \
    \ local sum5\n    local sum6\n    local sum7\n    local sum8\n    local sum9\n\
    \    local sum10\n    local sum11\n    local sum12\n    local sum13\n    local\
    \ sum14\n    local sum15\n    local sum16\n    local sum17\n    local sum18\n\
    \    local sum19\n    local sum20\n    local sum21\n    local sum22\n    local\
    \ sum23\n    local sum24\n    local sum25\n    local sum26\n    local sum27\n\
    \    local sum28\n    local sum29\n    local sum30\n    local sum31\n    local\
    \ sum32\n    local sum33\n    local sum34\n    local sum35\n    local sum36\n\
    \    local sum37\n    local sum38\n    local sum39\n    local sum40\n    local\
    \ sum41\n    local sum42\n    local sum43\n    local sum44\n    local sum45\n\
    \    local sum46\n    local sum47\n    local sum48\n    local sum49\n    local\
    \ sum50\n    local sum51\n    local sum52\n    local sum53\n    local sum54\n\
    \    local sum55\n    local sum56\n    local sum57\n    local sum58\n    local\
    \ sum59\n    local sum60\n    local sum61\n    local sum62\n    local sum63\n\
    \    local sum64\n    local sum65\n    local sum66\n    local sum67\n    local\
    \ sum68\n    local sum69\n    local sum70\n    local sum71\n    local sum72\n\
    \    local sum73\n    local sum74\n    local sum75\n    local sum76\n    local\
    \ sum77\n    local sum78\n    local sum79\n    local sum80\n    local sum81\n\
    \    local sum82\n    local sum83\n    local sum84\n    local sum85\n    local\
    \ sum86\n    local sum87\n    local sum88\n    local sum89\n    local sum90\n\
    \    local sum91\n    local sum92\n    local sum93\n    local sum94\n    local\
    \ sum95\n    local sum96\n    local sum97\n\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local A\n    local B\n    local C\n    local\
    \ D\n    local E\n    local F\n    local G\n    local H\n    local I\n    local\
    \ J\n    local K\n    local L\n    local M\n    local N\n    local O\n    local\
    \ P\n    local Q\n    local R\n    local S\n    local T\n    local U\n    local\
    \ V\n    local W\n    local X\n    local Y\n    local Z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local A\n    local B\n    local C\n    local D\n    local E\n    local\
    \ F\n    local G\n    local H\n    local I\n    local J\n    local K\n    local\
    \ L\n    local M\n    local N\n    local O\n    local P\n    local Q\n    local\
    \ R\n    local S\n    local T\n    local U\n    local V\n    local W\n    local\
    \ X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local A\n    local\
    \ B\n    local C\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
    \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
    \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
    \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
    \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
    \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
    \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
    \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
    \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
    \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
    \ b\n    local c\n    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digits=0\n    local result\n    local\
    \ i\n    local j\n    local k\n    local digit\n    local digitString\n    local\
    \ binaryString\n    local binaryStringLength\n    local binaryStringLength2\n\
    \    local binaryStringLength3\n    local binaryStringLength4\n    local binaryStringLength5\n\
    \    local binaryStringLength6\n    local binaryStringLength7\n    local binaryStringLength8\n\
    \    local binaryStringLength9\n    local binaryStringLength10\n    local binaryStringLength11\n\
    \    local binaryStringLength12\n    local binaryStringLength13\n    local binaryStringLength14\n\
    \    local binaryStringLength15\n    local binaryStringLength16\n    local binaryStringLength17\n\
    \    local binaryStringLength18\n    local binaryStringLength19\n    local binaryStringLength20\n\
    \    local binaryStringLength21\n    local binaryStringLength22\n    local binaryStringLength23\n\
    \    local binaryStringLength24\n    local binaryStringLength25\n    local binaryStringLength26\n\
    \    local binaryStringLength27\n    local binaryStringLength28\n    local binaryStringLength29\n\
    \    local binaryStringLength30\n    local binaryStringLength31\n    local binaryStringLength32\n\
    \    local binaryStringLength33\n    local binaryStringLength34\n    local binaryStringLength35\n\
    \    local binaryStringLength36\n    local binaryStringLength37\n    local binaryStringLength38\n\
    \    local binaryStringLength39\n    local binaryStringLength40\n    local binaryStringLength41\n\
    \    local binaryStringLength42\n    local binaryStringLength43\n    local binaryStringLength44\n\
    \    local binaryStringLength45\n    local binaryStringLength46\n    local binaryStringLength47\n\
    \    local binaryStringLength48\n    local binaryStringLength49\n    local binaryStringLength50\n\
    \    local binaryStringLength51\n    local binaryStringLength52\n    local binaryStringLength53\n\
    \    local binaryStringLength54\n    local binaryStringLength55\n    local binaryStringLength56\n\
    \    local binaryStringLength57\n    local binaryStringLength58\n    local binaryStringLength59\n\
    \    local binaryStringLength60\n    local binaryStringLength61\n    local binaryStringLength62\n\
    \    local binaryStringLength63\n    local binaryStringLength64\n    local binaryStringLength65\n\
    \    local binaryStringLength66\n    local binaryString\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"\
    1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\")\
    \ = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )$/\\1/'|bc|sed 's/^0*//')))\n    N=$((N - $(echo $N|bc|sed 's/^\\([0-9]*\\)$/\\\
    1/'|bc|sed 's/^0*//')))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n   \
    \ [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  local sum\n  local result\n  local digit\n  local j\n  local k\n  local\
    \ digit\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\"\
    \ ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") =\
    \ \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ n=$1\n  local sum=0\n  local digits=0\n  local i\n  local j\n  local k\n  local\
    \ digit\n  local sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n\
    \  local sum6\n  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local\
    \ sum11\n  local sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n\
    \  local sum17\n  local sum18\n  local sum19\n  local sum20\n  local sum21\n \
    \ local sum22\n  local sum23\n  local sum24\n  local sum25\n  local sum26\n  local\
    \ sum27\n  local sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n\
    \  local sum33\n  local sum34\n  local sum35\n  local sum36\n  local sum37\n \
    \ local sum38\n  local sum39\n  local sum40\n  local sum41\n  local sum42\n  local\
    \ sum43\n  local sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n\
    \  local sum49\n  local sum50\n  local sum51\n  local sum52\n  local sum53\n \
    \ local sum54\n  local sum55\n  local sum56\n  local sum57\n  local sum58\n  local\
    \ sum59\n  local sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n\
    \  local sum65\n  local sum66\n  local sum67\n  local sum68\n  local sum69\n \
    \ local sum70\n  local sum71\n  local sum72\n  local sum73\n  local sum74\n  local\
    \ sum75\n  local sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n\
    \  local sum81\n  local sum82\n  local sum83\n  local sum84\n  local sum85\n \
    \ local sum86\n  local sum87\n  local sum88\n  local sum89\n  local sum90\n  local\
    \ sum91\n  local sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$((sum + $(echo $N|bc|sed 's/^\\([0-9]*\\\
    )\\(.\\)\\([0-9]*\\).*$/\\1\\2/')));\n    N=$((N / 2))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=4 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ result\n  local digit\n  local count\n  local sum\n  local digit\n  local count\n\
    \  local sum\n  local digit\n  local count\n  local sum\n  local digit\n  local\
    \ count\n  local sum\n  local digit\n  local count\n  local sum\n  local digit\n\
    \  local count\n  local sum\n  local digit\n  local count\n  local sum\n  local\
    \ digit\n  local count\n  local sum\n  local digit\n  local count\n  local sum\n\
    \  local digit\n  local count\n  local sum\n  local digit\n  local count\n  local\
    \ sum\n  local digit\n  local count\n  local sum\n  local digit\n  local count\n\
    \  local sum\n  local digit\n  local count\n  local sum\n  local digit\n  local\
    \ count\n  local sum\n  local digit\n  local count\n  local sum\n  local digit\n\
    \  local count\n  local sum\n  local digit\n  local count\n  local sum\n  local\
    \ digit\n  local count\n  local sum\n  local digit\n  local count\n  local sum\n\
    \  local digit\n  local count\n  local sum\n  local digit\n  local count\n  local\
    \ sum\n  local digit\n  local count\n  local sum\n  local digit\n  local count\n\
    \  local sum\n  local digit\n  local count\n  local sum\n  local digit\n  local\
    \ count\n  local sum\n  local digit\n  local count\n  local sum\n  local digit\n\
    \  local count\n  local sum\n  local digit\n  local count\n  local sum\n  local\
    \ digit\n  local count\n  local sum\n  local digit\n  local count\n  local sum\n\
    \  local digit\n  local count\n  local sum\n  local digit\n  local count\n  local\
    \ sum\n  local digit\n  local count\n  local sum\n  local digit\n  local count\n\
    \  local sum\n  local digit\n  local count\n  local sum\n  local digit\n  local\
    \ count\n  local sum\n  local digit\n  local count\n  local sum\n  local digit\n\
    \  local count\n  local sum\n  local digit\n  local count\n  local sum\n  \n}\n\
    \ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local digit\n  local i\n  local j\n  local k\n  local\
    \ sum1\n  local sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n\
    \  local sum7\n  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local\
    \ sum12\n  local sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n\
    \  local sum18\n  local sum19\n  local sum20\n  local sum21\n  local sum22\n \
    \ local sum23\n  local sum24\n  local sum25\n  local sum26\n  local sum27\n  local\
    \ sum28\n  local sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n\
    \  local sum34\n  local sum35\n  local sum36\n  local sum37\n  local sum38\n \
    \ local sum39\n  local sum40\n  local sum41\n  local sum42\n  local sum43\n  local\
    \ sum44\n  local sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n\
    \  local sum50\n  local sum51\n  local sum52\n  local sum53\n  local sum54\n \
    \ local sum55\n  local sum56\n  local sum57\n  local sum58\n  local sum59\n  local\
    \ sum60\n  local sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n\
    \  local sum66\n  local sum67\n  local sum68\n  local sum69\n  local sum70\n \
    \ local sum71\n  local sum72\n  local sum73\n  local sum74\n  local sum75\n  local\
    \ sum76\n  local sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n\
    \  local sum82\n  local sum83\n  local sum84\n  local sum85\n  local sum86\n \
    \ local sum87\n  local sum88\n  local sum89\n  local sum90\n  local sum91\n  local\
    \ sum92\n  local sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n\
    \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local sum1\n  local\
    \ sum2\n  local sum3\n  local sum4\n  local sum5\n  local sum6\n  local sum7\n\
    \  local sum8\n  local sum9\n  local sum10\n  local sum11\n  local sum12\n  local\
    \ sum13\n  local sum14\n  local sum15\n  local sum16\n  local sum17\n  local sum18\n\
    \  local sum19\n  local sum20\n  local sum21\n  local sum22\n  local sum23\n \
    \ local sum24\n  local sum25\n  local sum26\n  local sum27\n  local sum28\n  local\
    \ sum29\n  local sum30\n  local sum31\n  local sum32\n  local sum33\n  local sum34\n\
    \  local sum35\n  local sum36\n  local sum37\n  local sum38\n  local sum39\n \
    \ local sum40\n  local sum41\n  local sum42\n  local sum43\n  local sum44\n  local\
    \ sum45\n  local sum46\n  local sum47\n  local sum48\n  local sum49\n  local sum50\n\
    \  local sum51\n  local sum52\n  local sum53\n  local sum54\n  local sum55\n \
    \ local sum56\n  local sum57\n  local sum58\n  local sum59\n  local sum60\n  local\
    \ sum61\n  local sum62\n  local sum63\n  local sum64\n  local sum65\n  local sum66\n\
    \  local sum67\n  local sum68\n  local sum69\n  local sum70\n  local sum71\n \
    \ local sum72\n  local sum73\n  local sum74\n  local sum75\n  local sum76\n  local\
    \ sum77\n  local sum78\n  local sum79\n  local sum80\n  local sum81\n  local sum82\n\
    \  local sum83\n  local sum84\n  local sum85\n  local sum86\n  local sum87\n \
    \ local sum88\n  local sum89\n  local sum90\n  local sum91\n  local sum92\n  local\
    \ sum93\n  local sum94\n  local sum95\n  local sum96\n  local sum97\n  local sum98\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate\
    \ \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate\
    \ \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -lt 10 ]; do\n    sum=$(($sum + $N % 2))\n    N=$(($N /\
    \ 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\"\
    ) = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n   \
    \ local N=$1\n    local sum=0\n    local digit\n    local binary\n    local i\n\
    \    local j\n    local k\n    local digits_sum\n    local binary_sum\n    local\
    \ binary_digit\n    local binary_digits_sum\n    local binary_digits_sum\n   \
    \ local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_digits_sum\n    local binary_digits_sum\n\
    \    local binary_digits_sum\n    local binary_\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n\
    \    [[ $(candidate \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\"\
    \ ]]\n    [[ $(candidate \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") =\
    \ \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025634
- exit_code: -1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N ]; do\n    sum=$((sum + $(echo $((N % 2)) | bc)))\n   \
    \ N=$((N / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=61 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=58 encoding='utf-8'>
  timestamp: 1660025638
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  N=$1\n\
    \  sum=0\n  while [ $N -gt 0 ]\n  do\n    sum=$((sum + $(echo $N % 2 | bc)))\n\
    \    N=$((N / 2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solve \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate\
    \ \"150\") = \"110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate\
    \ \"333\") = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025633
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive integer N, return the total sum of its\
    \ digits in binary.\n# Example\n# For N = 1000, the sum of digits will be 1 the\
    \ output should be \"1\".\n# For N = 150, the sum of digits will be 6 the output\
    \ should be \"110\".\n# For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n# Variables:\n# @N integer\n# Constraints: 0 \u2264 N \u2264 10000.\n\
    # Output:\n# a string of binary number\n#\n# $1 is an integer\nsolve() {\n  local\
    \ N=$1\n  local sum=0\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n\
    \  local B\n  local C\n  local D\n  local E\n  local F\n  local G\n  local H\n\
    \  local I\n  local J\n  local K\n  local L\n  local M\n  local N\n  local O\n\
    \  local P\n  local Q\n  local R\n  local S\n  local T\n  local U\n  local V\n\
    \  local W\n  local X\n  local Y\n  local Z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n\
    \  local F\n  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n\
    \  local M\n  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n\
    \  local T\n  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n\
    \  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n\
    \  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local A\n  local B\n\
    \  local C\n  \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1000\") = \"1\" ]]\n    [[ $(candidate \"150\") = \"\
    110\" ]]\n    [[ $(candidate \"147\") = \"1100\" ]]\n    [[ $(candidate \"333\"\
    ) = \"1001\" ]]\n    [[ $(candidate \"963\") = \"10010\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660025634

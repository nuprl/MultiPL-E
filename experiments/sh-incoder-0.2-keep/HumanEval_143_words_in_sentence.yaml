name: HumanEval_143_words_in_sentence
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# You are given a string representing a sentence,\n# the sentence\
  \ contains some words separated by a space,\n# and you have to return a string that\
  \ contains the words from the original sentence,\n# whose lengths are prime numbers,\n\
  # the order of the words in the new string should be the same as the original one.\n\
  # Example 1:\n# Input: sentence = \"This is a test\"\n# Output: \"is\"\n# Example\
  \ 2:\n# Input: sentence = \"lets go for swimming\"\n# Output: \"go for\"\n# Constraints:\n\
  # * 1 <= len(sentence) <= 100\n# * sentence contains only letters\n#\n# $1 is a\
  \ string\nwords_in_sentence() {\n"
tests: "}\n\ncandidate() {\n    words_in_sentence \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"This is a test\") = \"is\" ]]\n    [[ $(candidate \"lets\
  \ go for swimming\") = \"go for\" ]]\n    [[ $(candidate \"there is no place available\
  \ here\") = \"there is no place\" ]]\n    [[ $(candidate \"Hi I am Hussein\") =\
  \ \"Hi am Hussein\" ]]\n    [[ $(candidate \"go for it\") = \"go for it\" ]]\n \
  \   [[ $(candidate \"here\") = \"\" ]]\n    [[ $(candidate \"here is\") = \"is\"\
  \ ]]\n}\n\nrun_test"
completions: []
stop_tokens:
- "\n}"

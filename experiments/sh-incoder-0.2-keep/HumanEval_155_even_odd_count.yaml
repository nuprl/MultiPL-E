completions:
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [ $number -gt 0 ]; do\n        digit=$((number % 10))\n        if [ $digit -eq\
  \ 0 ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number / 10))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
  \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
  \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
  \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
  \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
  \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
  \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
  \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
  \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
  \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
  \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
  \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
  \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ i\n\n    for (( i = 1; i <= number; i++ )); do\n        digit=$(( number % 10\
  \ ))\n        if [ $digit -eq 0 ]; then\n            even=$(( even+1 ))\n      \
  \  else\n            odd=$(( odd+1 ))\n        fi\n        number=$(( number / 10\
  \ ))\n    done\n\n    echo -n \"even: \"\n    echo $even\n    echo -n \"odd: \"\n\
  \    echo $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local i\n\n    count=0\n    digit=$((number/10))\n    while [ $digit\
  \ -gt 0 ]; do\n        digit=$((digit/10))\n        ((count++))\n    done\n    digit=$((number%10))\n\
  \    while [ $digit -gt 0 ]; do\n        digit=$((digit/10))\n        ((odd++))\n\
  \    done\n    echo $((even+odd))"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [ $number -gt 0 ]; do\n        digit=$((number % 10))\n        if [ $digit -eq\
  \ 0 ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number / 10))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [[ $number -gt 0 ]]; do\n        digit=$((number%10))\n        if [[ $digit -eq\
  \ 0 ]]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n    while ((\
  \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 0 )) ;\
  \ then\n            even=$(( even+1 ))\n        fi\n        odd=$(( odd+1 ))\n \
  \       n=$(( n / 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        if [ $digit -eq\
  \ 0 ]; then\n            even=$(( even+1 ))\n        else\n            odd=$(( odd+1\
  \ ))\n        fi\n        number=$(( number / 10 ))\n    done\n    echo \"$even,\
  \ $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$((n/2))\n\
  \  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )) ; do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "  local number=$1\n  local even=0\n  local odd=0\n  while [ $number -gt 0 ]; do\n\
  \    (( even+=2 ))\n    (( odd+=1 ))\n    number=$(( $number/10 ))\n  done\n  echo\
  \ \"$even $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n\n  for i in $(seq 0 $((n-1)));\
  \ do\n    if [ $((n % 10)) -eq 0 ]; then\n      even=$((even+1))\n    else\n   \
  \   odd=$((odd+1))\n    fi\n  done\n  echo $((even+odd))"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n %\
  \ 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))"
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( number\
  \ > 0 )) ; do\n    digit=$(( number % 10 ))\n    if (( digit == 0 )) ; then\n  \
  \    even=$(( even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    number=$((\
  \ number / 10 ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    local digit=$((n%10))\n    if [ $((digit%2)) -eq 0 ]; then\n      even=$((even+digit))\n\
  \    else\n      odd=$((odd+digit))\n    fi\n    n=$((n/10))\n  done\n  echo \"\
  $even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n  while\
  \ (( n > 0 )) ; do\n    digit=$(( n % 10 ))\n    count=$(( count + 1 ))\n    if\
  \ [ \"$digit\" -eq 0 ]; then\n      even=$(( even + 1 ))\n    else\n      odd=$((\
  \ odd + 1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n\n  while (( n > 0\
  \ )) ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n    local i\n\
  \    local j\n\n    # Count even and odd digits\n    for (( i = 1; i <= n; i++ ));\
  \ do\n        digit=$(( n % 10 ))\n        if [ $(( n % 10 )) -eq 0 ]; then\n  \
  \          even=$(( even+1 ))\n        else\n            odd=$(( odd+1 ))\n    \
  \    fi\n        (( n = n / 10 ))\n    done\n\n    # Return tuple\n    echo \"$even,\
  \ $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [[ $number -gt 0 ]]; do\n        digit=$((number % 10))\n        if [[ $digit\
  \ -eq 0 ]]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number / 10))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        if [ $remainder -eq\
  \ 0 ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    (( n /= 10 ))\n  done\n  printf\
  \ \"(%d, %d)\\n\" \"$even\" \"$odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even=$((even+1))\n        ((n%2!=0)) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n\
  \  while (( number > 0 )) ; do\n    digit=$(( number % 10 ))\n    count=$(( count\
  \ + 1 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$(( even+1 ))\n    else\n\
  \      odd=$(( odd+1 ))\n    fi\n    number=$(( number / 10 ))\n  done\n  echo \"\
  $even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        if [ $remainder -eq\
  \ 0 ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local count=0\n    while\
  \ [ $n -gt 0 ]; do\n        (( n%10 == 0 )) && even=$((even+1))\n        (( n%10\
  \ != 0 )) && odd=$((odd+1))\n        count=$((count+1))\n        n=$((n-1))\n  \
  \  done\n    echo $((even+odd))\n    echo $((odd))\n    echo $((even))\n    echo\
  \ $((count))"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd=$(( odd + 1 ))\n        (( n % 2 )) && even=$(( even+1\
  \ ))\n        n=$(( n/2 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd=$((odd+1))\n        (( n % 2 )) && even=$((even+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 )) && odd=$((odd+1))\n        (( n % 2 )) && even=$((even+1))\n\
  \        n=$((n/2))\n    done\n    echo $even $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n\n    while\
  \ (( n > 0 )) ; do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 0 ))\
  \ ; then\n            even=$(( even+1 ))\n        else\n            odd=$(( odd+1\
  \ ))\n        fi\n        n=$(( n / 10 ))\n    done\n\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ));\
  \ do\n    digit=$(( n % 10 ))\n    if [ \"$digit\" -eq 0 ]; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( number\
  \ > 0 )) ; do\n    digit=$(( number % 10 ))\n    if (( digit == 0 )) ; then\n  \
  \    even=$(( even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    number=$((\
  \ number / 10 ))\n  done\n  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ i\n    local j\n    local k\n    local count\n    local even_count\n    local\
  \ odd_count\n    local digit\n    local number\n    local digit\n    local i\n \
  \   local j\n    local k\n    local count\n    local even_count\n    local odd_count\n\
  \    local digit\n    local number\n    local digit\n    local i\n    local j\n\
  \    local k\n    local count\n    local even_count\n    local odd_count\n    local\
  \ digit\n    local number\n    local digit\n    local i\n    local j\n    local\
  \ k\n    local count\n    local even_count\n    local odd_count\n    local digit\n\
  \    local number\n    local digit\n    local i\n    local j\n    local k\n    local\
  \ count\n    local even_count\n    local odd_count\n    local digit\n    local number\n\
  \    local digit\n    local i\n    local j\n    local k\n    local count\n    local\
  \ even_count\n    local odd_count\n    local digit\n    local number\n    local\
  \ digit\n    local i\n    local j\n    local k\n    local count\n    local even_count\n\
  \    local odd_count\n    local digit\n    local number\n    local digit\n    local\
  \ i\n    local j\n    local k\n    local count\n    local even_count\n    local\
  \ odd_count\n    local digit\n    local number\n    local digit\n    local i\n \
  \   local j\n    local k\n    local count\n    local even_count\n    local odd_count\n\
  \    local digit\n    local number\n    local digit\n    local i\n    local j\n\
  \    local k\n    local count\n    local even_count\n    local odd_count\n    local\
  \ digit\n    local number\n    local digit\n    local i\n    local j\n    local\
  \ k\n    local count\n    local even_count\n    local odd_count\n    local digit\n\
  \    local number\n    local digit\n    local i\n    local j\n    local k\n    local\
  \ count\n    local even_count\n    local odd_count\n    local digit\n    local number\n\
  \    local digit\n    local i\n    local j\n    local k\n    local count\n    local\
  \ even_count\n    local od"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((${#n}-1))\
  \ ); do\n    if [[ $((${n}%2)) -eq 0 ]]; then\n      even=$((even+1))\n    else\n\
  \      odd=$((odd+1))\n    fi\n  done\n  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [[ $number -gt 0 ]]; do\n        digit=$((number % 10))\n        if [[ $digit\
  \ -eq 0 ]]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number / 10))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )) ; do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ digitCount\n\n    while (( number > 0 ))\n    do\n        digitCount=$(( number\
  \ % 10 ))\n        digit=$(( number / 10 ))\n\n        if (( digitCount % 2 == 0\
  \ ))\n        then\n            even=$(( even+1 ))\n        else\n            odd=$((\
  \ odd+1 ))\n        fi\n\n        number=$(( digit*10 ))\n    done\n\n    echo $even,\
  \ $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [ $number -gt 0 ]; do\n        digit=$((number%10))\n        if [ $digit -eq 0\
  \ ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [[ $number -gt\
  \ 0 ]]; do\n        (( even+=( $(( $number % 10 )) )) ))\n        (( odd+=( $((\
  \ $number % 2 )) )) ))\n        number=$(( $number / 10 ))\n    done\n    echo \"\
  $even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++ || even++\n        n=$(( n / 10 ))\n    done\n   \
  \ echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 2 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  local i\n\n\
  \  for i in $(seq 0 $((${#number}-1))); do\n    digit=${number:$i:1}\n    if [[\
  \ $digit == 0 ]]; then\n      continue\n    fi\n    if [[ $digit == 2 ]]; then\n\
  \      even=$((even+1))\n    else\n      odd=$((odd+1))\n    fi\n  done\n  echo\
  \ \"$even $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )) ; do\n\
  \        (( n % 2 )) && odd++ || even++\n        n=$(( n / 10 ))\n    done\n   \
  \ echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n    while ((\
  \ n > 0 )); do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 0 )); then\n\
  \            even=$(( even+1 ))\n        fi\n        odd=$(( odd+1 ))\n        n=$((\
  \ n / 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 )) && odd=$((odd+1)) || even=$((even+1))\n        n=$((n-1))\n\
  \    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 != 0 )) && odd=$((odd+1))\n\
  \        n=$(( n / 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 2 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  echo\
  \ \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( number\
  \ > 0 )) ; do\n    digit=$(( number % 10 ))\n    even=$(( even * 10 ))\n    odd=$((\
  \ odd + digit ))\n    number=$(( number / 10 ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++ || even++\n        n=$(( n / 10 ))\n    done\n   \
  \ echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even=$((even+1))\n        ((n%2!=0)) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1)) || even=$((even+1))\n    n=$((n/2))\n  done\n  echo \"\
  $even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even=$((even+1))\n        ((n%2!=0)) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 )) && odd=$((odd+1))\n        (( n % 2 )) && even=$((even+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    if [ $((n % 10)) -eq 0 ]; then\n      even=$((even+1))\n    else\n   \
  \   odd=$((odd+1))\n    fi\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd=$((odd+1))\n    (( n % 2 )) && even=$((even+1))\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [[ $number -gt 0 ]]; do\n        digit=$((number%10))\n        (( even+=digit\
  \ ))\n        (( odd+=1 ))\n        number=$((number/10 ))\n    done\n    echo \"\
  $even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local\
  \ d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local\
  \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
  \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
  \ v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local\
  \ b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local\
  \ h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local\
  \ n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local\
  \ t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local\
  \ z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local\
  \ f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local\
  \ l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local\
  \ r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local\
  \ x\n    local y\n    local z\n"
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local digit=$(( $number % 10 ))\n        number=$(( $number /\
  \ 10 ))\n        if [ $digit -eq 0 ]; then\n            even=$(( $even+1 ))\n  \
  \      else\n            odd=$(( $odd+1 ))\n        fi\n    done\n    echo $even,\
  \ $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ i\n    local j\n    local k\n    local count\n    local count2\n    local count3\n\
  \    local count4\n    local count5\n    local count6\n    local count7\n    local\
  \ count8\n    local count9\n    local count10\n    local count11\n    local count12\n\
  \    local count13\n    local count14\n    local count15\n    local count16\n  \
  \  local count17\n    local count18\n    local count19\n    local count20\n    local\
  \ count21\n    local count22\n    local count23\n    local count24\n    local count25\n\
  \    local count26\n    local count27\n    local count28\n    local count29\n  \
  \  local count30\n    local count31\n    local count32\n    local count33\n    local\
  \ count34\n    local count35\n    local count36\n    local count37\n    local count38\n\
  \    local count39\n    local count40\n    local count41\n    local count42\n  \
  \  local count43\n    local count44\n    local count45\n    local count46\n    local\
  \ count47\n    local count48\n    local count49\n    local count50\n    local count51\n\
  \    local count52\n    local count53\n    local count54\n    local count55\n  \
  \  local count56\n    local count57\n    local count58\n    local count59\n    local\
  \ count60\n    local count61\n    local count62\n    local count63\n    local count64\n\
  \    local count65\n    local count66\n    local count67\n    local count68\n  \
  \  local count69\n    local count70\n    local count71\n    local count72\n    local\
  \ count73\n    local count74\n    local count75\n    local count76\n    local count77\n\
  \    local count78\n    local count79\n    local count80\n    local count81\n  \
  \  local count82\n    local count83\n    local count84\n    local count85\n    local\
  \ count86\n    local count87\n    local count88\n    local count89\n    local count90\n\
  \    local count91\n    local count92\n    local count93\n    local count94\n  \
  \  local count95\n    local count96\n    "
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ i\n    local j\n    local count\n    local remainder\n\n    count=0\n    digit=$((number/10))\n\
  \    while [ $digit -gt 0 ]; do\n        digit=$((digit/10))\n        ((count++))\n\
  \    done\n    digit=$((number%10))\n    while [ $digit -gt 0 ]; do\n        digit=$((digit/10))\n\
  \        ((odd++))\n    done\n    ((even+=count))\n    ((odd+=count))\n    ((even+=odd))\n\
  \    ((odd+=even))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=odd))\n  \
  \  ((odd+=even))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n   \
  \ ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n\
  \    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n  \
  \  ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n\
  \    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n  \
  \  ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n\
  \    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n  \
  \  ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n\
  \    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n  \
  \  ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n\
  \    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n  \
  \  ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n\
  \    ((odd+=odd))\n    ((even+=even))\n    ((odd+=odd))\n    ((even+=even))\n  \
  \  ((odd+=odd))\n    ((even+=even))\n    (("
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 2 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even=$((even+1))\n        ((n%2!=0)) && odd=$((odd+1))\n\
  \        ((n--))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local i\n\n    count=0\n    while [ $number -gt 0 ]; do\n        digit=$((number\
  \ % 10))\n        number=$((number / 10))\n        if [ $digit -eq 0 ]; then\n \
  \           even=$((even+1))\n        else\n            odd=$((odd+1))\n       \
  \ fi\n        count=$((count+1))\n    done\n    \n    echo $even\n    echo $odd\n\
  \    echo $count"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$(( n/2 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd=$(( odd+1 ))\n        (( n % 2 )) && even=$(( even+1\
  \ ))\n        n=$(( n/2 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++ || even++\n        n=$(( n / 10 ))\n    done\n   \
  \ echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  while [[ $number -gt 0 ]];\
  \ do\n    local remainder=$((number % 10))\n    local digit=$((number % 10))\n \
  \   if [[ $remainder -eq 0 ]]; then\n      even=$((even+1))\n      odd=$((odd+1))\n\
  \    elif [[ $digit -eq 0 ]]; then\n      even=$((even+1))\n    else\n      odd=$((odd+1))\n\
  \    fi\n    number=$((number/10))\n  done\n  echo \"$even $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  echo\
  \ \"$even $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n-1))\n    done\n    echo $((even+odd))"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -eq 0 ]; then\n     \
  \ even=$(( even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10\
  \ ))\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n    while ((\
  \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 0 )) ;\
  \ then\n            even=$(( even+1 ))\n        fi\n        odd=$(( odd+1 ))\n \
  \       n=$(( n/10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n%2 == 0 )) && even=$((even+1))\n        (( n%2 != 0 )) && odd=$((odd+1))\n\
  \        (( n-- ))\n    done\n    echo $((even+odd))"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++ || even++\n        n=$(( n / 10 ))\n    done\n   \
  \ echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( even++))\n        (( n-- ))\n    done\n    while [ $n -lt 0 ]; do\n\
  \        (( odd++))\n        (( n++ ))\n    done\n    echo \"$even $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    if [ $((n % 10)) -eq 0 ]; then\n      even=$((even+1))\n    else\n   \
  \   odd=$((odd+1))\n    fi\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n  local\
  \ i\n  for i in $(seq 0 $((n-1))); do\n    digit=$((n%10))\n    count=$((count+1))\n\
  \    if [ $((digit%2)) -eq 0 ]; then\n      even=$((even+1))\n    else\n      odd=$((odd+1))\n\
  \    fi\n    n=$((n/10))\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n  while\
  \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    count=$(( count + 1 ))\n    if ((\
  \ digit % 2 == 0 )); then\n      even=$(( even + 1 ))\n    else\n      odd=$(( odd\
  \ + 1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    if [ $((n % 10)) -eq 0 ]; then\n      even=$((even+1))\n    else\n   \
  \   odd=$((odd+1))\n    fi\n  done\n  echo \"$even $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( even+=n % 2 ))\n        (( odd+=n / 2 ))\n        n=$(( n / 10 ))\n\
  \    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((\
  \ ${#n} - 1 ))); do\n    local digit=${n:$i:1}\n    if [[ $digit == 0 ]]; then\n\
  \      continue\n    fi\n    if [[ $digit == 1 ]]; then\n      even=$((even+1))\n\
  \    else\n      odd=$((odd+1))\n    fi\n  done\n  echo \"$even $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        (( number /= 10\
  \ ))\n        if (( digit % 2 == 0 )); then\n            even=$(( even+1 ))\n  \
  \      else\n            odd=$(( odd+1 ))\n        fi\n    done\n    echo \"$even,\
  \ $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 )) && odd=$((odd+1)) || even=$((even+1))\n        n=$((n-1))\n\
  \    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local digit=$(( number % 10 ))\n        if [ $digit -eq 0 ];\
  \ then\n            even=$(( $even+1 ))\n        else\n            odd=$(( $odd+1\
  \ ))\n        fi\n        number=$(( $number/10 ))\n    done\n    echo $(( $even+$odd\
  \ ))"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local count=0\n  while (( n > 0\
  \ )); do\n    (( n % 2 )) && odd=$(( odd+1 ))\n    (( n % 2 )) && count=$(( count+1\
  \ ))\n    (( n = n / 2 ))\n  done\n  echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while [ $number\
  \ -gt 0 ]; do\n    digit=$((number % 10))\n    if [ $digit -eq 0 ]; then\n     \
  \ even=$((even+1))\n    else\n      odd=$((odd+1))\n    fi\n    number=$((number/10))\n\
  \  done\n  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ digitCount\n    local digitCountEven\n    local digitCountOdd\n    local digitCountEvenOdd\n\
  \    local digitCountEvenOddEven\n    local digitCountEvenOddOdd\n    local digitCountEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEven\n    local digitCountEvenOddEvenOddOdd\n\
  \    local digitCountEvenOddEvenOddEvenOdd\n    local digitCountEvenOddEvenOddEvenOddEven\n\
  \    local digitCountEvenOddEvenOddEvenOddOdd\n    local digitCountEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEven\n    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEven\n    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n    local\
  \ digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n    local\
  \ digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n  \
  \  local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOdd\n\
  \    local digitCountEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenOddEvenO"
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )) ; do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  printf\
  \ \"(%d, %d)\\n\" \"$even\" \"$odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ count\n    local remainder\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_count\n    local remainder_digit\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count\n    local remainder_digit\n\
  \    local remain"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  printf\
  \ \"(%d, %d)\\n\" \"$even\" \"$odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        (( number /= 10\
  \ ))\n        if (( digit % 2 == 0 )) ; then\n            even=$(( even+1 ))\n \
  \       else\n            odd=$(( odd+1 ))\n        fi\n    done\n    echo \"$even,\
  \ $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local digit\n    while ((\
  \ n > 0 )) ; do\n        digit=$(( n % 10 ))\n        if (( digit % 2 == 0 )) ;\
  \ then\n            even=$(( even+1 ))\n        else\n            odd=$(( odd+1\
  \ ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    (( n /= 10 ))\n  done\n  echo\
  \ \"$even $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )) ; do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    (( n = n / 2 ))\n  done\n  echo\
  \ \"$even $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( number\
  \ > 0 ))\n  do\n    digit=$(( number % 10 ))\n    if (( digit % 2 == 0 ))\n    then\n\
  \      even=$(( even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    number=$((\
  \ number / 10 ))\n  done\n  echo \"${even} ${odd}\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )); do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  echo\
  \ \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local count=0\n  while (( n > 0\
  \ )); do\n    (( n % 2 )) && odd++\n    (( n % 2 )) && count++\n    (( n % 2 ))\
  \ || even++\n    (( n % 2 )) || count++\n    (( n /= 10 ))\n  done\n  echo \"$even,\
  \ $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ i\n    local j\n    local k\n    local count\n    local even_count\n    local\
  \ odd_count\n    local remainder\n    local remainder_count\n    local remainder_digit\n\
  \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
  \ remainder_digit\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
  \    local remainder_digit\n    local remainder_i\n    local remainder_j\n    local\
  \ remainder_k\n    local remainder_digit\n    local remainder_i\n    local remainder_j\n\
  \    local remainder_k\n    local remainder_digit\n    local remainder_i\n    local\
  \ remainder_j\n    local remainder_k\n    local remainder_digit\n    local remainder_i\n\
  \    local remainder_j\n    local remainder_k\n    local remainder_digit\n    local\
  \ remainder_i\n    local remainder_j\n    local remainder_k\n    local remainder_digit\n\
  \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
  \ remainder_digit\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
  \    local remainder_digit\n    local remainder_i\n    local remainder_j\n    local\
  \ remainder_k\n    local remainder_digit\n    local remainder_i\n    local remainder_j\n\
  \    local remainder_k\n    local remainder_digit\n    local remainder_i\n    local\
  \ remainder_j\n    local remainder_k\n    local remainder_digit\n    local remainder_i\n\
  \    local remainder_j\n    local remainder_k\n    local remainder_digit\n    local\
  \ remainder_i\n    local remainder_j\n    local remainder_k\n    local remainder_digit\n\
  \    local remainder_i\n    local remainder_j\n    local remainder_k\n    local\
  \ remainder_digit\n    local remainder_i\n    local remainder_j\n    local remainder_k\n\
  \    local remainder_digit\n    local remainder_i\n    local remainder_j\n    local\
  \ remainder_k\n    local remainder_digit\n    local remainder_i\n    local remainder_j\n\
  \    local remainder_k\n    local remainder_digit\n    local remainder_i\n    local\
  \ remainder_j\n    local remainder_"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( even+=n % 2 ))\n        (( odd+=n / 2 ))\n        n=$(( n / 10 ))\n\
  \    done\n    echo \"$even $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        if [ $remainder -eq\
  \ 0 ]; then\n            even=$((even+1))\n        fi\n        odd=$((odd+1))\n\
  \        number=$((number/10))\n    done\n    echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( number\
  \ > 0 )); do\n    digit=$(( number % 10 ))\n    if (( digit == 0 )) ; then\n   \
  \   even=$(( even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    number=$((\
  \ number / 10 ))\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((${#n}-1))\
  \ ); do\n    local digit=${n:$i:1}\n    if [ $(( ${digit:0:1} % 2 )) -eq 0 ]; then\n\
  \      even=$((even+1))\n    else\n      odd=$((odd+1))\n    fi\n  done\n  echo\
  \ \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    if [ $((n % 10)) -eq 0 ]; then\n      even=$((even+1))\n    else\n   \
  \   odd=$((odd+1))\n    fi\n  done\n  echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n  while\
  \ (( n > 0 )) ; do\n    digit=$(( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n \
  \   (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n\
  \ % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n\
  \    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    ((\
  \ n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10 ))\n    (( n % 10\
  \ ))\n    (( n % 10 ))\n    (("
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ [ $number -gt 0 ]; do\n        digit=$((number%10))\n        if [ $digit -eq 0\
  \ ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n%10 == 0 )) && even=$((even+1))\n        (( n%10 != 0 )) && odd=$((odd+1))\n\
  \        (( n-- ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        if (( digit %\
  \ 2 == 0 )) ; then\n            even=$(( even+1 ))\n        else\n            odd=$((\
  \ odd+1 ))\n        fi\n        number=$(( number / 10 ))\n    done\n    echo \"\
  $even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        if [ $remainder -eq\
  \ 0 ]; then\n            even=$((even+1))\n        fi\n        number=$((number\
  \ / 10))\n    done\n    while [ $number -gt 0 ]; do\n        local remainder=$((number\
  \ % 10))\n        if [ $remainder -eq 1 ]; then\n            odd=$((odd+1))\n  \
  \      fi\n        number=$((number / 10))\n    done\n    echo \"$even $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        (( n % 2 )) && odd=$((odd+1))\n        (( n % 2 )) && even=$((even+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        local even=$((even+remainder))\n\
  \        local odd=$((odd+1))\n        number=$((number / 10))\n    done\n    echo\
  \ $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number % 10))\n        local digit=$((number\
  \ / 10))\n        if [ $remainder -eq 0 ]; then\n            even=$((even+digit))\n\
  \        else\n            odd=$((odd+digit))\n        fi\n        number=$((number\
  \ / 10))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        if (( digit %\
  \ 2 == 0 )); then\n            even=$(( even+1 ))\n        else\n            odd=$((\
  \ odd+1 ))\n        fi\n        number=$(( number / 10 ))\n    done\n    echo \"\
  $even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even+=1 || even+=2\n        ((n%2!=0)) && odd+=1 || odd+=2\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((\
  \ ${#n} - 1 ))); do\n    local digit=${n:$i:1}\n    if [[ $digit -eq 0 ]]; then\n\
  \      continue\n    fi\n    (( even++ ))\n    (( odd++ ))\n  done\n  echo \"$even,\
  \ $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ digit2\n    local digit3\n    local digit4\n    local digit5\n    local digit6\n\
  \    local digit7\n    local digit8\n    local digit9\n    local digit10\n    local\
  \ digit11\n    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
  \    local digit16\n    local digit17\n    local digit18\n    local digit19\n  \
  \  local digit20\n    local digit21\n    local digit22\n    local digit23\n    local\
  \ digit24\n    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
  \    local digit29\n    local digit30\n    local digit31\n    local digit32\n  \
  \  local digit33\n    local digit34\n    local digit35\n    local digit36\n    local\
  \ digit37\n    local digit38\n    local digit39\n    local digit40\n    local digit41\n\
  \    local digit42\n    local digit43\n    local digit44\n    local digit45\n  \
  \  local digit46\n    local digit47\n    local digit48\n    local digit49\n    local\
  \ digit50\n    local digit51\n    local digit52\n    local digit53\n    local digit54\n\
  \    local digit55\n    local digit56\n    local digit57\n    local digit58\n  \
  \  local digit59\n    local digit60\n    local digit61\n    local digit62\n    local\
  \ digit63\n    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
  \    local digit68\n    local digit69\n    local digit70\n    local digit71\n  \
  \  local digit72\n    local digit73\n    local digit74\n    local digit75\n    local\
  \ digit76\n    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
  \    local digit81\n    local digit82\n    local digit83\n    local digit84\n  \
  \  local digit85\n    local digit86\n    local digit87\n    local digit88\n    local\
  \ digit89\n    local digit90\n    local digit91\n    local digit92\n    local digit93\n\
  \    local digit94\n    local digit95\n    local digit96\n    local digit97\n  \
  \  local digit98\n    local digit99\n    local "
- "    local n=$1\n    local even=0\n    local odd=0\n    while [ $n -gt 0 ]; do\n\
  \        ((n%2==0)) && even=$((even+1))\n        ((n%2!=0)) && odd=$((odd+1))\n\
  \        ((n>0)) && n=$((n/2))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    local i\n    local j\n \
  \   local count\n    local digit\n    local digit2\n    local digit3\n    local\
  \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
  \    local digit9\n    local digit10\n    local digit11\n    local digit12\n   \
  \ local digit13\n    local digit14\n    local digit15\n    local digit16\n    local\
  \ digit17\n    local digit18\n    local digit19\n    local digit20\n    local digit21\n\
  \    local digit22\n    local digit23\n    local digit24\n    local digit25\n  \
  \  local digit26\n    local digit27\n    local digit28\n    local digit29\n    local\
  \ digit30\n    local digit31\n    local digit32\n    local digit33\n    local digit34\n\
  \    local digit35\n    local digit36\n    local digit37\n    local digit38\n  \
  \  local digit39\n    local digit40\n    local digit41\n    local digit42\n    local\
  \ digit43\n    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
  \    local digit48\n    local digit49\n    local digit50\n    local digit51\n  \
  \  local digit52\n    local digit53\n    local digit54\n    local digit55\n    local\
  \ digit56\n    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
  \    local digit61\n    local digit62\n    local digit63\n    local digit64\n  \
  \  local digit65\n    local digit66\n    local digit67\n    local digit68\n    local\
  \ digit69\n    local digit70\n    local digit71\n    local digit72\n    local digit73\n\
  \    local digit74\n    local digit75\n    local digit76\n    local digit77\n  \
  \  local digit78\n    local digit79\n    local digit80\n    local digit81\n    local\
  \ digit82\n    local digit83\n    local digit84\n    local digit85\n    local digit86\n\
  \    local digit87\n    local digit88\n    local digit89\n    local digit90\n  \
  \  local digit91\n    local digit92\n    local digit93\n    local digit94\n    local\
  \ digit95\n    local digit96\n    local digit97\n"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$(( n / 10 ))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        local remainder=$((number%10))\n        if [ $remainder -eq 0\
  \ ]; then\n            even=$((even+1))\n        else\n            odd=$((odd+1))\n\
  \        fi\n        number=$((number/10))\n    done\n    echo $even, $odd"
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    local i\n    local j\n \
  \   local count\n    local digit\n    local digit2\n    local digit3\n    local\
  \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
  \    local digit9\n    local digit10\n    local digit11\n    local digit12\n   \
  \ local digit13\n    local digit14\n    local digit15\n    local digit16\n    local\
  \ digit17\n    local digit18\n    local digit19\n    local digit20\n    local digit21\n\
  \    local digit22\n    local digit23\n    local digit24\n    local digit25\n  \
  \  local digit26\n    local digit27\n    local digit28\n    local digit29\n    local\
  \ digit30\n    local digit31\n    local digit32\n    local digit33\n    local digit34\n\
  \    local digit35\n    local digit36\n    local digit37\n    local digit38\n  \
  \  local digit39\n    local digit40\n    local digit41\n    local digit42\n    local\
  \ digit43\n    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
  \    local digit48\n    local digit49\n    local digit50\n    local digit51\n  \
  \  local digit52\n    local digit53\n    local digit54\n    local digit55\n    local\
  \ digit56\n    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
  \    local digit61\n    local digit62\n    local digit63\n    local digit64\n  \
  \  local digit65\n    local digit66\n    local digit67\n    local digit68\n    local\
  \ digit69\n    local digit70\n    local digit71\n    local digit72\n    local digit73\n\
  \    local digit74\n    local digit75\n    local digit76\n    local digit77\n  \
  \  local digit78\n    local digit79\n    local digit80\n    local digit81\n    local\
  \ digit82\n    local digit83\n    local digit84\n    local digit85\n    local digit86\n\
  \    local digit87\n    local digit88\n    local digit89\n    local digit90\n  \
  \  local digit91\n    local digit92\n    local digit93\n    local digit94\n    local\
  \ digit95\n    local digit96\n    local digit97\n"
- "    local n=$1\n    local even=0\n    local odd=0\n    local i\n    local j\n \
  \   local count\n    local digit\n    local digit2\n    local digit3\n    local\
  \ digit4\n    local digit5\n    local digit6\n    local digit7\n    local digit8\n\
  \    local digit9\n    local digit10\n    local digit11\n    local digit12\n   \
  \ local digit13\n    local digit14\n    local digit15\n    local digit16\n    local\
  \ digit17\n    local digit18\n    local digit19\n    local digit20\n    local digit21\n\
  \    local digit22\n    local digit23\n    local digit24\n    local digit25\n  \
  \  local digit26\n    local digit27\n    local digit28\n    local digit29\n    local\
  \ digit30\n    local digit31\n    local digit32\n    local digit33\n    local digit34\n\
  \    local digit35\n    local digit36\n    local digit37\n    local digit38\n  \
  \  local digit39\n    local digit40\n    local digit41\n    local digit42\n    local\
  \ digit43\n    local digit44\n    local digit45\n    local digit46\n    local digit47\n\
  \    local digit48\n    local digit49\n    local digit50\n    local digit51\n  \
  \  local digit52\n    local digit53\n    local digit54\n    local digit55\n    local\
  \ digit56\n    local digit57\n    local digit58\n    local digit59\n    local digit60\n\
  \    local digit61\n    local digit62\n    local digit63\n    local digit64\n  \
  \  local digit65\n    local digit66\n    local digit67\n    local digit68\n    local\
  \ digit69\n    local digit70\n    local digit71\n    local digit72\n    local digit73\n\
  \    local digit74\n    local digit75\n    local digit76\n    local digit77\n  \
  \  local digit78\n    local digit79\n    local digit80\n    local digit81\n    local\
  \ digit82\n    local digit83\n    local digit84\n    local digit85\n    local digit86\n\
  \    local digit87\n    local digit88\n    local digit89\n    local digit90\n  \
  \  local digit91\n    local digit92\n    local digit93\n    local digit94\n    local\
  \ digit95\n    local digit96\n    local digit97\n"
- "  local n=$1\n  local even=0\n  local odd=0\n  local i\n  for i in $(seq 0 $((n-1)));\
  \ do\n    (( n % 2 == 0 )) && even=$((even+1))\n    (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \    n=$((n/2))\n  done\n  echo \"$even, $odd\""
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  local digit2\n\
  \  local digit3\n  local digit4\n  local digit5\n  local digit6\n  local digit7\n\
  \  local digit8\n  local digit9\n  local digit10\n  local digit11\n  local digit12\n\
  \  local digit13\n  local digit14\n  local digit15\n  local digit16\n  local digit17\n\
  \  local digit18\n  local digit19\n  local digit20\n  local digit21\n  local digit22\n\
  \  local digit23\n  local digit24\n  local digit25\n  local digit26\n  local digit27\n\
  \  local digit28\n  local digit29\n  local digit30\n  local digit31\n  local digit32\n\
  \  local digit33\n  local digit34\n  local digit35\n  local digit36\n  local digit37\n\
  \  local digit38\n  local digit39\n  local digit40\n  local digit41\n  local digit42\n\
  \  local digit43\n  local digit44\n  local digit45\n  local digit46\n  local digit47\n\
  \  local digit48\n  local digit49\n  local digit50\n  local digit51\n  local digit52\n\
  \  local digit53\n  local digit54\n  local digit55\n  local digit56\n  local digit57\n\
  \  local digit58\n  local digit59\n  local digit60\n  local digit61\n  local digit62\n\
  \  local digit63\n  local digit64\n  local digit65\n  local digit66\n  local digit67\n\
  \  local digit68\n  local digit69\n  local digit70\n  local digit71\n  local digit72\n\
  \  local digit73\n  local digit74\n  local digit75\n  local digit76\n  local digit77\n\
  \  local digit78\n  local digit79\n  local digit80\n  local digit81\n  local digit82\n\
  \  local digit83\n  local digit84\n  local digit85\n  local digit86\n  local digit87\n\
  \  local digit88\n  local digit89\n  local digit90\n  local digit91\n  local digit92\n\
  \  local digit93\n  local digit94\n  local digit95\n  local digit96\n  local digit97\n\
  \  local digit98\n  local digit99\n  local "
- "  local n=$1\n  local even=0\n  local odd=0\n  local digit\n  while (( n > 0 ))\
  \ ; do\n    digit=$(( n % 10 ))\n    if (( digit == 0 )) ; then\n      even=$((\
  \ even+1 ))\n    else\n      odd=$(( odd+1 ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
  \  echo \"$even $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    local\
  \ digit2\n    local digit3\n    local digit4\n    local digit5\n    local digit6\n\
  \    local digit7\n    local digit8\n    local digit9\n    local digit10\n    local\
  \ digit11\n    local digit12\n    local digit13\n    local digit14\n    local digit15\n\
  \    local digit16\n    local digit17\n    local digit18\n    local digit19\n  \
  \  local digit20\n    local digit21\n    local digit22\n    local digit23\n    local\
  \ digit24\n    local digit25\n    local digit26\n    local digit27\n    local digit28\n\
  \    local digit29\n    local digit30\n    local digit31\n    local digit32\n  \
  \  local digit33\n    local digit34\n    local digit35\n    local digit36\n    local\
  \ digit37\n    local digit38\n    local digit39\n    local digit40\n    local digit41\n\
  \    local digit42\n    local digit43\n    local digit44\n    local digit45\n  \
  \  local digit46\n    local digit47\n    local digit48\n    local digit49\n    local\
  \ digit50\n    local digit51\n    local digit52\n    local digit53\n    local digit54\n\
  \    local digit55\n    local digit56\n    local digit57\n    local digit58\n  \
  \  local digit59\n    local digit60\n    local digit61\n    local digit62\n    local\
  \ digit63\n    local digit64\n    local digit65\n    local digit66\n    local digit67\n\
  \    local digit68\n    local digit69\n    local digit70\n    local digit71\n  \
  \  local digit72\n    local digit73\n    local digit74\n    local digit75\n    local\
  \ digit76\n    local digit77\n    local digit78\n    local digit79\n    local digit80\n\
  \    local digit81\n    local digit82\n    local digit83\n    local digit84\n  \
  \  local digit85\n    local digit86\n    local digit87\n    local digit88\n    local\
  \ digit89\n    local digit90\n    local digit91\n    local digit92\n    local digit93\n\
  \    local digit94\n    local digit95\n    local digit96\n    local digit97\n  \
  \  local digit98\n    local digit99\n    local "
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        if (( digit %\
  \ 2 == 0 )); then\n            even=$(( even+1 ))\n        else\n            odd=$((\
  \ odd+1 ))\n        fi\n        number=$(( number / 10 ))\n    done\n    echo \"\
  $even, $odd\""
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )) ; do\n    (( n\
  \ % 2 )) && odd++\n    (( n % 2 )) && even++\n    n=$(( n / 10 ))\n  done\n  printf\
  \ \"(%d, %d)\\n\" $even $odd"
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n\
  \  local i\n\n  for i in $(seq 0 $((${#number}-1)) )\n  do\n    digit=${number:$i:1}\n\
  \    count=$((${digit}%2))\n    if [ $count -eq 0 ]; then\n      even=$((even+1))\n\
  \    else\n      odd=$((odd+1))\n    fi\n  done\n  echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local number=$1\n    local even=0\n    local odd=0\n    while [ $number -gt\
  \ 0 ]; do\n        (( even+=( $number % 2 ) ))\n        (( odd+=( $number % 2 )\
  \ ))\n        number=$(( $number / 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$(( n / 2 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo \"$even, $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n\n   \
  \ while (( $number > 0 )); do\n        digit=$(( $number % 10 ))\n        if [ $digit\
  \ -eq 0 ]; then\n            even=$(( $even+1 ))\n        else\n            odd=$((\
  \ $odd+1 ))\n        fi\n        number=$(( $number / 10 ))\n    done\n    \n  \
  \  return $( echo \"$even, $odd\" )"
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n\n   \
  \ while (( number > 0 )); do\n        digit=$(( number % 10 ))\n        if (( digit\
  \ % 2 == 0 )); then\n            even=$(( even+1 ))\n        else\n            odd=$((\
  \ odd+1 ))\n        fi\n        number=$(( number / 10 ))\n    done\n    echo \"\
  $even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 == 0 )) && even=$((even+1))\n        (( n % 2 == 1 )) && odd=$((odd+1))\n\
  \        n=$((n/2))\n    done\n    echo \"$even, $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd=$(( odd + 1 ))\n        (( n % 2 )) && even=$(( even+1\
  \ ))\n        n=$(( n/2 ))\n    done\n    echo $even $odd"
- "  local number=$1\n  local even=0\n  local odd=0\n  local digit\n  local count\n\
  \  local i\n  local j\n  local remainder\n  local remainder_count\n  local remainder_digit\n\
  \  local remainder_i\n  local remainder_j\n  local remainder_remainder\n  local\
  \ remainder_remainder_count\n  local remainder_remainder_digit\n  local remainder_remainder_i\n\
  \  local remainder_remainder_j\n  local remainder_remainder_remainder\n  local remainder_remainder_remainder_count\n\
  \  local remainder_remainder_remainder_digit\n  local remainder_remainder_remainder_i\n\
  \  local remainder_remainder_remainder_j\n  local remainder_remainder_remainder_remainder\n\
  \  local remainder_remainder_remainder_remainder_count\n  local remainder_remainder_remainder_remainder_digit\n\
  \  local remainder_remainder_remainder_remainder_i\n  local remainder_remainder_remainder_remainder_j\n\
  \  local remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_count\n\
  \  local remainder_remainder_remainder_remainder_remainder_digit\n  local remainder_remainder_remainder_remainder_remainder_i\n\
  \  local remainder_remainder_remainder_remainder_remainder_j\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
  \  local remainder_remainder_remainder_remainder_remainder_count\n  local remainder_remainder_remainder_remainder_remainder_digit\n\
  \  local remainder_remainder_remainder_remainder_remainder_i\n  local remainder_remainder_remainder_remainder_remainder_j\n\
  \  local remainder_remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_count\n\
  \  local remainder_remainder_remainder_remainder_remainder_digit\n  local remainder_remainder_remainder_remainder_remainder_i\n\
  \  local remainder_remainder_remainder_remainder_remainder_j\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
  \  local remainder_remainder_remainder_remainder_remainder_count\n  local remainder_remainder_remainder_remainder_remainder_digit\n\
  \  local remainder_remainder_remainder_remainder_remainder_i\n  local remainder_remainder_remainder_remainder_remainder_j\n\
  \  local remainder_remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remain"
- "  local number=$1\n  local even=0\n  local odd=0\n  while (( number > 0 )); do\n\
  \    (( number /= 10 ))\n    (( even++ ))\n    (( odd++ ))\n  done\n  echo \"$even,\
  \ $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    local i\n    local j\n \
  \   local digit\n    local count\n    local remainder\n    local remainder_count\n\
  \    local remainder_digit\n    local remainder_count2\n    local remainder_digit2\n\
  \    local remainder_count3\n    local remainder_digit3\n    local remainder_count4\n\
  \    local remainder_digit4\n    local remainder_count5\n    local remainder_digit5\n\
  \    local remainder_count6\n    local remainder_digit6\n    local remainder_count7\n\
  \    local remainder_digit7\n    local remainder_count8\n    local remainder_digit8\n\
  \    local remainder_count9\n    local remainder_digit9\n    local remainder_count10\n\
  \    local remainder_digit10\n    local remainder_count11\n    local remainder_digit11\n\
  \    local remainder_count12\n    local remainder_digit12\n    local remainder_count13\n\
  \    local remainder_digit13\n    local remainder_count14\n    local remainder_digit14\n\
  \    local remainder_count15\n    local remainder_digit15\n    local remainder_count16\n\
  \    local remainder_digit16\n    local remainder_count17\n    local remainder_digit17\n\
  \    local remainder_count18\n    local remainder_digit18\n    local remainder_count19\n\
  \    local remainder_digit19\n    local remainder_count20\n    local remainder_digit20\n\
  \    local remainder_count21\n    local remainder_digit21\n    local remainder_count22\n\
  \    local remainder_digit22\n    local remainder_count23\n    local remainder_digit23\n\
  \    local remainder_count24\n    local remainder_digit24\n    local remainder_count25\n\
  \    local remainder_digit25\n    local remainder_count26\n    local remainder_digit26\n\
  \    local remainder_count27\n    local remainder_digit27\n    local remainder_count28\n\
  \    local remainder_digit28\n    local remainder_count29\n    local remainder_digit29\n\
  \    local remainder_count30\n    local remainder_digit30\n    local remainder_count31\n\
  \    local remainder_digit31\n    local remainder_count32\n    local remainder_digit32\n\
  \    local remainder_count33\n    local remainder_digit33\n    local remainder_count34\n\
  \    local remainder_digit34\n    "
- "  local n=$1\n  local even=0\n  local odd=0\n  while (( n > 0 )) ; do\n    (( n\
  \ % 2 )) && odd++ || even++\n    n=$(( n / 10 ))\n  done\n  echo \"$even $odd\""
- "    local number=$1\n    local even=0\n    local odd=0\n    local digit\n    while\
  \ (( number > 0 )); do\n        digit=$(( number % 10 ))\n        (( number /= 10\
  \ ))\n        if (( digit % 2 == 0 )); then\n            even=$(( even+1 ))\n  \
  \      else\n            odd=$(( odd+1 ))\n        fi\n    done\n    echo \"$even,\
  \ $odd\""
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
- "    local n=$1\n    local even=0\n    local odd=0\n    while (( n > 0 )); do\n\
  \        (( n % 2 )) && odd++\n        (( n % 2 )) && even++\n        n=$(( n /\
  \ 10 ))\n    done\n    echo $even, $odd"
language: sh
name: HumanEval_155_even_odd_count
prompt: '#!/bin/bash

  # Given an integer. return a tuple that has the number of even and odd digits respectively.

  # Example:

  # even_odd_count(-12) ==> (1, 1)

  # even_odd_count(123) ==> (1, 2)

  #

  # $1 is an integer

  even_odd_count() {

  '
stop_tokens:
- '

  }'
tests: "}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
  \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
  3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\"\
  ) = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
  \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"

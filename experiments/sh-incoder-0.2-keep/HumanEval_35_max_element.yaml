name: HumanEval_35_max_element
language: humaneval_to_bash.py
prompt: "#!/bin/bash\n# Return maximum element in the list.\n# >>> max_element([1,\
  \ 2, 3])\n# 3\n# >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\n\
  #\n# $1 is a space-separated list\nmax_element() {\n"
tests: "}\n\ncandidate() {\n    max_element \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 3\") = \"3\" ]]\n    [[ $(candidate \"5 3 -5 2 -3 3 9 0\
  \ 124 1 -10\") = \"124\" ]]\n}\n\nrun_test"
completions: ["    local -n arr=$1\n    local max=$2\n    local i\n    local j\n \
    \   local tmp\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        tmp=${arr[i]}\n\
    \        for ((j=0; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt ${tmp}\
    \ ]]; then\n                tmp=${arr[j]}\n            fi\n        done\n    \
    \    if [[ ${max} -gt ${tmp} ]]; then\n            max=${tmp}\n        fi\n  \
    \  done\n    echo \"${max}\"", "    local list=\"$1\"\n    local max=0\n    local\
    \ i\n    for (( i=0; i<${#list}; i++ )); do\n        if [[ ${list[i]} -gt ${max}\
    \ ]]; then\n            max=${list[i]}\n        fi\n    done\n    echo \"${max}\"",
  "    local -n arr=$1\n    local max=0\n    local i\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n\
    \        fi\n    done\n    echo \"$max\"", "    local elements=$1\n    local max=0\n\
    \    for element in ${elements[@]}; do\n        if [[ ${element} -gt ${max} ]];\
    \ then\n            max=${element}\n        fi\n    done\n    echo \"${max}\"",
  "    local -n arr=$1\n    local max=$2\n    local i\n    local -a tmp\n    for ((\
    \ i=1; i<${#arr[@]}; i++ )); do\n        tmp=( ${arr[i]} )\n        if (( ${#tmp[@]}\
    \ > max )); then\n            max=${#tmp[@]}\n        fi\n    done\n    echo \"\
    ${max}\"", "    local -n arr=$1\n    local max=$2\n    local i\n    local tmp\n\
    \n    for i in \"${arr[@]}\"; do\n        if [ \"$max\" -gt \"$i\" ]; then\n \
    \           max=$i\n        fi\n    done\n\n    echo \"$max\"", "    local -n\
    \ arr=$1\n    local max=$2\n    local i\n    local j\n    local len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++))\n    do\n        j=$((i+1))\n        if (( ${arr[i]}\
    \ > ${arr[j]} ))\n        then\n            max=${arr[i]}\n        fi\n    done\n\
    \    echo \"$max\"", "  local list=\"$1\"\n  local max=\"$2\"\n  local i\n  local\
    \ element\n  local length\n\n  length=${#list}\n  for i in $(seq 0 $((length -\
    \ 1))); do\n    element=${list:$i:1}\n    if [[ $element -gt $max ]]; then\n \
    \     max=$element\n    fi\n  done\n  echo $max", "    local -n list=$1\n    local\
    \ max=${list[0]}\n    for element in \"${list[@]:1}\"; do\n        if [[ $element\
    \ -gt $max ]]; then\n            max=$element\n        fi\n    done\n    echo\
    \ \"$max\"", "    local list=\"$1\"\n    local max=\"$2\"\n    local i\n    local\
    \ j\n    for (( i=0; i<${#list}; i++ )); do\n        if [[ ${list[i]} -gt ${max}\
    \ ]]; then\n            max=${list[i]}\n        fi\n    done\n    echo \"$max\"",
  "    local elements=$1\n    local max=0\n    local i\n    local j\n    for ((i=0;\
    \ i<${#elements[@]}; i++)); do\n        if [[ ${elements[$i]} -gt ${max} ]]; then\n\
    \            max=${elements[$i]}\n        fi\n    done\n    echo \"${max}\"",
  "    local -n arr=$1\n    local max=$2\n    local i\n    local tmp\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        tmp=${arr[i]}\n        if [[ $tmp > $max ]];\
    \ then\n            max=${tmp}\n        fi\n    done\n    echo \"$max\"", "  local\
    \ list=\"$1\"\n  local max=\"${list[0]}\"\n  for element in \"${list[@]:1}\";\
    \ do\n    [[ $element -gt $max ]] && max=\"$element\"\n  done\n  echo \"$max\"",
  "    local list=\"$1\"\n    local max=\"${list[0]}\"\n    for (( i=1; i<${#list};\
    \ i++ )); do\n        [[ ${list[i]} -gt ${max} ]] && max=\"${list[i]}\"\n    done\n\
    \    echo \"${max}\"", "    local -n arr=$1\n    local max=$2\n    local -a tmp\n\
    \    local -n max=$max\n    local -n i=$((${#arr[@]} - 1))\n    local -n j=$((${#arr[@]}\
    \ - 1))\n    while (( i <= j )); do\n        tmp=${arr[i]}\n        (( i++ ))\n\
    \        if (( tmp > max )); then\n            max=tmp\n        fi\n    done\n\
    \    echo ${max}", "    local -n arr=$1\n    local max=$2\n    local i\n    local\
    \ j\n    local tmp\n\n    for (( i = 0; i < ${#arr[@]}; i++ )); do\n        if\
    \ [[ ${arr[i]} -gt ${max} ]]; then\n            max=${arr[i]}\n        fi\n  \
    \  done\n\n    return ${max}", "    local -n list=$1\n    local max=$2\n    local\
    \ -a tmp\n    local -n maxe\n    local -n i\n    local -n len\n\n    len=${#list[@]}\n\
    \    maxe=${max}\n    for (( i=0; i<${len}; i++ )); do\n        tmp=${list[$i]}\n\
    \        if [[ ${tmp} -gt ${maxe} ]]; then\n            maxe=${tmp}\n        fi\n\
    \    done\n    echo \"${maxe}\"", "    local -n list=$1\n    local max=$2\n  \
    \  local -a tmp\n    local i\n    local j\n    local len\n\n    len=${#list[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        tmp=( ${list[$i]} )\n        j=0\n \
    \       while ((j<len)); do\n            if ((tmp[$j]>max)) ; then\n         \
    \       max=${tmp[$j]}\n            fi\n            j=$((j+1))\n        done\n\
    \    done\n    echo \"$max\"", "    local list=\"$1\"\n    local max=0\n    local\
    \ i\n    for (( i=0; i<${#list}; i++ )); do\n        if [[ ${list[i]} -gt ${max}\
    \ ]]; then\n            max=${list[i]}\n        fi\n    done\n    echo \"${max}\"",
  "    local -n arr=$1\n    local max=0\n    local -n maxidx=0\n    for (( idx=0;\
    \ idx<${#arr[@]}; idx++ )); do\n        if [[ ${arr[$idx]} == ${max} ]]; then\n\
    \            maxidx=$idx\n        fi\n    done\n    echo ${arr[$maxidx]}"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_2_truncate_number
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  local intPart\n  local intPart\n\
    \  local intPart\n  local intPart\n  local intPart\n  \n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local truncate_decimal\n \
    \   local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    decimal=$(echo \"$number\" | awk '{print $1*10}')\n\
    \    integer=$(echo \"$number\" | awk '{print $1}')\n    remainder=$(echo \"$number\"\
    \ | awk '{print $2}')\n    while [ \"$remainder\" -gt 0 ]; do\n        decimal=$((decimal+1))\n\
    \        remainder=$((remainder-1))\n    done\n    echo \"$decimal\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw_kgbryr.sh: line 19: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_part\n    local trunc_part_decimals\n\
    \    local trunc_part_decimals_str\n    local trunc_part_decimals_str_len\n  \
    \  local trunc_part_decimals_str_len2\n    local trunc_part_decimals_str_len3\n\
    \    local trunc_part_decimals_str_len4\n    local trunc_part_decimals_str_len5\n\
    \    local trunc_part_decimals_str_len6\n    local trunc_part_decimals_str_len7\n\
    \    local trunc_part_decimals_str_len8\n    local trunc_part_decimals_str_len9\n\
    \    local trunc_part_decimals_str_len10\n    local trunc_part_decimals_str_len11\n\
    \    local trunc_part_decimals_str_len12\n    local trunc_part_decimals_str_len13\n\
    \    local trunc_part_decimals_str_len14\n    local trunc_part_decimals_str_len15\n\
    \    local trunc_part_decimals_str_len16\n    local trunc_part_decimals_str_len17\n\
    \    local trunc_part_decimals_str_len18\n    local trunc_part_decimals_str_len19\n\
    \    local trunc_part_decimals_str_len20\n    local trunc_part_decimals_str_len21\n\
    \    local trunc_part_decimals_str_len22\n    local trunc_part_decimals_str_len23\n\
    \    local trunc_part_decimals_str_len24\n    local trunc_part_decimals_str_len25\n\
    \    local trunc_part_decimals_str_len26\n    local trunc_part_decimals_str_len27\n\
    \    local trunc_part_decimals_str_len28\n    local trunc_part_decimals_str_len29\n\
    \    local trunc_part_decimals_str_len30\n    local trunc_part_decimals_str_len31\n\
    \    local trunc_part_decimals_str_len32\n    local trunc_part_decimals_str_len33\n\
    \    local trunc_part_decimals_str_len34\n    local trunc_part_decimals_str_len35\n\
    \    local trunc_part_decimals_str_len36\n    local trunc_part_decimals_str_len37\n\
    \    local trunc_part_decimals_str_len38\n    local trunc_part_decimals_str_len39\n\
    \    local trunc_part_decimals_str_len40\n    local trunc_part_decimals_str_len41\n\
    \    local trunc_part_decimals_str_len42\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_index=0\n    local decimals_string_index2=0\n    local\
    \ decimals_string_index3=0\n    local decimals_string_index4=0\n    local decimals_string_index5=0\n\
    \    local decimals_string_index6=0\n    local decimals_string_index7=0\n    local\
    \ decimals_string_index8=0\n    local decimals_string_index9=0\n    local decimals_string_index10=0\n\
    \    local decimals_string_index11=0\n    local decimals_string_index12=0\n  \
    \  local decimals_string_index13=0\n    local decimals_string_index14=0\n    local\
    \ decimals_string_index15=0\n    local decimals_string_index16=0\n    local decimals_string_index17=0\n\
    \    local decimals_string_index18=0\n    local decimals_string_index19=0\n  \
    \  local decimals_string_index20=0\n    local decimals_string_index21=0\n    local\
    \ decimals_string_index22=0\n    local decimals_string_index23=0\n    local decimals_string_index24=0\n\
    \    local decimals_string_index25=0\n    local decimals_string_index26=0\n  \
    \  local decimals_string_index27=0\n    local decimals_string_index28=0\n    local\
    \ decimals_string_index29=0\n    local decimals_string_index30=0\n    local decimals_string_index31=0\n\
    \    local decimals_string_index32=0\n    local decimals_string_index33=0\n  \
    \  local decimals_string_index34=0\n    local decimals_string_index35=0\n    local\
    \ decimals_string_index36=0\n    local decimals_string_index37=0\n    local decimals_string_index38=0\n\
    \    local decimals_string_index39=0\n    local decimals_string_index40=0\n  \
    \  local decimals_string_index41=0\n    local decimals_string_index42=0\n    local\
    \ decimals_string_index43=0\n    local decimals_string_index44=0\n    local decimals_string_index45=0\n\
    \    local decimals_string_index46=0\n    local decimals_string_index47=0\n  \
    \  local decimals_string_index48=0\n    local decimals_string_index49=0\n    local\
    \ decimals_string_index50=0\n    local decimals_string_index51=0\n    local decimals_string_index52=0\n\
    \    local decimals_string_index53=0\n    local decimals_string_index54=0\n  \
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_int=0\n   \
    \ local decimals_frac=0\n    local decimals_frac_int=0\n    local decimals_frac_frac=0\n\
    \    local decimals_frac_frac_int=0\n    local decimals_frac_frac_frac=0\n   \
    \ local decimals_frac_frac_frac_int=0\n    local decimals_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_int=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_frac_frac_frac_frac_frac=0\n\
    \    local decimals_frac_frac_frac_frac_frac=0\n    local decimals_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  local integerPart\n  local decimalPart\n\
    \  local integerPart\n  local decimalPart\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_tmp\n  local integer_tmp\n  local remainder_tmp\n  decimals_tmp=$(echo\
    \ \"$number\" | awk '{print $1/10}')\n  integer_tmp=$(echo \"$number\" | awk '{print\
    \ $1/10}')\n  remainder_tmp=$(echo \"$number\" | awk '{print $1 % 10}')\n  decimals=$((decimals_tmp))\n\
    \  integer=$((integer_tmp))\n  remainder=$((remainder_tmp))\n  echo \"$decimals\"\
    \n  echo \"$integer\"\n  echo \"$remainder\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmper3tasrf.sh: line 21: 0.35: syntax error: invalid arithmetic operator
    (error token is ".35")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local r\n    local e\n\
    \    local f\n    local g\n    local h\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local A\n    local B\n    local C\n    local D\n    local E\n\
    \    local F\n    local G\n    local H\n    local I\n    local J\n    local K\n\
    \    local L\n    local M\n    local N\n    local O\n    local P\n    local Q\n\
    \    local R\n    local S\n    local T\n    local U\n    local V\n    local W\n\
    \    local X\n    local Y\n    local Z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local A\n\
    \    local B\n    local C\n    local D\n    local E\n    local F\n    local G\n\
    \    local H\n    local I\n    local J\n    local K\n    local L\n    local M\n\
    \    local N\n    local O\n    local P\n    local Q\n    local R\n    local S\n\
    \    local T\n    local U\n    local V\n    local W\n    local X\n    local Y\n\
    \    local Z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_len=0\n  local decimals_string_length_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_in_decimals\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number_in_digits\n  local trunc_number_in_digits\n\
    \  local trunc_number_in_digits\n  local trunc_number\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  for i in $(seq 1 $((${#x}-1)));\
    \ do\n    local c=\"${x:$i:1}\"\n    if [[ $c -eq [0-9] ]]; then\n      d=$((d+1))\n\
    \    fi\n  done\n  echo \"$((${x:0:$((${#x}-1))}-$((d+1))))\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpicu34yom.sh: line 16: [[: .: syntax error: operand expected (error
    token is ".")

    /tmp/tmpicu34yom.sh: line 16: [[: [0-9]: syntax error: operand expected (error
    token is "[0-9]")

    /tmp/tmpicu34yom.sh: line 20: 3.-1: syntax error: invalid arithmetic operator
    (error token is ".-1")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder\n    local decimal\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPartRemainder\n  local integerPartRemainderRemainder\n\
    \  local decimalPartRemainder\n  local decimalPartRemainderRemainder\n  local\
    \ decimalPartRemainderRemainderRemainder\n  local decimalPartRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainder\n  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemain\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ integer=0\n  local integer_string=\"\"\n  local remainder=0\n  local remainder_string=\"\
    \"\n  local truncate_result=0\n  local truncate_result_string=\"\"\n\n  while\
    \ [[ $number -gt 0 ]]; do\n    integer=$(( $number / 10 ))\n    remainder=$((\
    \ $number % 10 ))\n    decimals=$(( $decimals + 1 ))\n    decimals_string=\"$decimals_string$remainder\"\
    \n    number=$(( $number - $integer * 10 ))\n    integer_string=\"$integer_string$integer\"\
    \n    remainder_string=\"$remainder_string$remainder\"\n  done\n\n  if [[ $decimals\
    \ -gt 0 ]]; then\n    truncate_result=$(( $decimals * 10 ))\n    truncate_result_string=\"\
    $truncate_result_string$truncate_result\"\n  fi\n\n  echo \"$truncate_result_string\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3zivb74x.sh: line 21: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_int trunc_number_dec\n  local trunc_number_dec_int\
    \ trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_dec_int\n  local trunc_number_dec_int\n\
    \  local trunc_number_dec_int\n  local trunc_number_\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local decimals_left_in_number=0\n    local decimals_left_in_number_left=0\n\
    \    local decimals_left_in_number_right=0\n    local decimals_left_in_number_right_left=0\n\
    \    local decimals_left_in_number_right_right=0\n    local decimals_left_in_number_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right=0\n    local decimals_left_in_number_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right=0\n    local decimals_left_in_number_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right=0\n    local\
    \ decimals_left_in_number_right_right_right_right_right_left=0\n    local decimals_left_in_number_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \    local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \    local decimals_left_in_number_right_right_right_\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimals\n    local decimal\n    local decimals\n\
    \    local decimal\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local intPart\n    local intPartPart\n    local intPartDecimals\n    local\
    \ intPartDecimal\n    local intPartDecimalPart\n    local intPartDecimalPartPart\n\
    \    local intPartDecimalsPart\n    local intPartDecimalsPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimalsPartPartPart\n    local intPartDecimalsPartPartPart\n\
    \    local intPartDecimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_string=\"\"\n  local truncate_number\n  local truncate_number_index\n\
    \  local truncate_number_index2\n  local truncate_number_index3\n  local truncate_number_index4\n\
    \  local truncate_number_index5\n  local truncate_number_index6\n  local truncate_number_index7\n\
    \  local truncate_number_index8\n  local truncate_number_index9\n  local truncate_number_index10\n\
    \  local truncate_number_index11\n  local truncate_number_index12\n  local truncate_number_index13\n\
    \  local truncate_number_index14\n  local truncate_number_index15\n  local truncate_number_index16\n\
    \  local truncate_number_index17\n  local truncate_number_index18\n  local truncate_number_index19\n\
    \  local truncate_number_index20\n  local truncate_number_index21\n  local truncate_number_index22\n\
    \  local truncate_number_index23\n  local truncate_number_index24\n  local truncate_number_index25\n\
    \  local truncate_number_index26\n  local truncate_number_index27\n  local truncate_number_index28\n\
    \  local truncate_number_index29\n  local truncate_number_index30\n  local truncate_number_index31\n\
    \  local truncate_number_index32\n  local truncate_number_index33\n  local truncate_number_index34\n\
    \  local truncate_number_index35\n  local truncate_number_index36\n  local truncate_number_index37\n\
    \  local truncate_number_index38\n  local truncate_number_index39\n  local truncate_number_index40\n\
    \  local truncate_number_index41\n  local truncate_number_index42\n  local truncate_number_index43\n\
    \  local truncate_number_index44\n  local truncate_number_index45\n  local truncate_number_index46\n\
    \  local truncate_number_index47\n  local truncate_number_index48\n  local truncate_number_index49\n\
    \  local truncate_number_index50\n  local truncate_number_index51\n  local truncate_number_index52\n\
    \  local truncate_number_index53\n  local truncate_number_index54\n  local truncate_number_index55\n\
    \  local truncate_number_index56\n  local truncate_number_index57\n  local truncate_number_index58\n\
    \  local truncate_number_index59\n  local truncate_number_index60\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_int trunc_number_dec\n  local trunc_number_dec_int trunc_number_dec_int\n\
    \  local trunc_number_dec_float\n\n  decimal=$(echo \"$number\" | awk '{printf\
    \ \"%.1f\", $1}')\n  trunc_number=$(( number - decimal ))\n\n  trunc_number_int=$((\
    \ trunc_number ))\n  trunc_number_dec=$(( trunc_number % 1 ))\n\n  trunc_number_dec_int=$((\
    \ trunc_number_dec ))\n  trunc_number_dec_float=$(( trunc_number_dec % 1 ))\n\n\
    \  echo \"$trunc_number_dec_float\"\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5c6nlmgh.sh: line 20: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local truncate_decimals=0\n    local truncate_decimals_string=\"\"\n   \
    \ local truncate_decimals_string2=\"\"\n    local truncate_decimals_string3=\"\
    \"\n    local truncate_decimals_string4=\"\"\n    local truncate_decimals_string5=\"\
    \"\n    local truncate_decimals_string6=\"\"\n    local truncate_decimals_string7=\"\
    \"\n    local truncate_decimals_string8=\"\"\n    local truncate_decimals_string9=\"\
    \"\n    local truncate_decimals_string10=\"\"\n    local truncate_decimals_string11=\"\
    \"\n    local truncate_decimals_string12=\"\"\n    local truncate_decimals_string13=\"\
    \"\n    local truncate_decimals_string14=\"\"\n    local truncate_decimals_string15=\"\
    \"\n    local truncate_decimals_string16=\"\"\n    local truncate_decimals_string17=\"\
    \"\n    local truncate_decimals_string18=\"\"\n    local truncate_decimals_string19=\"\
    \"\n    local truncate_decimals_string20=\"\"\n    local truncate_decimals_string21=\"\
    \"\n    local truncate_decimals_string22=\"\"\n    local truncate_decimals_string23=\"\
    \"\n    local truncate_decimals_string24=\"\"\n    local truncate_decimals_string25=\"\
    \"\n    local truncate_decimals_string26=\"\"\n    local truncate_decimals_string27=\"\
    \"\n    local truncate_decimals_string28=\"\"\n    local truncate_decimals_string29=\"\
    \"\n    local truncate_decimals_string30=\"\"\n    local truncate_decimals_string31=\"\
    \"\n    local truncate_decimals_string32=\"\"\n    local truncate_decimals_string33=\"\
    \"\n    local truncate_decimals_string34=\"\"\n    local truncate_decimals_string35=\"\
    \"\n    local truncate_decimals_string36=\"\"\n    local truncate_decimals_string37=\"\
    \"\n    local truncate_decimals_string38=\"\"\n    local truncate_decimals_string39=\"\
    \"\n    local truncate_decimals_string40=\"\"\n    local truncate_decimals_string41=\"\
    \"\n    local truncate_decimals_string42=\"\"\n    local truncate_decimals_string43=\"\
    \"\n    local truncate_decimals_string44=\"\"\n    local truncate_decimals_string45=\"\
    \"\n    local truncate_decimals_string46=\"\"\n    local truncate_decimals_string47=\"\
    \"\n    local truncate_decimals_string48=\"\"\n    local truncate_decimals_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_index2=0\n  local decimals_string_index3=0\n\
    \  local decimals_string_index4=0\n  local decimals_string_index5=0\n  local decimals_string_index6=0\n\
    \  local decimals_string_index7=0\n  local decimals_string_index8=0\n  local decimals_string_index9=0\n\
    \  local decimals_string_index10=0\n  local decimals_string_index11=0\n  local\
    \ decimals_string_index12=0\n  local decimals_string_index13=0\n  local decimals_string_index14=0\n\
    \  local decimals_string_index15=0\n  local decimals_string_index16=0\n  local\
    \ decimals_string_index17=0\n  local decimals_string_index18=0\n  local decimals_string_index19=0\n\
    \  local decimals_string_index20=0\n  local decimals_string_index21=0\n  local\
    \ decimals_string_index22=0\n  local decimals_string_index23=0\n  local decimals_string_index24=0\n\
    \  local decimals_string_index25=0\n  local decimals_string_index26=0\n  local\
    \ decimals_string_index27=0\n  local decimals_string_index28=0\n  local decimals_string_index29=0\n\
    \  local decimals_string_index30=0\n  local decimals_string_index31=0\n  local\
    \ decimals_string_index32=0\n  local decimals_string_index33=0\n  local decimals_string_index34=0\n\
    \  local decimals_string_index35=0\n  local decimals_string_index36=0\n  local\
    \ decimals_string_index37=0\n  local decimals_string_index38=0\n  local decimals_string_index39=0\n\
    \  local decimals_string_index40=0\n  local decimals_string_index41=0\n  local\
    \ decimals_string_index42=0\n  local decimals_string_index43=0\n  local decimals_string_index44=0\n\
    \  local decimals_string_index45=0\n  local decimals_string_index46=0\n  local\
    \ decimals_string_index47=0\n  local decimals_string_index48=0\n  local decimals_string_index49=0\n\
    \  local decimals_string_index50=0\n  local decimals_string_index51=0\n  local\
    \ decimals_string_index52=0\n  local decimals_string_index53=0\n  local decimals_string_index54=0\n\
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local truncate_decimal\n\
    \  local truncate_number\n  local truncate_number_in_place\n  local truncate_number_string\n\
    \  local truncate_number_string_with_places\n  local truncate_number_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places\n  local truncate_number_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places\n\
    \  local truncate_number_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string_with_places_string\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPartRemainder\n  local decimalPartRemainder\n\
    \  local decimalPartRemainderRemainder\n  local decimalPartRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainder\n  local decimalPartRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainder\n \
    \ local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemain\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    local truncate_result\n    local truncate_result1\n\
    \    local truncate_result2\n    local truncate_result3\n    local truncate_result4\n\
    \    local truncate_result5\n    local truncate_result6\n    local truncate_result7\n\
    \    local truncate_result8\n    local truncate_result9\n    local truncate_result10\n\
    \    local truncate_result11\n    local truncate_result12\n    local truncate_result13\n\
    \    local truncate_result14\n    local truncate_result15\n    local truncate_result16\n\
    \    local truncate_result17\n    local truncate_result18\n    local truncate_result19\n\
    \    local truncate_result20\n    local truncate_result21\n    local truncate_result22\n\
    \    local truncate_result23\n    local truncate_result24\n    local truncate_result25\n\
    \    local truncate_result26\n    local truncate_result27\n    local truncate_result28\n\
    \    local truncate_result29\n    local truncate_result30\n    local truncate_result31\n\
    \    local truncate_result32\n    local truncate_result33\n    local truncate_result34\n\
    \    local truncate_result35\n    local truncate_result36\n    local truncate_result37\n\
    \    local truncate_result38\n    local truncate_result39\n    local truncate_result40\n\
    \    local truncate_result41\n    local truncate_result42\n    local truncate_result43\n\
    \    local truncate_result44\n    local truncate_result45\n    local truncate_result46\n\
    \    local truncate_result47\n    local truncate_result48\n    local truncate_result49\n\
    \    local truncate_result50\n    local truncate_result51\n    local truncate_result52\n\
    \    local truncate_result53\n    local truncate_result54\n    local truncate_result55\n\
    \    local truncate_result56\n    local truncate_result57\n    local truncate_result58\n\
    \    local truncate_result59\n    local truncate_result60\n    local truncate_result61\n\
    \    local truncate_result62\n    local truncate_result63\n    local truncate_result64\n\
    \    local truncate_result65\n    local truncate_result66\n    local truncate_result67\n\
    \    local truncate_result68\n    local truncate_result\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local truncate_decimal\n  local truncate_decimals\n  local truncate_number\n\
    \  local truncate_numbers=()\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local \n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartLength\n    local decimalPartLength\n\
    \    local decimalPartLengthRemainder\n    local decimalPartRemainder\n    local\
    \ decimalPartRemainderLength\n    local decimalPartRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainder\n    local decimalPartRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderLength\n    local decimalPartRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderRemainder\n    local decimalPartRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal\n  while [ \"$number\" -gt 0 ]; do\n    decimal=$((10#$number\
    \ % 10))\n    decimals=$((decimals + 1))\n    integer=$((integer + decimal))\n\
    \    remainder=$((number % 1))\n    number=$((number / 1))\n  done\n  echo \"\
    $decimals\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzxc2ygde.sh: line 16: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartNumber\n  local decimalPartNumberLength\n  local decimalPartNumberLengthLength\n\
    \  local decimalPartNumberLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n  local decimalPartNumberLengthLengthLengthLengthLength\n\
    \  local decimalPartNumberLengthLengthLengthLengthLength\n\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_in_string\n  local trunc_number_string\n\
    \  local trunc_number_string_in_string\n  local trunc_number_string_in_int\n \
    \ local trunc_number_string_in_int_in_string\n  local trunc_number_string_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_string\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trun\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  for i in $(seq 1 $((${#x}-1)));\
    \ do\n    local d=$((${x}*10+$d))\n    local x=$((${x}*10-1))\n  done\n  echo\
    \ \"$d\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfl52vos3.sh: line 15: 3.5*10+0: syntax error: invalid arithmetic
    operator (error token is ".5*10+0")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local i\n    local d\n    local r\n    local i\n\
    \    local d\n    local r\n    local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_index\n\n  decimal=$(echo \"$number\" | awk '{printf \"\
    %f\\n\", $1}')\n  decimals=$(echo \"$decimal\" | awk '{printf \"%d\\n\", $1}')\n\
    \n  trunc_number=$(( number - decimal ))\n  trunc_number_index=$(echo \"$trunc_number\"\
    \ | awk '{printf \"%d\\n\", $1}')\n\n  echo \"$trunc_number\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdvdmj8p2.sh: line 20: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartNumber\n  local decimalPartNumberString\n  local decimalPartNumberStringLength\n\
    \  local decimalPartNumberStringLengthMinusOne\n  local decimalPartNumberStringLengthMinusOneString\n\
    \  local decimalPartNumberStringLengthMinusOneStringLength\n  local decimalPartNumberStringLengthMinusOneStringLengthMinusOne\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneString\n  local\
    \ decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLength\n  local\
    \ decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOne\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneString\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneString\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLength\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOne\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneString\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLength\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOne\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneString\n\
    \  local decimalPartNumberStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneStringLengthMinusOneString\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimal=0\n\
    \  local trunc_number_in_int=0\n  local trunc_decimal_in_int=0\n  local trunc_number_in_float=0\n\
    \  local trunc_decimal_in_float=0\n  local trunc_number_in_float_in_int=0\n  local\
    \ trunc_decimal_in_float_in_int=0\n  local trunc_number_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_int=0\n\
    \  local trunc_decimal_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float_in_int=0\n  local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_decimal_in_float_in_float_in_float_in_float_in_float_in_int=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_decimal_in_float_in_float_in_float_in_float_in_float_in_float=0\n  local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_decimal_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \  local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_part=0\n  \
    \  local trunc_number=0\n\n    if [[ $number == *[!0-9]* ]]; then\n        echo\
    \ \"$number\" | awk '{print $1}'\n        return\n    fi\n\n    decimals=$(echo\
    \ \"$number\" | awk '{print NF}')\n    if [[ $decimals -gt 0 ]]; then\n      \
    \  decimals_part=$(echo \"$number\" | awk '{print $1; exit}')\n    fi\n\n    trunc_number=$((\
    \ number - decimals_part ))\n    trunc_number=$(( trunc_number * 10 ))\n    trunc_number=$((\
    \ trunc_number / 10 ))\n\n    if [[ $decimals -gt 0 ]]; then\n        trunc_number=$((\
    \ trunc_number + decimals ))\n    fi\n\n    echo \"$trunc_number\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local trunc_number_in_float\n  local trunc_number_in_int\n\
    \  local trunc_number_in_float\n  local trunc_number_in_int\n  local trunc_number_in_float\n\
    \  local trunc_number_in_int\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local r\n    local i\n    local d\n    local i\n\
    \    local r\n    local i\n    local d\n    local i\n    local r\n    local i\n\
    \    local d\n    local i\n    local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number=0\n    local trunc_number_string=\"\"\n    local trunc_number_string2=\"\
    \"\n    local trunc_number_string3=\"\"\n    local trunc_number_string4=\"\"\n\
    \    local trunc_number_string5=\"\"\n    local trunc_number_string6=\"\"\n  \
    \  local trunc_number_string7=\"\"\n    local trunc_number_string8=\"\"\n    local\
    \ trunc_number_string9=\"\"\n    local trunc_number_string10=\"\"\n    local trunc_number_string11=\"\
    \"\n    local trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\
    \n    local trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n\
    \    local trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n\
    \    local trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n\
    \    local trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n\
    \    local trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n\
    \    local trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n\
    \    local trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n\
    \    local trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n\
    \    local trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n\
    \    local trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n\
    \    local trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n\
    \    local trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n\
    \    local trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n\
    \    local trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n\
    \    local trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n\
    \    local trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n\
    \    local trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n\
    \    local trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n\
    \    local trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n\
    \    local trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n\
    \    local trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_left=0\n  local trunc_number=0\n\
    \  local trunc_number_index=0\n  local trunc_number_index2=0\n  local trunc_number_index3=0\n\
    \  local trunc_number_index4=0\n  local trunc_number_index5=0\n  local trunc_number_index6=0\n\
    \  local trunc_number_index7=0\n  local trunc_number_index8=0\n  local trunc_number_index9=0\n\
    \  local trunc_number_index10=0\n  local trunc_number_index11=0\n  local trunc_number_index12=0\n\
    \  local trunc_number_index13=0\n  local trunc_number_index14=0\n  local trunc_number_index15=0\n\
    \  local trunc_number_index16=0\n  local trunc_number_index17=0\n  local trunc_number_index18=0\n\
    \  local trunc_number_index19=0\n  local trunc_number_index20=0\n  local trunc_number_index21=0\n\
    \  local trunc_number_index22=0\n  local trunc_number_index23=0\n  local trunc_number_index24=0\n\
    \  local trunc_number_index25=0\n  local trunc_number_index26=0\n  local trunc_number_index27=0\n\
    \  local trunc_number_index28=0\n  local trunc_number_index29=0\n  local trunc_number_index30=0\n\
    \  local trunc_number_index31=0\n  local trunc_number_index32=0\n  local trunc_number_index33=0\n\
    \  local trunc_number_index34=0\n  local trunc_number_index35=0\n  local trunc_number_index36=0\n\
    \  local trunc_number_index37=0\n  local trunc_number_index38=0\n  local trunc_number_index39=0\n\
    \  local trunc_number_index40=0\n  local trunc_number_index41=0\n  local trunc_number_index42=0\n\
    \  local trunc_number_index43=0\n  local trunc_number_index44=0\n  local trunc_number_index45=0\n\
    \  local trunc_number_index46=0\n  local trunc_number_index47=0\n  local trunc_number_index48=0\n\
    \  local trunc_number_index49=0\n  local trunc_number_index50=0\n  local trunc_number_index51=0\n\
    \  local trunc_number_index52=0\n  local trunc_number_index53=0\n  local trunc_number_index54=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local integer\n\
    \  local remainder\n  local remainder_decimal\n  local remainder_integer\n  local\
    \ remainder_remainder\n  local remainder_remainder_decimal\n  local remainder_remainder_integer\n\
    \  local remainder_remainder_remainder\n  local remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_decimal\n  local remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remain\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local remainder\n  local result\n  decimalPart=$(echo\
    \ \"$number\" | awk '{print $1-1}')\n  integerPart=$(echo \"$number\" | awk '{print\
    \ $1}')\n  decimals=$(echo \"$number\" | awk '{print $1-1}')\n  decimal=$((decimalPart\
    \ % 1))\n  remainder=$((decimalPart - decimal))\n  result=$((integerPart + decimal))\n\
    \  result=$((result + remainder))\n  echo \"$result\"\n}\n\ncandidate() {\n  \
    \  truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpths51qqr.sh: line 21: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartLength\n    local decimalPartLength\n\
    \    local decimalPartLengthRemainder\n    local decimalPartRemainder\n    local\
    \ decimalPartRemainderLength\n    local decimalPartRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainder\n    local decimalPartRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderLengthRemainder\n    local decimalPartRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderLength\n    local decimalPartRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainder\n    local decimalPartRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderLengthRemainder\n  \
    \  local decimalPartRemainderRemainderRemainderRemainderRemainder\n    local decimalPartRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local decimalPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    local remainder_as_string\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_as_int\n    local remainder_as_float\n\
    \    local remainder_as_int\n    local remainder_as_float\n    local remainder_as_int\n\
    \    local remainder_as_float\n    local remainder_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_in_decimal=0\n    local trunc_decimals_in_number=0\n\
    \    local trunc_number_in_number=0\n    local trunc_decimals_in_decimal=0\n \
    \   local trunc_number_in_trunc_number=0\n    local trunc_decimals_in_trunc_number=0\n\
    \    local trunc_number_in_trunc_decimals=0\n    local trunc_decimals_in_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_number=0\n    local trunc_decimals_in_trunc_trunc_number=0\n\
    \    local trunc_number_in_trunc_trunc_decimals=0\n    local trunc_decimals_in_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_number=0\n    local trunc_decimals_in_trunc_trunc_trunc_number=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_decimals=0\n    local trunc_decimals_in_trunc_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_number=0\n    local trunc_decimals_in_trunc_trunc_trunc_trunc_number=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_decimals=0\n    local trunc_decimals_in_trunc_trunc_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_trunc_number=0\n    local\
    \ trunc_decimals_in_trunc_trunc_trunc_trunc_trunc_decimals=0\n    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_number=0\n\
    \    local trunc_decimals_in_trunc_trunc_trunc_trunc_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_number=0\n\
    \    local trunc_decimals_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_number=0\n\
    \    local trunc_decimals_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_decimals=0\n\
    \    local trunc_number_in_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_trunc_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local decimalPartCount\n    local decimalPartCountMax\n    local decimalPartCountMin\n\
    \    local decimalPartCountMinMax\n    local decimalPartCountMaxMin\n    local\
    \ decimalPartCountMaxMinMin\n    local decimalPartCountMinMaxMin\n    local decimalPartCountMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMin\n    local decimalPartCountMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMax\n    local decimalPartCountMinMaxMinMaxMinMaxMin\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMax\n    local decimalPartCountMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMin\n    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMax\n    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMin\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    \    local decimalPartCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local r\n    local m\n\
    \    local n\n    local f\n    local s\n    local e\n    local p\n    local q\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_base=0\n  local trunc_decimals_in_base=0\n  local trunc_number_in_base_digits=0\n\
    \  local trunc_decimals_in_base_digits=0\n  local trunc_number_in_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base=0\n  local trunc_number_in_base_digits_base_digits=0\n\
    \  local trunc_decimals_in_base_digits_base_digits=0\n  local trunc_number_in_base_digits_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base=0\n  local trunc_number_in_base_digits_base_digits_base_digits=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits=0\n  local trunc_number_in_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base=0\n  local\
    \ trunc_number_in_base_digits_base_digits_base_digits_base_digits=0\n  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits=0\n\
    \  local trunc_number_in_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_number_in_base_digits_base_digits_base_digits_base_digits_base_digits=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits_base_digits=0\n\
    \  local trunc_number_in_base_digits_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_number_in_base_digits_base_digits_base_digits_base_digits_base_digits_base_digits=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits_base_digits_base_digits=0\n\
    \  local trunc_number_in_base_digits_base_digits_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_decimals_in_base_digits_base_digits_base_digits_base_digits_base_digits_base_digits_base=0\n\
    \  local trunc_number_in_base_digits_base_digit\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_len=0\n  local decimals_string_length_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len=0\n\
    \  local decimals_string_length_string_len_string_len=0\n  local decimals_string_length_string_len_string_len_string=\"\
    \"\n  local decimals_string_length_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string_len=0\n  local\
    \ decimals_string_length_string_len_string_len_string_len_string=\"\"\n  local\
    \ decimals_string_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local truncate_decimals=0\n    local truncate_decimals_string=\"\"\n   \
    \ local truncate_decimals_string2=\"\"\n    local truncate_decimals_string3=\"\
    \"\n    local truncate_decimals_string4=\"\"\n    local truncate_decimals_string5=\"\
    \"\n    local truncate_decimals_string6=\"\"\n    local truncate_decimals_string7=\"\
    \"\n    local truncate_decimals_string8=\"\"\n    local truncate_decimals_string9=\"\
    \"\n    local truncate_decimals_string10=\"\"\n    local truncate_decimals_string11=\"\
    \"\n    local truncate_decimals_string12=\"\"\n    local truncate_decimals_string13=\"\
    \"\n    local truncate_decimals_string14=\"\"\n    local truncate_decimals_string15=\"\
    \"\n    local truncate_decimals_string16=\"\"\n    local truncate_decimals_string17=\"\
    \"\n    local truncate_decimals_string18=\"\"\n    local truncate_decimals_string19=\"\
    \"\n    local truncate_decimals_string20=\"\"\n    local truncate_decimals_string21=\"\
    \"\n    local truncate_decimals_string22=\"\"\n    local truncate_decimals_string23=\"\
    \"\n    local truncate_decimals_string24=\"\"\n    local truncate_decimals_string25=\"\
    \"\n    local truncate_decimals_string26=\"\"\n    local truncate_decimals_string27=\"\
    \"\n    local truncate_decimals_string28=\"\"\n    local truncate_decimals_string29=\"\
    \"\n    local truncate_decimals_string30=\"\"\n    local truncate_decimals_string31=\"\
    \"\n    local truncate_decimals_string32=\"\"\n    local truncate_decimals_string33=\"\
    \"\n    local truncate_decimals_string34=\"\"\n    local truncate_decimals_string35=\"\
    \"\n    local truncate_decimals_string36=\"\"\n    local truncate_decimals_string37=\"\
    \"\n    local truncate_decimals_string38=\"\"\n    local truncate_decimals_string39=\"\
    \"\n    local truncate_decimals_string40=\"\"\n    local truncate_decimals_string41=\"\
    \"\n    local truncate_decimals_string42=\"\"\n    local truncate_decimals_string43=\"\
    \"\n    local truncate_decimals_string44=\"\"\n    local truncate_decimals_string45=\"\
    \"\n    local truncate_decimals_string46=\"\"\n    local truncate_decimals_string47=\"\
    \"\n    local truncate_decimals_string48=\"\"\n    local truncate_decimals_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local decimalPartCount\n    local decimalPartCountMax\n    local decimalPartCountMin\n\
    \    local decimalPartCountMinMax\n    local decimalPartCountMinMaxMax\n    local\
    \ decimalPartCountMinMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMax\n  \
    \  local decimalPartCountMinMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local\
    \ decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=0\n  local trunc_number_string=\"\"\n  local trunc_number_string2=\"\
    \"\n  local trunc_number_string3=\"\"\n  local trunc_number_string4=\"\"\n  local\
    \ trunc_number_string5=\"\"\n  local trunc_number_string6=\"\"\n  local trunc_number_string7=\"\
    \"\n  local trunc_number_string8=\"\"\n  local trunc_number_string9=\"\"\n  local\
    \ trunc_number_string10=\"\"\n  local trunc_number_string11=\"\"\n  local trunc_number_string12=\"\
    \"\n  local trunc_number_string13=\"\"\n  local trunc_number_string14=\"\"\n \
    \ local trunc_number_string15=\"\"\n  local trunc_number_string16=\"\"\n  local\
    \ trunc_number_string17=\"\"\n  local trunc_number_string18=\"\"\n  local trunc_number_string19=\"\
    \"\n  local trunc_number_string20=\"\"\n  local trunc_number_string21=\"\"\n \
    \ local trunc_number_string22=\"\"\n  local trunc_number_string23=\"\"\n  local\
    \ trunc_number_string24=\"\"\n  local trunc_number_string25=\"\"\n  local trunc_number_string26=\"\
    \"\n  local trunc_number_string27=\"\"\n  local trunc_number_string28=\"\"\n \
    \ local trunc_number_string29=\"\"\n  local trunc_number_string30=\"\"\n  local\
    \ trunc_number_string31=\"\"\n  local trunc_number_string32=\"\"\n  local trunc_number_string33=\"\
    \"\n  local trunc_number_string34=\"\"\n  local trunc_number_string35=\"\"\n \
    \ local trunc_number_string36=\"\"\n  local trunc_number_string37=\"\"\n  local\
    \ trunc_number_string38=\"\"\n  local trunc_number_string39=\"\"\n  local trunc_number_string40=\"\
    \"\n  local trunc_number_string41=\"\"\n  local trunc_number_string42=\"\"\n \
    \ local trunc_number_string43=\"\"\n  local trunc_number_string44=\"\"\n  local\
    \ trunc_number_string45=\"\"\n  local trunc_number_string46=\"\"\n  local trunc_number_string47=\"\
    \"\n  local trunc_number_string48=\"\"\n  local trunc_number_string49=\"\"\n \
    \ local trunc_number_string50=\"\"\n  local trunc_number_string51=\"\"\n  local\
    \ trunc_number_string52=\"\"\n  local trunc_number_string53=\"\"\n  local trunc_number_string54=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n \
    \ local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n  local\
    \ dpart\n  local ipart\n  local dpart\n  local ipart\n  local dpart\n  local ipart\n\
    \  local dpart\n  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number_in_decimal=0\n    local trunc_number_remainder=0\n    local\
    \ trunc_number_remainder_in_decimal=0\n    local trunc_number_remainder_remainder=0\n\
    \    local trunc_number_remainder_remainder_in_decimal=0\n    local trunc_number_remainder_remainder_remainder=0\n\
    \    local trunc_number_remainder_remainder_remainder_in_decimal=0\n    local\
    \ trunc_number_remainder_remainder_remainder_remainder=0\n    local trunc_number_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trunc_number_remainder_remainder_remainder_remainder_remainder_in_decimal=0\n\
    \    local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_in_decimal=0\n\
    \  local trunc_number_string=\"\"\n\n  while [ \"$number\" -gt 0 ]; do\n    decimals=$((decimals\
    \ + 1))\n    trunc_number=$((trunc_number + number%1))\n    trunc_number_in_decimal=$((trunc_number_in_decimal\
    \ + trunc_number))\n    number=$((number/1))\n  done\n\n  if [ \"$decimals\" -gt\
    \ 0 ]; then\n    trunc_number_string=\"$trunc_number_in_decimal\"\n  else\n  \
    \  trunc_number_string=\"$trunc_number\"\n  fi\n\n  echo \"$trunc_number_string\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzpy1rxss.sh: line 17: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_decimals=0\n  local truncate_decimals_string=\"\"\n  local truncate_decimals_string2=\"\
    \"\n  local truncate_decimals_string3=\"\"\n  local truncate_decimals_string4=\"\
    \"\n  local truncate_decimals_string5=\"\"\n  local truncate_decimals_string6=\"\
    \"\n  local truncate_decimals_string7=\"\"\n  local truncate_decimals_string8=\"\
    \"\n  local truncate_decimals_string9=\"\"\n  local truncate_decimals_string10=\"\
    \"\n  local truncate_decimals_string11=\"\"\n  local truncate_decimals_string12=\"\
    \"\n  local truncate_decimals_string13=\"\"\n  local truncate_decimals_string14=\"\
    \"\n  local truncate_decimals_string15=\"\"\n  local truncate_decimals_string16=\"\
    \"\n  local truncate_decimals_string17=\"\"\n  local truncate_decimals_string18=\"\
    \"\n  local truncate_decimals_string19=\"\"\n  local truncate_decimals_string20=\"\
    \"\n  local truncate_decimals_string21=\"\"\n  local truncate_decimals_string22=\"\
    \"\n  local truncate_decimals_string23=\"\"\n  local truncate_decimals_string24=\"\
    \"\n  local truncate_decimals_string25=\"\"\n  local truncate_decimals_string26=\"\
    \"\n  local truncate_decimals_string27=\"\"\n  local truncate_decimals_string28=\"\
    \"\n  local truncate_decimals_string29=\"\"\n  local truncate_decimals_string30=\"\
    \"\n  local truncate_decimals_string31=\"\"\n  local truncate_decimals_string32=\"\
    \"\n  local truncate_decimals_string33=\"\"\n  local truncate_decimals_string34=\"\
    \"\n  local truncate_decimals_string35=\"\"\n  local truncate_decimals_string36=\"\
    \"\n  local truncate_decimals_string37=\"\"\n  local truncate_decimals_string38=\"\
    \"\n  local truncate_decimals_string39=\"\"\n  local truncate_decimals_string40=\"\
    \"\n  local truncate_decimals_string41=\"\"\n  local truncate_decimals_string42=\"\
    \"\n  local truncate_decimals_string43=\"\"\n  local truncate_decimals_string44=\"\
    \"\n  local truncate_decimals_string45=\"\"\n  local truncate_decimals_string46=\"\
    \"\n  local truncate_decimals_string47=\"\"\n  local truncate_decimals_string48=\"\
    \"\n  local truncate_decimals_\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=0\n  local trunc_number_string=\"\"\n\n  while [ $number -gt 0\
    \ ]; do\n    decimals=$(( 10#$number % 10 ))\n    trunc_number=$(( 10#$number\
    \ / 10 ))\n    trunc_number_string=\"$trunc_number\"\n    decimals_string=\"$decimals_string$decimals\"\
    \n    number=$(( 10#$number / 10 ))\n  done\n\n  echo \"$decimals_string\"\n}\n\
    \ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n\
    \    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp02ufpz3h.sh: line 17: [: 3.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_index=0\n  local trunc_decimals_index=0\n  local trunc_number_index2=0\n\
    \  local trunc_decimals_index2=0\n  local trunc_number_index3=0\n  local trunc_decimals_index3=0\n\
    \  local trunc_number_index4=0\n  local trunc_decimals_index4=0\n  local trunc_number_index5=0\n\
    \  local trunc_decimals_index5=0\n  local trunc_number_index6=0\n  local trunc_decimals_index6=0\n\
    \  local trunc_number_index7=0\n  local trunc_decimals_index7=0\n  local trunc_number_index8=0\n\
    \  local trunc_decimals_index8=0\n  local trunc_number_index9=0\n  local trunc_decimals_index9=0\n\
    \  local trunc_number_index10=0\n  local trunc_decimals_index10=0\n  local trunc_number_index11=0\n\
    \  local trunc_decimals_index11=0\n  local trunc_number_index12=0\n  local trunc_decimals_index12=0\n\
    \  local trunc_number_index13=0\n  local trunc_decimals_index13=0\n  local trunc_number_index14=0\n\
    \  local trunc_decimals_index14=0\n  local trunc_number_index15=0\n  local trunc_decimals_index15=0\n\
    \  local trunc_number_index16=0\n  local trunc_decimals_index16=0\n  local trunc_number_index17=0\n\
    \  local trunc_decimals_index17=0\n  local trunc_number_index18=0\n  local trunc_decimals_index18=0\n\
    \  local trunc_number_index19=0\n  local trunc_decimals_index19=0\n  local trunc_number_index20=0\n\
    \  local trunc_decimals_index20=0\n  local trunc_number_index21=0\n  local trunc_decimals_index21=0\n\
    \  local trunc_number_index22=0\n  local trunc_decimals_index22=0\n  local trunc_number_index23=0\n\
    \  local trunc_decimals_index23=0\n  local trunc_number_index24=0\n  local trunc_decimals_index24=0\n\
    \  local trunc_number_index25=0\n  local trunc_decimals_index25=0\n  local trunc_number_index26=0\n\
    \  local trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_index=0\n  local trunc_decimals_index=0\n  local trunc_number_string=\"\
    \"\n  local trunc_decimals_string=\"\"\n  local trunc_number_string_index=0\n\
    \  local trunc_decimals_string_index=0\n  local trunc_number_string_value=\"\"\
    \n  local trunc_decimals_string_value=\"\"\n  local trunc_number_string_value_index=0\n\
    \  local trunc_decimals_string_value_index=0\n  local trunc_number_string_value_value=\"\
    \"\n  local trunc_decimals_string_value_value=\"\"\n  local trunc_number_string_value_value_index=0\n\
    \  local trunc_decimals_string_value_value_index=0\n  local trunc_number_string_value_value_value=\"\
    \"\n  local trunc_decimals_string_value_value_value=\"\"\n  local trunc_number_string_value_value_value_index=0\n\
    \  local trunc_decimals_string_value_value_value_index=0\n  local trunc_number_string_value_value_value_value=\"\
    \"\n  local trunc_decimals_string_value_value_value_value=\"\"\n  local trunc_number_string_value_value_value_value_index=0\n\
    \  local trunc_decimals_string_value_value_value_index=0\n  local trunc_number_string_value_value_value_value_value=\"\
    \"\n  local trunc_decimals_string_value_value_value_value_value=\"\"\n  local\
    \ trunc_number_string_value_value_value_value_value_index=0\n  local trunc_decimals_string_value_value_value_value_index=0\n\
    \  local trunc_number_string_value_value_value_value_value_value=\"\"\n  local\
    \ trunc_decimals_string_value_value_value_value_value=\"\"\n  local trunc_number_string_value_value_value_value_value_index=0\n\
    \  local trunc_decimals_string_value_value_value_value_index=0\n  local trunc_number_string_value_value_value_value_value_value=\"\
    \"\n  local trunc_decimals_string_value_value_value_value_value=\"\"\n  local\
    \ trunc_number_string_value_value_value_value_value_index=0\n  local trunc_decimals_string_value_value_value_value_index=0\n\
    \  local trunc_number_string_value_value_value_value_value_value=\"\"\n  local\
    \ trunc_decimals_string_value_value_value_value_value=\"\"\n  local trunc_number_string_value_value_value_value_value_index=0\n\
    \  local trunc_decimals_string_value_value_value_value_index=0\n  local trunc_number_string_value_value_value_value_value_value=\"\
    \"\n  local trunc_decimals_string_value_value_value_value_value\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local decimals=0\n  \
    \  local dec\n    local decdec\n    local decdecdec\n    local decdecdecdec\n\
    \    local decdecdecdecdec\n    local decdecdecdecdecdec\n    local decdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdec\n \
    \   local decdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdecdecdecdec\n\
    \    local decdecdecdecdecdecdecdecdecdecdec\n    local decdecdecdecdecdecdecdec\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimal\n    local decimals\n    local remainder\n  \
    \  local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n    local decimal\n    local decimals\n\
    \    local remainder\n    local decimal\n    local decimals\n    local remainder\n\
    \    local decimal\n    local decimals\n    local remainder\n    local decimal\n\
    \    local decimals\n    local remainder\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local remainder=0\n  local remainder_decimal=0\n  local remainder_integer=0\n\
    \  local remainder_remainder=0\n  local remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_integer=0\n  local remainder_remainder_remainder=0\n  local\
    \ remainder_remainder_remainder_decimal=0\n  local remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder=0\n  local remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_decimal=0\n  local\
    \ remainder_remainder_remainder_remainder_remainder_integer=0\n  local remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal=0\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_in_int=0\n    local trunc_decimals_in_int=0\n\
    \    local trunc_number_after_dot=0\n    local trunc_decimals_after_dot=0\n  \
    \  local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n    local trunc_decimals_after_dot_in_float=0\n\
    \    local trunc_number_after_dot_in_int=0\n    local trunc_decimals_after_dot_in_int=0\n\
    \    local trunc_number_after_dot_in_float=0\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_string=\"\"\n  local truncate_number=\"\"\n\n  decimals=$(( (10#$number\
    \ % 1) | 0 ))\n  decimals_string=$(( 10#$decimals ))\n\n  truncate_string=$((\
    \ 10#$number / 10#$decimals ))\n  truncate_number=$(( 10#$truncate_string ))\n\
    \n  echo \"$truncate_number$decimals_string\"\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg71396pd.sh: line 17: (10#3.5 % 1) | 0 : syntax error: invalid
    arithmetic operator (error token is ".5 % 1) | 0 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local truncate_decimals=0\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n    local truncate_number\n    local truncate_number\n\
    \    local truncate_number\n\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    local trunc_number\n\n    decimal=$(( 10#$number % 10\
    \ ))\n    integer=$(( 10#$number / 10 ))\n    remainder=$(( 10#$number % 10 ))\n\
    \n    while (( 10#$integer > 0 )) ; do\n        decimal=$(( 10#$decimal + 1 ))\n\
    \        integer=$(( 10#$integer - 1 ))\n    done\n\n    trunc_number=$(( 10#$decimal\
    \ + $integer ))\n\n    if [ $remainder -gt 0 ] ; then\n        trunc_number=$((\
    \ 10#$trunc_number + 1 ))\n    fi\n\n    echo \"$trunc_number\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5r0ooyc5.sh: line 18: 10#3.5 % 10 : syntax error: invalid arithmetic
    operator (error token is ".5 % 10 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal\n\
    \  while [[ $number -gt 0 ]]; do\n    decimal=$((10#$number % 1))\n    integer=$((10#$number\
    \ / 1))\n    decimals=$((decimals + 1))\n    number=$((10#$integer + $decimal))\n\
    \  done\n  echo \"$decimals\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn3aoi5c4.sh: line 15: [[: 3.5: syntax error: invalid arithmetic
    operator (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal=0\n\
    \  local remainder=0\n  local result=0\n  local decimals_string=\"\"\n  local\
    \ integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string2=\"\
    \"\n  local remainder_string2=\"\"\n  local decimals_string2=\"\"\n  local remainder_string3=\"\
    \"\n  local integer_string3=\"\"\n  local remainder_string4=\"\"\n  local integer_string4=\"\
    \"\n  local remainder_string5=\"\"\n  local integer_string5=\"\"\n  local remainder_string6=\"\
    \"\n  local integer_string6=\"\"\n  local remainder_string7=\"\"\n  local integer_string7=\"\
    \"\n  local remainder_string8=\"\"\n  local integer_string8=\"\"\n  local remainder_string9=\"\
    \"\n  local integer_string9=\"\"\n  local remainder_string10=\"\"\n  local integer_string10=\"\
    \"\n  local remainder_string11=\"\"\n  local integer_string11=\"\"\n  local remainder_string12=\"\
    \"\n  local integer_string12=\"\"\n  local remainder_string13=\"\"\n  local integer_string13=\"\
    \"\n  local remainder_string14=\"\"\n  local integer_string14=\"\"\n  local remainder_string15=\"\
    \"\n  local integer_string15=\"\"\n  local remainder_string16=\"\"\n  local integer_string16=\"\
    \"\n  local remainder_string17=\"\"\n  local integer_string17=\"\"\n  local remainder_string18=\"\
    \"\n  local integer_string18=\"\"\n  local remainder_string19=\"\"\n  local integer_string19=\"\
    \"\n  local remainder_string20=\"\"\n  local integer_string20=\"\"\n  local remainder_string21=\"\
    \"\n  local integer_string21=\"\"\n  local remainder_string22=\"\"\n  local integer_string22=\"\
    \"\n  local remainder_string23=\"\"\n  local integer_string23=\"\"\n  local remainder_string24=\"\
    \"\n  local integer_string24=\"\"\n  local remainder_string25=\"\"\n  local integer_string25=\"\
    \"\n  local remainder_string26=\"\"\n  local integer_string26=\"\"\n  local remainder_string27=\"\
    \"\n  local integer_string27=\"\"\n  local remainder_string28=\"\"\n  local integer_string28=\"\
    \"\n  local remainder_string29=\"\"\n  local integer_string29=\"\"\n  local remainder_string30=\"\
    \"\n  local integer_string30=\"\"\n  local remainder_string31=\"\"\n  local integer_string31=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local trunc_number=0\n    local trunc_number_index=0\n    local trunc_number_index2=0\n\
    \    local trunc_number_index3=0\n    local trunc_number_index4=0\n    local trunc_number_index5=0\n\
    \    local trunc_number_index6=0\n    local trunc_number_index7=0\n    local trunc_number_index8=0\n\
    \    local trunc_number_index9=0\n    local trunc_number_index10=0\n    local\
    \ trunc_number_index11=0\n    local trunc_number_index12=0\n    local trunc_number_index13=0\n\
    \    local trunc_number_index14=0\n    local trunc_number_index15=0\n    local\
    \ trunc_number_index16=0\n    local trunc_number_index17=0\n    local trunc_number_index18=0\n\
    \    local trunc_number_index19=0\n    local trunc_number_index20=0\n    local\
    \ trunc_number_index21=0\n    local trunc_number_index22=0\n    local trunc_number_index23=0\n\
    \    local trunc_number_index24=0\n    local trunc_number_index25=0\n    local\
    \ trunc_number_index26=0\n    local trunc_number_index27=0\n    local trunc_number_index28=0\n\
    \    local trunc_number_index29=0\n    local trunc_number_index30=0\n    local\
    \ trunc_number_index31=0\n    local trunc_number_index32=0\n    local trunc_number_index33=0\n\
    \    local trunc_number_index34=0\n    local trunc_number_index35=0\n    local\
    \ trunc_number_index36=0\n    local trunc_number_index37=0\n    local trunc_number_index38=0\n\
    \    local trunc_number_index39=0\n    local trunc_number_index40=0\n    local\
    \ trunc_number_index41=0\n    local trunc_number_index42=0\n    local trunc_number_index43=0\n\
    \    local trunc_number_index44=0\n    local trunc_number_index45=0\n    local\
    \ trunc_number_index46=0\n    local trunc_number_index47=0\n    local trunc_number_index48=0\n\
    \    local trunc_number_index49=0\n    local trunc_number_index50=0\n    local\
    \ trunc_number_index51=0\n    local trunc_number_index52=0\n    local trunc_number_index53=0\n\
    \    local trunc_number_index54=0\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartCount\n    local decimalCount\n \
    \   local decimalCountMax\n    local decimalCountMin\n    local decimalCountMinMax\n\
    \    local decimalCountMinMaxCount\n    local decimalCountMinMaxCountMax\n   \
    \ local decimalCountMinMaxCountMaxCount\n    local decimalCountMinMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCount\n    local decimalCountMinMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMax\n    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\n\
    \    local decimalCountMinMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCount\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local truncate_decimal\n  local\
    \ truncate_part\n  local truncate_part_decimal\n  local truncate_part_int\n  local\
    \ truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_int\n  local truncate_part_decimal\n\
    \  local truncate_part_int\n  local truncate_part_decimal\n  local truncate_part_int\n\
    \  local truncate_part_decimal\n  local truncate_part_\n}\n\ncandidate() {\n \
    \   truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local decimal\n\
    \  local remainder\n  local remainder_decimal\n  local remainder_integer\n  local\
    \ remainder_remainder\n  local remainder_remainder_decimal\n  local remainder_remainder_integer\n\
    \  local remainder_remainder_remainder\n  local remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_decimal\n  local remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local trunc_num=$1\n    local trunc_num_dec=0\n    local trunc_num_int=0\n\
    \    local trunc_num_frac=0\n    local trunc_num_frac_dec=0\n    local trunc_num_frac_int=0\n\
    \    local trunc_num_frac_frac=0\n    local trunc_num_frac_frac_dec=0\n    local\
    \ trunc_num_frac_frac_int=0\n    local trunc_num_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_num_frac_frac_frac_frac_dec=0\n\
    \    local trunc_num_frac_frac_frac_frac_int=0\n    local trunc_num_frac_frac_frac_frac=0\n\
    \    local trunc_num_frac_frac_frac_frac_dec=0\n    local trunc_num_frac_frac_frac_frac_int=0\n\
    \    local trunc_num_frac_frac_frac_frac=0\n    local trunc_\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local decimals=0\n  local decimal\n\
    \  local trunc\n  local trunc_num\n\n  x=$(( x ))\n  decimals=$(( 10#$(( x - $x\
    \ )) ))\n  trunc_num=$(( x - $x ))\n  trunc=$(( 10#$(( trunc_num % 1 )) ))\n \
    \ decimal=$(( trunc_num / 1 ))\n  if [ \"$decimal\" -gt \"$decimals\" ]; then\n\
    \    decimal=$(( decimals + 1 ))\n  fi\n  i=$(( 10#$(( decimal - $d )) ))\n  x=$((\
    \ trunc + $i ))\n  d=$(( decimal - $i ))\n  echo \"$x\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr624y6z7.sh: line 19: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_number_in_decimal=0\n  local trunc_decimals_in_decimal=0\n  local\
    \ trunc_number_in_fraction=0\n  local trunc_decimals_in_fraction=0\n  local trunc_number_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction=0\n  local trunc_number_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction=0\n  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction=0\n  local\
    \ trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_number_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction_in_fraction=0\n\
    \  local trunc_decimals_in_fraction\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number=0\n    local trunc_number_string=\"\"\n    local trunc_number_string2=\"\
    \"\n    local trunc_number_string3=\"\"\n    local trunc_number_string4=\"\"\n\
    \    local trunc_number_string5=\"\"\n    local trunc_number_string6=\"\"\n  \
    \  local trunc_number_string7=\"\"\n    local trunc_number_string8=\"\"\n    local\
    \ trunc_number_string9=\"\"\n    local trunc_number_string10=\"\"\n    local trunc_number_string11=\"\
    \"\n    local trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\
    \n    local trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n\
    \    local trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n\
    \    local trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n\
    \    local trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n\
    \    local trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n\
    \    local trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n\
    \    local trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n\
    \    local trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n\
    \    local trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n\
    \    local trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n\
    \    local trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n\
    \    local trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n\
    \    local trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n\
    \    local trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n\
    \    local trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n\
    \    local trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n\
    \    local trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n\
    \    local trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n\
    \    local trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n\
    \    local trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n\
    \    local trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local decimal_string=\"\"\n  local integer_string=\"\"\n  \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local f\n    local dpart\n\
    \    local ipart\n    local fpart\n    local dec\n    local decpart\n    local\
    \ decpart2\n    local decpart3\n    local decpart4\n    local decpart5\n    local\
    \ decpart6\n    local decpart7\n    local decpart8\n    local decpart9\n    local\
    \ decpart10\n    local decpart11\n    local decpart12\n    local decpart13\n \
    \   local decpart14\n    local decpart15\n    local decpart16\n    local decpart17\n\
    \    local decpart18\n    local decpart19\n    local decpart20\n    local decpart21\n\
    \    local decpart22\n    local decpart23\n    local decpart24\n    local decpart25\n\
    \    local decpart26\n    local decpart27\n    local decpart28\n    local decpart29\n\
    \    local decpart30\n    local decpart31\n    local decpart32\n    local decpart33\n\
    \    local decpart34\n    local decpart35\n    local decpart36\n    local decpart37\n\
    \    local decpart38\n    local decpart39\n    local decpart40\n    local decpart41\n\
    \    local decpart42\n    local decpart43\n    local decpart44\n    local decpart45\n\
    \    local decpart46\n    local decpart47\n    local decpart48\n    local decpart49\n\
    \    local decpart50\n    local decpart51\n    local decpart52\n    local decpart53\n\
    \    local decpart54\n    local decpart55\n    local decpart56\n    local decpart57\n\
    \    local decpart58\n    local decpart59\n    local decpart60\n    local decpart61\n\
    \    local decpart62\n    local decpart63\n    local decpart64\n    local decpart65\n\
    \    local decpart66\n    local decpart67\n    local decpart68\n    local decpart69\n\
    \    local decpart70\n    local decpart71\n    local decpart72\n    local decpart73\n\
    \    local decpart74\n    local decpart75\n    local decpart76\n    local decpart77\n\
    \    local decpart78\n    local decpart79\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local trunc_number=0\n\n    if [[ $number == *\".\"* ]]; then\n        decimals=${#number}\n\
    \        decimals_left=${decimals-1}\n        trunc_number=${number%.*}\n    \
    \    trunc_number=$((${trunc_number}+1))\n    else\n        trunc_number=$number\n\
    \    fi\n\n    if [[ $decimals_left -gt 0 ]]; then\n        trunc_number=$((${trunc_number}*10^${decimals_left}))\n\
    \    fi\n\n    echo $trunc_number\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local integer=0\n    local integer_string=\"\"\n    local remainder=0\n\
    \    local remainder_string=\"\"\n    local decimals_string=\"\"\n    local decimal_string=\"\
    \"\n    local decimal_string_length=0\n    local decimal_string_length_string=\"\
    \"\n    local decimal_string_length_string_length=0\n    local decimal_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length=0\n    local decimal_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimal_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimal_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_in_string\n  local trunc_number_string\n\
    \  local trunc_number_string_in_string\n  local trunc_number_string_in_string_with_dots\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_number_string_in_string_with_dots_as_int\n  local trunc_number_string_in_string_with_dots_as_float\n\
    \  local trunc_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_len=0\n  local decimals_string_length_string_len_len2=0\n\
    \  local decimals_string_length_string_len3=0\n  local decimals_string_length_string_len4=0\n\
    \  local decimals_string_length_string_len5=0\n  local decimals_string_length_string_len6=0\n\
    \  local decimals_string_length_string_len7=0\n  local decimals_string_length_string_len8=0\n\
    \  local decimals_string_length_string_len9=0\n  local decimals_string_length_string_len10=0\n\
    \  local decimals_string_length_string_len11=0\n  local decimals_string_length_string_len12=0\n\
    \  local decimals_string_length_string_len13=0\n  local decimals_string_length_string_len14=0\n\
    \  local decimals_string_length_string_len15=0\n  local decimals_string_length_string_len16=0\n\
    \  local decimals_string_length_string_len17=0\n  local decimals_string_length_string_len18=0\n\
    \  local decimals_string_length_string_len19=0\n  local decimals_string_length_string_len20=0\n\
    \  local decimals_string_length_string_len21=0\n  local decimals_string_length_string_len22=0\n\
    \  local decimals_string_length_string_len23=0\n  local decimals_string_length_string_len24=0\n\
    \  local decimals_string_length_string_len25=0\n  local decimals_string_length_string_len26=0\n\
    \  local decimals_string_length_string_len27=0\n  local decimals_string_length_string_len28=0\n\
    \  local decimals_string_length_string_len29=0\n  local decimals_string_length_string_len30=0\n\
    \  local decimals_string_length_string_len31=0\n  local decimals_string_length_string_len32=0\n\
    \  local decimals_string_length_string_len33=0\n  local decimals_string_length_string_len34=0\n\
    \  local decimals_string_length_string_len35=0\n  local decimals_string_length_string_len36=0\n\
    \  local decimals_string_length_string_len37=0\n  local decimals_string_length_string_len38=0\n\
    \  local decimals_string_length_string_len39=0\n  local decimals_string_length_string_len40=0\n\
    \  local decimals_string_length_string_len41=0\n  local decimals_string_length_string_len42=0\n\
    \  local decimals_string_length_string_len43=0\n  local decimal\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  for i in $(seq 1 $((${#x}-1)));\
    \ do\n    local d=$((${#x}-1))\n    if [[ ${x:$i:1} == \".\" ]]; then\n      d=$(expr\
    \ ${x:$i:1} - 1)\n      x=${x:0:$i}\n    fi\n  done\n  echo ${x%.*}\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: non-integer argument

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_string\n  local trunc_number_string2\n  local\
    \ trunc_number_string3\n  local trunc_number_string4\n  local trunc_number_string5\n\
    \  local trunc_number_string6\n  local trunc_number_string7\n  local trunc_number_string8\n\
    \  local trunc_number_string9\n  local trunc_number_string10\n  local trunc_number_string11\n\
    \  local trunc_number_string12\n  local trunc_number_string13\n  local trunc_number_string14\n\
    \  local trunc_number_string15\n  local trunc_number_string16\n  local trunc_number_string17\n\
    \  local trunc_number_string18\n  local trunc_number_string19\n  local trunc_number_string20\n\
    \  local trunc_number_string21\n  local trunc_number_string22\n  local trunc_number_string23\n\
    \  local trunc_number_string24\n  local trunc_number_string25\n  local trunc_number_string26\n\
    \  local trunc_number_string27\n  local trunc_number_string28\n  local trunc_number_string29\n\
    \  local trunc_number_string30\n  local trunc_number_string31\n  local trunc_number_string32\n\
    \  local trunc_number_string33\n  local trunc_number_string34\n  local trunc_number_string35\n\
    \  local trunc_number_string36\n  local trunc_number_string37\n  local trunc_number_string38\n\
    \  local trunc_number_string39\n  local trunc_number_string40\n  local trunc_number_string41\n\
    \  local trunc_number_string42\n  local trunc_number_string43\n  local trunc_number_string44\n\
    \  local trunc_number_string45\n  local trunc_number_string46\n  local trunc_number_string47\n\
    \  local trunc_number_string48\n  local trunc_number_string49\n  local trunc_number_string50\n\
    \  local trunc_number_string51\n  local trunc_number_string52\n  local trunc_number_string53\n\
    \  local trunc_number_string54\n  local trunc_number_string55\n  local trunc_number_string56\n\
    \  local trunc_number_string57\n  local trunc_number_string58\n  local trunc_number_string59\n\
    \  local trunc_number_string60\n  local trunc_number_string61\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartCount\n  local decimalPartCountMax\n  local decimalPartCountMin\n\
    \  local decimalPartCountMinMax\n  local decimalPartCountMinMaxMax\n  local decimalPartCountMinMaxMin\n\
    \  local decimalPartCountMinMaxMinMax\n  local decimalPartCountMinMaxMinMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMinMaxMaxMax\n  local decimalPart\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimal=0\n    local remainder_decimal=0\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    local decimals_string=\"\
    \"\n    local integer_string=\"\"\n    local remainder_string=\"\"\n    local\
    \ decimal_string=\"\"\n    local remainder_decimal_string=\"\"\n    \n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local dpart\n  local ipart\n\
    \  local decimals\n  local dec\n  local decpart\n  local decpart2\n  local decpart3\n\
    \  local decpart4\n  local decpart5\n  local decpart6\n  local decpart7\n  local\
    \ decpart8\n  local decpart9\n  local decpart10\n  local decpart11\n  local decpart12\n\
    \  local decpart13\n  local decpart14\n  local decpart15\n  local decpart16\n\
    \  local decpart17\n  local decpart18\n  local decpart19\n  local decpart20\n\
    \  local decpart21\n  local decpart22\n  local decpart23\n  local decpart24\n\
    \  local decpart25\n  local decpart26\n  local decpart27\n  local decpart28\n\
    \  local decpart29\n  local decpart30\n  local decpart31\n  local decpart32\n\
    \  local decpart33\n  local decpart34\n  local decpart35\n  local decpart36\n\
    \  local decpart37\n  local decpart38\n  local decpart39\n  local decpart40\n\
    \  local decpart41\n  local decpart42\n  local decpart43\n  local decpart44\n\
    \  local decpart45\n  local decpart46\n  local decpart47\n  local decpart48\n\
    \  local decpart49\n  local decpart50\n  local decpart51\n  local decpart52\n\
    \  local decpart53\n  local decpart54\n  local decpart55\n  local decpart56\n\
    \  local decpart57\n  local decpart58\n  local decpart59\n  local decpart60\n\
    \  local decpart61\n  local decpart62\n  local decpart63\n  local decpart64\n\
    \  local decpart65\n  local decpart66\n  local decpart67\n  local decpart68\n\
    \  local decpart69\n  local decpart70\n  local decpart71\n  local decpart72\n\
    \  local decpart73\n  local decpart74\n  local decpart75\n  local decpart76\n\
    \  local decpart77\n  local decpart78\n  local decpart79\n  local decpart80\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartLength\n  local decimalPartLengthRemainder\n  local decimalPartLengthRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainder\n  local decimalPartLengthRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainder\n  local\
    \ decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainder\n  local\
    \ decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local truncate_decimal\n\
    \  local truncate_number\n  local truncate_number_in_place\n  local truncate_number_in_place_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal\n  local truncate_number_in_place_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero\n\
    \  local truncate_number_in_place_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_decimal_with_zero_after_deci\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ decimal=0\n    local decimals_left=0\n    local decimals_left_in_number=0\n\
    \    local decimals_left_in_number_in_number=0\n    local decimals_left_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number=0\n    local\
    \ decimals_left_in_number_in_number_in_number_in_number_in_number=0\n    local\
    \ decimals_left_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_left_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number_in_number=0\n\
    \    local decimals_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local trunc_number\n\
    \    local trunc_number_index\n\n    decimal=$(( 10#$number % 10 ))\n    decimals=$((\
    \ 10#$number % 10 ))\n    trunc_number=$(( 10#$number / 10 ))\n    trunc_number_index=$((\
    \ 10#$number / 10 ))\n\n    if [ $decimals -gt 0 ]; then\n        trunc_number=$((\
    \ 10#$trunc_number + 1 ))\n    fi\n\n    if [ $trunc_number_index -gt 0 ]; then\n\
    \        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n\
    \    if [ $trunc_number_index -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number\
    \ + 1 ))\n    fi\n\n    if [ $decimals -gt 0 ]; then\n        trunc_number=$((\
    \ 10#$trunc_number + 1 ))\n    fi\n\n    if [ $trunc_number_index -gt 0 ]; then\n\
    \        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n\
    \    if [ $trunc_number_index -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number\
    \ + 1 ))\n    fi\n\n    if [ $decimals -gt 0 ]; then\n        trunc_number=$((\
    \ 10#$trunc_number + 1 ))\n    fi\n\n    if [ $trunc_number_index -gt 0 ]; then\n\
    \        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n\
    \    if [ $trunc_number_index -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number\
    \ + 1 ))\n    fi\n\n    if [ $decimals -gt 0 ]; then\n        trunc_number=$((\
    \ 10#$trunc_number + 1 ))\n    fi\n\n    if [ $trunc_number_index -gt 0 ]; then\n\
    \        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        trunc_number=$(( 10#$trunc_number + 1 ))\n    fi\n\n\
    \    if [ $trunc_number_index -gt 0 ]; then\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqzvalpuz.sh: line 83: syntax error near unexpected token `}''

    /tmp/tmpqzvalpuz.sh: line 83: `}''

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local r\n    local dpart\n\
    \    local ipart\n    local rpart\n    local dec\n    local decpart\n    local\
    \ decpart2\n    local decpart3\n    local decpart4\n    local decpart5\n    local\
    \ decpart6\n    local decpart7\n    local decpart8\n    local decpart9\n    local\
    \ decpart10\n    local decpart11\n    local decpart12\n    local decpart13\n \
    \   local decpart14\n    local decpart15\n    local decpart16\n    local decpart17\n\
    \    local decpart18\n    local decpart19\n    local decpart20\n    local decpart21\n\
    \    local decpart22\n    local decpart23\n    local decpart24\n    local decpart25\n\
    \    local decpart26\n    local decpart27\n    local decpart28\n    local decpart29\n\
    \    local decpart30\n    local decpart31\n    local decpart32\n    local decpart33\n\
    \    local decpart34\n    local decpart35\n    local decpart36\n    local decpart37\n\
    \    local decpart38\n    local decpart39\n    local decpart40\n    local decpart41\n\
    \    local decpart42\n    local decpart43\n    local decpart44\n    local decpart45\n\
    \    local decpart46\n    local decpart47\n    local decpart48\n    local decpart49\n\
    \    local decpart50\n    local decpart51\n    local decpart52\n    local decpart53\n\
    \    local decpart54\n    local decpart55\n    local decpart56\n    local decpart57\n\
    \    local decpart58\n    local decpart59\n    local decpart60\n    local decpart61\n\
    \    local decpart62\n    local decpart63\n    local decpart64\n    local decpart65\n\
    \    local decpart66\n    local decpart67\n    local decpart68\n    local decpart69\n\
    \    local decpart70\n    local decpart71\n    local decpart72\n    local decpart73\n\
    \    local decpart74\n    local decpart75\n    local decpart76\n    local decpart77\n\
    \    local decpart78\n    local decpart79\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_length=0\n    local decimals_string_length_string=\"\
    \"\n    local decimals_string_length_string_length=0\n    local decimals_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length=0\n    local\
    \ decimals_string_length_string_length_string_length_string=\"\"\n    local decimals_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n    local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local remainder=0\n  local decimal=0\n\
    \  local decimals=0\n  local remainder=0\n  local decimal=0\n  local decimals=0\n\
    \  local remainder=0\n  local decimal=0\n  local decimals=0\n  local remainder=0\n\
    \  local decimal=0\n  local decimals=0\n  local \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ truncate_decimals=0\n  local truncate_decimals_string=\"\"\n  local truncate_decimals_string2=\"\
    \"\n  local truncate_decimals_string3=\"\"\n  local truncate_decimals_string4=\"\
    \"\n  local truncate_decimals_string5=\"\"\n  local truncate_decimals_string6=\"\
    \"\n  local truncate_decimals_string7=\"\"\n  local truncate_decimals_string8=\"\
    \"\n  local truncate_decimals_string9=\"\"\n  local truncate_decimals_string10=\"\
    \"\n  local truncate_decimals_string11=\"\"\n  local truncate_decimals_string12=\"\
    \"\n  local truncate_decimals_string13=\"\"\n  local truncate_decimals_string14=\"\
    \"\n  local truncate_decimals_string15=\"\"\n  local truncate_decimals_string16=\"\
    \"\n  local truncate_decimals_string17=\"\"\n  local truncate_decimals_string18=\"\
    \"\n  local truncate_decimals_string19=\"\"\n  local truncate_decimals_string20=\"\
    \"\n  local truncate_decimals_string21=\"\"\n  local truncate_decimals_string22=\"\
    \"\n  local truncate_decimals_string23=\"\"\n  local truncate_decimals_string24=\"\
    \"\n  local truncate_decimals_string25=\"\"\n  local truncate_decimals_string26=\"\
    \"\n  local truncate_decimals_string27=\"\"\n  local truncate_decimals_string28=\"\
    \"\n  local truncate_decimals_string29=\"\"\n  local truncate_decimals_string30=\"\
    \"\n  local truncate_decimals_string31=\"\"\n  local truncate_decimals_string32=\"\
    \"\n  local truncate_decimals_string33=\"\"\n  local truncate_decimals_string34=\"\
    \"\n  local truncate_decimals_string35=\"\"\n  local truncate_decimals_string36=\"\
    \"\n  local truncate_decimals_string37=\"\"\n  local truncate_decimals_string38=\"\
    \"\n  local truncate_decimals_string39=\"\"\n  local truncate_decimals_string40=\"\
    \"\n  local truncate_decimals_string41=\"\"\n  local truncate_decimals_string42=\"\
    \"\n  local truncate_decimals_string43=\"\"\n  local truncate_decimals_string44=\"\
    \"\n  local truncate_decimals_string45=\"\"\n  local truncate_decimals_string46=\"\
    \"\n  local truncate_decimals_string47=\"\"\n  local truncate_decimals_string48=\"\
    \"\n  local truncate_decimals_\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal\n  while [ \"$number\" -gt 0 ]; do\n    decimal=$((10#$number\
    \ % 10))\n    decimals=$((decimals + 1))\n    integer=$((integer + decimal))\n\
    \    number=$((number / 10))\n  done\n  decimal=$((10#$number % 10))\n  decimals=$((decimals\
    \ + 1))\n  integer=$((integer + decimal))\n  remainder=$((number % 1))\n  echo\
    \ \"$integer\"\n  echo \"$decimals\"\n  echo \"$remainder\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp35woyi_2.sh: line 16: [: 3.5: integer expression expected

    /tmp/tmp35woyi_2.sh: line 22: 10#3.5 % 10: syntax error: invalid arithmetic operator
    (error token is ".5 % 10")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local trunc_number\n\n    decimal=$(echo \"$number\" | awk '{print $1-1}')\n\
    \    integer=$(echo \"$number\" | awk '{print $1}')\n    trunc_number=$(( $integer\
    \ + $decimal ))\n\n    if [ \"$decimal\" -gt 0 ]; then\n        trunc_number=$((\
    \ $trunc_number + 1 ))\n    fi\n\n    echo \"$trunc_number\"\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx_3le50m.sh: line 19: 3.5 + 2.5 : syntax error: invalid arithmetic
    operator (error token is ".5 + 2.5 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_number_index=0\n\
    \  local trunc_number_index2=0\n  local trunc_number_index3=0\n  local trunc_number_index4=0\n\
    \  local trunc_number_index5=0\n  local trunc_number_index6=0\n  local trunc_number_index7=0\n\
    \  local trunc_number_index8=0\n  local trunc_number_index9=0\n  local trunc_number_index10=0\n\
    \  local trunc_number_index11=0\n  local trunc_number_index12=0\n  local trunc_number_index13=0\n\
    \  local trunc_number_index14=0\n  local trunc_number_index15=0\n  local trunc_number_index16=0\n\
    \  local trunc_number_index17=0\n  local trunc_number_index18=0\n  local trunc_number_index19=0\n\
    \  local trunc_number_index20=0\n  local trunc_number_index21=0\n  local trunc_number_index22=0\n\
    \  local trunc_number_index23=0\n  local trunc_number_index24=0\n  local trunc_number_index25=0\n\
    \  local trunc_number_index26=0\n  local trunc_number_index27=0\n  local trunc_number_index28=0\n\
    \  local trunc_number_index29=0\n  local trunc_number_index30=0\n  local trunc_number_index31=0\n\
    \  local trunc_number_index32=0\n  local trunc_number_index33=0\n  local trunc_number_index34=0\n\
    \  local trunc_number_index35=0\n  local trunc_number_index36=0\n  local trunc_number_index37=0\n\
    \  local trunc_number_index38=0\n  local trunc_number_index39=0\n  local trunc_number_index40=0\n\
    \  local trunc_number_index41=0\n  local trunc_number_index42=0\n  local trunc_number_index43=0\n\
    \  local trunc_number_index44=0\n  local trunc_number_index45=0\n  local trunc_number_index46=0\n\
    \  local trunc_number_index47=0\n  local trunc_number_index48=0\n  local trunc_number_index49=0\n\
    \  local trunc_number_index50=0\n  local trunc_number_index51=0\n  local trunc_number_index52=0\n\
    \  local trunc_number_index53=0\n  local trunc_number_index54=0\n  local trunc_number_index55=0\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local dpart\n    local\
    \ ipart\n    local dpart\n    local ipart\n    local decimals\n    local decimal\n\
    \    local decimals\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_in_string\n  local trunc_number_string\n\
    \  local trunc_number_string_in_string\n  local trunc_number_string_in_int\n \
    \ local trunc_number_string_in_int_in_string\n  local trunc_number_string_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_string\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trunc_number_string_in_int_in_int_in_int\n\
    \  local trunc_number_string_in_int_in_int_in_int\n  local trun\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local integer\n\
    \  local remainder\n  local remainder_decimal\n  local remainder_integer\n  local\
    \ remainder_remainder\n  local remainder_remainder_decimal\n  local remainder_remainder_integer\n\
    \  local remainder_remainder_remainder\n  local remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_decimal\n  local remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder\n  local remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_integer\n  local remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_integer\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_decimal\n\
    \  local remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remain\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_length=0\n  local decimals_string_length_string=\"\"\n  local\
    \ decimals_string_length_string_length=0\n  local decimals_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length=0\n  local decimals_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length=0\n\
    \  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string=\"\
    \"\n  local decimals_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_length_string_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_index=0\n    local decimals_string_length=0\n    local\
    \ decimals_string_length_index=0\n    local decimals_string_length_index=0\n \
    \   local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n    local decimals_string_length_index=0\n\
    \    local decimals_string_length_index=0\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local truncatedNumber\n\n    decimalPart=$(( $number\
    \ % 1 ))\n    integerPart=$(( $number / 1 ))\n    decimals=$(( $decimalPart %\
    \ 10 ))\n    decimal=$(( $decimalPart / 10 ))\n\n    truncatedNumber=$(( $integerPart\
    \ ))\n    truncatedNumber=$(( $truncatedNumber + $decimal ))\n\n    if [ $decimals\
    \ -gt 0 ]; then\n        truncatedNumber=$(( $truncatedNumber + 1 ))\n    fi\n\
    \n    echo \"$truncatedNumber\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp83fbv363.sh: line 18: 3.5 % 1 : syntax error: invalid arithmetic
    operator (error token is ".5 % 1 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimal_string=\"\"\n  local decimal_part=0\n  local decimal_part_string=\"\"\
    \n  local truncate_string=\"\"\n  local truncate_string2=\"\"\n  local truncate_string3=\"\
    \"\n  local truncate_string4=\"\"\n  local truncate_string5=\"\"\n  local truncate_string6=\"\
    \"\n  local truncate_string7=\"\"\n  local truncate_string8=\"\"\n  local truncate_string9=\"\
    \"\n  local truncate_string10=\"\"\n  local truncate_string11=\"\"\n  local truncate_string12=\"\
    \"\n  local truncate_string13=\"\"\n  local truncate_string14=\"\"\n  local truncate_string15=\"\
    \"\n  local truncate_string16=\"\"\n  local truncate_string17=\"\"\n  local truncate_string18=\"\
    \"\n  local truncate_string19=\"\"\n  local truncate_string20=\"\"\n  local truncate_string21=\"\
    \"\n  local truncate_string22=\"\"\n  local truncate_string23=\"\"\n  local truncate_string24=\"\
    \"\n  local truncate_string25=\"\"\n  local truncate_string26=\"\"\n  local truncate_string27=\"\
    \"\n  local truncate_string28=\"\"\n  local truncate_string29=\"\"\n  local truncate_string30=\"\
    \"\n  local truncate_string31=\"\"\n  local truncate_string32=\"\"\n  local truncate_string33=\"\
    \"\n  local truncate_string34=\"\"\n  local truncate_string35=\"\"\n  local truncate_string36=\"\
    \"\n  local truncate_string37=\"\"\n  local truncate_string38=\"\"\n  local truncate_string39=\"\
    \"\n  local truncate_string40=\"\"\n  local truncate_string41=\"\"\n  local truncate_string42=\"\
    \"\n  local truncate_string43=\"\"\n  local truncate_string44=\"\"\n  local truncate_string45=\"\
    \"\n  local truncate_string46=\"\"\n  local truncate_string47=\"\"\n  local truncate_string48=\"\
    \"\n  local truncate_string49=\"\"\n  local truncate_string50=\"\"\n  local truncate_string51=\"\
    \"\n  local truncate_string52=\"\"\n  local truncate_string53=\"\"\n  local truncate_string54=\"\
    \"\n  local truncate_string55=\"\"\n  local truncate_string56=\"\"\n  local truncate_string57=\"\
    \"\n  local truncate_string58=\"\"\n  local truncate_string59=\"\"\n  local trun\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local truncatedNumber\n\n    if [[ $number == *[!0-9]*\
    \ ]]; then\n        echo \"Invalid input: ${number} is not a positive floating\
    \ point number\"\n        return 1\n    fi\n\n    decimalPart=$(( number % 1 ))\n\
    \    integerPart=$(( number / decimalPart ))\n    decimal=$(( decimalPart ))\n\
    \n    while [[ $decimal > 0 ]]; do\n        decimalPart=$(( decimalPart * 10 ))\n\
    \        decimal=$(( decimal - 1 ))\n    done\n\n    truncatedNumber=$(( integerPart\
    \ + decimalPart ))\n\n    echo ${truncatedNumber}\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_int trunc_number_dec\n  local trunc_number_dec_int trunc_number_dec_int\n\
    \  local trunc_number_dec_float\n  local trunc_number_dec_float_int trunc_number_dec_float_int\n\
    \  local trunc_number_dec_float_float\n  local trunc_number_dec_float_float_int\
    \ trunc_number_dec_float_float_int\n  local trunc_number_dec_float_float_float\n\
    \  local trunc_number_dec_float_float_float_int trunc_number_dec_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float\n  local trunc_number_dec_float_float_float_float_int\
    \ trunc_number_dec_float_float_float_float_int\n  local trunc_number_dec_float_float_float_float_float\n\
    \  local trunc_number_dec_float_float_float_float_float_int trunc_number_dec_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float_float\n  local\
    \ trunc_number_dec_float_float_float_float_float_float_float_int\n  local trunc_number_dec_float_float_float_float_float_float_float_float\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float_int\n  local\
    \ trunc_number_dec_float_float_float_float_float_float_float_float\n  local trunc_number_dec_float_float_float_float_float_float_float_int\n\
    \  local trunc_number_dec_float_float_float_float_float_float_float_float\n  local\
    \ trunc_number_dec_float_float_float_float_float_float_float_int\n  local trun\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local truncate_decimal\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local truncate_number\n  local truncate_number\n\
    \  local truncate_number\n  local truncate_number\n  local truncate_number\n \
    \ local truncate_number\n  local truncate_number\n  local truncate_number\n  local\
    \ truncate_number\n  local truncate_number\n  local \n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartCount\n  local decimalPartCountMax\n  local decimalPartCountMin\n\
    \  local decimalPartCountMinMax\n  local decimalPartCountMinMaxMax\n  local decimalPartCountMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMaxMaxMaxMaxMaxMax\n}\n\ncandidate() {\n   \
    \ truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\"\
    ) = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string_index=0\n    local decimals_string_length=0\n    local\
    \ decimals_string_length_index=0\n    local decimals_string_length_index2=0\n\
    \    local decimals_string_length_index3=0\n    local decimals_string_length_index4=0\n\
    \    local decimals_string_length_index5=0\n    local decimals_string_length_index6=0\n\
    \    local decimals_string_length_index7=0\n    local decimals_string_length_index8=0\n\
    \    local decimals_string_length_index9=0\n    local decimals_string_length_index10=0\n\
    \    local decimals_string_length_index11=0\n    local decimals_string_length_index12=0\n\
    \    local decimals_string_length_index13=0\n    local decimals_string_length_index14=0\n\
    \    local decimals_string_length_index15=0\n    local decimals_string_length_index16=0\n\
    \    local decimals_string_length_index17=0\n    local decimals_string_length_index18=0\n\
    \    local decimals_string_length_index19=0\n    local decimals_string_length_index20=0\n\
    \    local decimals_string_length_index21=0\n    local decimals_string_length_index22=0\n\
    \    local decimals_string_length_index23=0\n    local decimals_string_length_index24=0\n\
    \    local decimals_string_length_index25=0\n    local decimals_string_length_index26=0\n\
    \    local decimals_string_length_index27=0\n    local decimals_string_length_index28=0\n\
    \    local decimals_string_length_index29=0\n    local decimals_string_length_index30=0\n\
    \    local decimals_string_length_index31=0\n    local decimals_string_length_index32=0\n\
    \    local decimals_string_length_index33=0\n    local decimals_string_length_index34=0\n\
    \    local decimals_string_length_index35=0\n    local decimals_string_length_index36=0\n\
    \    local decimals_string_length_index37=0\n    local decimals_string_length_index38=0\n\
    \    local decimals_string_length_index39=0\n    local decimals_string_length_index40=0\n\
    \    local decimals_string_length_index41=0\n    local decimals_string_length_index42=0\n\
    \    local decimals_string_length_index43=0\n    local decimals_string_length_index44=0\n\
    \    local decimals_string_length_index45=0\n    local decimals_string_length_index46=0\n\
    \    local decimals_string_length_index47=0\n    local decimals_string_length_index48\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number_in_int=0\n    local trunc_number_in_float=0\n    local trunc_number_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float=0\n    local trunc_number_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_int=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float=0\n    local\
    \ trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_float_in_int=0\n\
    \    local trunc_number_in_float_in_float_in_float_in_float_in_float_in_float_in_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local x=\"$1\"\n    local d=0\n    local i\n    local f\n    local n\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n\
    \    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n\
    \    local f\n    local g\n    \n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local trunc_number=0\n    local trunc_number_string=\"\"\n    local trunc_number_string2=\"\
    \"\n    local trunc_number_string3=\"\"\n    local trunc_number_string4=\"\"\n\
    \    local trunc_number_string5=\"\"\n    local trunc_number_string6=\"\"\n  \
    \  local trunc_number_string7=\"\"\n    local trunc_number_string8=\"\"\n    local\
    \ trunc_number_string9=\"\"\n    local trunc_number_string10=\"\"\n    local trunc_number_string11=\"\
    \"\n    local trunc_number_string12=\"\"\n    local trunc_number_string13=\"\"\
    \n    local trunc_number_string14=\"\"\n    local trunc_number_string15=\"\"\n\
    \    local trunc_number_string16=\"\"\n    local trunc_number_string17=\"\"\n\
    \    local trunc_number_string18=\"\"\n    local trunc_number_string19=\"\"\n\
    \    local trunc_number_string20=\"\"\n    local trunc_number_string21=\"\"\n\
    \    local trunc_number_string22=\"\"\n    local trunc_number_string23=\"\"\n\
    \    local trunc_number_string24=\"\"\n    local trunc_number_string25=\"\"\n\
    \    local trunc_number_string26=\"\"\n    local trunc_number_string27=\"\"\n\
    \    local trunc_number_string28=\"\"\n    local trunc_number_string29=\"\"\n\
    \    local trunc_number_string30=\"\"\n    local trunc_number_string31=\"\"\n\
    \    local trunc_number_string32=\"\"\n    local trunc_number_string33=\"\"\n\
    \    local trunc_number_string34=\"\"\n    local trunc_number_string35=\"\"\n\
    \    local trunc_number_string36=\"\"\n    local trunc_number_string37=\"\"\n\
    \    local trunc_number_string38=\"\"\n    local trunc_number_string39=\"\"\n\
    \    local trunc_number_string40=\"\"\n    local trunc_number_string41=\"\"\n\
    \    local trunc_number_string42=\"\"\n    local trunc_number_string43=\"\"\n\
    \    local trunc_number_string44=\"\"\n    local trunc_number_string45=\"\"\n\
    \    local trunc_number_string46=\"\"\n    local trunc_number_string47=\"\"\n\
    \    local trunc_number_string48=\"\"\n    local trunc_number_string49=\"\"\n\
    \    local trunc_number_string50=\"\"\n    local trunc_number_string51=\"\"\n\
    \    local trunc_number_string52=\"\"\n    local trunc_number_string53=\"\"\n\
    \    local trunc_number_string54=\"\"\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_digits=0\n  local trunc_digits_left=0\n  local trunc_digits_right=0\n\
    \  local trunc_digits_left_to_right=0\n  local trunc_digits_right_to_left=0\n\
    \  local trunc_digits_left_to_right_digits=0\n  local trunc_digits_right_to_left_digits=0\n\
    \  local trunc_digits_left_to_right_digits_left=0\n  local trunc_digits_right_to_left_digits_left=0\n\
    \  local trunc_digits_left_to_right_digits_right=0\n  local trunc_digits_right_to_left_digits_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right=0\n  local trunc_digits_right_to_left_digits_left_to_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits=0\n  local trunc_digits_right_to_left_digits_left_to_right_digits=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left=0\n  local\
    \ trunc_digits_right_to_left_digits_left_to_right_digits_left=0\n  local trunc_digits_left_to_right_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_right=0\n  local\
    \ trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right=0\n  local\
    \ trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right=0\n  local\
    \ trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits_left=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_right_to_left_digits_left_to_right_digits_left_to_right_digits_right=0\n\
    \  local trunc_digits_left_to_right_digits_left_to_right_digits_left_to_right_digits_left_to_right=0\n\
    \  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals_string\n\
    \  local decimal_string\n  local decimal_string_index\n  local decimal_string_index\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n  local decimal_string_length\n  local decimal_string_length\n\
    \  local decimal_string_length\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimalPart\n\
    \    local integerPart\n    local integerPartLength\n    local integerPartLengthRemainder\n\
    \    local integerPartRemainder\n    local integerPartRemainderLength\n    local\
    \ integerPartRemainderLengthRemainder\n    local integerPartRemainderRemainder\n\
    \    local integerPartRemainderRemainderLength\n    local integerPartRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainder\n    local integerPartRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderLengthRemainder\n    local integerPartRemainderRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderLength\n    local integerPartRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainder\n    local\
    \ integerPartRemainderRemainderRemainderRemainderRemainderLength\n    local integerPartRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLength\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderLengthRemainder\n\
    \    local integerPartRemainderRemainderRemain\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local decimalPartString\n  local integerPartString\n\n\
    \  decimalPartString=$(echo \"$number\" | awk '{print substr($0, index($0, $1)\
    \ + 1, length($0))}')\n  integerPartString=$(echo \"$number\" | awk '{print substr($0,\
    \ index($0, $1) + 1, length($0))}')\n\n  decimalPart=$(echo \"$decimalPartString\"\
    \ | awk '{print substr($0, index($0, $1) + 1, length($0))}')\n  integerPart=$(echo\
    \ \"$integerPartString\" | awk '{print substr($0, index($0, $1) + 1, length($0))}')\n\
    \n  decimals=$(echo \"$decimalPartString\" | awk '{print length($0)}')\n\n  if\
    \ [ \"$decimals\" -gt 0 ]; then\n    decimalPartString=$(echo \"$decimalPartString\"\
    \ | awk '{print substr($0, index($0, $1) + 1, length($0))}')\n    decimalPart=$(echo\
    \ \"$decimalPartString\" | awk '{print substr($0, index($0, $1) + 1, length($0))}')\n\
    \  fi\n\n  echo \"$decimalPart\"\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number=0\n  local trunc_number_string=\"\"\n\n  decimals=$(( (10#$number\
    \ % 10) | 0 ))\n  decimals_string=$(( 10#$decimals ))\n  trunc_number=$(( 10#$number\
    \ / 10 ))\n  trunc_number_string=$(( 10#$trunc_number ))\n\n  echo \"$trunc_number_string$decimals_string\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwyy4iajy.sh: line 17: (10#3.5 % 10) | 0 : syntax error: invalid
    arithmetic operator (error token is ".5 % 10) | 0 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local decimals=0\n  local dec\n\
    \  local decstr\n  local decstrlen\n  local decstrlen2\n  local decstrlen3\n \
    \ local decstrlen4\n  local decstrlen5\n  local decstrlen6\n  local decstrlen7\n\
    \  local decstrlen8\n  local decstrlen9\n  local decstrlen10\n  local decstrlen11\n\
    \  local decstrlen12\n  local decstrlen13\n  local decstrlen14\n  local decstrlen15\n\
    \  local decstrlen16\n  local decstrlen17\n  local decstrlen18\n  local decstrlen19\n\
    \  local decstrlen20\n  local decstrlen21\n  local decstrlen22\n  local decstrlen23\n\
    \  local decstrlen24\n  local decstrlen25\n  local decstrlen26\n  local decstrlen27\n\
    \  local decstrlen28\n  local decstrlen29\n  local decstrlen30\n  local decstrlen31\n\
    \  local decstrlen32\n  local decstrlen33\n  local decstrlen34\n  local decstrlen35\n\
    \  local decstrlen36\n  local decstrlen37\n  local decstrlen38\n  local decstrlen39\n\
    \  local decstrlen40\n  local decstrlen41\n  local decstrlen42\n  local decstrlen43\n\
    \  local decstrlen44\n  local decstrlen45\n  local decstrlen46\n  local decstrlen47\n\
    \  local decstrlen48\n  local decstrlen49\n  local decstrlen50\n  local decstrlen51\n\
    \  local decstrlen52\n  local decstrlen53\n  local decstrlen54\n  local decstrlen55\n\
    \  local decstrlen56\n  local decstrlen57\n  local decstrlen58\n  local decstrlen59\n\
    \  local decstrlen60\n  local decstrlen61\n  local decstrlen62\n  local decstrlen63\n\
    \  local decstrlen64\n  local decstrlen65\n  local decstrlen66\n  local decstrlen67\n\
    \  local decstrlen68\n  local decstrlen69\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    local truncate_number\n    decimal=$(echo \"$number\"\
    \ | awk '{print $1/10}')\n    integer=$(echo \"$number\" | awk '{print $1-$decimal*10}')\n\
    \    remainder=$(echo \"$number\" | awk '{print $1-$decimal*10*10}')\n    if [\
    \ \"$decimal\" -gt 0 ]; then\n        decimals=$decimal\n    else\n        decimals=0\n\
    \    fi\n    if [ \"$integer\" -gt 0 ]; then\n        truncate_number=$integer\n\
    \    else\n        truncate_number=0\n    fi\n    if [ \"$remainder\" -gt 0 ];\
    \ then\n        truncate_number=$truncate_number\".\"$decimals\n    else\n   \
    \     truncate_number=$truncate_number\".0\"\n    fi\n    echo \"$truncate_number\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmply1eture.sh: line 20: [: 0.35: integer expression expected

    /tmp/tmply1eture.sh: line 25: [: -31.5: integer expression expected

    /tmp/tmply1eture.sh: line 30: [: -346.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPartLength\n  local decimalPartLength\n \
    \ local decimalPartLengthRemainder\n  local decimalPartRemainder\n  local decimalPartRemainderLength\n\
    \  local decimalPartRemainderLengthRemainder\n  local decimalPartRemainderRemainder\n\
    \  local decimalPartRemainderRemainderLength\n  local decimalPartRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLength\n  local decimalPartRemainderRemainderRemainderLengthRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainder\n  local\
    \ decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainder\n  local\
    \ decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainderRemainder\n\
    \  local decimalPartRemainderRemainderRemainderLengthRemainderRemainderRemainderRemainderRemain\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local trunc_number\n    local trunc_number_int trunc_number_dec\n    local\
    \ trunc_number_dec_int trunc_number_dec_int\n    local trunc_number_dec_float\n\
    \    local trunc_number_dec_float_int trunc_number_dec_float_int\n    local trunc_number_dec_float_float\n\
    \    local trunc_number_dec_float_float_int trunc_number_dec_float_float_int\n\
    \    local trunc_number_dec_float_float_float\n    local trunc_number_dec_float_float_float_int\
    \ trunc_number_dec_float_float_float_int\n    local trunc_number_dec_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_int trunc_number_dec_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float\n    local trunc_number_dec_float_float_float_float_float_int\
    \ trunc_number_dec_float_float_float_float_float_int\n    local trunc_number_dec_float_float_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_float_float_int trunc_number_dec_float_float_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float\n    local\
    \ trunc_number_dec_float_float_float_float_float_float_float_int trunc_number_dec_float_float_float_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_int\
    \ trunc_number_dec_float_float_float_float_float_float_float_float_int\n    local\
    \ trunc_number_dec_float_float_float_float_float_float_float_float_float\n   \
    \ local trunc_number_dec_float_float_float_float_float_float_float_float_int trunc_number_dec_float_float_float_float_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float_int\
    \ trunc_number_dec_float_float_float_float_float_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float_float_int\
    \ trunc_number_dec_float_float_float_float_float_float_float_float_float_int\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float_float_float\n\
    \    local trunc_number_dec_float_float_float_float_float_float_float_float_float_float_float_int\
    \ trunc_number_dec_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_length=0\n  local decimals_string_length_index=0\n\
    \  local decimals_string_length_index2=0\n  local decimals_string_length_index3=0\n\
    \  local decimals_string_length_index4=0\n  local decimals_string_length_index5=0\n\
    \  local decimals_string_length_index6=0\n  local decimals_string_length_index7=0\n\
    \  local decimals_string_length_index8=0\n  local decimals_string_length_index9=0\n\
    \  local decimals_string_length_index10=0\n  local decimals_string_length_index11=0\n\
    \  local decimals_string_length_index12=0\n  local decimals_string_length_index13=0\n\
    \  local decimals_string_length_index14=0\n  local decimals_string_length_index15=0\n\
    \  local decimals_string_length_index16=0\n  local decimals_string_length_index17=0\n\
    \  local decimals_string_length_index18=0\n  local decimals_string_length_index19=0\n\
    \  local decimals_string_length_index20=0\n  local decimals_string_length_index21=0\n\
    \  local decimals_string_length_index22=0\n  local decimals_string_length_index23=0\n\
    \  local decimals_string_length_index24=0\n  local decimals_string_length_index25=0\n\
    \  local decimals_string_length_index26=0\n  local decimals_string_length_index27=0\n\
    \  local decimals_string_length_index28=0\n  local decimals_string_length_index29=0\n\
    \  local decimals_string_length_index30=0\n  local decimals_string_length_index31=0\n\
    \  local decimals_string_length_index32=0\n  local decimals_string_length_index33=0\n\
    \  local decimals_string_length_index34=0\n  local decimals_string_length_index35=0\n\
    \  local decimals_string_length_index36=0\n  local decimals_string_length_index37=0\n\
    \  local decimals_string_length_index38=0\n  local decimals_string_length_index39=0\n\
    \  local decimals_string_length_index40=0\n  local decimals_string_length_index41=0\n\
    \  local decimals_string_length_index42=0\n  local decimals_string_length_index43=0\n\
    \  local decimals_string_length_index44=0\n  local decimals_string_length_index45=0\n\
    \  local decimals_string_length_index46=0\n  local decimals_string_length_index47=0\n\
    \  local decimals_string_length_index48\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder=0\n    local decimals_string=\"\"\n    local integer_string=\"\"\n\
    \n    # Check if number is negative\n    if [ $number -lt 0 ]; then\n        echo\
    \ \"Error: negative number\"\n        return 1\n    fi\n\n    # Check if number\
    \ is zero\n    if [ $number -eq 0 ]; then\n        echo \"Error: zero number\"\
    \n        return 1\n    fi\n\n    # Check if number is positive\n    if [ $number\
    \ -gt 1 ]; then\n        echo \"Error: positive number\"\n        return 1\n \
    \   fi\n\n    # Check if number is integer\n    if [ $number -eq 1 ]; then\n \
    \       echo \"Error: integer number\"\n        return 1\n    fi\n\n    # Check\
    \ if number is decimal\n    if [ $number -eq 0 ]; then\n        echo \"Error:\
    \ decimal number\"\n        return 1\n    fi\n\n    # Check if number is zero\n\
    \    if [ $number -eq 0 ]; then\n        echo \"Error: zero number\"\n       \
    \ return 1\n    fi\n\n    # Check if number is positive\n    if [ $number -gt\
    \ 1 ]; then\n        echo \"Error: positive number\"\n        return 1\n    fi\n\
    \n    # Check if number is integer\n    if [ $number -eq 1 ]; then\n        echo\
    \ \"Error: integer number\"\n        return 1\n    fi\n\n    # Check if number\
    \ is decimal\n    if [ $number -eq 0 ]; then\n        echo \"Error: decimal number\"\
    \n        return 1\n    fi\n\n    # Check if number is zero\n    if [ $number\
    \ -eq 0 ]; then\n        echo \"Error: zero number\"\n        return 1\n    fi\n\
    \n    # Check if number is positive\n    if [ $number -gt 1 ]; then\n        echo\
    \ \"Error: positive number\"\n        return 1\n    fi\n\n    # Check if number\
    \ is integer\n    if [ $number -eq 1 ]; then\n        echo \"Error: integer number\"\
    \n        return 1\n    fi\n\n    # Check if number is decimal\n    if [ $number\
    \ -eq 0 ]; then\n        echo \"Error: decimal number\"\n        return 1\n  \
    \  fi\n\n    # Check if number is zero\n    if [ $number -eq 0 ]; then\n     \
    \   echo \"Error: zero number\"\n        return 1\n    fi\n\n    # Check if number\
    \ is positive\n    if [ $number -gt 1 ]; then\n        echo \"Error: positive\
    \ number\"\n        return 1\n    fi\n\n    # Check if number is integer\n   \
    \ if [ $number -eq 1 ]; then\n        echo \"Error: integer number\"\n       \
    \ return 1\n    fi\n\n    # Check if number is decimal\n    if [ $number -eq 0\
    \ ]; then\n        echo \"Error: decimal number\"\n        return 1\n    fi\n\n\
    \    # Check if number is zero\n    if [ $number -eq 0 ]; then\n        echo \"\
    Error: zero number\"\n        return 1\n    fi\n\n    # Check if number is positive\n\
    \    if [ $number -gt 1 ]; then\n        echo \"Error: positive number\"\n   \
    \     return 1\n    fi\n\n    # Check if number is integer\n    if [ $\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu57g4q7k.sh: line 134: syntax error near unexpected token `}''

    /tmp/tmpu57g4q7k.sh: line 134: `}''

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local decimalPartCount\n  local decimalPartCountMax\n  local decimalPartCountMin\n\
    \  local decimalPartCountMinMax\n  local decimalPartCountMinMaxMax\n  local decimalPartCountMinMaxMaxMin\n\
    \  local decimalPartCountMinMaxMaxMinMax\n  local decimalPartCountMinMaxMaxMinMaxMinMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n  local\
    \ decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCountMinMaxMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\n\
    \  local decimalPartCount\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local decimals_left_in_number=0\n    local decimals_left_in_number_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals=0\n    local decimals_left_in_number_after_decimals_left=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals=0\n    local\
    \ decimals_left_in_number_after_decimals_left_in_decimals_left=0\n    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals_left=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals_left_in_decimals_left_in_number_in_decimals=0\n\
    \    local decimals_left_in_number_after_decimals_left_in_decimal\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_left=0\n  local trunc_number=0\n\
    \  local trunc_number_index=0\n  local trunc_number_string=\"\"\n  local trunc_number_string_index=0\n\
    \  local trunc_number_string_length=0\n\n  while [ $number -gt 0 ]; do\n    decimals_left=$((\
    \ decimals_left + 1 ))\n    trunc_number=$(( trunc_number + number % 10 ))\n \
    \   number=$(( number / 10 ))\n  done\n\n  while [ $decimals_left -gt 0 ]; do\n\
    \    decimals_left=$(( decimals_left - 1 ))\n    trunc_number_string=$(( trunc_number_string\
    \ + \".\" ))\n  done\n\n  while [ $decimals_left -gt 0 ]; do\n    decimals_left=$((\
    \ decimals_left - 1 ))\n    trunc_number_string=$(( trunc_number_string + \"0\"\
    \ ))\n  done\n\n  while [ $decimals_left -gt 0 ]; do\n    decimals_left=$(( decimals_left\
    \ - 1 ))\n    trunc_number_string=$(( trunc_number_string + trunc_number ))\n\
    \    trunc_number=$(( trunc_number / 10 ))\n  done\n\n  while [ $decimals_left\
    \ -gt 0 ]; do\n    decimals_left=$(( decimals_left - 1 ))\n    trunc_number_string=$((\
    \ trunc_number_string + \"0\" ))\n  done\n\n  while [ $decimals_left -gt 0 ];\
    \ do\n    decimals_left=$(( decimals_left - 1 ))\n    trunc_number_string=$((\
    \ trunc_number_string + trunc_number ))\n    trunc_number=$(( trunc_number / 10\
    \ ))\n  done\n\n  while [ $decimals_left -gt 0 ]; do\n    decimals_left=$(( decimals_left\
    \ - 1 ))\n    trunc_number_string=$(( trunc_number_string + \"0\" ))\n  done\n\
    \n  while [ $decimals_left -gt 0 ]; do\n    decimals_left=$(( decimals_left -\
    \ 1 ))\n    trunc_number_string=$(( trunc_number_string + trunc_number ))\n  \
    \  trunc_number=$(( trunc_number / 10 ))\n  done\n\n  while [ $decimals_left -gt\
    \ 0 ]; do\n    decimals_left=$(( decimals_left - 1 ))\n    trunc_number_string=$((\
    \ trun\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptjm5i676.sh: line 66: unexpected EOF while looking for matching
    `)''

    /tmp/tmptjm5i676.sh: line 81: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  local integerPart\n  local integerPart\n\
    \  local integerPart\n  local integerPart\n  \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \  local trunc_number_index\n  local trunc_number_index2\n  local trunc_number_index3\n\
    \  local trunc_number_index4\n  local trunc_number_index5\n  local trunc_number_index6\n\
    \  local trunc_number_index7\n  local trunc_number_index8\n  local trunc_number_index9\n\
    \  local trunc_number_index10\n  local trunc_number_index11\n  local trunc_number_index12\n\
    \  local trunc_number_index13\n  local trunc_number_index14\n  local trunc_number_index15\n\
    \  local trunc_number_index16\n  local trunc_number_index17\n  local trunc_number_index18\n\
    \  local trunc_number_index19\n  local trunc_number_index20\n  local trunc_number_index21\n\
    \  local trunc_number_index22\n  local trunc_number_index23\n  local trunc_number_index24\n\
    \  local trunc_number_index25\n  local trunc_number_index26\n  local trunc_number_index27\n\
    \  local trunc_number_index28\n  local trunc_number_index29\n  local trunc_number_index30\n\
    \  local trunc_number_index31\n  local trunc_number_index32\n  local trunc_number_index33\n\
    \  local trunc_number_index34\n  local trunc_number_index35\n  local trunc_number_index36\n\
    \  local trunc_number_index37\n  local trunc_number_index38\n  local trunc_number_index39\n\
    \  local trunc_number_index40\n  local trunc_number_index41\n  local trunc_number_index42\n\
    \  local trunc_number_index43\n  local trunc_number_index44\n  local trunc_number_index45\n\
    \  local trunc_number_index46\n  local trunc_number_index47\n  local trunc_number_index48\n\
    \  local trunc_number_index49\n  local trunc_number_index50\n  local trunc_number_index51\n\
    \  local trunc_number_index52\n  local trunc_number_index53\n  local trunc_number_index54\n\
    \  local trunc_number_index55\n  local trunc_number_index56\n  local trunc_number_index57\n\
    \  local trunc_number_index58\n  local trunc_number_index59\n  local trunc_number_index60\n\
    \  local trunc_number_index61\n  local trun\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local result\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local decimalPartLength\n  local integerPartLength\n  local decimalPartLength\n\
    \  local integerPartLength\n  local decimalPartLength\n  local integerPartLength\n\
    \  local \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPart\n  local remainder\n  local remainderPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n  local decimalPart\n  local decimalPart\n\
    \  local decimalPart\n  local decimalPart\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_index2=0\n  local decimals_string_index3=0\n\
    \  local decimals_string_index4=0\n  local decimals_string_index5=0\n  local decimals_string_index6=0\n\
    \  local decimals_string_index7=0\n  local decimals_string_index8=0\n  local decimals_string_index9=0\n\
    \  local decimals_string_index10=0\n  local decimals_string_index11=0\n  local\
    \ decimals_string_index12=0\n  local decimals_string_index13=0\n  local decimals_string_index14=0\n\
    \  local decimals_string_index15=0\n  local decimals_string_index16=0\n  local\
    \ decimals_string_index17=0\n  local decimals_string_index18=0\n  local decimals_string_index19=0\n\
    \  local decimals_string_index20=0\n  local decimals_string_index21=0\n  local\
    \ decimals_string_index22=0\n  local decimals_string_index23=0\n  local decimals_string_index24=0\n\
    \  local decimals_string_index25=0\n  local decimals_string_index26=0\n  local\
    \ decimals_string_index27=0\n  local decimals_string_index28=0\n  local decimals_string_index29=0\n\
    \  local decimals_string_index30=0\n  local decimals_string_index31=0\n  local\
    \ decimals_string_index32=0\n  local decimals_string_index33=0\n  local decimals_string_index34=0\n\
    \  local decimals_string_index35=0\n  local decimals_string_index36=0\n  local\
    \ decimals_string_index37=0\n  local decimals_string_index38=0\n  local decimals_string_index39=0\n\
    \  local decimals_string_index40=0\n  local decimals_string_index41=0\n  local\
    \ decimals_string_index42=0\n  local decimals_string_index43=0\n  local decimals_string_index44=0\n\
    \  local decimals_string_index45=0\n  local decimals_string_index46=0\n  local\
    \ decimals_string_index47=0\n  local decimals_string_index48=0\n  local decimals_string_index49=0\n\
    \  local decimals_string_index50=0\n  local decimals_string_index51=0\n  local\
    \ decimals_string_index52=0\n  local decimals_string_index53=0\n  local decimals_string_index54=0\n\
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimal=0\n  local truncate_decimal=0\n  local truncate_number=0\n  local\
    \ truncate_numbers=0\n  local truncate_numbers_string=\"\"\n  local truncate_numbers_strings=\"\
    \"\n  local truncate_numbers_strings_array=()\n  local truncate_numbers_strings_array_length=-1\n\
    \  local truncate_numbers_strings_array_lengths=()\n  local truncate_numbers_strings_array_lengths_array=()\n\
    \  local truncate_numbers_strings_array_lengths_array_length=-1\n  local truncate_numbers_strings_array_lengths_array_lengths=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array=()\n  local\
    \ truncate_numbers_strings_array_lengths_array_lengths_array_length=-1\n  local\
    \ truncate_numbers_strings_array_lengths_array_lengths_array_lengths=()\n  local\
    \ truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_length=-1\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_length=-1\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_length=-1\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array=()\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_array_length=-1\n\
    \  local truncate_numbers_strings_array_lengths_array_lengths_array_lengths_array_lengths_array_lengths_\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local trunc_number\n\
    \n  decimal=$(echo \"$number\" | awk '{print int($1/1)}')\n  trunc_number=$((\
    \ $number / $decimal ))\n  decimals=$(( $decimal - 1 ))\n\n  echo \"$trunc_number\"\
    \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu9j0wed4.sh: line 17: 3.5 / 3 : syntax error: invalid arithmetic
    operator (error token is ".5 / 3 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n    local decimal\n\
    \    local decimal\n    local decimal\n    local decimal\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_number_in_decimals=0\n    local trunc_number_string=\"\
    \"\n    local trunc_number_string_in_decimals=\"\"\n    local trunc_number_string_in_int=\"\
    \"\n    local trunc_number_string_in_int2=\"\"\n    local trunc_number_string_in_int3=\"\
    \"\n    local trunc_number_string_in_int4=\"\"\n    local trunc_number_string_in_int5=\"\
    \"\n    local trunc_number_string_in_int6=\"\"\n    local trunc_number_string_in_int7=\"\
    \"\n    local trunc_number_string_in_int8=\"\"\n    local trunc_number_string_in_int9=\"\
    \"\n    local trunc_number_string_in_int10=\"\"\n    local trunc_number_string_in_int11=\"\
    \"\n    local trunc_number_string_in_int12=\"\"\n    local trunc_number_string_in_int13=\"\
    \"\n    local trunc_number_string_in_int14=\"\"\n    local trunc_number_string_in_int15=\"\
    \"\n    local trunc_number_string_in_int16=\"\"\n    local trunc_number_string_in_int17=\"\
    \"\n    local trunc_number_string_in_int18=\"\"\n    local trunc_number_string_in_int19=\"\
    \"\n    local trunc_number_string_in_int20=\"\"\n    local trunc_number_string_in_int21=\"\
    \"\n    local trunc_number_string_in_int22=\"\"\n    local trunc_number_string_in_int23=\"\
    \"\n    local trunc_number_string_in_int24=\"\"\n    local trunc_number_string_in_int25=\"\
    \"\n    local trunc_number_string_in_int26=\"\"\n    local trunc_number_string_in_int27=\"\
    \"\n    local trunc_number_string_in_int28=\"\"\n    local trunc_number_string_in_int29=\"\
    \"\n    local trunc_number_string_in_int30=\"\"\n    local trunc_number_string_in_int31=\"\
    \"\n    local trunc_number_string_in_int32=\"\"\n    local trunc_number_string_in_int33=\"\
    \"\n    local trunc_number_string_in_int34=\"\"\n    local trunc_number_string_in_int35=\"\
    \"\n    local trunc_number_string_in_int36=\"\"\n    local trunc_number_string_in_int37=\"\
    \"\n    local trunc_number_string_in_int38=\"\"\n    local trunc_number_string_in_int39=\"\
    \"\n    local trunc_number_string_in_int40=\"\"\n    local trunc_number_string_in_int41=\"\
    \"\n    local trunc_\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  for i in $(seq 1 $((${#x}-1)));\
    \ do\n    d=$((${d} + ${x:$i:1}))\n  done\n  echo \"$d\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjh94bdd_.sh: line 15: 0 + .: syntax error: operand expected (error
    token is ".")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 2
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local trunc_num=$1\n    local trunc_num_dec=$((trunc_num % 1))\n    local\
    \ trunc_num_int=$((trunc_num / 1))\n    local trunc_num_int=$((trunc_num_int %\
    \ 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num_int / 1))\n    local trunc_num_int=$((trunc_num_int\
    \ % 1))\n    local trunc_num_int=$((trunc_num\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnnodapki.sh: line 43: unexpected EOF while looking for matching
    `)''

    /tmp/tmpnnodapki.sh: line 58: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ trunc_number\n  local trunc_number_string\n  local trunc_number_string2\n  local\
    \ trunc_number_string3\n  local trunc_number_string4\n  local trunc_number_string5\n\
    \  local trunc_number_string6\n  local trunc_number_string7\n  local trunc_number_string8\n\
    \  local trunc_number_string9\n  local trunc_number_string10\n  local trunc_number_string11\n\
    \  local trunc_number_string12\n  local trunc_number_string13\n  local trunc_number_string14\n\
    \  local trunc_number_string15\n  local trunc_number_string16\n  local trunc_number_string17\n\
    \  local trunc_number_string18\n  local trunc_number_string19\n  local trunc_number_string20\n\
    \  local trunc_number_string21\n  local trunc_number_string22\n  local trunc_number_string23\n\
    \  local trunc_number_string24\n  local trunc_number_string25\n  local trunc_number_string26\n\
    \  local trunc_number_string27\n  local trunc_number_string28\n  local trunc_number_string29\n\
    \  local trunc_number_string30\n  local trunc_number_string31\n  local trunc_number_string32\n\
    \  local trunc_number_string33\n  local trunc_number_string34\n  local trunc_number_string35\n\
    \  local trunc_number_string36\n  local trunc_number_string37\n  local trunc_number_string38\n\
    \  local trunc_number_string39\n  local trunc_number_string40\n  local trunc_number_string41\n\
    \  local trunc_number_string42\n  local trunc_number_string43\n  local trunc_number_string44\n\
    \  local trunc_number_string45\n  local trunc_number_string46\n  local trunc_number_string47\n\
    \  local trunc_number_string48\n  local trunc_number_string49\n  local trunc_number_string50\n\
    \  local trunc_number_string51\n  local trunc_number_string52\n  local trunc_number_string53\n\
    \  local trunc_number_string54\n  local trunc_number_string55\n  local trunc_number_string56\n\
    \  local trunc_number_string57\n  local trunc_number_string58\n  local trunc_number_string59\n\
    \  local trunc_number_string60\n  local trunc_number_string61\n\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local m\n  local n\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n\
    \  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n\
    \  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n\
    \  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n\
    \  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n\
    \  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n\
    \  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n\
    \  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n\
    \  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n\
    \  local f\n  local g\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local decimals_str\n\
    \    local decimal_str\n    local truncate_str\n    local truncate_str_reversed\n\
    \    local truncate_str_reversed_reversed\n    local truncate_str_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed\n    local truncate_str_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local truncate_str_re\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_left=0\n  \
    \  local trunc_number=0\n\n    if [[ $number == *[!0-9]* ]]; then\n        echo\
    \ \"$number\" | awk '{printf \"Invalid input. Number must be numeric.\"}'\n  \
    \      return 1\n    fi\n\n    if [[ $number == *[!0-9.]* ]]; then\n        echo\
    \ \"$number\" | awk '{printf \"Invalid input. Number must be numeric.\"}'\n  \
    \      return 1\n    fi\n\n    decimals=$(( ${#number} - 1 ))\n    decimals_left=$((\
    \ ${#number} - decimals ))\n\n    trunc_number=$(( ${number%.*} ))\n\n    if [[\
    \ $decimals_left == 0 ]]; then\n        echo \"$trunc_number\"\n        return\
    \ 0\n    fi\n\n    trunc_number=$(( ${trunc_number%.*} ))\n\n    echo \"$trunc_number\"\
    \n    return 0\n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"\
    1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local integer\n\
    \    local remainder\n    local result\n    decimal=$(( 10#$number % 10 ))\n \
    \   decimals=$(( 10#$decimals % 10 ))\n    integer=$(( 10#$number / 10 ))\n  \
    \  remainder=$(( 10#$number % 10 ))\n    if [ $decimals -gt 0 ]; then\n      \
    \  result=$(( 10#$integer + $decimal + $decimals ))\n    else\n        result=$((\
    \ 10#$integer + $decimal ))\n    fi\n    if [ $remainder -gt 0 ]; then\n     \
    \   result=$(( 10#$result + $remainder ))\n    fi\n    echo \"$result\"\n}\n\n\
    candidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps8bfmli3.sh: line 17: 10#3.5 % 10 : syntax error: invalid arithmetic
    operator (error token is ".5 % 10 ")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local x=\"$1\"\n  local d=0\n  local i\n  local decimals=0\n  local dec\n\
    \  local decstr\n  local decstrlen\n  local decstrlen2\n  local decstrlen3\n \
    \ local decstrlen4\n  local decstrlen5\n  local decstrlen6\n  local decstrlen7\n\
    \  local decstrlen8\n  local decstrlen9\n  local decstrlen10\n  local decstrlen11\n\
    \  local decstrlen12\n  local decstrlen13\n  local decstrlen14\n  local decstrlen15\n\
    \  local decstrlen16\n  local decstrlen17\n  local decstrlen18\n  local decstrlen19\n\
    \  local decstrlen20\n  local decstrlen21\n  local decstrlen22\n  local decstrlen23\n\
    \  local decstrlen24\n  local decstrlen25\n  local decstrlen26\n  local decstrlen27\n\
    \  local decstrlen28\n  local decstrlen29\n  local decstrlen30\n  local decstrlen31\n\
    \  local decstrlen32\n  local decstrlen33\n  local decstrlen34\n  local decstrlen35\n\
    \  local decstrlen36\n  local decstrlen37\n  local decstrlen38\n  local decstrlen39\n\
    \  local decstrlen40\n  local decstrlen41\n  local decstrlen42\n  local decstrlen43\n\
    \  local decstrlen44\n  local decstrlen45\n  local decstrlen46\n  local decstrlen47\n\
    \  local decstrlen48\n  local decstrlen49\n  local decstrlen50\n  local decstrlen51\n\
    \  local decstrlen52\n  local decstrlen53\n  local decstrlen54\n  local decstrlen55\n\
    \  local decstrlen56\n  local decstrlen57\n  local decstrlen58\n  local decstrlen59\n\
    \  local decstrlen60\n  local decstrlen61\n  local decstrlen62\n  local decstrlen63\n\
    \  local decstrlen64\n  local decstrlen65\n  local decstrlen66\n  local decstrlen67\n\
    \  local decstrlen68\n  local decstrlen69\n\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string2=\"\"\n  local decimals_string3=\"\"\n  local decimals_string4=\"\
    \"\n  local decimals_string5=\"\"\n  local decimals_string6=\"\"\n  local decimals_string7=\"\
    \"\n  local decimals_string8=\"\"\n  local decimals_string9=\"\"\n  local decimals_string10=\"\
    \"\n  local decimals_string11=\"\"\n  local decimals_string12=\"\"\n  local decimals_string13=\"\
    \"\n  local decimals_string14=\"\"\n  local decimals_string15=\"\"\n  local decimals_string16=\"\
    \"\n  local decimals_string17=\"\"\n  local decimals_string18=\"\"\n  local decimals_string19=\"\
    \"\n  local decimals_string20=\"\"\n  local decimals_string21=\"\"\n  local decimals_string22=\"\
    \"\n  local decimals_string23=\"\"\n  local decimals_string24=\"\"\n  local decimals_string25=\"\
    \"\n  local decimals_string26=\"\"\n  local decimals_string27=\"\"\n  local decimals_string28=\"\
    \"\n  local decimals_string29=\"\"\n  local decimals_string30=\"\"\n  local decimals_string31=\"\
    \"\n  local decimals_string32=\"\"\n  local decimals_string33=\"\"\n  local decimals_string34=\"\
    \"\n  local decimals_string35=\"\"\n  local decimals_string36=\"\"\n  local decimals_string37=\"\
    \"\n  local decimals_string38=\"\"\n  local decimals_string39=\"\"\n  local decimals_string40=\"\
    \"\n  local decimals_string41=\"\"\n  local decimals_string42=\"\"\n  local decimals_string43=\"\
    \"\n  local decimals_string44=\"\"\n  local decimals_string45=\"\"\n  local decimals_string46=\"\
    \"\n  local decimals_string47=\"\"\n  local decimals_string48=\"\"\n  local decimals_string49=\"\
    \"\n  local decimals_string50=\"\"\n  local decimals_string51=\"\"\n  local decimals_string52=\"\
    \"\n  local decimals_string53=\"\"\n  local decimals_string54=\"\"\n  local decimals_string55=\"\
    \"\n  local decimals_string56=\"\"\n  local decimals_string57=\"\"\n  local decimals_string58=\"\
    \"\n  local decimals_string59=\"\"\n  local decimals_string60=\"\"\n  local decimals_string61=\"\
    \"\n  local decimals_string62=\"\"\n  local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_number1=0\n    local trunc_number2=0\n    local trunc_number3=0\n\
    \    local trunc_number4=0\n    local trunc_number5=0\n    local trunc_number6=0\n\
    \    local trunc_number7=0\n    local trunc_number8=0\n    local trunc_number9=0\n\
    \    local trunc_number10=0\n    local trunc_number11=0\n    local trunc_number12=0\n\
    \    local trunc_number13=0\n    local trunc_number14=0\n    local trunc_number15=0\n\
    \    local trunc_number16=0\n    local trunc_number17=0\n    local trunc_number18=0\n\
    \    local trunc_number19=0\n    local trunc_number20=0\n    local trunc_number21=0\n\
    \    local trunc_number22=0\n    local trunc_number23=0\n    local trunc_number24=0\n\
    \    local trunc_number25=0\n    local trunc_number26=0\n    local trunc_number27=0\n\
    \    local trunc_number28=0\n    local trunc_number29=0\n    local trunc_number30=0\n\
    \    local trunc_number31=0\n    local trunc_number32=0\n    local trunc_number33=0\n\
    \    local trunc_number34=0\n    local trunc_number35=0\n    local trunc_number36=0\n\
    \    local trunc_number37=0\n    local trunc_number38=0\n    local trunc_number39=0\n\
    \    local trunc_number40=0\n    local trunc_number41=0\n    local trunc_number42=0\n\
    \    local trunc_number43=0\n    local trunc_number44=0\n    local trunc_number45=0\n\
    \    local trunc_number46=0\n    local trunc_number47=0\n    local trunc_number48=0\n\
    \    local trunc_number49=0\n    local trunc_number50=0\n    local trunc_number51=0\n\
    \    local trunc_number52=0\n    local trunc_number53=0\n    local trunc_number54=0\n\
    \    local trunc_number55=0\n    local trunc_number56=0\n    local trunc_number57=0\n\
    \    local trunc_number58=0\n    local trunc_number59=0\n    local trunc_number60=0\n\
    \    local trunc_number61=0\n    local trunc_number\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimal\n    local trunc_number\n\
    \n    # Truncate to integer\n    trunc_number=$((number + 0.5))\n\n    # Truncate\
    \ decimals\n    decimal=$(echo \"$trunc_number % 1\" | bc)\n    while [ \"$decimal\"\
    \ != \"0\" ]; do\n        decimals=$((decimals + 1))\n        trunc_number=$((trunc_number\
    \ - decimal))\n        decimal=$(echo \"$trunc_number % 1\" | bc)\n    done\n\n\
    \    # Return truncated number\n    echo \"$trunc_number\"\n}\n\ncandidate() {\n\
    \    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplj6uhrsj.sh: line 17: 3.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    '
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n  local decimal\n  local decimal\n\
    \  local decimal\n  local decimal\n  local decimal\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local decimals_string=\"\"\
    \n    local decimals_string2=\"\"\n    local decimals_string3=\"\"\n    local\
    \ decimals_string4=\"\"\n    local decimals_string5=\"\"\n    local decimals_string6=\"\
    \"\n    local decimals_string7=\"\"\n    local decimals_string8=\"\"\n    local\
    \ decimals_string9=\"\"\n    local decimals_string10=\"\"\n    local decimals_string11=\"\
    \"\n    local decimals_string12=\"\"\n    local decimals_string13=\"\"\n    local\
    \ decimals_string14=\"\"\n    local decimals_string15=\"\"\n    local decimals_string16=\"\
    \"\n    local decimals_string17=\"\"\n    local decimals_string18=\"\"\n    local\
    \ decimals_string19=\"\"\n    local decimals_string20=\"\"\n    local decimals_string21=\"\
    \"\n    local decimals_string22=\"\"\n    local decimals_string23=\"\"\n    local\
    \ decimals_string24=\"\"\n    local decimals_string25=\"\"\n    local decimals_string26=\"\
    \"\n    local decimals_string27=\"\"\n    local decimals_string28=\"\"\n    local\
    \ decimals_string29=\"\"\n    local decimals_string30=\"\"\n    local decimals_string31=\"\
    \"\n    local decimals_string32=\"\"\n    local decimals_string33=\"\"\n    local\
    \ decimals_string34=\"\"\n    local decimals_string35=\"\"\n    local decimals_string36=\"\
    \"\n    local decimals_string37=\"\"\n    local decimals_string38=\"\"\n    local\
    \ decimals_string39=\"\"\n    local decimals_string40=\"\"\n    local decimals_string41=\"\
    \"\n    local decimals_string42=\"\"\n    local decimals_string43=\"\"\n    local\
    \ decimals_string44=\"\"\n    local decimals_string45=\"\"\n    local decimals_string46=\"\
    \"\n    local decimals_string47=\"\"\n    local decimals_string48=\"\"\n    local\
    \ decimals_string49=\"\"\n    local decimals_string50=\"\"\n    local decimals_string51=\"\
    \"\n    local decimals_string52=\"\"\n    local decimals_string53=\"\"\n    local\
    \ decimals_string54=\"\"\n    local decimals_string55=\"\"\n    local decimals_string56=\"\
    \"\n    local decimals_string57=\"\"\n    local decimals_string58=\"\"\n    local\
    \ decimals_string59=\"\"\n    local decimals_string60=\"\"\n    local decimals_string61=\"\
    \"\n    local decimals_string62=\"\"\n    local decimals_string\n}\n\ncandidate()\
    \ {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate\
    \ \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local integer=0\n    local\
    \ remainder\n    local decimal\n    local decimals\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n    local decimal\n    local remainder\n    local\
    \ decimal\n    local remainder\n}\n\ncandidate() {\n    truncate_number \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[\
    \ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimalPart\n\
    \  local integerPart\n  local integerPartDecimals\n  local integerPartDecimal\n\
    \  local integerPartDecimalsCount\n  local integerPartDecimalsCountMax\n  local\
    \ integerPartDecimalsCountMin\n  local integerPartDecimalsCountMaxMinusOne\n \
    \ local integerPartDecimalsCountMinusOne\n  local integerPartDecimalsCountMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOne\n  local integerPartDecimalsCountMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOne\n  local integerPartDecimalsCountMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOne\n  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOne\n  local\
    \ integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n \
    \ local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    \  local integerPartDecimalsCountMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\n\
    }\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") = \"0.25\"\
    \ ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n    local number=$1\n    local decimals=0\n    local trunc_number=0\n   \
    \ local trunc_decimals=0\n    local trunc_part\n    local trunc_part_decimals\n\
    \    local trunc_part_decimals_str\n    local trunc_part_decimals_str_len\n  \
    \  local trunc_part_decimals_str_len2\n    local trunc_part_decimals_str_len3\n\
    \    local trunc_part_decimals_str_len4\n    local trunc_part_decimals_str_len5\n\
    \    local trunc_part_decimals_str_len6\n    local trunc_part_decimals_str_len7\n\
    \    local trunc_part_decimals_str_len8\n    local trunc_part_decimals_str_len9\n\
    \    local trunc_part_decimals_str_len10\n    local trunc_part_decimals_str_len11\n\
    \    local trunc_part_decimals_str_len12\n    local trunc_part_decimals_str_len13\n\
    \    local trunc_part_decimals_str_len14\n    local trunc_part_decimals_str_len15\n\
    \    local trunc_part_decimals_str_len16\n    local trunc_part_decimals_str_len17\n\
    \    local trunc_part_decimals_str_len18\n    local trunc_part_decimals_str_len19\n\
    \    local trunc_part_decimals_str_len20\n    local trunc_part_decimals_str_len21\n\
    \    local trunc_part_decimals_str_len22\n    local trunc_part_decimals_str_len23\n\
    \    local trunc_part_decimals_str_len24\n    local trunc_part_decimals_str_len25\n\
    \    local trunc_part_decimals_str_len26\n    local trunc_part_decimals_str_len27\n\
    \    local trunc_part_decimals_str_len28\n    local trunc_part_decimals_str_len29\n\
    \    local trunc_part_decimals_str_len30\n    local trunc_part_decimals_str_len31\n\
    \    local trunc_part_decimals_str_len32\n    local trunc_part_decimals_str_len33\n\
    \    local trunc_part_decimals_str_len34\n    local trunc_part_decimals_str_len35\n\
    \    local trunc_part_decimals_str_len36\n    local trunc_part_decimals_str_len37\n\
    \    local trunc_part_decimals_str_len38\n    local trunc_part_decimals_str_len39\n\
    \    local trunc_part_decimals_str_len40\n    local trunc_part_decimals_str_len41\n\
    \    local trunc_part_decimals_str_len42\n    \n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local integer=0\n  local remainder=0\n\
    \  local decimals_tmp=0\n  local integer_tmp=0\n  local remainder_tmp=0\n  local\
    \ decimals_tmp2=0\n  local integer_tmp2=0\n  local remainder_tmp2=0\n  local decimals_tmp3=0\n\
    \  local integer_tmp3=0\n  local remainder_tmp3=0\n  local decimals_tmp4=0\n \
    \ local integer_tmp4=0\n  local remainder_tmp4=0\n  local decimals_tmp5=0\n  local\
    \ integer_tmp5=0\n  local remainder_tmp5=0\n  local decimals_tmp6=0\n  local integer_tmp6=0\n\
    \  local remainder_tmp6=0\n  local decimals_tmp7=0\n  local integer_tmp7=0\n \
    \ local remainder_tmp7=0\n  local decimals_tmp8=0\n  local integer_tmp8=0\n  local\
    \ remainder_tmp8=0\n  local decimals_tmp9=0\n  local integer_tmp9=0\n  local remainder_tmp9=0\n\
    \  local decimals_tmp10=0\n  local integer_tmp10=0\n  local remainder_tmp10=0\n\
    \  local decimals_tmp11=0\n  local integer_tmp11=0\n  local remainder_tmp11=0\n\
    \  local decimals_tmp12=0\n  local integer_tmp12=0\n  local remainder_tmp12=0\n\
    \  local decimals_tmp13=0\n  local integer_tmp13=0\n  local remainder_tmp13=0\n\
    \  local decimals_tmp14=0\n  local integer_tmp14=0\n  local remainder_tmp14=0\n\
    \  local decimals_tmp15=0\n  local integer_tmp15=0\n  local remainder_tmp15=0\n\
    \  local decimals_tmp16=0\n  local integer_tmp16=0\n  local remainder_tmp16=0\n\
    \  local decimals_tmp17=0\n  local integer_tmp17=0\n  local remainder_tmp17=0\n\
    \  local decimals_tmp18=0\n  local integer_tmp18=0\n  local remainder_tmp18=0\n\
    \  local decimals_tmp19=0\n  local integer_tmp19=0\n  local remainder_tmp19=0\n\
    \  local decimals_tmp20=0\n  local integer_tmp20=0\n  local remainder_tmp20=0\n\
    \  local decimals_tmp21=0\n  local integer_tmp21=0\n  local remainder_tmp21=0\n\
    \  local decimals_tmp22=0\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local trunc_number=0\n  local trunc_decimals=0\n\
    \  local trunc_digits=0\n  local trunc_digits_max=0\n  local trunc_digits_max_digits=0\n\
    \  local trunc_digits_max_digits_len=0\n  local trunc_digits_max_digits_len_count=0\n\
    \  local trunc_digits_max_digits_len_count1=0\n  local trunc_digits_max_digits_len_count2=0\n\
    \  local trunc_digits_max_digits_len_count3=0\n  local trunc_digits_max_digits_len_count4=0\n\
    \  local trunc_digits_max_digits_len_count5=0\n  local trunc_digits_max_digits_len_count6=0\n\
    \  local trunc_digits_max_digits_len_count7=0\n  local trunc_digits_max_digits_len_count8=0\n\
    \  local trunc_digits_max_digits_len_count9=0\n  local trunc_digits_max_digits_len_count10=0\n\
    \  local trunc_digits_max_digits_len_count11=0\n  local trunc_digits_max_digits_len_count12=0\n\
    \  local trunc_digits_max_digits_len_count13=0\n  local trunc_digits_max_digits_len_count14=0\n\
    \  local trunc_digits_max_digits_len_count15=0\n  local trunc_digits_max_digits_len_count16=0\n\
    \  local trunc_digits_max_digits_len_count17=0\n  local trunc_digits_max_digits_len_count18=0\n\
    \  local trunc_digits_max_digits_len_count19=0\n  local trunc_digits_max_digits_len_count20=0\n\
    \  local trunc_digits_max_digits_len_count21=0\n  local trunc_digits_max_digits_len_count22=0\n\
    \  local trunc_digits_max_digits_len_count23=0\n  local trunc_digits_max_digits_len_count24=0\n\
    \  local trunc_digits_max_digits_len_count25=0\n  local trunc_digits_max_digits_len_count26=0\n\
    \  local trunc_digits_max_digits_len_count27=0\n  local trunc_digits_max_digits_len_count28=0\n\
    \  local trunc_digits_max_digits_len_count29=0\n  local trunc_digits_max_digits_len_count30=0\n\
    \  local trunc_digits_max_digits_len_count31\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_left=0\n  local decimals_left_in_number=0\n\
    \  local decimals_left_in_number_left=0\n  local decimals_left_in_number_right=0\n\
    \  local decimals_left_in_number_right_left=0\n  local decimals_left_in_number_right_right=0\n\
    \  local decimals_left_in_number_right_right_left=0\n  local decimals_left_in_number_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_left=0\n  local decimals_left_in_number_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_left=0\n  local decimals_left_in_number_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_left=0\n  local\
    \ decimals_left_in_number_right_right_right_right_right_right=0\n  local decimals_left_in_number_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_left=0\n\
    \  local decimals_left_in_number_right_right_right_right_right_right_right_right_right_right_right=0\n\
    \  local decimals_left_in_number_right_right_right_\n}\n\ncandidate() {\n    truncate_number\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n\
    \    [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  local decimals\n  local decimal\n  local decimals\n  local\
    \ decimal\n  local decimals\n  local decimal\n  local decimals\n  local decimal\n\
    \  local decimals\n  local decimal\n  local decimals\n  local decimal\n  local\
    \ decimals\n  local decimal\n  local decimals\n  local decimal\n  local decimals\n\
    \  local decimal\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate\
    \ \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ integer=0\n  local integer_string=\"\"\n  local remainder=0\n  local remainder_string=\"\
    \"\n  local decimals_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  local remainder_string=\"\"\n  local integer_string=\"\"\n  local remainder_string=\"\
    \"\n  local integer_string=\"\"\n  local remainder_string=\"\"\n  local integer_string=\"\
    \"\n  \n}\n\ncandidate() {\n    truncate_number \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n    [[ $(candidate \"1.25\") =\
    \ \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026910
- exit_code: 1
  program: "#!/bin/bash\n# Given a positive floating point number, it can be decomposed\
    \ into\n# and integer part (largest integer smaller than given number) and decimals\n\
    # (leftover part always smaller than 1).\n# Return the decimal part of the number.\n\
    # >>> truncate_number(3.5)\n# 0.5\n#\n# $1 is a floating point\ntruncate_number()\
    \ {\n  local number=$1\n  local decimals=0\n  local decimals_string=\"\"\n  local\
    \ decimals_string_index=0\n  local decimals_string_index2=0\n  local decimals_string_index3=0\n\
    \  local decimals_string_index4=0\n  local decimals_string_index5=0\n  local decimals_string_index6=0\n\
    \  local decimals_string_index7=0\n  local decimals_string_index8=0\n  local decimals_string_index9=0\n\
    \  local decimals_string_index10=0\n  local decimals_string_index11=0\n  local\
    \ decimals_string_index12=0\n  local decimals_string_index13=0\n  local decimals_string_index14=0\n\
    \  local decimals_string_index15=0\n  local decimals_string_index16=0\n  local\
    \ decimals_string_index17=0\n  local decimals_string_index18=0\n  local decimals_string_index19=0\n\
    \  local decimals_string_index20=0\n  local decimals_string_index21=0\n  local\
    \ decimals_string_index22=0\n  local decimals_string_index23=0\n  local decimals_string_index24=0\n\
    \  local decimals_string_index25=0\n  local decimals_string_index26=0\n  local\
    \ decimals_string_index27=0\n  local decimals_string_index28=0\n  local decimals_string_index29=0\n\
    \  local decimals_string_index30=0\n  local decimals_string_index31=0\n  local\
    \ decimals_string_index32=0\n  local decimals_string_index33=0\n  local decimals_string_index34=0\n\
    \  local decimals_string_index35=0\n  local decimals_string_index36=0\n  local\
    \ decimals_string_index37=0\n  local decimals_string_index38=0\n  local decimals_string_index39=0\n\
    \  local decimals_string_index40=0\n  local decimals_string_index41=0\n  local\
    \ decimals_string_index42=0\n  local decimals_string_index43=0\n  local decimals_string_index44=0\n\
    \  local decimals_string_index45=0\n  local decimals_string_index46=0\n  local\
    \ decimals_string_index47=0\n  local decimals_string_index48=0\n  local decimals_string_index49=0\n\
    \  local decimals_string_index50=0\n  local decimals_string_index51=0\n  local\
    \ decimals_string_index52=0\n  local decimals_string_index53=0\n  local decimals_string_index54=0\n\
    \  local decimals_string_index55=0\n}\n\ncandidate() {\n    truncate_number \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3.5\") = \"0.5\" ]]\n  \
    \  [[ $(candidate \"1.25\") = \"0.25\" ]]\n    [[ $(candidate \"123.0\") = \"\
    0.0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660026909

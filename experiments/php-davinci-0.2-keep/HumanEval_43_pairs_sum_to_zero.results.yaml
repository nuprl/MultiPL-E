name: HumanEval_43_pairs_sum_to_zero
language: php
results:
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $result\
    \ = false;\n  $length = count($l);\n  for ($i = 0; $i < $length; $i++) {\n   \
    \ for ($j = $i + 1; $j < $length; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n\
    \        $result = true;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $count = count($l);\n    $i = 0;\n    $j = 0;\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return True;\n \
    \           }\n        }\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  if\
    \ (count($l) < 2) {\n    return false;\n  }\n  $s = array_unique($l);\n  foreach\
    \ ($s as $i) {\n    if (in_array(-$i, $s)) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2dor9yqb.php:33\n\
    Stack trace:\n#0 /tmp/tmp2dor9yqb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2dor9yqb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $length = count($l);\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n   \
    \         if ($l[$i] + $l[$j] == 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = 0;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $count++;\n            }\n        }\n    }\n\
    \    if ($count > 0) {\n        return True;\n    } else {\n        return False;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $result = false;\n    foreach ($l as $key => $value)\
    \ {\n        foreach ($l as $key2 => $value2) {\n            if ($key != $key2)\
    \ {\n                if ($value + $value2 == 0) {\n                    $result\
    \ = true;\n                }\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcyojnvbr.php:24\n\
    Stack trace:\n#0 /tmp/tmpcyojnvbr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcyojnvbr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4hsbtb1s.php:24\n\
    Stack trace:\n#0 /tmp/tmp4hsbtb1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4hsbtb1s.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] +\
    \ $l[$j] == 0) {\n                return true;\n            }\n        }\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $result = false;\n    $count = count($l);\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n \
    \   for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                return True;\n     \
    \       }\n        }\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    $length = count($l);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    if ($count <\
    \ 2) {\n        return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n\
    \        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return true;\n            }\n        }\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $i = 0;\n    $j = 0;\n    $len = count($l);\n    while ($i < $len) {\n    \
    \    $j = $i + 1;\n        while ($j < $len) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return true;\n            }\n            $j++;\n  \
    \      }\n        $i++;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    if ($count <\
    \ 2) {\n        return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n\
    \        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return true;\n            }\n        }\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ TODO: implement this function\n  $count = 0;\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    for ($j = $i + 1; $j < count($l); $j++) {\n      if ($l[$i] + $l[$j]\
    \ == 0) {\n        $count++;\n      }\n    }\n  }\n  if ($count > 0) {\n    return\
    \ True;\n  } else {\n    return False;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n    $i\
    \ = 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n\
    \        if ($sum == 0) {\n            return true;\n        } elseif ($sum >\
    \ 0) {\n            $j--;\n        } else {\n            $i++;\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9nppiqrw.php:43\n\
    Stack trace:\n#0 /tmp/tmp9nppiqrw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp9nppiqrw.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4wo09r0k.php:23\n\
    Stack trace:\n#0 /tmp/tmp4wo09r0k.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4wo09r0k.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx1t8asi0.php:24\n\
    Stack trace:\n#0 /tmp/tmpx1t8asi0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx1t8asi0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu1uxyb4q.php:24\n\
    Stack trace:\n#0 /tmp/tmpu1uxyb4q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpu1uxyb4q.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] +\
    \ $l[$j] == 0) {\n                return True;\n            }\n        }\n   \
    \ }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    $result = false;\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                $result =\
    \ true;\n                break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbw_iyvz7.php:24\n\
    Stack trace:\n#0 /tmp/tmpbw_iyvz7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbw_iyvz7.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    $result = false;\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5ofj_gbq.php:24\n\
    Stack trace:\n#0 /tmp/tmp5ofj_gbq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5ofj_gbq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfal7ardm.php:24\n\
    Stack trace:\n#0 /tmp/tmpfal7ardm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfal7ardm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } elseif\
    \ ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n     \
    \   }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqvbaawyv.php:43\n\
    Stack trace:\n#0 /tmp/tmpqvbaawyv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpqvbaawyv.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $result = false;\n    $count = count($l);\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    $i = 0;\n    $j = 0;\n    $k\
    \ = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j < $count)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return True;\n \
    \           }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ False;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = 0;\n  $i = 0;\n  while ($i < count($l)) {\n    $j = $i + 1;\n    while ($j\
    \ < count($l)) {\n      if ($l[$i] + $l[$j] == 0) {\n        $count++;\n     \
    \ }\n      $j++;\n    }\n    $i++;\n  }\n  if ($count > 0) {\n    return True;\n\
    \  } else {\n    return False;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = count($l);\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j\
    \ < $count; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n\
    \      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $i = 0;\n    $j = 0;\n    while ($i < $n) {\n        $j\
    \ = $i + 1;\n        while ($j < $n) {\n            if ($l[$i] + $l[$j] == 0)\
    \ {\n                return true;\n            }\n            $j = $j + 1;\n \
    \       }\n        $i = $i + 1;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = 0;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $count++;\n            }\n        }\n    }\n\
    \    if ($count > 0) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppap8ixr2.php:24\n\
    Stack trace:\n#0 /tmp/tmppap8ixr2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppap8ixr2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n;\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn True;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3em0ycm.php:24\n\
    Stack trace:\n#0 /tmp/tmpy3em0ycm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy3em0ycm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa2i8yj_a.php:24\n\
    Stack trace:\n#0 /tmp/tmpa2i8yj_a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa2i8yj_a.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] +\
    \ $l[$j] == 0) {\n                return True;\n            }\n        }\n   \
    \ }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpra0vo9wd.php:24\n\
    Stack trace:\n#0 /tmp/tmpra0vo9wd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpra0vo9wd.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $result = false;\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < count($l); $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\t$result\
    \ = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n\t$count = 0;\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\t\
    for ($j = $i + 1; $j < count($l); $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\
    \t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\tif ($count > 0) {\n\t\treturn True;\n\
    \t} else {\n\t\treturn False;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdhs752pk.php:24\n\
    Stack trace:\n#0 /tmp/tmpdhs752pk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdhs752pk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp85lzkpky.php:24\n\
    Stack trace:\n#0 /tmp/tmp85lzkpky.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp85lzkpky.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8cqucow0.php:24\n\
    Stack trace:\n#0 /tmp/tmp8cqucow0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8cqucow0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq9k1n7cm.php:24\n\
    Stack trace:\n#0 /tmp/tmpq9k1n7cm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq9k1n7cm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $result\
    \ = False;\n  $n = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j =\
    \ $i + 1; $j < $n; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        $result\
    \ = True;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count == 1) {\n      \
    \  return false;\n    }\n    for ($i = 0; $i < $count - 1; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphnc8o32i.php:24\n\
    Stack trace:\n#0 /tmp/tmphnc8o32i.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphnc8o32i.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $result = false;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = $count - 1;\n    while ($i < $j) {\n        $sum = $l[$i]\
    \ + $l[$j];\n        if ($sum == 0) {\n            return true;\n        } else\
    \ if ($sum > 0) {\n            $j--;\n        } else {\n            $i++;\n  \
    \      }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdu5miz4z.php:43\n\
    Stack trace:\n#0 /tmp/tmpdu5miz4z.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdu5miz4z.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n    $count = count($l);\n\
    \    if ($count == 1) {\n        return False;\n    }\n    $i = 0;\n    while\
    \ ($i < $count) {\n        $j = $i + 1;\n        while ($j < $count) {\n     \
    \       if ($l[$i] + $l[$j] == 0) {\n                return True;\n          \
    \  }\n            $j++;\n        }\n        $i++;\n    }\n    return False;\n\
    }\n\n$l = [1, 2, 3, 7];\nprint pairs_sum_to_zero($l);\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4y5uzq8u.php:23\n\
    Stack trace:\n#0 /tmp/tmp4y5uzq8u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4y5uzq8u.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = count($l);\n  if ($count < 2) {\n    return false;\n  }\n  $i = 0;\n  $j =\
    \ $count - 1;\n  while ($i < $j) {\n    $sum = $l[$i] + $l[$j];\n    if ($sum\
    \ == 0) {\n      return true;\n    }\n    if ($sum < 0) {\n      $i++;\n    }\
    \ else {\n      $j--;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeb158vfw.php:44\n\
    Stack trace:\n#0 /tmp/tmpeb158vfw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpeb158vfw.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] +\
    \ $l[$j] == 0) {\n                $result = true;\n                break;\n  \
    \          }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count == 1) {\n      \
    \  return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor ($i =\
    \ 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n;\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn True;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2v3jjxo2.php:24\n\
    Stack trace:\n#0 /tmp/tmp2v3jjxo2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2v3jjxo2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = count($l);\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j\
    \ < $count; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count == 1) {\n      \
    \  return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $result\
    \ = false;\n  $count = count($l);\n  for ($i = 0; $i < $count; $i++) {\n    for\
    \ ($j = $i + 1; $j < $count; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n    \
    \    $result = true;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    $len = count($l);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                $result = true;\n                break;\n         \
    \   }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkiv6wkpw.php:24\n\
    Stack trace:\n#0 /tmp/tmpkiv6wkpw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkiv6wkpw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n    $i\
    \ = 0;\n    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j++;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $l = array_unique($l);\n    sort($l);\n    $i = 0;\n    $j = count($l) - 1;\n\
    \    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n        if ($sum == 0)\
    \ {\n            return True;\n        } elseif ($sum < 0) {\n            $i++;\n\
    \        } else {\n            $j--;\n        }\n    }\n    return False;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdh_qv9lp.php:24\n\
    Stack trace:\n#0 /tmp/tmpdh_qv9lp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdh_qv9lp.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt8sw9y9d.php:24\n\
    Stack trace:\n#0 /tmp/tmpt8sw9y9d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt8sw9y9d.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ TODO: implement this function\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg5gfvs23.php:28\n\
    Stack trace:\n#0 /tmp/tmpg5gfvs23.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg5gfvs23.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = true;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    $result = false;\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    $j = 1;\n    while ($i < $count) {\n        while ($j < $count)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n            $j++;\n        }\n        $i++;\n        $j = $i +\
    \ 1;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9b47hj0y.php:24\n\
    Stack trace:\n#0 /tmp/tmp9b47hj0y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9b47hj0y.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $l = array_unique($l);\n    $l = array_values($l);\n    $len = count($l);\n\
    \    if ($len < 2) {\n        return false;\n    }\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                return true;\n            }\n        }\n \
    \   }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb8p42xm5.php:24\n\
    Stack trace:\n#0 /tmp/tmpb8p42xm5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpb8p42xm5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dpv5ajk.php:24\n\
    Stack trace:\n#0 /tmp/tmp1dpv5ajk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1dpv5ajk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n < 2) {\n        return False;\n    }\n    $s =\
    \ array_sum($l);\n    if ($s == 0) {\n        return True;\n    }\n    $m = max($l);\n\
    \    if ($m > 0) {\n        return False;\n    }\n    $m = min($l);\n    if ($m\
    \ < 0) {\n        return False;\n    }\n    $s = array_sum($l);\n    if ($s ==\
    \ 0) {\n        return True;\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5vx3dzbj.php:47\n\
    Stack trace:\n#0 /tmp/tmp5vx3dzbj.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp5vx3dzbj.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1m4emdur.php:24\n\
    Stack trace:\n#0 /tmp/tmp1m4emdur.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1m4emdur.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf34y5sr9.php:24\n\
    Stack trace:\n#0 /tmp/tmpf34y5sr9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf34y5sr9.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    $i = 0;\n  \
    \  $j = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ True;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor ($i =\
    \ 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    $i = 0;\n    $j = $count - 1;\n    while ($i < $j)\
    \ {\n        if ($l[$i] + $l[$j] == 0) {\n            return true;\n        }\n\
    \        if ($l[$i] + $l[$j] > 0) {\n            $j--;\n        } else {\n   \
    \         $i++;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt2wrehxx.php:44\n\
    Stack trace:\n#0 /tmp/tmpt2wrehxx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpt2wrehxx.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8i9uxe7p.php:24\n\
    Stack trace:\n#0 /tmp/tmp8i9uxe7p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8i9uxe7p.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    $length = count($l);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $l = array_unique($l);\n    $count = count($l);\n    if ($count < 2) {\n\
    \        return false;\n    }\n    $l = array_values($l);\n    $i = 0;\n    while\
    \ ($i < $count) {\n        $j = $i + 1;\n        while ($j < $count) {\n     \
    \       if ($l[$i] + $l[$j] == 0) {\n                return true;\n          \
    \  }\n            $j++;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return False;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ True;\n            }\n            $j = $j + 1;\n        }\n        $i = $i +\
    \ 1;\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1oiki2gu.php:23\n\
    Stack trace:\n#0 /tmp/tmp1oiki2gu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1oiki2gu.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjot9k9z_.php:24\n\
    Stack trace:\n#0 /tmp/tmpjot9k9z_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjot9k9z_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxtx1hk58.php:24\n\
    Stack trace:\n#0 /tmp/tmpxtx1hk58.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxtx1hk58.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc8zn7gum.php:24\n\
    Stack trace:\n#0 /tmp/tmpc8zn7gum.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpc8zn7gum.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  if (count($l) < 2) {\n        return false;\n    }\n    $i = 0;\n    $j = 1;\n\
    \    while ($i < count($l)) {\n        while ($j < count($l)) {\n            if\
    \ ($l[$i] + $l[$j] == 0) {\n                return true;\n            }\n    \
    \        $j++;\n        }\n        $i++;\n        $j = $i + 1;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $len = count($l);\n    if ($len < 2) {\n        return false;\n    }\n    for\
    \ ($i = 0; $i < $len - 1; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n \
    \           }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9n9e9lbx.php:24\n\
    Stack trace:\n#0 /tmp/tmp9n9e9lbx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9n9e9lbx.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  if ($n < 2) {\n    return False;\n  }\n  $i = 0;\n  while ($i\
    \ < $n) {\n    $j = $i + 1;\n    while ($j < $n) {\n      if ($l[$i] + $l[$j]\
    \ == 0) {\n        return True;\n      }\n      $j = $j + 1;\n    }\n    $i =\
    \ $i + 1;\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfm63tf0g.php:24\n\
    Stack trace:\n#0 /tmp/tmpfm63tf0g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfm63tf0g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = false;\n    $length = count($l);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    if ($count <\
    \ 2) {\n        return False;\n    }\n    for ($i = 0; $i < $count; $i++) {\n\
    \        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return True;\n            }\n        }\n    }\n   \
    \ return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsnu7xfhi.php:23\n\
    Stack trace:\n#0 /tmp/tmpsnu7xfhi.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsnu7xfhi.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpofxjq9a2.php:24\n\
    Stack trace:\n#0 /tmp/tmpofxjq9a2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpofxjq9a2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvl2j1wxh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvl2j1wxh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvl2j1wxh.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    $result = false;\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $count = count($l);\n    $i = 0;\n    $j = 0;\n    $k\
    \ = 0;\n    $result = false;\n    while ($i < $count) {\n        $j = $i + 1;\n\
    \        while ($j < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n    \
    \            $result = true;\n                break;\n            }\n        \
    \    $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $l = array_unique($l);\n    $l = array_values($l);\n    $len = count($l);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) {\n                return True;\n \
    \           }\n        }\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return False;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ True;\n            }\n            $j = $j + 1;\n        }\n        $i = $i +\
    \ 1;\n    }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqhimn39.php:24\n\
    Stack trace:\n#0 /tmp/tmpiqhimn39.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpiqhimn39.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = 0;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $count++;\n            }\n        }\n    }\n\
    \    if ($count > 0) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n  $count = count($l);\n  $i = 0;\n  $j = 0;\n  $sum = 0;\n \
    \ for ($i = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j < $count; $j++)\
    \ {\n      $sum = $l[$i] + $l[$j];\n      if ($sum == 0) {\n        return True;\n\
    \      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  if (count($l) < 2) {\n        return false;\n    }\n    $s = array_sum($l);\n\
    \    if ($s == 0) {\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5lct7wo9.php:34\n\
    Stack trace:\n#0 /tmp/tmp5lct7wo9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5lct7wo9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $found = false;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $found = true;\n            }\n        }\n    }\n    return $found;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpagd4qxxe.php:24\n\
    Stack trace:\n#0 /tmp/tmpagd4qxxe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpagd4qxxe.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5jt61rl.php:23\n\
    Stack trace:\n#0 /tmp/tmp_5jt61rl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_5jt61rl.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb9gn61fw.php:23\n\
    Stack trace:\n#0 /tmp/tmpb9gn61fw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpb9gn61fw.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $result\
    \ = False;\n  $i = 0;\n  while ($i < count($l) && !$result) {\n    $j = $i + 1;\n\
    \    while ($j < count($l) && !$result) {\n      if ($l[$i] + $l[$j] == 0) {\n\
    \        $result = True;\n      }\n      $j = $j + 1;\n    }\n    $i = $i + 1;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnwc02582.php:24\n\
    Stack trace:\n#0 /tmp/tmpnwc02582.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnwc02582.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $result = False;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $result = True;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $count = count($l);\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $count; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn True;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprjgi6oxk.php:24\n\
    Stack trace:\n#0 /tmp/tmprjgi6oxk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprjgi6oxk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    $i = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n\
    \        while ($j < $n) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return True;\n            }\n            $j = $j + 1;\n        }\n  \
    \      $i = $i + 1;\n    }\n    return False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmsvhe6u3.php:24\n\
    Stack trace:\n#0 /tmp/tmpmsvhe6u3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmsvhe6u3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $result = false;\n\t$i = 0;\n\t$j = 0;\n\t$size = count($l);\n\twhile ($i < $size)\
    \ {\n\t\t$j = $i + 1;\n\t\twhile ($j < $size) {\n\t\t\tif ($l[$i] + $l[$j] ==\
    \ 0) {\n\t\t\t\t$result = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\
    \t\t$i++;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $result = false;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $count = count($l);\n\tif ($count < 2) {\n\t\treturn False;\n\t}\n\tfor ($i =\
    \ 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\t\t\
    if ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn True;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = count($l);\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j\
    \ < $count; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n\
    \      }\n    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++)\
    \ {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] +\
    \ $l[$j] == 0) {\n                return True;\n            }\n        }\n   \
    \ }\n    return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $n\
    \ = count($l);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return True;\n      }\n\
    \    }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $result = false;\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n            }\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // your code here\n    $result = false;\n    $count = count($l);\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n\
    \            if ($l[$i] + $l[$j] == 0) {\n                $result = true;\n  \
    \              break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpytjlygrw.php:24\n\
    Stack trace:\n#0 /tmp/tmpytjlygrw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpytjlygrw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return True;\n            }\n        }\n    }\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  $count\
    \ = count($l);\n  for ($i = 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j\
    \ < $count; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n \
    \   return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: implement this function\n    $count = count($l);\n    for ($i = 0;\
    \ $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n     \
    \       if ($l[$i] + $l[$j] == 0) {\n                return true;\n          \
    \  }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $length = count($l);\n\tif ($length < 2) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 0; $i < $length; $i++) {\n\t\tfor ($j = $i + 1; $j < $length; $j++) {\n\t\t\
    \tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // Your code here\n    $count = count($l);\n    if ($count < 2) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j++;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return True;\n            }\n        }\n    }\n    return False;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  // TODO: write your code here\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_b_6vnqx.php:28\n\
    Stack trace:\n#0 /tmp/tmp_b_6vnqx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_b_6vnqx.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9shr7aop.php:24\n\
    Stack trace:\n#0 /tmp/tmp9shr7aop.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9shr7aop.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphtfntcde.php:23\n\
    Stack trace:\n#0 /tmp/tmphtfntcde.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphtfntcde.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    $n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n;\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn True;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ TODO: implement this function\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeib909i_.php:28\n\
    Stack trace:\n#0 /tmp/tmpeib909i_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpeib909i_.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7qjutiks.php:24\n\
    Stack trace:\n#0 /tmp/tmp7qjutiks.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7qjutiks.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    if ($n < 2) {\n        return false;\n    }\n    $i =\
    \ 0;\n    $j = $n - 1;\n    while ($i < $j) {\n        $sum = $l[$i] + $l[$j];\n\
    \        if ($sum == 0) {\n            return true;\n        } else if ($sum <\
    \ 0) {\n            $i++;\n        } else {\n            $j--;\n        }\n  \
    \  }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp83xj2_0q.php:43\n\
    Stack trace:\n#0 /tmp/tmp83xj2_0q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp83xj2_0q.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n\t\
    // your code here\n\t$count = count($l);\n\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t\
    $result = false;\n\twhile ($i < $count) {\n\t\t$j = $i + 1;\n\t\twhile ($j < $count)\
    \ {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\t$result = true;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j\
    \ = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  //\
    \ your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_akvrnkw.php:24\n\
    Stack trace:\n#0 /tmp/tmp_akvrnkw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_akvrnkw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n             \
    \   return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// pairs_sum_to_zero takes a list of integers as an input.\n//\
    \ it returns True if there are two distinct elements in the list that\n// sum\
    \ to zero, and False otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// False\n\
    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n// False\n// >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n// False\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// True\n\
    // >>> pairs_sum_to_zero([1])\n// False\nfunction pairs_sum_to_zero($l) {\n  \
    \  $count = count($l);\n    if ($count < 2) {\n        return false;\n    }\n\
    \    $i = 0;\n    while ($i < $count) {\n        $j = $i + 1;\n        while ($j\
    \ < $count) {\n            if ($l[$i] + $l[$j] == 0) {\n                return\
    \ true;\n            }\n            $j = $j + 1;\n        }\n        $i = $i +\
    \ 1;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

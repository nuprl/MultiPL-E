name: HumanEval_18_how_many_times
language: php
results:
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqxf3lo00.php:26\n\
    Stack trace:\n#0 /tmp/tmpqxf3lo00.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqxf3lo00.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5mhh8xrg.php:26\n\
    Stack trace:\n#0 /tmp/tmp5mhh8xrg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5mhh8xrg.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdivr7et7.php:26\n\
    Stack trace:\n#0 /tmp/tmpdivr7et7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdivr7et7.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos += strlen($substring);\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpabo1dyc5.php:26\n\
    Stack trace:\n#0 /tmp/tmpabo1dyc5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpabo1dyc5.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while ($start < strlen($string)) {\n        $pos = strpos($string, $substring,\
    \ $start);\n        if ($pos === false) {\n            break;\n        }\n   \
    \     $count++;\n        $start = $pos + 1;\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($offset = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjjetkv9c.php:26\n\
    Stack trace:\n#0 /tmp/tmpjjetkv9c.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjjetkv9c.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplmcrhnpz.php:26\n\
    Stack trace:\n#0 /tmp/tmplmcrhnpz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplmcrhnpz.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq2k8rfrb.php:26\n\
    Stack trace:\n#0 /tmp/tmpq2k8rfrb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq2k8rfrb.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$string_length\
    \ = strlen($string);\n\t$substring_length = strlen($substring);\n\tfor ($i = 0;\
    \ $i < $string_length; $i++) {\n\t\tif (substr($string, $i, $substring_length)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $len = strlen($substring);\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i,\
    \ $len) == $substring) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$substring_length\
    \ = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif\
    \ (substr($string, $i, $substring_length) == $substring) {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while (true) {\n        $pos = strpos($string, $substring, $start);\n\
    \        if ($pos === false) {\n            break;\n        }\n        $count++;\n\
    \        $start = $pos + 1;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppwnr1k0l.php:26\n\
    Stack trace:\n#0 /tmp/tmppwnr1k0l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppwnr1k0l.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$string_length\
    \ = strlen($string);\n\t$substring_length = strlen($substring);\n\tfor ($i = 0;\
    \ $i < $string_length; $i++) {\n\t\tif (substr($string, $i, $substring_length)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($pos = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset = $pos + 1;\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while ($i < strlen($string)) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n            $i += strlen($substring);\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvetchvti.php:30\n\
    Stack trace:\n#0 /tmp/tmpvetchvti.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvetchvti.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($offset = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxivm816a.php:26\n\
    Stack trace:\n#0 /tmp/tmpxivm816a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxivm816a.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8_a3cy5h.php:26\n\
    Stack trace:\n#0 /tmp/tmp8_a3cy5h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8_a3cy5h.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3toaf4b0.php:26\n\
    Stack trace:\n#0 /tmp/tmp3toaf4b0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3toaf4b0.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$length = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $length)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $string_length\
    \ = strlen($string);\n  $substring_length = strlen($substring);\n  for ($i = 0;\
    \ $i < $string_length; $i++) {\n    if (substr($string, $i, $substring_length)\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while (strpos($string, $substring, $start) !== false) {\n        $start\
    \ = strpos($string, $substring, $start) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (strpos($string, $substring, $offset) !== false) {\n        $offset\
    \ = strpos($string, $substring, $offset) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv0hw_883.php:26\n\
    Stack trace:\n#0 /tmp/tmpv0hw_883.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv0hw_883.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkf764fjr.php:26\n\
    Stack trace:\n#0 /tmp/tmpkf764fjr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkf764fjr.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($offset = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$start = 0;\n\
    \twhile (($start = strpos($string, $substring, $start)) !== false) {\n\t\t$count++;\n\
    \t\t$start++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk96eo0ck.php:26\n\
    Stack trace:\n#0 /tmp/tmpk96eo0ck.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk96eo0ck.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuvh6bs6m.php:26\n\
    Stack trace:\n#0 /tmp/tmpuvh6bs6m.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuvh6bs6m.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5wlf1pd6.php:26\n\
    Stack trace:\n#0 /tmp/tmp5wlf1pd6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5wlf1pd6.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while (($start = strpos($string, $substring, $start)) !== false) {\n\
    \        $count++;\n        $start += strlen($substring);\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5ay3syj.php:26\n\
    Stack trace:\n#0 /tmp/tmpu5ay3syj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu5ay3syj.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while ($i < strlen($string)) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n            $i += strlen($substring);\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdz6df59n.php:30\n\
    Stack trace:\n#0 /tmp/tmpdz6df59n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdz6df59n.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $position\
    \ = 0;\n    while (($position = strpos($string, $substring, $position)) !== false)\
    \ {\n        $count++;\n        $position++;\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $length =\
    \ strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n      \
    \  if (substr($string, $i, $length) == $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$substring_length\
    \ = strlen($substring);\n\t$string_length = strlen($string);\n\tfor ($i = 0; $i\
    \ < $string_length; $i++) {\n\t\tif (substr($string, $i, $substring_length) ==\
    \ $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while(($i = strpos($string, $substring, $i)) !== false) {\n        $count++;\n\
    \        $i++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvvdlhcap.php:26\n\
    Stack trace:\n#0 /tmp/tmpvvdlhcap.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvvdlhcap.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (strpos($string, $substring, $offset) !== false) {\n        $offset\
    \ = strpos($string, $substring, $offset) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos += strlen($substring);\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl_hgx8k_.php:26\n\
    Stack trace:\n#0 /tmp/tmpl_hgx8k_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpl_hgx8k_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw0j1irp3.php:26\n\
    Stack trace:\n#0 /tmp/tmpw0j1irp3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw0j1irp3.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($pos = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset = $pos + 1;\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp29j33omw.php:26\n\
    Stack trace:\n#0 /tmp/tmp29j33omw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp29j33omw.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    $string_length = strlen($string);\n    for ($i =\
    \ 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuip0vu_d.php:26\n\
    Stack trace:\n#0 /tmp/tmpuip0vu_d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuip0vu_d.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n  $count = 0;\n  $pos = 0;\n \
    \ while (($pos = strpos($string, $substring, $pos)) !== false) {\n    $count++;\n\
    \    $pos += strlen($substring);\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpayqge19z.php:26\n\
    Stack trace:\n#0 /tmp/tmpayqge19z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpayqge19z.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$substring_length\
    \ = strlen($substring);\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif\
    \ (substr($string, $i, $substring_length) == $substring) {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($pos = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset = $pos + 1;\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\necho how_many_times('', 'a')\
    \ . \"\\n\";\necho how_many_times('aaa', 'a') . \"\\n\";\necho how_many_times('aaaa',\
    \ 'aa') . \"\\n\";\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "0\n3\n3\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while(strpos($string, $substring, $offset) !== false) {\n        $offset\
    \ = strpos($string, $substring, $offset) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$substring_length\
    \ = strlen($substring);\n\t$string_length = strlen($string);\n\tfor ($i = 0; $i\
    \ < $string_length; $i++) {\n\t\tif (substr($string, $i, $substring_length) ==\
    \ $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (($offset = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpne_m_qcd.php:26\n\
    Stack trace:\n#0 /tmp/tmpne_m_qcd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpne_m_qcd.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ubkpq_u.php:26\n\
    Stack trace:\n#0 /tmp/tmp6ubkpq_u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6ubkpq_u.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0qe8a3sb.php:26\n\
    Stack trace:\n#0 /tmp/tmp0qe8a3sb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0qe8a3sb.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while(($offset = strpos($string, $substring, $offset)) !== false) {\n\
    \        $count++;\n        $offset += strlen($substring);\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqmn74ok8.php:26\n\
    Stack trace:\n#0 /tmp/tmpqmn74ok8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqmn74ok8.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $offset =\
    \ 0;\n    while (strpos($string, $substring, $offset) !== false) {\n        $offset\
    \ = strpos($string, $substring, $offset) + 1;\n        $count++;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqxk_oy74.php:26\n\
    Stack trace:\n#0 /tmp/tmpqxk_oy74.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqxk_oy74.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpagzcccm_.php:26\n\
    Stack trace:\n#0 /tmp/tmpagzcccm_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpagzcccm_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($string); $i++) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$pos = 0;\n\t\
    while (($pos = strpos($string, $substring, $pos)) !== false) {\n\t\t$count++;\n\
    \t\t$pos++;\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    if (substr($string, $i, $substring_length) == $substring) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwad48adx.php:26\n\
    Stack trace:\n#0 /tmp/tmpwad48adx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwad48adx.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $start =\
    \ 0;\n    while (($start = strpos($string, $substring, $start)) !== false) {\n\
    \        $count++;\n        $start++;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $string_length\
    \ = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i\
    \ = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp86qwgyhv.php:26\n\
    Stack trace:\n#0 /tmp/tmp86qwgyhv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp86qwgyhv.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n\t$count = 0;\n\t$len = strlen($substring);\n\
    \tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $len)\
    \ == $substring) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    $len = strlen($substring);\n    while (($pos = strpos($string, $substring,\
    \ $pos)) !== false) {\n        $count++;\n        $pos += $len;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpil9ggl_g.php:27\n\
    Stack trace:\n#0 /tmp/tmpil9ggl_g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpil9ggl_g.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos += strlen($substring);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi2az6egp.php:26\n\
    Stack trace:\n#0 /tmp/tmpi2az6egp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi2az6egp.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while ($i < strlen($string)) {\n        if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n            $count++;\n            $i += strlen($substring);\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ey3n2vr.php:30\n\
    Stack trace:\n#0 /tmp/tmp2ey3n2vr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2ey3n2vr.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $substring_length\
    \ = strlen($substring);\n    $string_length = strlen($string);\n    for ($i =\
    \ 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length)\
    \ == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $pos = 0;\n\
    \    while (($pos = strpos($string, $substring, $pos)) !== false) {\n        $count++;\n\
    \        $pos++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times('', 'a')\n// 0\n// >>>\
    \ how_many_times('aaa', 'a')\n// 3\n// >>> how_many_times('aaaa', 'aa')\n// 3\n\
    function how_many_times($string, $substring) {\n    $count = 0;\n    $i = 0;\n\
    \    while (strpos($string, $substring, $i) !== false) {\n        $count++;\n\
    \        $i = strpos($string, $substring, $i) + 1;\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

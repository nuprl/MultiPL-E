name: HumanEval_84_solve
language: php
results:
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzh3mri5o.php:28\n\
    Stack trace:\n#0 /tmp/tmpzh3mri5o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzh3mri5o.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt8p3p288.php:28\n\
    Stack trace:\n#0 /tmp/tmpt8p3p288.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt8p3p288.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpao5_85aw.php:26\n\
    Stack trace:\n#0 /tmp/tmpao5_85aw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpao5_85aw.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo3pvx2u1.php:29\n\
    Stack trace:\n#0 /tmp/tmpo3pvx2u1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo3pvx2u1.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd4od_khl.php:28\n\
    Stack trace:\n#0 /tmp/tmpd4od_khl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpd4od_khl.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiyfuww4u.php:27\n\
    Stack trace:\n#0 /tmp/tmpiyfuww4u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiyfuww4u.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgegzzec4.php:29\n\
    Stack trace:\n#0 /tmp/tmpgegzzec4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgegzzec4.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdzcy5gs0.php:27\n\
    Stack trace:\n#0 /tmp/tmpdzcy5gs0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdzcy5gs0.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp92o104km.php:26\n\
    Stack trace:\n#0 /tmp/tmp92o104km.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp92o104km.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe1argf0g.php:29\n\
    Stack trace:\n#0 /tmp/tmpe1argf0g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe1argf0g.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphdpoiqv7.php:26\n\
    Stack trace:\n#0 /tmp/tmphdpoiqv7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphdpoiqv7.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9at3zjcp.php:26\n\
    Stack trace:\n#0 /tmp/tmp9at3zjcp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9at3zjcp.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphwong88y.php:26\n\
    Stack trace:\n#0 /tmp/tmphwong88y.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphwong88y.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt4026v6_.php:27\n\
    Stack trace:\n#0 /tmp/tmpt4026v6_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt4026v6_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1w_154mv.php:27\n\
    Stack trace:\n#0 /tmp/tmp1w_154mv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1w_154mv.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqst8xa8e.php:28\n\
    Stack trace:\n#0 /tmp/tmpqst8xa8e.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqst8xa8e.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmum_4fd2.php:26\n\
    Stack trace:\n#0 /tmp/tmpmum_4fd2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmum_4fd2.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzazz85oj.php:29\n\
    Stack trace:\n#0 /tmp/tmpzazz85oj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzazz85oj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl4v12v04.php:27\n\
    Stack trace:\n#0 /tmp/tmpl4v12v04.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl4v12v04.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1hge4xd0.php:29\n\
    Stack trace:\n#0 /tmp/tmp1hge4xd0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1hge4xd0.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeukkfvlf.php:28\n\
    Stack trace:\n#0 /tmp/tmpeukkfvlf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeukkfvlf.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpel5x1fww.php:26\n\
    Stack trace:\n#0 /tmp/tmpel5x1fww.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpel5x1fww.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwrfjs28x.php:29\n\
    Stack trace:\n#0 /tmp/tmpwrfjs28x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwrfjs28x.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphigijbza.php:29\n\
    Stack trace:\n#0 /tmp/tmphigijbza.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphigijbza.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpubsv1bv3.php:29\n\
    Stack trace:\n#0 /tmp/tmpubsv1bv3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpubsv1bv3.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2e_zal7k.php:26\n\
    Stack trace:\n#0 /tmp/tmp2e_zal7k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2e_zal7k.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2svd2z3w.php:27\n\
    Stack trace:\n#0 /tmp/tmp2svd2z3w.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2svd2z3w.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5cnujx6z.php:28\n\
    Stack trace:\n#0 /tmp/tmp5cnujx6z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5cnujx6z.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebn2bwei.php:27\n\
    Stack trace:\n#0 /tmp/tmpebn2bwei.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpebn2bwei.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpemf_j55v.php:27\n\
    Stack trace:\n#0 /tmp/tmpemf_j55v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpemf_j55v.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppqm3ff7_.php:26\n\
    Stack trace:\n#0 /tmp/tmppqm3ff7_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppqm3ff7_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppi76zudo.php:26\n\
    Stack trace:\n#0 /tmp/tmppi76zudo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppi76zudo.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6g2zrivt.php:26\n\
    Stack trace:\n#0 /tmp/tmp6g2zrivt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6g2zrivt.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphyzgd10u.php:29\n\
    Stack trace:\n#0 /tmp/tmphyzgd10u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphyzgd10u.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9qgou10t.php:26\n\
    Stack trace:\n#0 /tmp/tmp9qgou10t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9qgou10t.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr7mj5uhw.php:27\n\
    Stack trace:\n#0 /tmp/tmpr7mj5uhw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr7mj5uhw.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk6azytje.php:29\n\
    Stack trace:\n#0 /tmp/tmpk6azytje.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk6azytje.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpflnmt26q.php:27\n\
    Stack trace:\n#0 /tmp/tmpflnmt26q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpflnmt26q.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcbvu3q5l.php:26\n\
    Stack trace:\n#0 /tmp/tmpcbvu3q5l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcbvu3q5l.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\n$N = 1000;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmbkkm6u6.php:29\n\
    Stack trace:\n#0 /tmp/tmpmbkkm6u6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmbkkm6u6.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyrn3hhkm.php:27\n\
    Stack trace:\n#0 /tmp/tmpyrn3hhkm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyrn3hhkm.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8todeu93.php:27\n\
    Stack trace:\n#0 /tmp/tmp8todeu93.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8todeu93.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprcddkvnw.php:29\n\
    Stack trace:\n#0 /tmp/tmprcddkvnw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprcddkvnw.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk9x7epja.php:29\n\
    Stack trace:\n#0 /tmp/tmpk9x7epja.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk9x7epja.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp16yu0wde.php:27\n\
    Stack trace:\n#0 /tmp/tmp16yu0wde.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp16yu0wde.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb2utlurm.php:26\n\
    Stack trace:\n#0 /tmp/tmpb2utlurm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb2utlurm.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqibwcqe6.php:29\n\
    Stack trace:\n#0 /tmp/tmpqibwcqe6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqibwcqe6.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9d01d9mm.php:28\n\
    Stack trace:\n#0 /tmp/tmp9d01d9mm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9d01d9mm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $total = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $total += $binary[$i];\n    }\n    return $total;\n}\n\necho\
    \ solve(1000);\necho solve(150);\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfzqqcpfq.php:29\n\
    Stack trace:\n#0 /tmp/tmpfzqqcpfq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfzqqcpfq.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpumtkm89v.php:29\n\
    Stack trace:\n#0 /tmp/tmpumtkm89v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpumtkm89v.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphz8ofysa.php:29\n\
    Stack trace:\n#0 /tmp/tmphz8ofysa.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphz8ofysa.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprmn4g41o.php:29\n\
    Stack trace:\n#0 /tmp/tmprmn4g41o.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprmn4g41o.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpopn0_64q.php:25\n\
    Stack trace:\n#0 /tmp/tmpopn0_64q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpopn0_64q.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpumb9l0br.php:25\n\
    Stack trace:\n#0 /tmp/tmpumb9l0br.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpumb9l0br.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3xw06ow6.php:29\n\
    Stack trace:\n#0 /tmp/tmp3xw06ow6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3xw06ow6.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6l9658y_.php:26\n\
    Stack trace:\n#0 /tmp/tmp6l9658y_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6l9658y_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2j5r5hsq.php:27\n\
    Stack trace:\n#0 /tmp/tmp2j5r5hsq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2j5r5hsq.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1w5_zh1s.php:28\n\
    Stack trace:\n#0 /tmp/tmp1w5_zh1s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1w5_zh1s.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $num){\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprg1a08c8.php:27\n\
    Stack trace:\n#0 /tmp/tmprg1a08c8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprg1a08c8.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoeoy4_ui.php:27\n\
    Stack trace:\n#0 /tmp/tmpoeoy4_ui.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoeoy4_ui.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsit6710s.php:26\n\
    Stack trace:\n#0 /tmp/tmpsit6710s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsit6710s.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3hgffkxr.php:28\n\
    Stack trace:\n#0 /tmp/tmp3hgffkxr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3hgffkxr.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwxaihucs.php:26\n\
    Stack trace:\n#0 /tmp/tmpwxaihucs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwxaihucs.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    $N = 1000;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfkcxjv8l.php:29\n\
    Stack trace:\n#0 /tmp/tmpfkcxjv8l.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfkcxjv8l.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpakjiafh7.php:27\n\
    Stack trace:\n#0 /tmp/tmpakjiafh7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpakjiafh7.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbnbty5o1.php:29\n\
    Stack trace:\n#0 /tmp/tmpbnbty5o1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbnbty5o1.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfhchcc9i.php:26\n\
    Stack trace:\n#0 /tmp/tmpfhchcc9i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfhchcc9i.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprr9qsbik.php:28\n\
    Stack trace:\n#0 /tmp/tmprr9qsbik.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprr9qsbik.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppjfktqeg.php:27\n\
    Stack trace:\n#0 /tmp/tmppjfktqeg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppjfktqeg.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpga58x0hu.php:26\n\
    Stack trace:\n#0 /tmp/tmpga58x0hu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpga58x0hu.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprg_9g3t1.php:27\n\
    Stack trace:\n#0 /tmp/tmprg_9g3t1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprg_9g3t1.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyp19l094.php:27\n\
    Stack trace:\n#0 /tmp/tmpyp19l094.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyp19l094.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdj_9g1hw.php:27\n\
    Stack trace:\n#0 /tmp/tmpdj_9g1hw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdj_9g1hw.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw4kqu_rk.php:27\n\
    Stack trace:\n#0 /tmp/tmpw4kqu_rk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw4kqu_rk.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkwrvth38.php:29\n\
    Stack trace:\n#0 /tmp/tmpkwrvth38.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkwrvth38.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps2fsykqj.php:29\n\
    Stack trace:\n#0 /tmp/tmps2fsykqj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps2fsykqj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyskdhnfi.php:28\n\
    Stack trace:\n#0 /tmp/tmpyskdhnfi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyskdhnfi.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbhcsf2l.php:27\n\
    Stack trace:\n#0 /tmp/tmplbhcsf2l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplbhcsf2l.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp83gq2gbr.php:29\n\
    Stack trace:\n#0 /tmp/tmp83gq2gbr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp83gq2gbr.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaqfcing_.php:29\n\
    Stack trace:\n#0 /tmp/tmpaqfcing_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaqfcing_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptdxbr3kv.php:26\n\
    Stack trace:\n#0 /tmp/tmptdxbr3kv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptdxbr3kv.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbymhod1j.php:27\n\
    Stack trace:\n#0 /tmp/tmpbymhod1j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbymhod1j.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    return array_sum($binary);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsh2tb9xz.php:23\n\
    Stack trace:\n#0 /tmp/tmpsh2tb9xz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsh2tb9xz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo \"\\n\";\necho solve(150);\necho \"\\n\";\necho solve(147);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfdni26z.php:32\n\
    Stack trace:\n#0 /tmp/tmpqfdni26z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqfdni26z.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqsilcetd.php:29\n\
    Stack trace:\n#0 /tmp/tmpqsilcetd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqsilcetd.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmjcqxbcz.php:29\n\
    Stack trace:\n#0 /tmp/tmpmjcqxbcz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmjcqxbcz.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3r5u33ti.php:26\n\
    Stack trace:\n#0 /tmp/tmp3r5u33ti.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp3r5u33ti.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf222x3g1.php:29\n\
    Stack trace:\n#0 /tmp/tmpf222x3g1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf222x3g1.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_zwxqf8v.php:26\n\
    Stack trace:\n#0 /tmp/tmp_zwxqf8v.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_zwxqf8v.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0g9sw1ym.php:28\n\
    Stack trace:\n#0 /tmp/tmp0g9sw1ym.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0g9sw1ym.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo \"<br>\";\necho solve(150);\necho \"<br>\";\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 6<br>4<br>4
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0giwawan.php:30\n\
    Stack trace:\n#0 /tmp/tmp0giwawan.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0giwawan.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    return array_sum($binary);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_gzfdn65.php:23\n\
    Stack trace:\n#0 /tmp/tmp_gzfdn65.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_gzfdn65.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\
    $N = 1000;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgze631ab.php:28\n\
    Stack trace:\n#0 /tmp/tmpgze631ab.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgze631ab.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj_1xyi5i.php:27\n\
    Stack trace:\n#0 /tmp/tmpj_1xyi5i.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpj_1xyi5i.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxwrqmh6x.php:26\n\
    Stack trace:\n#0 /tmp/tmpxwrqmh6x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxwrqmh6x.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp24r59hve.php:26\n\
    Stack trace:\n#0 /tmp/tmp24r59hve.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp24r59hve.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\necho solve(1000);\necho solve(150);\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdx_vckdz.php:30\n\
    Stack trace:\n#0 /tmp/tmpdx_vckdz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdx_vckdz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp37iojlwt.php:27\n\
    Stack trace:\n#0 /tmp/tmp37iojlwt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp37iojlwt.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr20hglx8.php:26\n\
    Stack trace:\n#0 /tmp/tmpr20hglx8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpr20hglx8.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n        $N = floor($N\
    \ / 2);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpexnc_6u_.php:26\n\
    Stack trace:\n#0 /tmp/tmpexnc_6u_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpexnc_6u_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp19ngwb4t.php:27\n\
    Stack trace:\n#0 /tmp/tmp19ngwb4t.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp19ngwb4t.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkmkctmyi.php:29\n\
    Stack trace:\n#0 /tmp/tmpkmkctmyi.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkmkctmyi.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr276rboc.php:27\n\
    Stack trace:\n#0 /tmp/tmpr276rboc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr276rboc.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0y1x8y39.php:29\n\
    Stack trace:\n#0 /tmp/tmp0y1x8y39.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0y1x8y39.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkcak33xp.php:26\n\
    Stack trace:\n#0 /tmp/tmpkcak33xp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkcak33xp.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxi3_kx9u.php:27\n\
    Stack trace:\n#0 /tmp/tmpxi3_kx9u.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpxi3_kx9u.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_04vi0pl.php:27\n\
    Stack trace:\n#0 /tmp/tmp_04vi0pl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_04vi0pl.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1af4p63r.php:27\n\
    Stack trace:\n#0 /tmp/tmp1af4p63r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1af4p63r.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbiktqi3s.php:29\n\
    Stack trace:\n#0 /tmp/tmpbiktqi3s.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbiktqi3s.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphhcyt5q6.php:26\n\
    Stack trace:\n#0 /tmp/tmphhcyt5q6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphhcyt5q6.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3wx23sf.php:29\n\
    Stack trace:\n#0 /tmp/tmpy3wx23sf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy3wx23sf.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg18l3tzo.php:27\n\
    Stack trace:\n#0 /tmp/tmpg18l3tzo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg18l3tzo.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7qkelezg.php:29\n\
    Stack trace:\n#0 /tmp/tmp7qkelezg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7qkelezg.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph4vhclf0.php:27\n\
    Stack trace:\n#0 /tmp/tmph4vhclf0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph4vhclf0.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppihqw_0a.php:28\n\
    Stack trace:\n#0 /tmp/tmppihqw_0a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppihqw_0a.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7wvn8m1v.php:27\n\
    Stack trace:\n#0 /tmp/tmp7wvn8m1v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7wvn8m1v.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $number){\n        $sum += $number;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsinhxqt_.php:27\n\
    Stack trace:\n#0 /tmp/tmpsinhxqt_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsinhxqt_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt7k4pduk.php:27\n\
    Stack trace:\n#0 /tmp/tmpt7k4pduk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt7k4pduk.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpplb8_f99.php:26\n\
    Stack trace:\n#0 /tmp/tmpplb8_f99.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpplb8_f99.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqkhlyqed.php:29\n\
    Stack trace:\n#0 /tmp/tmpqkhlyqed.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqkhlyqed.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpul8n5by8.php:26\n\
    Stack trace:\n#0 /tmp/tmpul8n5by8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpul8n5by8.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8chni1wa.php:28\n\
    Stack trace:\n#0 /tmp/tmp8chni1wa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8chni1wa.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv9zwsp1a.php:29\n\
    Stack trace:\n#0 /tmp/tmpv9zwsp1a.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv9zwsp1a.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $num){\n        $sum += $num;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmzbubasj.php:27\n\
    Stack trace:\n#0 /tmp/tmpmzbubasj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmzbubasj.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9lrrx4kz.php:27\n\
    Stack trace:\n#0 /tmp/tmp9lrrx4kz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9lrrx4kz.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4jvpe12_.php:29\n\
    Stack trace:\n#0 /tmp/tmp4jvpe12_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4jvpe12_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b){\n        $sum += $b;\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqxodv6p.php:27\n\
    Stack trace:\n#0 /tmp/tmpkqxodv6p.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpkqxodv6p.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn1nvslqe.php:28\n\
    Stack trace:\n#0 /tmp/tmpn1nvslqe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn1nvslqe.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $number){\n        $sum += $number;\n    }\n    return $sum;\n\
    }\n\necho solve(1000);\necho solve(150);\necho solve(147);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000)\
    \ !== \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150)\
    \ !== \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp977zhdj0.php:30\n\
    Stack trace:\n#0 /tmp/tmp977zhdj0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp977zhdj0.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa92er5_y.php:27\n\
    Stack trace:\n#0 /tmp/tmpa92er5_y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa92er5_y.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_avwdk7k.php:29\n\
    Stack trace:\n#0 /tmp/tmp_avwdk7k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_avwdk7k.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ii2fzcw.php:29\n\
    Stack trace:\n#0 /tmp/tmp7ii2fzcw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7ii2fzcw.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo \"\\n\";\necho solve(150);\necho \"\\n\";\necho solve(147);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "6\n4\n4\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp65qqo3or.php:32\n\
    Stack trace:\n#0 /tmp/tmp65qqo3or.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp65qqo3or.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpltdqsvf4.php:28\n\
    Stack trace:\n#0 /tmp/tmpltdqsvf4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpltdqsvf4.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3sa_o5y5.php:28\n\
    Stack trace:\n#0 /tmp/tmp3sa_o5y5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3sa_o5y5.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsqoq_wqw.php:26\n\
    Stack trace:\n#0 /tmp/tmpsqoq_wqw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsqoq_wqw.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp06va8vyk.php:27\n\
    Stack trace:\n#0 /tmp/tmp06va8vyk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp06va8vyk.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1e9vsmy1.php:26\n\
    Stack trace:\n#0 /tmp/tmp1e9vsmy1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1e9vsmy1.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgxfl74px.php:26\n\
    Stack trace:\n#0 /tmp/tmpgxfl74px.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgxfl74px.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $result = \"\";\n    while ($N > 0) {\n        $result = ($N % 2) . $result;\n\
    \        $N = floor($N / 2);\n    }\n    return $result;\n}\necho solve(1000);\n\
    echo \"\\n\";\necho solve(150);\necho \"\\n\";\necho solve(147);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1111101000\n10010110\n10010011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplz1b66k0.php:31\n\
    Stack trace:\n#0 /tmp/tmplz1b66k0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmplz1b66k0.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpti5o6cjw.php:26\n\
    Stack trace:\n#0 /tmp/tmpti5o6cjw.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpti5o6cjw.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000)\
    \ . \"\\n\";\necho solve(150) . \"\\n\";\necho solve(147) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "6\n4\n4\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqz2yfdyy.php:29\n\
    Stack trace:\n#0 /tmp/tmpqz2yfdyy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqz2yfdyy.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaf0okudr.php:27\n\
    Stack trace:\n#0 /tmp/tmpaf0okudr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpaf0okudr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoviml6az.php:29\n\
    Stack trace:\n#0 /tmp/tmpoviml6az.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoviml6az.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphsg5q1z6.php:29\n\
    Stack trace:\n#0 /tmp/tmphsg5q1z6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphsg5q1z6.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpokkdvqch.php:25\n\
    Stack trace:\n#0 /tmp/tmpokkdvqch.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpokkdvqch.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsex2kylx.php:29\n\
    Stack trace:\n#0 /tmp/tmpsex2kylx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsex2kylx.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz_dlp4uu.php:29\n\
    Stack trace:\n#0 /tmp/tmpz_dlp4uu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpz_dlp4uu.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm2p367cx.php:26\n\
    Stack trace:\n#0 /tmp/tmpm2p367cx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm2p367cx.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8g8re98r.php:29\n\
    Stack trace:\n#0 /tmp/tmp8g8re98r.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8g8re98r.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz2s47uga.php:26\n\
    Stack trace:\n#0 /tmp/tmpz2s47uga.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz2s47uga.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7mmquax3.php:27\n\
    Stack trace:\n#0 /tmp/tmp7mmquax3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7mmquax3.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplec46ktp.php:27\n\
    Stack trace:\n#0 /tmp/tmplec46ktp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplec46ktp.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdquk8ywd.php:26\n\
    Stack trace:\n#0 /tmp/tmpdquk8ywd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdquk8ywd.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1pfg2rzj.php:29\n\
    Stack trace:\n#0 /tmp/tmp1pfg2rzj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1pfg2rzj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa5bibigk.php:28\n\
    Stack trace:\n#0 /tmp/tmpa5bibigk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa5bibigk.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0j3fnk39.php:26\n\
    Stack trace:\n#0 /tmp/tmp0j3fnk39.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0j3fnk39.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptjv1pelq.php:27\n\
    Stack trace:\n#0 /tmp/tmptjv1pelq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptjv1pelq.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw3j86yrp.php:26\n\
    Stack trace:\n#0 /tmp/tmpw3j86yrp.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw3j86yrp.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp86bnm3z2.php:26\n\
    Stack trace:\n#0 /tmp/tmp86bnm3z2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp86bnm3z2.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv6n3tatc.php:26\n\
    Stack trace:\n#0 /tmp/tmpv6n3tatc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv6n3tatc.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9zdtv28l.php:26\n\
    Stack trace:\n#0 /tmp/tmp9zdtv28l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9zdtv28l.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $value) {\n        $sum += $value;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcq09qhob.php:27\n\
    Stack trace:\n#0 /tmp/tmpcq09qhob.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcq09qhob.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz6a3cg5b.php:27\n\
    Stack trace:\n#0 /tmp/tmpz6a3cg5b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz6a3cg5b.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfui4oqnj.php:29\n\
    Stack trace:\n#0 /tmp/tmpfui4oqnj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfui4oqnj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $number){\n        $sum += $number;\n    }\n    return $sum;\n\
    }\n\n$N = 1000;\necho solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp8ixr5jw.php:29\n\
    Stack trace:\n#0 /tmp/tmpp8ixr5jw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp8ixr5jw.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4xo9n7ax.php:26\n\
    Stack trace:\n#0 /tmp/tmp4xo9n7ax.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4xo9n7ax.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpawzag8od.php:29\n\
    Stack trace:\n#0 /tmp/tmpawzag8od.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpawzag8od.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgtqulfm4.php:26\n\
    Stack trace:\n#0 /tmp/tmpgtqulfm4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgtqulfm4.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_gknor0w.php:28\n\
    Stack trace:\n#0 /tmp/tmp_gknor0w.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_gknor0w.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt46an49i.php:29\n\
    Stack trace:\n#0 /tmp/tmpt46an49i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt46an49i.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprb1uapnd.php:27\n\
    Stack trace:\n#0 /tmp/tmprb1uapnd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprb1uapnd.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsz8jekob.php:28\n\
    Stack trace:\n#0 /tmp/tmpsz8jekob.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsz8jekob.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66ukap53.php:28\n\
    Stack trace:\n#0 /tmp/tmp66ukap53.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp66ukap53.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0xb75dj.php:26\n\
    Stack trace:\n#0 /tmp/tmp_0xb75dj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_0xb75dj.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9s07zg8v.php:27\n\
    Stack trace:\n#0 /tmp/tmp9s07zg8v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9s07zg8v.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj9c3inqs.php:26\n\
    Stack trace:\n#0 /tmp/tmpj9c3inqs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpj9c3inqs.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3qt8h4cj.php:29\n\
    Stack trace:\n#0 /tmp/tmp3qt8h4cj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3qt8h4cj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $bin = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($bin); $i++)\
    \ {\n        $sum += $bin[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfszpirum.php:27\n\
    Stack trace:\n#0 /tmp/tmpfszpirum.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfszpirum.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa827iwdq.php:29\n\
    Stack trace:\n#0 /tmp/tmpa827iwdq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa827iwdq.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary_array = str_split($binary);\n    $sum = 0;\n\
    \    foreach ($binary_array as $value) {\n        $sum += $value;\n    }\n   \
    \ return $sum;\n}\n\necho solve(1000);\necho solve(150);\necho solve(147);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8abkgqp0.php:30\n\
    Stack trace:\n#0 /tmp/tmp8abkgqp0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8abkgqp0.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $binary = str_split($binary);\n    $sum = 0;\n  \
    \  foreach($binary as $b) {\n        $sum += $b;\n    }\n    return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpya1ukn27.php:27\n\
    Stack trace:\n#0 /tmp/tmpya1ukn27.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpya1ukn27.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $sum = 0;\n    $binary = decbin($N);\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp3djfq23.php:29\n\
    Stack trace:\n#0 /tmp/tmpp3djfq23.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp3djfq23.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ // $N = (string)$N;\n    // $N = str_split($N);\n    // $sum = 0;\n    // for\
    \ ($i=0; $i < count($N); $i++) { \n    //     $sum += $N[$i];\n    // }\n    //\
    \ return $sum;\n    $sum = 0;\n    while ($N > 0) {\n        $sum += $N % 2;\n\
    \        $N = floor($N / 2);\n    }\n    return $sum;\n}\n\n$N = 1000;\n$result\
    \ = solve($N);\necho $result;\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcl3flev3.php:36\n\
    Stack trace:\n#0 /tmp/tmpcl3flev3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcl3flev3.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6k7m0m2y.php:29\n\
    Stack trace:\n#0 /tmp/tmp6k7m0m2y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6k7m0m2y.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpokbv81sr.php:29\n\
    Stack trace:\n#0 /tmp/tmpokbv81sr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpokbv81sr.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgwrba4ut.php:27\n\
    Stack trace:\n#0 /tmp/tmpgwrba4ut.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgwrba4ut.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp351ke96r.php:28\n\
    Stack trace:\n#0 /tmp/tmp351ke96r.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp351ke96r.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0bvd1mvy.php:29\n\
    Stack trace:\n#0 /tmp/tmp0bvd1mvy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0bvd1mvy.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\n$N = 1000;\n\
    echo solve($N);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5qjl72fq.php:28\n\
    Stack trace:\n#0 /tmp/tmp5qjl72fq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5qjl72fq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf0jtma7s.php:26\n\
    Stack trace:\n#0 /tmp/tmpf0jtma7s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpf0jtma7s.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd_9te0_n.php:26\n\
    Stack trace:\n#0 /tmp/tmpd_9te0_n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd_9te0_n.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp651b4w11.php:26\n\
    Stack trace:\n#0 /tmp/tmp651b4w11.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp651b4w11.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe52mh1yo.php:26\n\
    Stack trace:\n#0 /tmp/tmpe52mh1yo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpe52mh1yo.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp010qi5n.php:27\n\
    Stack trace:\n#0 /tmp/tmpp010qi5n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpp010qi5n.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    echo solve(150);\necho solve(147);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1000) !==\
    \ \"1\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(150) !==\
    \ \"110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(147)\
    \ !== \"1100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(333)\
    \ !== \"1001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(963)\
    \ !== \"10010\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '644'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiit0al1d.php:29\n\
    Stack trace:\n#0 /tmp/tmpiit0al1d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiit0al1d.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppnv7z37c.php:27\n\
    Stack trace:\n#0 /tmp/tmppnv7z37c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppnv7z37c.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ri9c6pw.php:27\n\
    Stack trace:\n#0 /tmp/tmp9ri9c6pw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp9ri9c6pw.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplq0s9gko.php:25\n\
    Stack trace:\n#0 /tmp/tmplq0s9gko.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplq0s9gko.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a positive integer N, return the total sum of its digits\
    \ in binary.\n// Example\n// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n// Output:\n// a string of binary number\nfunction solve($N) {\n   \
    \ $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary);\
    \ $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}\n\necho solve(1000);\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1000) !== \"1\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(150) !== \"110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(147) !== \"1100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(333) !== \"1001\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(963) !== \"10010\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '6'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi4_bt9w2.php:27\n\
    Stack trace:\n#0 /tmp/tmpi4_bt9w2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi4_bt9w2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception

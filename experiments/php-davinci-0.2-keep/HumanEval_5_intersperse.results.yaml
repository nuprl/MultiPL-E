name: HumanEval_5_intersperse
language: php
results:
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $first = array_shift($numbers);\n        return array_merge(array($first),\
    \ array($delimeter), intersperse($numbers, $delimeter));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprt1q1en0.php:22\n\
    Stack trace:\n#0 /tmp/tmprt1q1en0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmprt1q1en0.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, $tail));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl872fdkr.php:23\n\
    Stack trace:\n#0 /tmp/tmpl872fdkr.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpl872fdkr.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $size = count($numbers);\n    for ($i = 0; $i < $size;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $size - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    }\n    if (count($numbers)\
    \ == 1) {\n        return $numbers;\n    }\n    $result = [];\n    for ($i = 0;\
    \ $i < count($numbers) - 1; $i++) {\n        $result[] = $numbers[$i];\n     \
    \   $result[] = $delimeter;\n    }\n    $result[] = $numbers[count($numbers) -\
    \ 1];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, intersperse($tail,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo3dhgum3.php:23\n\
    Stack trace:\n#0 /tmp/tmpo3dhgum3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpo3dhgum3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        $result[] = $numbers[0];\n        for ($i =\
    \ 1; $i < count($numbers); $i++) {\n            $result[] = $delimeter;\n    \
    \        $result[] = $numbers[$i];\n        }\n        return $result;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = $numbers[0];\n        $rest = array_slice($numbers, 1);\n        return array_merge([$first],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, intersperse($rest,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv_9z0mij.php:23\n\
    Stack trace:\n#0 /tmp/tmpv_9z0mij.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv_9z0mij.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        $rest = intersperse($numbers, $delimeter);\n\
    \        array_unshift($rest, $first);\n        return array_merge($rest, [$delimeter]);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpas4rz7gs.php:24\n\
    Stack trace:\n#0 /tmp/tmpas4rz7gs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpas4rz7gs.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, intersperse($numbers, $delimeter)));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgtcrpc6l.php:22\n\
    Stack trace:\n#0 /tmp/tmpgtcrpc6l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgtcrpc6l.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [array_shift($numbers)];\n\
    \    foreach ($numbers as $number) {\n        $result[] = $delimeter;\n      \
    \  $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        for ($i = 0; $i < count($numbers); $i++) {\n\
    \            $result[] = $numbers[$i];\n            if ($i < count($numbers) -\
    \ 1) {\n                $result[] = $delimeter;\n            }\n        }\n  \
    \      return $result;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, intersperse($tail,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptdvfkq1d.php:23\n\
    Stack trace:\n#0 /tmp/tmptdvfkq1d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptdvfkq1d.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        $result[]\
    \ = $number;\n        if ($index < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    $len = count($numbers);\n    for ($i = 1; $i < $len; $i++) {\n        $result[]\
    \ = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n\n    $result =\
    \ array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n      \
    \  $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $i = 0;\n    while ($i < count($numbers)) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        $rest = intersperse($numbers, $delimeter);\n\
    \        array_unshift($rest, $first);\n        for ($i = 1; $i < count($rest);\
    \ $i += 2) {\n            array_splice($rest, $i, 0, $delimeter);\n        }\n\
    \        return $rest;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppcwyy_wq.php:27\n\
    Stack trace:\n#0 /tmp/tmppcwyy_wq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppcwyy_wq.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    foreach ($numbers as $number) {\n        $result[] = $number;\n        $result[]\
    \ = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, $numbers));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv9lz_ej2.php:22\n\
    Stack trace:\n#0 /tmp/tmpv9lz_ej2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpv9lz_ej2.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $i = 0;\n    while ($i < count($numbers)) {\n        if\
    \ ($i > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $numbers[$i];\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++)\
    \ {\n            $result[] = $delimeter;\n            $result[] = $numbers[$i];\n\
    \        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \t$result = [];\n\tforeach ($numbers as $index => $number) {\n\t\t$result[] =\
    \ $number;\n\t\tif ($index < count($numbers) - 1) {\n\t\t\t$result[] = $delimeter;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $n = count($numbers);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $n - 1) {\n         \
    \   $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, intersperse($tail,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxafno_ai.php:23\n\
    Stack trace:\n#0 /tmp/tmpxafno_ai.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxafno_ai.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        $result[]\
    \ = $number;\n        if ($i < count($numbers) - 1) {\n            $result[] =\
    \ $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        $result[]\
    \ = $number;\n        if ($index != count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n    \
    \    $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array($numbers[0]);\n        for ($i = 1; $i < count($numbers);\
    \ $i++) {\n            $result[] = $delimeter;\n            $result[] = $numbers[$i];\n\
    \        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  foreach ($numbers as $number) {\n        $result[] = $number;\n        $result[]\
    \ = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($index > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($index > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = $numbers[0];\n        $rest = array_slice($numbers, 1);\n        return array_merge([$first],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, $rest));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp687dvaji.php:23\n\
    Stack trace:\n#0 /tmp/tmp687dvaji.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp687dvaji.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) <= 1) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = array_shift($numbers);\n        $tail = intersperse($numbers, $delimeter);\n\
    \        return array_merge([$head], array_merge([$delimeter], $tail));\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwzj8pfki.php:23\n\
    Stack trace:\n#0 /tmp/tmpwzj8pfki.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwzj8pfki.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        $result[] = $numbers[0];\n        for ($i =\
    \ 1; $i < count($numbers); $i++) {\n            $result[] = $delimeter;\n    \
    \        $result[] = $numbers[$i];\n        }\n        return $result;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        $result[]\
    \ = $number;\n        if ($i < count($numbers) - 1) {\n            $result[] =\
    \ $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = array_shift($numbers);\n        return array_merge([$head], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, $numbers));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpesc1a32y.php:22\n\
    Stack trace:\n#0 /tmp/tmpesc1a32y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpesc1a32y.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        $result[] = $numbers[0];\n        for ($i =\
    \ 1; $i < count($numbers); $i++) {\n            $result[] = $delimeter;\n    \
    \        $result[] = $numbers[$i];\n        }\n        return $result;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function($x)\
    \ use ($delimeter) {\n            return [$delimeter, $x];\n        }, $numbers));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbjw5ibyr.php:24\n\
    Stack trace:\n#0 /tmp/tmpbjw5ibyr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbjw5ibyr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $result[]\
    \ = $numbers[$i];\n        $result[] = $delimeter;\n    }\n    $result[] = $numbers[count($numbers)\
    \ - 1];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) <= 1) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) === 0) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = [$numbers[0]];\n    for ($i = 1; $i < count($numbers); $i++) {\n        $result[]\
    \ = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = array_shift($numbers);\n        return array_merge([$head], intersperse($numbers,\
    \ $delimeter));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpujpn7wqj.php:22\n\
    Stack trace:\n#0 /tmp/tmpujpn7wqj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpujpn7wqj.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    foreach (array_slice($numbers, 1) as $number) {\n        $result[] = $delimeter;\n\
    \        $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $count - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        $result[] = $numbers[0];\n        for ($i =\
    \ 1; $i < count($numbers); $i++) {\n            $result[] = $delimeter;\n    \
    \        $result[] = $numbers[$i];\n        }\n        return $result;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n    \
    \    $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, $tail));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxrj2mai.php:23\n\
    Stack trace:\n#0 /tmp/tmprxrj2mai.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprxrj2mai.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = $numbers[0];\n        $rest = array_slice($numbers, 1);\n        return array_merge([$first],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, $rest));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk6edtub4.php:23\n\
    Stack trace:\n#0 /tmp/tmpk6edtub4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk6edtub4.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else if (count($numbers)\
    \ == 1) {\n        return $numbers;\n    } else {\n        $result = [];\n   \
    \     for ($i = 0; $i < count($numbers) - 1; $i++) {\n            $result[] =\
    \ $numbers[$i];\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $numbers[count($numbers) - 1];\n        return $result;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = $numbers[0];\n        $rest = array_slice($numbers, 1);\n        return array_merge([$first],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, $rest));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqllksxgw.php:23\n\
    Stack trace:\n#0 /tmp/tmpqllksxgw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqllksxgw.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    } else {\n        $head =\
    \ array_shift($numbers);\n        return array_merge([$head], array_map(function($x)\
    \ use ($delimeter) {\n            return [$delimeter, $x];\n        }, intersperse($numbers,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_n_1e_mw.php:24\n\
    Stack trace:\n#0 /tmp/tmp_n_1e_mw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_n_1e_mw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function\
    \ ($x) use ($delimeter) {\n            return [$delimeter, $x];\n        }, $numbers));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp36tjpnqn.php:24\n\
    Stack trace:\n#0 /tmp/tmp36tjpnqn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36tjpnqn.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $first = array_shift($numbers);\n        return array_merge(array($first),\
    \ array($delimeter), intersperse($numbers, $delimeter));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbr7n292g.php:22\n\
    Stack trace:\n#0 /tmp/tmpbr7n292g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbr7n292g.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $result[]\
    \ = $numbers[$i];\n        $result[] = $delimeter;\n    }\n    $result[] = $numbers[count($numbers)\
    \ - 1];\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, $numbers));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1_bybf_9.php:22\n\
    Stack trace:\n#0 /tmp/tmp1_bybf_9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1_bybf_9.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($index > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n    \
    \    $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($index > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $result\
    \ = [$numbers[0]];\n        for ($i = 1; $i < count($numbers); $i++) {\n     \
    \       $result[] = $delimeter;\n            $result[] = $numbers[$i];\n     \
    \   }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [array_shift($numbers)];\n\
    \    foreach ($numbers as $number) {\n        $result[] = $delimeter;\n      \
    \  $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  foreach ($numbers as $number) {\n        $result[] = $number;\n        $result[]\
    \ = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $i = 0;\n    foreach ($numbers as $number) {\n       \
    \ if ($i > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        if (!empty($result))\
    \ {\n            $result[] = $delimeter;\n        }\n        $result[] = $number;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else if (count($numbers)\
    \ == 1) {\n        return $numbers;\n    } else {\n        $first = array_shift($numbers);\n\
    \        return array_merge([$first], [$delimeter], intersperse($numbers, $delimeter));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = $numbers[0];\n        $tail = array_slice($numbers, 1);\n        return array_merge([$head],\
    \ array_map(function($x) use ($delimeter) { return [$delimeter, $x]; }, intersperse($tail,\
    \ $delimeter)));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxgnnfnr8.php:23\n\
    Stack trace:\n#0 /tmp/tmpxgnnfnr8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxgnnfnr8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        if\
    \ ($i != 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    }\n    $result\
    \ = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++) {\n    \
    \    $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n\n    $result =\
    \ array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    }\n    $result = [];\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $count - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \t$result = [];\n\tforeach ($numbers as $index => $number) {\n\t\t$result[] =\
    \ $number;\n\t\tif ($index < count($numbers) - 1) {\n\t\t\t$result[] = $delimeter;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     return array_merge(array_slice($numbers, 0, 1), array($delimeter), intersperse(array_slice($numbers,\
    \ 1), $delimeter));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfqwav8cq.php:21\n\
    Stack trace:\n#0 /tmp/tmpfqwav8cq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfqwav8cq.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i != $count - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     return array_merge(array_slice($numbers, 0, 1), [$delimeter], intersperse(array_slice($numbers,\
    \ 1), $delimeter));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4khm847j.php:21\n\
    Stack trace:\n#0 /tmp/tmp4khm847j.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4khm847j.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = $numbers[0];\n        $rest = array_slice($numbers, 1);\n        return array_merge([$first],\
    \ intersperse($rest, $delimeter), [$delimeter]);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3jc0r4ed.php:23\n\
    Stack trace:\n#0 /tmp/tmp3jc0r4ed.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp3jc0r4ed.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return $numbers;\n    }\n    $result = array();\n\
    \    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $count - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $index => $number) {\n        if\
    \ ($index > 0) {\n            $result[] = $delimeter;\n        }\n        $result[]\
    \ = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) === 0) {\n        return [];\n    } else {\n        $head\
    \ = array_shift($numbers);\n        return array_merge([$head], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, $numbers));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0w5ut6yx.php:22\n\
    Stack trace:\n#0 /tmp/tmp0w5ut6yx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0w5ut6yx.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [];\n  \
    \  $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return $numbers;\n    } else {\n   \
    \     $result = array();\n        $result[] = $numbers[0];\n        for ($i =\
    \ 1; $i < count($numbers); $i++) {\n            $result[] = $delimeter;\n    \
    \        $result[] = $numbers[$i];\n        }\n        return $result;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $first\
    \ = array_shift($numbers);\n        return array_merge([$first], array_map(function($x)\
    \ use ($delimeter) { return [$delimeter, $x]; }, intersperse($numbers, $delimeter)));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpull2b297.php:22\n\
    Stack trace:\n#0 /tmp/tmpull2b297.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpull2b297.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $len = count($numbers);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $count - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $number) {\n        $result[] = $number;\n\
    \        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    $length = count($numbers);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $length - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [$numbers[0]];\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n\
    \        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    foreach ($numbers as $i => $number) {\n        if ($i\
    \ > 0) {\n            $result[] = $delimeter;\n        }\n        $result[] =\
    \ $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) == 0) {\n        return [];\n    } else {\n        $head\
    \ = array_shift($numbers);\n        return array_merge([$head], array_map(function($x)\
    \ use ($delimeter) {\n            return [$delimeter, $x];\n        }, $numbers));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppjl8zjd2.php:24\n\
    Stack trace:\n#0 /tmp/tmppjl8zjd2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppjl8zjd2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    } else {\n    \
    \    $result = array();\n        foreach ($numbers as $number) {\n           \
    \ $result[] = $number;\n            $result[] = $delimeter;\n        }\n     \
    \   array_pop($result);\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    }\n    $result = [array_shift($numbers)];\n\
    \    foreach ($numbers as $number) {\n        $result[] = $delimeter;\n      \
    \  $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    $result = [];\n    for ($i = 0; $i < count($numbers); $i++) {\n        $result[]\
    \ = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n            $result[]\
    \ = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse([], 4)\n// []\n// >>> intersperse([1,\
    \ 2, 3], 4)\n// [1, 4, 2, 4, 3]\nfunction intersperse($numbers, $delimeter) {\n\
    \    if (empty($numbers)) {\n        return [];\n    } else {\n        $head =\
    \ array_shift($numbers);\n        return array_merge([$head], array_map(function($x)\
    \ use ($delimeter) { return $delimeter.$x; }, intersperse($numbers, $delimeter)));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdc_07r64.php:22\n\
    Stack trace:\n#0 /tmp/tmpdc_07r64.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdc_07r64.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception

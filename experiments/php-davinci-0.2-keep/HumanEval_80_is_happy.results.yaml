name: HumanEval_80_is_happy
language: php
results:
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $str = str_split($s);\n  $count = count($str);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($str[$i] == $str[$i\
    \ + 1] || $str[$i] == $str[$i + 2] || $str[$i + 1] == $str[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) return false;\n  for ($i = 0; $i < $len\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpot0jnd3j.php:33\n\
    Stack trace:\n#0 /tmp/tmpot0jnd3j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpot0jnd3j.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1]\
    \ == $arr[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $result = false;\n    $length = strlen($s);\n    if ($length >= 3) {\n  \
    \      $result = true;\n        for ($i = 0; $i < $length - 2; $i++) {\n     \
    \       if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n                $result = false;\n                break;\n        \
    \    }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  if (count($arr) < 3) {\n    return false;\n  }\n \
    \ for ($i = 0; $i < count($arr) - 2; $i++) {\n    if ($arr[$i] == $arr[$i + 1]\
    \ || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $arr_len = count($arr);\n  if($arr_len < 3) {\n  \
    \  return false;\n  }\n  for($i = 0; $i < $arr_len - 2; $i++) {\n    if($arr[$i]\
    \ == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $i = 0;\n    while ($i < count($s) - 2) {\n    \
    \    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwuykuu0q.php:29\n\
    Stack trace:\n#0 /tmp/tmpwuykuu0q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwuykuu0q.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\necho is_happy('a') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('aa') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('abcd')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aabb') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('xyy')\
    \ ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\ntrue\nfalse\ntrue\nfalse\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgvlw5fr9.php:33\n\
    Stack trace:\n#0 /tmp/tmpgvlw5fr9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgvlw5fr9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  if (count($arr) < 3) {\n    return false;\n  }\n \
    \ for ($i = 0; $i < count($arr) - 2; $i++) {\n    if ($arr[$i] == $arr[$i + 1]\
    \ || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2i87y5rc.php:33\n\
    Stack trace:\n#0 /tmp/tmp2i87y5rc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2i87y5rc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0kpcm6n.php:33\n\
    Stack trace:\n#0 /tmp/tmp_0kpcm6n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0kpcm6n.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if($count < 3) {\n    return\
    \ false;\n  }\n  for($i = 0; $i < $count; $i++) {\n    if(isset($arr[$i + 1])\
    \ && isset($arr[$i + 2])) {\n      if($arr[$i] == $arr[$i + 1] || $arr[$i] ==\
    \ $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n        return false;\n   \
    \   }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $i = 0;\n    $j = 1;\n    $k = 2;\n    while ($i\
    \ < count($s) - 2) {\n        if ($s[$i] == $s[$j] || $s[$i] == $s[$k] || $s[$j]\
    \ == $s[$k]) {\n            return false;\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuksn413o.php:33\n\
    Stack trace:\n#0 /tmp/tmpuksn413o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuksn413o.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp37ldbbvf.php:33\n\
    Stack trace:\n#0 /tmp/tmp37ldbbvf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp37ldbbvf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmptz4jvtgs.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmptz4jvtgs.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmptz4jvtgs.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmptz4jvtgs.php:34\nStack trace:\n\
    #0 /tmp/tmptz4jvtgs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptz4jvtgs.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) return false;\n    for ($i = 0; $i\
    \ < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2]\
    \ || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\necho is_happy('a') . \"\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\"\
    ;\necho is_happy('adb') . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\necho is_happy(\"aabb\");\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5j_tx7m.php:34\n\
    Stack trace:\n#0 /tmp/tmp_5j_tx7m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_5j_tx7m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $str_len = strlen($s);\n  if ($str_len < 3) {\n    return false;\n  }\n  for\
    \ ($i = 0; $i < $str_len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    if (count($s) < 3) {\n        return false;\n  \
    \  }\n    for ($i = 0; $i < count($s) - 2; $i++) {\n        if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) return false;\n    for ($i = 0; $i\
    \ < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2]\
    \ || $s[$i + 1] == $s[$i + 2]) return false;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $count = strlen($s);\n  if ($count < 3) {\n    return false;\n  }\n  for ($i\
    \ = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1]\
    \ == $arr[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\necho is_happy('a') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('aa') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('abcd')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aabb') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('xyy')\
    \ ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "false\nfalse\ntrue\nfalse\ntrue\nfalse\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $i = 0;\n    $j = 1;\n    $k = 2;\n    while ($k\
    \ < count($s)) {\n        if ($s[$i] == $s[$j] || $s[$i] == $s[$k] || $s[$j] ==\
    \ $s[$k]) {\n            return false;\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp5b8qx6j.php:33\n\
    Stack trace:\n#0 /tmp/tmpp5b8qx6j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpp5b8qx6j.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  if (count($s) < 3) {\n    return false;\n  }\n  for\
    \ ($i = 0; $i < count($s) - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if($count < 3) {\n    return\
    \ false;\n  }\n  for($i = 0; $i < $count - 2; $i++) {\n    if($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnp1mbr__.php:34\n\
    Stack trace:\n#0 /tmp/tmpnp1mbr__.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnp1mbr__.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if($count < 3) return false;\n\
    \  for($i = 0; $i < $count - 2; $i++){\n    if($arr[$i] == $arr[$i + 1] || $arr[$i]\
    \ == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) return false;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1]\
    \ == $arr[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho is_happy('a') . \"\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\"\
    ;\necho is_happy('adb') . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0kk_tf57.php:33\n\
    Stack trace:\n#0 /tmp/tmp0kk_tf57.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0kk_tf57.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\"\
    ;\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\n\";\necho\
    \ is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n1\n1\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfvszwe_.php:40\n\
    Stack trace:\n#0 /tmp/tmpqfvszwe_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqfvszwe_.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) return false;\n  for ($i = 0; $i < $len\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) return false;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsfob6ibf.php:29\n\
    Stack trace:\n#0 /tmp/tmpsfob6ibf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsfob6ibf.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count; $i++) {\n    if ($arr[$i] === $arr[$i\
    \ + 1] && $arr[$i] === $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmps5phd_qt.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmps5phd_qt.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmps5phd_qt.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmps5phd_qt.php:34\nStack trace:\n\
    #0 /tmp/tmps5phd_qt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps5phd_qt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    $arr = str_split($s);\n\
    \    $arr = array_unique($arr);\n    if (count($arr) == 1) {\n        return false;\n\
    \    }\n    $arr = str_split($s, 3);\n    foreach ($arr as $value) {\n       \
    \ $arr1 = str_split($value);\n        $arr1 = array_unique($arr1);\n        if\
    \ (count($arr1) == 1) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_2d2iqkc.php:39\n\
    Stack trace:\n#0 /tmp/tmp_2d2iqkc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_2d2iqkc.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $result = true;\n    $arr = str_split($s);\n    if (count($arr) < 3) {\n\
    \        $result = false;\n    } else {\n        for ($i = 0; $i < count($arr)\
    \ - 2; $i++) {\n            if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i\
    \ + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n                $result = false;\n\
    \                break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9mvjh0z9.php:34\n\
    Stack trace:\n#0 /tmp/tmp9mvjh0z9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9mvjh0z9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i +\
    \ 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpglhqlyxa.php:33\n\
    Stack trace:\n#0 /tmp/tmpglhqlyxa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpglhqlyxa.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkyauhpd8.php:34\n\
    Stack trace:\n#0 /tmp/tmpkyauhpd8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkyauhpd8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfgm5e87_.php:33\n\
    Stack trace:\n#0 /tmp/tmpfgm5e87_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfgm5e87_.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    if (count($arr) < 3) {\n        return false;\n\
    \    }\n    for ($i = 0; $i < count($arr) - 2; $i++) {\n        if ($arr[$i] ==\
    \ $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp90aoq45g.php:34\n\
    Stack trace:\n#0 /tmp/tmp90aoq45g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp90aoq45g.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    for ($i = 0; $i < count($s) - 2; $i++) {\n     \
    \   if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5pwsy5p6.php:27\n\
    Stack trace:\n#0 /tmp/tmp5pwsy5p6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5pwsy5p6.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbf1qa1n5.php:34\n\
    Stack trace:\n#0 /tmp/tmpbf1qa1n5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbf1qa1n5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) return false;\n  for ($i = 0; $i < $len\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) return\
    \ false;\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  if (count($arr) < 3) {\n    return false;\n  }\n \
    \ for ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == $arr[$i + 1] &&\
    \ $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp5sd2gw_b.php on line 18\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp5sd2gw_b.php on line 18\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmp5sd2gw_b.php on line 18\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmp5sd2gw_b.php:33\nStack trace:\n\
    #0 /tmp/tmp5sd2gw_b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5sd2gw_b.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho is_happy('a') . PHP_EOL;\necho is_happy('aa')\
    \ . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\necho is_happy('aabb') . PHP_EOL;\n\
    echo is_happy('adb') . PHP_EOL;\necho is_happy('xyy') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"\
    aabb\") . \"\\n\";\necho is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\")\
    \ . \"\\n\";\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n       \
    \ if ($i + 2 < $count) {\n            if ($arr[$i] == $arr[$i + 1] || $arr[$i]\
    \ == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n                return false;\n\
    \            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdjw92fen.php:33\n\
    Stack trace:\n#0 /tmp/tmpdjw92fen.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdjw92fen.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\necho is_happy('a') . \"\\n\";\necho is_happy('aa') . \"\\n\";\n\
    echo is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('adb')\
    \ . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count; $i++) {\n    if ($arr[$i] === $arr[$i\
    \ + 1] && $arr[$i] === $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpjh_ctp2v.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpjh_ctp2v.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmpjh_ctp2v.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmpjh_ctp2v.php:34\nStack trace:\n\
    #0 /tmp/tmpjh_ctp2v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjh_ctp2v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) return false;\n  for ($i = 0; $i < $len\
    \ - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\necho is_happy('a') . \"\\n\";\necho is_happy('aa') . \"\\n\";\necho\
    \ is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('adb')\
    \ . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n1\n1\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpth_gjgr6.php:39\n\
    Stack trace:\n#0 /tmp/tmpth_gjgr6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpth_gjgr6.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpubp0bksf.php:34\n\
    Stack trace:\n#0 /tmp/tmpubp0bksf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpubp0bksf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe6edqdza.php:34\n\
    Stack trace:\n#0 /tmp/tmpe6edqdza.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpe6edqdza.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $count = count($arr);\n    if ($count < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n   \
    \     if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2bfa5oly.php:34\n\
    Stack trace:\n#0 /tmp/tmp2bfa5oly.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2bfa5oly.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  return preg_match('/^(.)(?!\\1)(.)(?!\\1|\\2)\\1\\2$/', $s);\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6yl23c3i.php:20\n\
    Stack trace:\n#0 /tmp/tmp6yl23c3i.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6yl23c3i.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if($count < 3) {\n    return\
    \ false;\n  }\n  for($i = 0; $i < $count; $i++) {\n    if($i + 2 < $count) {\n\
    \      if($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1]\
    \ == $arr[$i + 2]) {\n        return false;\n      }\n    }\n  }\n  return true;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $i = 0;\n  $j = 1;\n  $k = 2;\n  while ($k < count($s))\
    \ {\n    if ($s[$i] == $s[$j] || $s[$i] == $s[$k] || $s[$j] == $s[$k]) {\n   \
    \   return false;\n    }\n    $i++;\n    $j++;\n    $k++;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0wtnnrcw.php:33\n\
    Stack trace:\n#0 /tmp/tmp0wtnnrcw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0wtnnrcw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if($count < 3) {\n    return\
    \ false;\n  }\n  for($i = 0; $i < $count; $i++) {\n    if($arr[$i] === $arr[$i\
    \ + 1] && $arr[$i] === $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpq4fw640k.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpq4fw640k.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmpq4fw640k.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmpq4fw640k.php:34\nStack trace:\n\
    #0 /tmp/tmpq4fw640k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq4fw640k.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $len = count($s);\n    if ($len < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count; $i++) {\n    if ($s[$i] === $s[$i +\
    \ 1] && $s[$i] === $s[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpy0z5kea_.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpy0z5kea_.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmpy0z5kea_.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmpy0z5kea_.php:34\nStack trace:\n\
    #0 /tmp/tmpy0z5kea_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy0z5kea_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $happy = true;\n  for ($i = 0; $i < count($s) - 2; $i++)\
    \ {\n    if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      $happy = false;\n\
    \    }\n  }\n  return $happy;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcem8ebhw.php:28\n\
    Stack trace:\n#0 /tmp/tmpcem8ebhw.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcem8ebhw.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    if (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i\
    \ < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $happy = false;\n  $length = strlen($s);\n  if ($length >= 3) {\n    for ($i\
    \ = 0; $i < $length - 2; $i++) {\n      if ($s[$i] != $s[$i + 1] && $s[$i] !=\
    \ $s[$i + 2] && $s[$i + 1] != $s[$i + 2]) {\n        $happy = true;\n      } else\
    \ {\n        $happy = false;\n        break;\n      }\n    }\n  }\n  return $happy;\n\
    }\necho is_happy('a') ? 'True' : 'False';\necho \"\\n\";\necho is_happy('aa')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho is_happy('abcd') ? 'True' : 'False';\n\
    echo \"\\n\";\necho is_happy('aabb') ? 'True' : 'False';\necho \"\\n\";\necho\
    \ is_happy('adb') ? 'True' : 'False';\necho \"\\n\";\necho is_happy('xyy') ? 'True'\
    \ : 'False';\necho \"\\n\";\necho is_happy('aabbcd') ? 'True' : 'False';\necho\
    \ \"\\n\";\necho is_happy('aabbccdd') ? 'True' : 'False';\necho \"\\n\";\necho\
    \ is_happy('aabbccddee') ? 'True' : 'False';\necho \"\\n\";\necho is_happy('aabbccddeeff')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho is_happy('aabbccddeeffgg') ? 'True'\
    \ : 'False';\necho \"\\n\";\necho is_happy('aabbccddeeffgghh') ? 'True' : 'False';\n\
    echo \"\\n\";\necho is_happy('aabbccddeeffgghhii') ? 'True' : 'False';\necho \"\
    \\n\";\necho is_happy('aabbccddeeffgghhiijj') ? 'True' : 'False';\necho \"\\n\"\
    ;\necho is_happy('aabbccddeeffgghhiijjkk') ? 'True' : 'False';\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nFalse\nTrue\nFalse\nFalse\nFalse\nFalse\nFalse\nFalse\n\
    False\nFalse\nFalse\nFalse"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $arr = str_split($s);\n    $len = count($arr);\n    if ($len < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n        if\
    \ ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $i = 0;\n    $j = 1;\n    $k = 2;\n    while ($k\
    \ < count($s)) {\n        if ($s[$i] == $s[$j] || $s[$i] == $s[$k] || $s[$j] ==\
    \ $s[$k]) {\n            return false;\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1clowwio.php:33\n\
    Stack trace:\n#0 /tmp/tmp1clowwio.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1clowwio.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $str = str_split($s);\n  $count = count($str);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count; $i++) {\n    if ($str[$i] === $str[$i\
    \ + 1] && $str[$i] === $str[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpkgoc_qxg.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpkgoc_qxg.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmpkgoc_qxg.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmpkgoc_qxg.php:34\nStack trace:\n\
    #0 /tmp/tmpkgoc_qxg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkgoc_qxg.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $len = count($arr);\n  if ($len < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] && $arr[$i] == $arr[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpji54umxj.php:34\n\
    Stack trace:\n#0 /tmp/tmpji54umxj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpji54umxj.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        if\
    \ ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp0ltrj7lt.php on line 19\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp0ltrj7lt.php on line 19\nPHP Warning:\
    \  Undefined array key 4 in /tmp/tmp0ltrj7lt.php on line 19\nPHP Fatal error:\
    \  Uncaught Exception: Test failed! in /tmp/tmp0ltrj7lt.php:34\nStack trace:\n\
    #0 /tmp/tmp0ltrj7lt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0ltrj7lt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $len = strlen($s);\n  if ($len < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i +\
    \ 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\"\
    ;\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\n\";\necho\
    \ is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $count = count($s);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $s = str_split($s);\n  $len = count($s);\n  if ($len < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < $len - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n \
    \ }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    for ($i = 0; $i < count($s) - 2; $i++) {\n     \
    \   if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc4pyf2i6.php:27\n\
    Stack trace:\n#0 /tmp/tmpc4pyf2i6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc4pyf2i6.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $i = 0;\n  $count = count($arr);\n  while ($i < $count)\
    \ {\n    if ($i + 2 < $count) {\n      if ($arr[$i] == $arr[$i + 1] || $arr[$i]\
    \ == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n        return false;\n\
    \      }\n    }\n    $i++;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2_8ahvuu.php:31\n\
    Stack trace:\n#0 /tmp/tmp2_8ahvuu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2_8ahvuu.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $arr = str_split($s);\n  $count = count($arr);\n  if ($count < 3) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($arr[$i] == $arr[$i\
    \ + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n    }\n \
    \   for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i]\
    \ == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \  $length = strlen($s);\n  if ($length < 3) {\n    return false;\n  }\n  for\
    \ ($i = 0; $i < $length - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] || $s[$i] ==\
    \ $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aabb\"\
    ) . \"\\n\";\necho is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happy or not.\n// A string is happy if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// is_happy(a) => False\n\
    // is_happy(aa) => False\n// is_happy(abcd) => True\n// is_happy(aabb) => False\n\
    // is_happy(adb) => True\n// is_happy(xyy) => False\nfunction is_happy($s) {\n\
    \    $s = str_split($s);\n    $count = count($s);\n    if ($count < 3) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
